// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/cloud_billing_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './cloud_billing_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Retrieves the Google Cloud Console billing accounts and associates them with
 *  projects.
 * @class
 * @memberof v1
 */
export class CloudBillingClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  cloudBillingStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of CloudBillingClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new CloudBillingClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof CloudBillingClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      billingAccountPathTemplate: new this._gaxModule.PathTemplate(
        'billingAccounts/{billing_account}'
      ),
      servicePathTemplate: new this._gaxModule.PathTemplate(
        'services/{service}'
      ),
      skuPathTemplate: new this._gaxModule.PathTemplate(
        'services/{service}/skus/{sku}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listBillingAccounts: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'billingAccounts'
      ),
      listProjectBillingInfo: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'projectBillingInfo'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.billing.v1.CloudBilling',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.cloudBillingStub) {
      return this.cloudBillingStub;
    }

    // Put together the "service stub" for
    // google.cloud.billing.v1.CloudBilling.
    this.cloudBillingStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.billing.v1.CloudBilling'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.billing.v1.CloudBilling,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const cloudBillingStubMethods = [
      'getBillingAccount',
      'listBillingAccounts',
      'updateBillingAccount',
      'createBillingAccount',
      'listProjectBillingInfo',
      'getProjectBillingInfo',
      'updateProjectBillingInfo',
      'getIamPolicy',
      'setIamPolicy',
      'testIamPermissions',
    ];
    for (const methodName of cloudBillingStubMethods) {
      const callPromise = this.cloudBillingStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor = this.descriptors.page[methodName] || undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.cloudBillingStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'cloudbilling.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'cloudbilling.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-billing',
      'https://www.googleapis.com/auth/cloud-billing.readonly',
      'https://www.googleapis.com/auth/cloud-platform',
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Gets information about a billing account. The current authenticated user
   * must be a [viewer of the billing
   * account](https://cloud.google.com/billing/docs/how-to/billing-access).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the billing account to retrieve. For example,
   *   `billingAccounts/012345-567890-ABCDEF`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.get_billing_account.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_GetBillingAccount_async
   */
  getBillingAccount(
    request?: protos.google.cloud.billing.v1.IGetBillingAccountRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.billing.v1.IBillingAccount,
      protos.google.cloud.billing.v1.IGetBillingAccountRequest | undefined,
      {} | undefined
    ]
  >;
  getBillingAccount(
    request: protos.google.cloud.billing.v1.IGetBillingAccountRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.IGetBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getBillingAccount(
    request: protos.google.cloud.billing.v1.IGetBillingAccountRequest,
    callback: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.IGetBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getBillingAccount(
    request?: protos.google.cloud.billing.v1.IGetBillingAccountRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          | protos.google.cloud.billing.v1.IGetBillingAccountRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.IGetBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.billing.v1.IBillingAccount,
      protos.google.cloud.billing.v1.IGetBillingAccountRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getBillingAccount(request, options, callback);
  }
  /**
   * Updates a billing account's fields.
   * Currently the only field that can be edited is `display_name`.
   * The current authenticated user must have the `billing.accounts.update`
   * IAM permission, which is typically given to the
   * [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
   * of the billing account.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the billing account resource to be updated.
   * @param {google.cloud.billing.v1.BillingAccount} request.account
   *   Required. The billing account resource to replace the resource on the server.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The update mask applied to the resource.
   *   Only "display_name" is currently supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.update_billing_account.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_UpdateBillingAccount_async
   */
  updateBillingAccount(
    request?: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.billing.v1.IBillingAccount,
      protos.google.cloud.billing.v1.IUpdateBillingAccountRequest | undefined,
      {} | undefined
    ]
  >;
  updateBillingAccount(
    request: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.IUpdateBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateBillingAccount(
    request: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest,
    callback: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.IUpdateBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateBillingAccount(
    request?: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          | protos.google.cloud.billing.v1.IUpdateBillingAccountRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.IUpdateBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.billing.v1.IBillingAccount,
      protos.google.cloud.billing.v1.IUpdateBillingAccountRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateBillingAccount(request, options, callback);
  }
  /**
   * This method creates [billing
   * subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts).
   *
   * Google Cloud resellers should use the
   * Channel Services APIs,
   * [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create)
   * and
   * [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create).
   *
   * When creating a subaccount, the current authenticated user must have the
   * `billing.accounts.update` IAM permission on the parent account, which is
   * typically given to billing account
   * [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
   * This method will return an error if the parent account has not been
   * provisioned as a reseller account.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.billing.v1.BillingAccount} request.billingAccount
   *   Required. The billing account resource to create.
   *   Currently CreateBillingAccount only supports subaccount creation, so
   *   any created billing accounts must be under a provided parent billing
   *   account.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.create_billing_account.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_CreateBillingAccount_async
   */
  createBillingAccount(
    request?: protos.google.cloud.billing.v1.ICreateBillingAccountRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.billing.v1.IBillingAccount,
      protos.google.cloud.billing.v1.ICreateBillingAccountRequest | undefined,
      {} | undefined
    ]
  >;
  createBillingAccount(
    request: protos.google.cloud.billing.v1.ICreateBillingAccountRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.ICreateBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createBillingAccount(
    request: protos.google.cloud.billing.v1.ICreateBillingAccountRequest,
    callback: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.ICreateBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createBillingAccount(
    request?: protos.google.cloud.billing.v1.ICreateBillingAccountRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.billing.v1.IBillingAccount,
          | protos.google.cloud.billing.v1.ICreateBillingAccountRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.billing.v1.IBillingAccount,
      | protos.google.cloud.billing.v1.ICreateBillingAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.billing.v1.IBillingAccount,
      protos.google.cloud.billing.v1.ICreateBillingAccountRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    this.initialize();
    return this.innerApiCalls.createBillingAccount(request, options, callback);
  }
  /**
   * Gets the billing information for a project. The current authenticated user
   * must have the `resourcemanager.projects.get` permission for the project,
   * which can be granted by assigning the [Project
   * Viewer](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
   * role.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the project for which billing information is
   *   retrieved. For example, `projects/tokyo-rain-123`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.get_project_billing_info.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_GetProjectBillingInfo_async
   */
  getProjectBillingInfo(
    request?: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest | undefined,
      {} | undefined
    ]
  >;
  getProjectBillingInfo(
    request: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      | protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getProjectBillingInfo(
    request: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest,
    callback: Callback<
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      | protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getProjectBillingInfo(
    request?: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          | protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      | protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getProjectBillingInfo(request, options, callback);
  }
  /**
   * Sets or updates the billing account associated with a project. You specify
   * the new billing account by setting the `billing_account_name` in the
   * `ProjectBillingInfo` resource to the resource name of a billing account.
   * Associating a project with an open billing account enables billing on the
   * project and allows charges for resource usage. If the project already had a
   * billing account, this method changes the billing account used for resource
   * usage charges.
   *
   * *Note:* Incurred charges that have not yet been reported in the transaction
   * history of the Google Cloud Console might be billed to the new billing
   * account, even if the charge occurred before the new billing account was
   * assigned to the project.
   *
   * The current authenticated user must have ownership privileges for both the
   * [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
   * ) and the [billing
   * account](https://cloud.google.com/billing/docs/how-to/billing-access).
   *
   * You can disable billing on the project by setting the
   * `billing_account_name` field to empty. This action disassociates the
   * current billing account from the project. Any billable activity of your
   * in-use services will stop, and your application could stop functioning as
   * expected. Any unbilled charges to date will be billed to the previously
   * associated account. The current authenticated user must be either an owner
   * of the project or an owner of the billing account for the project.
   *
   * Note that associating a project with a *closed* billing account will have
   * much the same effect as disabling billing on the project: any paid
   * resources used by the project will be shut down. Thus, unless you wish to
   * disable billing, you should always call this method with the name of an
   * *open* billing account.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the project associated with the billing information
   *   that you want to update. For example, `projects/tokyo-rain-123`.
   * @param {google.cloud.billing.v1.ProjectBillingInfo} request.projectBillingInfo
   *   The new billing information for the project. Read-only fields are ignored;
   *   thus, you can leave empty all fields except `billing_account_name`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.update_project_billing_info.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_UpdateProjectBillingInfo_async
   */
  updateProjectBillingInfo(
    request?: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      (
        | protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateProjectBillingInfo(
    request: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      | protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateProjectBillingInfo(
    request: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest,
    callback: Callback<
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      | protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateProjectBillingInfo(
    request?: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.billing.v1.IProjectBillingInfo,
          | protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      | protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.billing.v1.IProjectBillingInfo,
      (
        | protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateProjectBillingInfo(
      request,
      options,
      callback
    );
  }
  /**
   * Gets the access control policy for a billing account.
   * The caller must have the `billing.accounts.getIamPolicy` permission on the
   * account, which is often given to billing account
   * [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.GetPolicyOptions} request.options
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.get_iam_policy.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_GetIamPolicy_async
   */
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined
    ]
  >;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getIamPolicy(request, options, callback);
  }
  /**
   * Sets the access control policy for a billing account. Replaces any existing
   * policy.
   * The caller must have the `billing.accounts.setIamPolicy` permission on the
   * account, which is often given to billing account
   * [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being specified.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.Policy} request.policy
   *   REQUIRED: The complete policy to be applied to the `resource`. The size of
   *   the policy is limited to a few 10s of KB. An empty policy is a
   *   valid policy but certain Cloud Platform services (such as Projects)
   *   might reject them.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
   *   the fields in the mask will be modified. If no mask is provided, the
   *   following default mask is used:
   *
   *   `paths: "bindings, etag"`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.set_iam_policy.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_SetIamPolicy_async
   */
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined
    ]
  >;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setIamPolicy(request, options, callback);
  }
  /**
   * Tests the access control policy for a billing account. This method takes
   * the resource and a set of permissions as input and returns the subset of
   * the input permissions that the caller is allowed for that resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.test_iam_permissions.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_TestIamPermissions_async
   */
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined
    ]
  >;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.testIamPermissions(request, options, callback);
  }

  /**
   * Lists the billing accounts that the current authenticated user has
   * permission to
   * [view](https://cloud.google.com/billing/docs/how-to/billing-access).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {number} request.pageSize
   *   Requested page size. The maximum page size is 100; this is also the
   *   default.
   * @param {string} request.pageToken
   *   A token identifying a page of results to return. This should be a
   *   `next_page_token` value returned from a previous `ListBillingAccounts`
   *   call. If unspecified, the first page of results is returned.
   * @param {string} request.filter
   *   Options for how to filter the returned billing accounts.
   *   Currently this only supports filtering for
   *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
   *   single provided reseller billing account.
   *   (e.g. "master_billing_account=billingAccounts/012345-678901-ABCDEF").
   *   Boolean algebra and other fields are not currently supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listBillingAccountsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listBillingAccounts(
    request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.billing.v1.IBillingAccount[],
      protos.google.cloud.billing.v1.IListBillingAccountsRequest | null,
      protos.google.cloud.billing.v1.IListBillingAccountsResponse
    ]
  >;
  listBillingAccounts(
    request: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      | protos.google.cloud.billing.v1.IListBillingAccountsResponse
      | null
      | undefined,
      protos.google.cloud.billing.v1.IBillingAccount
    >
  ): void;
  listBillingAccounts(
    request: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
    callback: PaginationCallback<
      protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      | protos.google.cloud.billing.v1.IListBillingAccountsResponse
      | null
      | undefined,
      protos.google.cloud.billing.v1.IBillingAccount
    >
  ): void;
  listBillingAccounts(
    request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.billing.v1.IListBillingAccountsRequest,
          | protos.google.cloud.billing.v1.IListBillingAccountsResponse
          | null
          | undefined,
          protos.google.cloud.billing.v1.IBillingAccount
        >,
    callback?: PaginationCallback<
      protos.google.cloud.billing.v1.IListBillingAccountsRequest,
      | protos.google.cloud.billing.v1.IListBillingAccountsResponse
      | null
      | undefined,
      protos.google.cloud.billing.v1.IBillingAccount
    >
  ): Promise<
    [
      protos.google.cloud.billing.v1.IBillingAccount[],
      protos.google.cloud.billing.v1.IListBillingAccountsRequest | null,
      protos.google.cloud.billing.v1.IListBillingAccountsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    this.initialize();
    return this.innerApiCalls.listBillingAccounts(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {number} request.pageSize
   *   Requested page size. The maximum page size is 100; this is also the
   *   default.
   * @param {string} request.pageToken
   *   A token identifying a page of results to return. This should be a
   *   `next_page_token` value returned from a previous `ListBillingAccounts`
   *   call. If unspecified, the first page of results is returned.
   * @param {string} request.filter
   *   Options for how to filter the returned billing accounts.
   *   Currently this only supports filtering for
   *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
   *   single provided reseller billing account.
   *   (e.g. "master_billing_account=billingAccounts/012345-678901-ABCDEF").
   *   Boolean algebra and other fields are not currently supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [BillingAccount]{@link google.cloud.billing.v1.BillingAccount} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listBillingAccountsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listBillingAccountsStream(
    request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const defaultCallSettings = this._defaults['listBillingAccounts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listBillingAccounts.createStream(
      this.innerApiCalls.listBillingAccounts as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listBillingAccounts`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {number} request.pageSize
   *   Requested page size. The maximum page size is 100; this is also the
   *   default.
   * @param {string} request.pageToken
   *   A token identifying a page of results to return. This should be a
   *   `next_page_token` value returned from a previous `ListBillingAccounts`
   *   call. If unspecified, the first page of results is returned.
   * @param {string} request.filter
   *   Options for how to filter the returned billing accounts.
   *   Currently this only supports filtering for
   *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
   *   single provided reseller billing account.
   *   (e.g. "master_billing_account=billingAccounts/012345-678901-ABCDEF").
   *   Boolean algebra and other fields are not currently supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [BillingAccount]{@link google.cloud.billing.v1.BillingAccount}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.list_billing_accounts.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_ListBillingAccounts_async
   */
  listBillingAccountsAsync(
    request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.billing.v1.IBillingAccount> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const defaultCallSettings = this._defaults['listBillingAccounts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listBillingAccounts.asyncIterate(
      this.innerApiCalls['listBillingAccounts'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.billing.v1.IBillingAccount>;
  }
  /**
   * Lists the projects associated with a billing account. The current
   * authenticated user must have the `billing.resourceAssociations.list` IAM
   * permission, which is often given to billing account
   * [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the billing account associated with the projects that
   *   you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
   * @param {number} request.pageSize
   *   Requested page size. The maximum page size is 100; this is also the
   *   default.
   * @param {string} request.pageToken
   *   A token identifying a page of results to be returned. This should be a
   *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
   *   call. If unspecified, the first page of results is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listProjectBillingInfoAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listProjectBillingInfo(
    request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.billing.v1.IProjectBillingInfo[],
      protos.google.cloud.billing.v1.IListProjectBillingInfoRequest | null,
      protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
    ]
  >;
  listProjectBillingInfo(
    request: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      | protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
      | null
      | undefined,
      protos.google.cloud.billing.v1.IProjectBillingInfo
    >
  ): void;
  listProjectBillingInfo(
    request: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
    callback: PaginationCallback<
      protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      | protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
      | null
      | undefined,
      protos.google.cloud.billing.v1.IProjectBillingInfo
    >
  ): void;
  listProjectBillingInfo(
    request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
          | protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
          | null
          | undefined,
          protos.google.cloud.billing.v1.IProjectBillingInfo
        >,
    callback?: PaginationCallback<
      protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
      | protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
      | null
      | undefined,
      protos.google.cloud.billing.v1.IProjectBillingInfo
    >
  ): Promise<
    [
      protos.google.cloud.billing.v1.IProjectBillingInfo[],
      protos.google.cloud.billing.v1.IListProjectBillingInfoRequest | null,
      protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listProjectBillingInfo(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the billing account associated with the projects that
   *   you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
   * @param {number} request.pageSize
   *   Requested page size. The maximum page size is 100; this is also the
   *   default.
   * @param {string} request.pageToken
   *   A token identifying a page of results to be returned. This should be a
   *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
   *   call. If unspecified, the first page of results is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listProjectBillingInfoAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listProjectBillingInfoStream(
    request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    const defaultCallSettings = this._defaults['listProjectBillingInfo'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listProjectBillingInfo.createStream(
      this.innerApiCalls.listProjectBillingInfo as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listProjectBillingInfo`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the billing account associated with the projects that
   *   you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
   * @param {number} request.pageSize
   *   Requested page size. The maximum page size is 100; this is also the
   *   default.
   * @param {string} request.pageToken
   *   A token identifying a page of results to be returned. This should be a
   *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
   *   call. If unspecified, the first page of results is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [ProjectBillingInfo]{@link google.cloud.billing.v1.ProjectBillingInfo}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_billing.list_project_billing_info.js</caption>
   * region_tag:cloudbilling_v1_generated_CloudBilling_ListProjectBillingInfo_async
   */
  listProjectBillingInfoAsync(
    request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.billing.v1.IProjectBillingInfo> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    const defaultCallSettings = this._defaults['listProjectBillingInfo'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listProjectBillingInfo.asyncIterate(
      this.innerApiCalls['listProjectBillingInfo'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.billing.v1.IProjectBillingInfo>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified billingAccount resource name string.
   *
   * @param {string} billing_account
   * @returns {string} Resource name string.
   */
  billingAccountPath(billingAccount: string) {
    return this.pathTemplates.billingAccountPathTemplate.render({
      billing_account: billingAccount,
    });
  }

  /**
   * Parse the billing_account from BillingAccount resource.
   *
   * @param {string} billingAccountName
   *   A fully-qualified path representing BillingAccount resource.
   * @returns {string} A string representing the billing_account.
   */
  matchBillingAccountFromBillingAccountName(billingAccountName: string) {
    return this.pathTemplates.billingAccountPathTemplate.match(
      billingAccountName
    ).billing_account;
  }

  /**
   * Return a fully-qualified service resource name string.
   *
   * @param {string} service
   * @returns {string} Resource name string.
   */
  servicePath(service: string) {
    return this.pathTemplates.servicePathTemplate.render({
      service: service,
    });
  }

  /**
   * Parse the service from Service resource.
   *
   * @param {string} serviceName
   *   A fully-qualified path representing Service resource.
   * @returns {string} A string representing the service.
   */
  matchServiceFromServiceName(serviceName: string) {
    return this.pathTemplates.servicePathTemplate.match(serviceName).service;
  }

  /**
   * Return a fully-qualified sku resource name string.
   *
   * @param {string} service
   * @param {string} sku
   * @returns {string} Resource name string.
   */
  skuPath(service: string, sku: string) {
    return this.pathTemplates.skuPathTemplate.render({
      service: service,
      sku: sku,
    });
  }

  /**
   * Parse the service from Sku resource.
   *
   * @param {string} skuName
   *   A fully-qualified path representing Sku resource.
   * @returns {string} A string representing the service.
   */
  matchServiceFromSkuName(skuName: string) {
    return this.pathTemplates.skuPathTemplate.match(skuName).service;
  }

  /**
   * Parse the sku from Sku resource.
   *
   * @param {string} skuName
   *   A fully-qualified path representing Sku resource.
   * @returns {string} A string representing the sku.
   */
  matchSkuFromSkuName(skuName: string) {
    return this.pathTemplates.skuPathTemplate.match(skuName).sku;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.cloudBillingStub && !this._terminated) {
      return this.cloudBillingStub.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
