// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(cssProductInput) {
  // [START css_v1_generated_CssProductInputsService_UpdateCssProductInput_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The CSS product input resource to update. Information you submit
   *  will be applied to the processed CSS product as well.
   */
  // const cssProductInput = {}
  /**
   *  The list of CSS product attributes to be updated.
   *  If the update mask is omitted, then it is treated as implied field mask
   *  equivalent to all fields that are populated (have a non-empty value).
   *  Attributes specified in the update mask without a value specified in the
   *  body will be deleted from the CSS product.
   *  Update mask can only be specified for top level fields in
   *  attributes and custom attributes.
   *  To specify the update mask for custom attributes you need to add the
   *  `custom_attribute.` prefix.
   *  Providing special "*" value for full CSS product replacement is not
   *  supported.
   */
  // const updateMask = {}

  // Imports the Css library
  const {CssProductInputsServiceClient} = require('@google-shopping/css').v1;

  // Instantiates a client
  const cssClient = new CssProductInputsServiceClient();

  async function callUpdateCssProductInput() {
    // Construct request
    const request = {
      cssProductInput,
    };

    // Run request
    const response = await cssClient.updateCssProductInput(request);
    console.log(response);
  }

  callUpdateCssProductInput();
  // [END css_v1_generated_CssProductInputsService_UpdateCssProductInput_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
