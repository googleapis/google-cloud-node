{
  "nested": {
    "google": {
      "nested": {
        "privacy": {
          "nested": {
            "dlp": {
              "nested": {
                "v2": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.Dlp.V2",
                    "go_package": "google.golang.org/genproto/googleapis/privacy/dlp/v2;dlp",
                    "java_multiple_files": true,
                    "java_outer_classname": "DlpStorage",
                    "java_package": "com.google.privacy.dlp.v2",
                    "php_namespace": "Google\\Cloud\\Dlp\\V2",
                    "ruby_package": "Google::Cloud::Dlp::V2",
                    "(google.api.resource_definition).type": "dlp.googleapis.com/OrganizationLocation",
                    "(google.api.resource_definition).pattern": "organizations/{organization}/locations/{location}"
                  },
                  "nested": {
                    "DlpService": {
                      "options": {
                        "(google.api.default_host)": "dlp.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "InspectContent": {
                          "requestType": "InspectContentRequest",
                          "responseType": "InspectContentResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*}/content:inspect",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=projects/*/locations/*}/content:inspect",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*}/content:inspect",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{parent=projects/*/locations/*}/content:inspect",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "RedactImage": {
                          "requestType": "RedactImageRequest",
                          "responseType": "RedactImageResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*}/image:redact",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=projects/*/locations/*}/image:redact",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*}/image:redact",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{parent=projects/*/locations/*}/image:redact",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "DeidentifyContent": {
                          "requestType": "DeidentifyContentRequest",
                          "responseType": "DeidentifyContentResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*}/content:deidentify",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=projects/*/locations/*}/content:deidentify",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*}/content:deidentify",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{parent=projects/*/locations/*}/content:deidentify",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "ReidentifyContent": {
                          "requestType": "ReidentifyContentRequest",
                          "responseType": "ReidentifyContentResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*}/content:reidentify",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=projects/*/locations/*}/content:reidentify",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*}/content:reidentify",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{parent=projects/*/locations/*}/content:reidentify",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "ListInfoTypes": {
                          "requestType": "ListInfoTypesRequest",
                          "responseType": "ListInfoTypesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/infoTypes",
                            "(google.api.http).additional_bindings.get": "/v2/{parent=locations/*}/infoTypes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/infoTypes",
                                "additional_bindings": {
                                  "get": "/v2/{parent=locations/*}/infoTypes"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateInspectTemplate": {
                          "requestType": "CreateInspectTemplateRequest",
                          "responseType": "InspectTemplate",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=organizations/*}/inspectTemplates",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=projects/*/locations/*}/inspectTemplates",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "parent,inspect_template"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=organizations/*}/inspectTemplates",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "post": "/v2/{parent=organizations/*/locations/*}/inspectTemplates",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v2/{parent=projects/*}/inspectTemplates",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v2/{parent=projects/*/locations/*}/inspectTemplates",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,inspect_template"
                            }
                          ]
                        },
                        "UpdateInspectTemplate": {
                          "requestType": "UpdateInspectTemplateRequest",
                          "responseType": "InspectTemplate",
                          "options": {
                            "(google.api.http).patch": "/v2/{name=organizations/*/inspectTemplates/*}",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.patch": "/v2/{name=projects/*/locations/*/inspectTemplates/*}",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "name,inspect_template,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{name=organizations/*/inspectTemplates/*}",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "patch": "/v2/{name=organizations/*/locations/*/inspectTemplates/*}",
                                    "body": "*"
                                  },
                                  {
                                    "patch": "/v2/{name=projects/*/inspectTemplates/*}",
                                    "body": "*"
                                  },
                                  {
                                    "patch": "/v2/{name=projects/*/locations/*/inspectTemplates/*}",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,inspect_template,update_mask"
                            }
                          ]
                        },
                        "GetInspectTemplate": {
                          "requestType": "GetInspectTemplateRequest",
                          "responseType": "InspectTemplate",
                          "options": {
                            "(google.api.http).get": "/v2/{name=organizations/*/inspectTemplates/*}",
                            "(google.api.http).additional_bindings.get": "/v2/{name=projects/*/locations/*/inspectTemplates/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=organizations/*/inspectTemplates/*}",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{name=organizations/*/locations/*/inspectTemplates/*}"
                                  },
                                  {
                                    "get": "/v2/{name=projects/*/inspectTemplates/*}"
                                  },
                                  {
                                    "get": "/v2/{name=projects/*/locations/*/inspectTemplates/*}"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListInspectTemplates": {
                          "requestType": "ListInspectTemplatesRequest",
                          "responseType": "ListInspectTemplatesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=organizations/*}/inspectTemplates",
                            "(google.api.http).additional_bindings.get": "/v2/{parent=projects/*/locations/*}/inspectTemplates",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=organizations/*}/inspectTemplates",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{parent=organizations/*/locations/*}/inspectTemplates"
                                  },
                                  {
                                    "get": "/v2/{parent=projects/*}/inspectTemplates"
                                  },
                                  {
                                    "get": "/v2/{parent=projects/*/locations/*}/inspectTemplates"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteInspectTemplate": {
                          "requestType": "DeleteInspectTemplateRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=organizations/*/inspectTemplates/*}",
                            "(google.api.http).additional_bindings.delete": "/v2/{name=projects/*/locations/*/inspectTemplates/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=organizations/*/inspectTemplates/*}",
                                "additional_bindings": [
                                  {
                                    "delete": "/v2/{name=organizations/*/locations/*/inspectTemplates/*}"
                                  },
                                  {
                                    "delete": "/v2/{name=projects/*/inspectTemplates/*}"
                                  },
                                  {
                                    "delete": "/v2/{name=projects/*/locations/*/inspectTemplates/*}"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateDeidentifyTemplate": {
                          "requestType": "CreateDeidentifyTemplateRequest",
                          "responseType": "DeidentifyTemplate",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=organizations/*}/deidentifyTemplates",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=projects/*/locations/*}/deidentifyTemplates",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "parent,deidentify_template"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=organizations/*}/deidentifyTemplates",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "post": "/v2/{parent=organizations/*/locations/*}/deidentifyTemplates",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v2/{parent=projects/*}/deidentifyTemplates",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v2/{parent=projects/*/locations/*}/deidentifyTemplates",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,deidentify_template"
                            }
                          ]
                        },
                        "UpdateDeidentifyTemplate": {
                          "requestType": "UpdateDeidentifyTemplateRequest",
                          "responseType": "DeidentifyTemplate",
                          "options": {
                            "(google.api.http).patch": "/v2/{name=organizations/*/deidentifyTemplates/*}",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.patch": "/v2/{name=projects/*/locations/*/deidentifyTemplates/*}",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "name,deidentify_template,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{name=organizations/*/deidentifyTemplates/*}",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "patch": "/v2/{name=organizations/*/locations/*/deidentifyTemplates/*}",
                                    "body": "*"
                                  },
                                  {
                                    "patch": "/v2/{name=projects/*/deidentifyTemplates/*}",
                                    "body": "*"
                                  },
                                  {
                                    "patch": "/v2/{name=projects/*/locations/*/deidentifyTemplates/*}",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,deidentify_template,update_mask"
                            }
                          ]
                        },
                        "GetDeidentifyTemplate": {
                          "requestType": "GetDeidentifyTemplateRequest",
                          "responseType": "DeidentifyTemplate",
                          "options": {
                            "(google.api.http).get": "/v2/{name=organizations/*/deidentifyTemplates/*}",
                            "(google.api.http).additional_bindings.get": "/v2/{name=projects/*/locations/*/deidentifyTemplates/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=organizations/*/deidentifyTemplates/*}",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{name=organizations/*/locations/*/deidentifyTemplates/*}"
                                  },
                                  {
                                    "get": "/v2/{name=projects/*/deidentifyTemplates/*}"
                                  },
                                  {
                                    "get": "/v2/{name=projects/*/locations/*/deidentifyTemplates/*}"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDeidentifyTemplates": {
                          "requestType": "ListDeidentifyTemplatesRequest",
                          "responseType": "ListDeidentifyTemplatesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=organizations/*}/deidentifyTemplates",
                            "(google.api.http).additional_bindings.get": "/v2/{parent=projects/*/locations/*}/deidentifyTemplates",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=organizations/*}/deidentifyTemplates",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{parent=organizations/*/locations/*}/deidentifyTemplates"
                                  },
                                  {
                                    "get": "/v2/{parent=projects/*}/deidentifyTemplates"
                                  },
                                  {
                                    "get": "/v2/{parent=projects/*/locations/*}/deidentifyTemplates"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDeidentifyTemplate": {
                          "requestType": "DeleteDeidentifyTemplateRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=organizations/*/deidentifyTemplates/*}",
                            "(google.api.http).additional_bindings.delete": "/v2/{name=projects/*/locations/*/deidentifyTemplates/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=organizations/*/deidentifyTemplates/*}",
                                "additional_bindings": [
                                  {
                                    "delete": "/v2/{name=organizations/*/locations/*/deidentifyTemplates/*}"
                                  },
                                  {
                                    "delete": "/v2/{name=projects/*/deidentifyTemplates/*}"
                                  },
                                  {
                                    "delete": "/v2/{name=projects/*/locations/*/deidentifyTemplates/*}"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateJobTrigger": {
                          "requestType": "CreateJobTriggerRequest",
                          "responseType": "JobTrigger",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*}/jobTriggers",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=organizations/*/locations/*}/jobTriggers",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "parent,job_trigger"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*}/jobTriggers",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "post": "/v2/{parent=projects/*/locations/*}/jobTriggers",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v2/{parent=organizations/*/locations/*}/jobTriggers",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,job_trigger"
                            }
                          ]
                        },
                        "UpdateJobTrigger": {
                          "requestType": "UpdateJobTriggerRequest",
                          "responseType": "JobTrigger",
                          "options": {
                            "(google.api.http).patch": "/v2/{name=projects/*/jobTriggers/*}",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.patch": "/v2/{name=organizations/*/locations/*/jobTriggers/*}",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "name,job_trigger,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{name=projects/*/jobTriggers/*}",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "patch": "/v2/{name=projects/*/locations/*/jobTriggers/*}",
                                    "body": "*"
                                  },
                                  {
                                    "patch": "/v2/{name=organizations/*/locations/*/jobTriggers/*}",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,job_trigger,update_mask"
                            }
                          ]
                        },
                        "HybridInspectJobTrigger": {
                          "requestType": "HybridInspectJobTriggerRequest",
                          "responseType": "HybridInspectResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/jobTriggers/*}:hybridInspect",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/jobTriggers/*}:hybridInspect",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetJobTrigger": {
                          "requestType": "GetJobTriggerRequest",
                          "responseType": "JobTrigger",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/jobTriggers/*}",
                            "(google.api.http).additional_bindings.get": "/v2/{name=organizations/*/locations/*/jobTriggers/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/jobTriggers/*}",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{name=projects/*/locations/*/jobTriggers/*}"
                                  },
                                  {
                                    "get": "/v2/{name=organizations/*/locations/*/jobTriggers/*}"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListJobTriggers": {
                          "requestType": "ListJobTriggersRequest",
                          "responseType": "ListJobTriggersResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*}/jobTriggers",
                            "(google.api.http).additional_bindings.get": "/v2/{parent=organizations/*/locations/*}/jobTriggers",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*}/jobTriggers",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{parent=projects/*/locations/*}/jobTriggers"
                                  },
                                  {
                                    "get": "/v2/{parent=organizations/*/locations/*}/jobTriggers"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteJobTrigger": {
                          "requestType": "DeleteJobTriggerRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/jobTriggers/*}",
                            "(google.api.http).additional_bindings.delete": "/v2/{name=organizations/*/locations/*/jobTriggers/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/jobTriggers/*}",
                                "additional_bindings": [
                                  {
                                    "delete": "/v2/{name=projects/*/locations/*/jobTriggers/*}"
                                  },
                                  {
                                    "delete": "/v2/{name=organizations/*/locations/*/jobTriggers/*}"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ActivateJobTrigger": {
                          "requestType": "ActivateJobTriggerRequest",
                          "responseType": "DlpJob",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/jobTriggers/*}:activate",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{name=projects/*/locations/*/jobTriggers/*}:activate",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/jobTriggers/*}:activate",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{name=projects/*/locations/*/jobTriggers/*}:activate",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "CreateDlpJob": {
                          "requestType": "CreateDlpJobRequest",
                          "responseType": "DlpJob",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*}/dlpJobs",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=projects/*/locations/*}/dlpJobs",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "parent,risk_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*}/dlpJobs",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{parent=projects/*/locations/*}/dlpJobs",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,inspect_job"
                            },
                            {
                              "(google.api.method_signature)": "parent,risk_job"
                            }
                          ]
                        },
                        "ListDlpJobs": {
                          "requestType": "ListDlpJobsRequest",
                          "responseType": "ListDlpJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*}/dlpJobs",
                            "(google.api.http).additional_bindings.get": "/v2/{parent=organizations/*/locations/*}/dlpJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*}/dlpJobs",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{parent=projects/*/locations/*}/dlpJobs"
                                  },
                                  {
                                    "get": "/v2/{parent=organizations/*/locations/*}/dlpJobs"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetDlpJob": {
                          "requestType": "GetDlpJobRequest",
                          "responseType": "DlpJob",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/dlpJobs/*}",
                            "(google.api.http).additional_bindings.get": "/v2/{name=projects/*/locations/*/dlpJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/dlpJobs/*}",
                                "additional_bindings": {
                                  "get": "/v2/{name=projects/*/locations/*/dlpJobs/*}"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "DeleteDlpJob": {
                          "requestType": "DeleteDlpJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/dlpJobs/*}",
                            "(google.api.http).additional_bindings.delete": "/v2/{name=projects/*/locations/*/dlpJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/dlpJobs/*}",
                                "additional_bindings": {
                                  "delete": "/v2/{name=projects/*/locations/*/dlpJobs/*}"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CancelDlpJob": {
                          "requestType": "CancelDlpJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/dlpJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{name=projects/*/locations/*/dlpJobs/*}:cancel",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/dlpJobs/*}:cancel",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{name=projects/*/locations/*/dlpJobs/*}:cancel",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "CreateStoredInfoType": {
                          "requestType": "CreateStoredInfoTypeRequest",
                          "responseType": "StoredInfoType",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=organizations/*}/storedInfoTypes",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{parent=projects/*/locations/*}/storedInfoTypes",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "parent,config"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=organizations/*}/storedInfoTypes",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "post": "/v2/{parent=organizations/*/locations/*}/storedInfoTypes",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v2/{parent=projects/*}/storedInfoTypes",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v2/{parent=projects/*/locations/*}/storedInfoTypes",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,config"
                            }
                          ]
                        },
                        "UpdateStoredInfoType": {
                          "requestType": "UpdateStoredInfoTypeRequest",
                          "responseType": "StoredInfoType",
                          "options": {
                            "(google.api.http).patch": "/v2/{name=organizations/*/storedInfoTypes/*}",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.patch": "/v2/{name=projects/*/locations/*/storedInfoTypes/*}",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "name,config,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{name=organizations/*/storedInfoTypes/*}",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "patch": "/v2/{name=organizations/*/locations/*/storedInfoTypes/*}",
                                    "body": "*"
                                  },
                                  {
                                    "patch": "/v2/{name=projects/*/storedInfoTypes/*}",
                                    "body": "*"
                                  },
                                  {
                                    "patch": "/v2/{name=projects/*/locations/*/storedInfoTypes/*}",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,config,update_mask"
                            }
                          ]
                        },
                        "GetStoredInfoType": {
                          "requestType": "GetStoredInfoTypeRequest",
                          "responseType": "StoredInfoType",
                          "options": {
                            "(google.api.http).get": "/v2/{name=organizations/*/storedInfoTypes/*}",
                            "(google.api.http).additional_bindings.get": "/v2/{name=projects/*/locations/*/storedInfoTypes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=organizations/*/storedInfoTypes/*}",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{name=organizations/*/locations/*/storedInfoTypes/*}"
                                  },
                                  {
                                    "get": "/v2/{name=projects/*/storedInfoTypes/*}"
                                  },
                                  {
                                    "get": "/v2/{name=projects/*/locations/*/storedInfoTypes/*}"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListStoredInfoTypes": {
                          "requestType": "ListStoredInfoTypesRequest",
                          "responseType": "ListStoredInfoTypesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=organizations/*}/storedInfoTypes",
                            "(google.api.http).additional_bindings.get": "/v2/{parent=projects/*/locations/*}/storedInfoTypes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=organizations/*}/storedInfoTypes",
                                "additional_bindings": [
                                  {
                                    "get": "/v2/{parent=organizations/*/locations/*}/storedInfoTypes"
                                  },
                                  {
                                    "get": "/v2/{parent=projects/*}/storedInfoTypes"
                                  },
                                  {
                                    "get": "/v2/{parent=projects/*/locations/*}/storedInfoTypes"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteStoredInfoType": {
                          "requestType": "DeleteStoredInfoTypeRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=organizations/*/storedInfoTypes/*}",
                            "(google.api.http).additional_bindings.delete": "/v2/{name=projects/*/locations/*/storedInfoTypes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=organizations/*/storedInfoTypes/*}",
                                "additional_bindings": [
                                  {
                                    "delete": "/v2/{name=organizations/*/locations/*/storedInfoTypes/*}"
                                  },
                                  {
                                    "delete": "/v2/{name=projects/*/storedInfoTypes/*}"
                                  },
                                  {
                                    "delete": "/v2/{name=projects/*/locations/*/storedInfoTypes/*}"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "HybridInspectDlpJob": {
                          "requestType": "HybridInspectDlpJobRequest",
                          "responseType": "HybridInspectResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/dlpJobs/*}:hybridInspect",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/dlpJobs/*}:hybridInspect",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "FinishDlpJob": {
                          "requestType": "FinishDlpJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/dlpJobs/*}:finish",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/dlpJobs/*}:finish",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "ExcludeInfoTypes": {
                      "fields": {
                        "infoTypes": {
                          "rule": "repeated",
                          "type": "InfoType",
                          "id": 1
                        }
                      }
                    },
                    "ExcludeByHotword": {
                      "fields": {
                        "hotwordRegex": {
                          "type": "CustomInfoType.Regex",
                          "id": 1
                        },
                        "proximity": {
                          "type": "CustomInfoType.DetectionRule.Proximity",
                          "id": 2
                        }
                      }
                    },
                    "ExclusionRule": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "dictionary",
                            "regex",
                            "excludeInfoTypes",
                            "excludeByHotword"
                          ]
                        }
                      },
                      "fields": {
                        "dictionary": {
                          "type": "CustomInfoType.Dictionary",
                          "id": 1
                        },
                        "regex": {
                          "type": "CustomInfoType.Regex",
                          "id": 2
                        },
                        "excludeInfoTypes": {
                          "type": "ExcludeInfoTypes",
                          "id": 3
                        },
                        "excludeByHotword": {
                          "type": "ExcludeByHotword",
                          "id": 5
                        },
                        "matchingType": {
                          "type": "MatchingType",
                          "id": 4
                        }
                      }
                    },
                    "InspectionRule": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "hotwordRule",
                            "exclusionRule"
                          ]
                        }
                      },
                      "fields": {
                        "hotwordRule": {
                          "type": "CustomInfoType.DetectionRule.HotwordRule",
                          "id": 1
                        },
                        "exclusionRule": {
                          "type": "ExclusionRule",
                          "id": 2
                        }
                      }
                    },
                    "InspectionRuleSet": {
                      "fields": {
                        "infoTypes": {
                          "rule": "repeated",
                          "type": "InfoType",
                          "id": 1
                        },
                        "rules": {
                          "rule": "repeated",
                          "type": "InspectionRule",
                          "id": 2
                        }
                      }
                    },
                    "InspectConfig": {
                      "fields": {
                        "infoTypes": {
                          "rule": "repeated",
                          "type": "InfoType",
                          "id": 1
                        },
                        "minLikelihood": {
                          "type": "Likelihood",
                          "id": 2
                        },
                        "limits": {
                          "type": "FindingLimits",
                          "id": 3
                        },
                        "includeQuote": {
                          "type": "bool",
                          "id": 4
                        },
                        "excludeInfoTypes": {
                          "type": "bool",
                          "id": 5
                        },
                        "customInfoTypes": {
                          "rule": "repeated",
                          "type": "CustomInfoType",
                          "id": 6
                        },
                        "contentOptions": {
                          "rule": "repeated",
                          "type": "ContentOption",
                          "id": 8
                        },
                        "ruleSet": {
                          "rule": "repeated",
                          "type": "InspectionRuleSet",
                          "id": 10
                        }
                      },
                      "nested": {
                        "FindingLimits": {
                          "fields": {
                            "maxFindingsPerItem": {
                              "type": "int32",
                              "id": 1
                            },
                            "maxFindingsPerRequest": {
                              "type": "int32",
                              "id": 2
                            },
                            "maxFindingsPerInfoType": {
                              "rule": "repeated",
                              "type": "InfoTypeLimit",
                              "id": 3
                            }
                          },
                          "nested": {
                            "InfoTypeLimit": {
                              "fields": {
                                "infoType": {
                                  "type": "InfoType",
                                  "id": 1
                                },
                                "maxFindings": {
                                  "type": "int32",
                                  "id": 2
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ByteContentItem": {
                      "fields": {
                        "type": {
                          "type": "BytesType",
                          "id": 1
                        },
                        "data": {
                          "type": "bytes",
                          "id": 2
                        }
                      },
                      "nested": {
                        "BytesType": {
                          "values": {
                            "BYTES_TYPE_UNSPECIFIED": 0,
                            "IMAGE": 6,
                            "IMAGE_JPEG": 1,
                            "IMAGE_BMP": 2,
                            "IMAGE_PNG": 3,
                            "IMAGE_SVG": 4,
                            "TEXT_UTF8": 5,
                            "WORD_DOCUMENT": 7,
                            "PDF": 8,
                            "POWERPOINT_DOCUMENT": 9,
                            "EXCEL_DOCUMENT": 10,
                            "AVRO": 11,
                            "CSV": 12,
                            "TSV": 13
                          }
                        }
                      }
                    },
                    "ContentItem": {
                      "oneofs": {
                        "dataItem": {
                          "oneof": [
                            "value",
                            "table",
                            "byteItem"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 3
                        },
                        "table": {
                          "type": "Table",
                          "id": 4
                        },
                        "byteItem": {
                          "type": "ByteContentItem",
                          "id": 5
                        }
                      }
                    },
                    "Table": {
                      "fields": {
                        "headers": {
                          "rule": "repeated",
                          "type": "FieldId",
                          "id": 1
                        },
                        "rows": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Row": {
                          "fields": {
                            "values": {
                              "rule": "repeated",
                              "type": "Value",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "InspectResult": {
                      "fields": {
                        "findings": {
                          "rule": "repeated",
                          "type": "Finding",
                          "id": 1
                        },
                        "findingsTruncated": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "Finding": {
                      "options": {
                        "(google.api.resource).type": "dlp.googleapis.com/Finding",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/findings/{finding}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 14
                        },
                        "quote": {
                          "type": "string",
                          "id": 1
                        },
                        "infoType": {
                          "type": "InfoType",
                          "id": 2
                        },
                        "likelihood": {
                          "type": "Likelihood",
                          "id": 3
                        },
                        "location": {
                          "type": "Location",
                          "id": 4
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6
                        },
                        "quoteInfo": {
                          "type": "QuoteInfo",
                          "id": 7
                        },
                        "resourceName": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DlpJob"
                          }
                        },
                        "triggerName": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.resource_reference).type": "dlp.googleapis.com/JobTrigger"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 10
                        },
                        "jobCreateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11
                        },
                        "jobName": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DlpJob"
                          }
                        },
                        "findingId": {
                          "type": "string",
                          "id": 15
                        }
                      }
                    },
                    "Location": {
                      "fields": {
                        "byteRange": {
                          "type": "Range",
                          "id": 1
                        },
                        "codepointRange": {
                          "type": "Range",
                          "id": 2
                        },
                        "contentLocations": {
                          "rule": "repeated",
                          "type": "ContentLocation",
                          "id": 7
                        },
                        "container": {
                          "type": "Container",
                          "id": 8
                        }
                      }
                    },
                    "ContentLocation": {
                      "oneofs": {
                        "location": {
                          "oneof": [
                            "recordLocation",
                            "imageLocation",
                            "documentLocation",
                            "metadataLocation"
                          ]
                        }
                      },
                      "fields": {
                        "containerName": {
                          "type": "string",
                          "id": 1
                        },
                        "recordLocation": {
                          "type": "RecordLocation",
                          "id": 2
                        },
                        "imageLocation": {
                          "type": "ImageLocation",
                          "id": 3
                        },
                        "documentLocation": {
                          "type": "DocumentLocation",
                          "id": 5
                        },
                        "metadataLocation": {
                          "type": "MetadataLocation",
                          "id": 8
                        },
                        "containerTimestamp": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6
                        },
                        "containerVersion": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "MetadataLocation": {
                      "oneofs": {
                        "label": {
                          "oneof": [
                            "storageLabel"
                          ]
                        }
                      },
                      "fields": {
                        "type": {
                          "type": "MetadataType",
                          "id": 1
                        },
                        "storageLabel": {
                          "type": "StorageMetadataLabel",
                          "id": 3
                        }
                      }
                    },
                    "StorageMetadataLabel": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "DocumentLocation": {
                      "fields": {
                        "fileOffset": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "RecordLocation": {
                      "fields": {
                        "recordKey": {
                          "type": "RecordKey",
                          "id": 1
                        },
                        "fieldId": {
                          "type": "FieldId",
                          "id": 2
                        },
                        "tableLocation": {
                          "type": "TableLocation",
                          "id": 3
                        }
                      }
                    },
                    "TableLocation": {
                      "fields": {
                        "rowIndex": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "Container": {
                      "fields": {
                        "type": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "fullPath": {
                          "type": "string",
                          "id": 3
                        },
                        "rootPath": {
                          "type": "string",
                          "id": 4
                        },
                        "relativePath": {
                          "type": "string",
                          "id": 5
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6
                        },
                        "version": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "Range": {
                      "fields": {
                        "start": {
                          "type": "int64",
                          "id": 1
                        },
                        "end": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "ImageLocation": {
                      "fields": {
                        "boundingBoxes": {
                          "rule": "repeated",
                          "type": "BoundingBox",
                          "id": 1
                        }
                      }
                    },
                    "BoundingBox": {
                      "fields": {
                        "top": {
                          "type": "int32",
                          "id": 1
                        },
                        "left": {
                          "type": "int32",
                          "id": 2
                        },
                        "width": {
                          "type": "int32",
                          "id": 3
                        },
                        "height": {
                          "type": "int32",
                          "id": 4
                        }
                      }
                    },
                    "RedactImageRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/DlpContent"
                          }
                        },
                        "locationId": {
                          "type": "string",
                          "id": 8
                        },
                        "inspectConfig": {
                          "type": "InspectConfig",
                          "id": 2
                        },
                        "imageRedactionConfigs": {
                          "rule": "repeated",
                          "type": "ImageRedactionConfig",
                          "id": 5
                        },
                        "includeFindings": {
                          "type": "bool",
                          "id": 6
                        },
                        "byteItem": {
                          "type": "ByteContentItem",
                          "id": 7
                        }
                      },
                      "nested": {
                        "ImageRedactionConfig": {
                          "oneofs": {
                            "target": {
                              "oneof": [
                                "infoType",
                                "redactAllText"
                              ]
                            }
                          },
                          "fields": {
                            "infoType": {
                              "type": "InfoType",
                              "id": 1
                            },
                            "redactAllText": {
                              "type": "bool",
                              "id": 2
                            },
                            "redactionColor": {
                              "type": "Color",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "Color": {
                      "fields": {
                        "red": {
                          "type": "float",
                          "id": 1
                        },
                        "green": {
                          "type": "float",
                          "id": 2
                        },
                        "blue": {
                          "type": "float",
                          "id": 3
                        }
                      }
                    },
                    "RedactImageResponse": {
                      "fields": {
                        "redactedImage": {
                          "type": "bytes",
                          "id": 1
                        },
                        "extractedText": {
                          "type": "string",
                          "id": 2
                        },
                        "inspectResult": {
                          "type": "InspectResult",
                          "id": 3
                        }
                      }
                    },
                    "DeidentifyContentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/DlpContent"
                          }
                        },
                        "deidentifyConfig": {
                          "type": "DeidentifyConfig",
                          "id": 2
                        },
                        "inspectConfig": {
                          "type": "InspectConfig",
                          "id": 3
                        },
                        "item": {
                          "type": "ContentItem",
                          "id": 4
                        },
                        "inspectTemplateName": {
                          "type": "string",
                          "id": 5
                        },
                        "deidentifyTemplateName": {
                          "type": "string",
                          "id": 6
                        },
                        "locationId": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "DeidentifyContentResponse": {
                      "fields": {
                        "item": {
                          "type": "ContentItem",
                          "id": 1
                        },
                        "overview": {
                          "type": "TransformationOverview",
                          "id": 2
                        }
                      }
                    },
                    "ReidentifyContentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/DlpContent"
                          }
                        },
                        "reidentifyConfig": {
                          "type": "DeidentifyConfig",
                          "id": 2
                        },
                        "inspectConfig": {
                          "type": "InspectConfig",
                          "id": 3
                        },
                        "item": {
                          "type": "ContentItem",
                          "id": 4
                        },
                        "inspectTemplateName": {
                          "type": "string",
                          "id": 5
                        },
                        "reidentifyTemplateName": {
                          "type": "string",
                          "id": 6
                        },
                        "locationId": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "ReidentifyContentResponse": {
                      "fields": {
                        "item": {
                          "type": "ContentItem",
                          "id": 1
                        },
                        "overview": {
                          "type": "TransformationOverview",
                          "id": 2
                        }
                      }
                    },
                    "InspectContentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/DlpContent"
                          }
                        },
                        "inspectConfig": {
                          "type": "InspectConfig",
                          "id": 2
                        },
                        "item": {
                          "type": "ContentItem",
                          "id": 3
                        },
                        "inspectTemplateName": {
                          "type": "string",
                          "id": 4
                        },
                        "locationId": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "InspectContentResponse": {
                      "fields": {
                        "result": {
                          "type": "InspectResult",
                          "id": 1
                        }
                      }
                    },
                    "OutputStorageConfig": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "table"
                          ]
                        }
                      },
                      "fields": {
                        "table": {
                          "type": "BigQueryTable",
                          "id": 1
                        },
                        "outputSchema": {
                          "type": "OutputSchema",
                          "id": 3
                        }
                      },
                      "nested": {
                        "OutputSchema": {
                          "values": {
                            "OUTPUT_SCHEMA_UNSPECIFIED": 0,
                            "BASIC_COLUMNS": 1,
                            "GCS_COLUMNS": 2,
                            "DATASTORE_COLUMNS": 3,
                            "BIG_QUERY_COLUMNS": 4,
                            "ALL_COLUMNS": 5
                          }
                        }
                      }
                    },
                    "InfoTypeStats": {
                      "fields": {
                        "infoType": {
                          "type": "InfoType",
                          "id": 1
                        },
                        "count": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "InspectDataSourceDetails": {
                      "fields": {
                        "requestedOptions": {
                          "type": "RequestedOptions",
                          "id": 2
                        },
                        "result": {
                          "type": "Result",
                          "id": 3
                        }
                      },
                      "nested": {
                        "RequestedOptions": {
                          "fields": {
                            "snapshotInspectTemplate": {
                              "type": "InspectTemplate",
                              "id": 1
                            },
                            "jobConfig": {
                              "type": "InspectJobConfig",
                              "id": 3
                            }
                          }
                        },
                        "Result": {
                          "fields": {
                            "processedBytes": {
                              "type": "int64",
                              "id": 1
                            },
                            "totalEstimatedBytes": {
                              "type": "int64",
                              "id": 2
                            },
                            "infoTypeStats": {
                              "rule": "repeated",
                              "type": "InfoTypeStats",
                              "id": 3
                            },
                            "hybridStats": {
                              "type": "HybridInspectStatistics",
                              "id": 7
                            }
                          }
                        }
                      }
                    },
                    "HybridInspectStatistics": {
                      "fields": {
                        "processedCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "abortedCount": {
                          "type": "int64",
                          "id": 2
                        },
                        "pendingCount": {
                          "type": "int64",
                          "id": 3
                        }
                      }
                    },
                    "InfoTypeDescription": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "supportedBy": {
                          "rule": "repeated",
                          "type": "InfoTypeSupportedBy",
                          "id": 3
                        },
                        "description": {
                          "type": "string",
                          "id": 4
                        },
                        "versions": {
                          "rule": "repeated",
                          "type": "VersionDescription",
                          "id": 9
                        },
                        "categories": {
                          "rule": "repeated",
                          "type": "InfoTypeCategory",
                          "id": 10
                        }
                      }
                    },
                    "InfoTypeCategory": {
                      "oneofs": {
                        "category": {
                          "oneof": [
                            "locationCategory",
                            "industryCategory",
                            "typeCategory"
                          ]
                        }
                      },
                      "fields": {
                        "locationCategory": {
                          "type": "LocationCategory",
                          "id": 1
                        },
                        "industryCategory": {
                          "type": "IndustryCategory",
                          "id": 2
                        },
                        "typeCategory": {
                          "type": "TypeCategory",
                          "id": 3
                        }
                      },
                      "nested": {
                        "LocationCategory": {
                          "values": {
                            "LOCATION_UNSPECIFIED": 0,
                            "GLOBAL": 1,
                            "ARGENTINA": 2,
                            "AUSTRALIA": 3,
                            "BELGIUM": 4,
                            "BRAZIL": 5,
                            "CANADA": 6,
                            "CHILE": 7,
                            "CHINA": 8,
                            "COLOMBIA": 9,
                            "DENMARK": 10,
                            "FRANCE": 11,
                            "FINLAND": 12,
                            "GERMANY": 13,
                            "HONG_KONG": 14,
                            "INDIA": 15,
                            "INDONESIA": 16,
                            "IRELAND": 17,
                            "ISRAEL": 18,
                            "ITALY": 19,
                            "JAPAN": 20,
                            "KOREA": 21,
                            "MEXICO": 22,
                            "THE_NETHERLANDS": 23,
                            "NORWAY": 24,
                            "PARAGUAY": 25,
                            "PERU": 26,
                            "POLAND": 27,
                            "PORTUGAL": 28,
                            "SINGAPORE": 29,
                            "SOUTH_AFRICA": 30,
                            "SPAIN": 31,
                            "SWEDEN": 32,
                            "TAIWAN": 33,
                            "THAILAND": 34,
                            "TURKEY": 35,
                            "UNITED_KINGDOM": 36,
                            "UNITED_STATES": 37,
                            "URUGUAY": 38,
                            "VENEZUELA": 39,
                            "INTERNAL": 40,
                            "NEW_ZEALAND": 41
                          }
                        },
                        "IndustryCategory": {
                          "values": {
                            "INDUSTRY_UNSPECIFIED": 0,
                            "FINANCE": 1,
                            "HEALTH": 2,
                            "TELECOMMUNICATIONS": 3
                          }
                        },
                        "TypeCategory": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "PII": 1,
                            "SPII": 2,
                            "DEMOGRAPHIC": 3,
                            "CREDENTIAL": 4,
                            "GOVERNMENT_ID": 5,
                            "DOCUMENT": 6,
                            "CONTEXTUAL_INFORMATION": 7
                          }
                        }
                      }
                    },
                    "VersionDescription": {
                      "fields": {
                        "version": {
                          "type": "string",
                          "id": 1
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListInfoTypesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 4
                        },
                        "languageCode": {
                          "type": "string",
                          "id": 1
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "locationId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListInfoTypesResponse": {
                      "fields": {
                        "infoTypes": {
                          "rule": "repeated",
                          "type": "InfoTypeDescription",
                          "id": 1
                        }
                      }
                    },
                    "RiskAnalysisJobConfig": {
                      "fields": {
                        "privacyMetric": {
                          "type": "PrivacyMetric",
                          "id": 1
                        },
                        "sourceTable": {
                          "type": "BigQueryTable",
                          "id": 2
                        },
                        "actions": {
                          "rule": "repeated",
                          "type": "Action",
                          "id": 3
                        }
                      }
                    },
                    "QuasiId": {
                      "oneofs": {
                        "tag": {
                          "oneof": [
                            "infoType",
                            "customTag",
                            "inferred"
                          ]
                        }
                      },
                      "fields": {
                        "field": {
                          "type": "FieldId",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "infoType": {
                          "type": "InfoType",
                          "id": 2
                        },
                        "customTag": {
                          "type": "string",
                          "id": 3
                        },
                        "inferred": {
                          "type": "google.protobuf.Empty",
                          "id": 4
                        }
                      }
                    },
                    "StatisticalTable": {
                      "fields": {
                        "table": {
                          "type": "BigQueryTable",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "quasiIds": {
                          "rule": "repeated",
                          "type": "QuasiIdentifierField",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "relativeFrequency": {
                          "type": "FieldId",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "QuasiIdentifierField": {
                          "fields": {
                            "field": {
                              "type": "FieldId",
                              "id": 1
                            },
                            "customTag": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "PrivacyMetric": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "numericalStatsConfig",
                            "categoricalStatsConfig",
                            "kAnonymityConfig",
                            "lDiversityConfig",
                            "kMapEstimationConfig",
                            "deltaPresenceEstimationConfig"
                          ]
                        }
                      },
                      "fields": {
                        "numericalStatsConfig": {
                          "type": "NumericalStatsConfig",
                          "id": 1
                        },
                        "categoricalStatsConfig": {
                          "type": "CategoricalStatsConfig",
                          "id": 2
                        },
                        "kAnonymityConfig": {
                          "type": "KAnonymityConfig",
                          "id": 3
                        },
                        "lDiversityConfig": {
                          "type": "LDiversityConfig",
                          "id": 4
                        },
                        "kMapEstimationConfig": {
                          "type": "KMapEstimationConfig",
                          "id": 5
                        },
                        "deltaPresenceEstimationConfig": {
                          "type": "DeltaPresenceEstimationConfig",
                          "id": 6
                        }
                      },
                      "nested": {
                        "NumericalStatsConfig": {
                          "fields": {
                            "field": {
                              "type": "FieldId",
                              "id": 1
                            }
                          }
                        },
                        "CategoricalStatsConfig": {
                          "fields": {
                            "field": {
                              "type": "FieldId",
                              "id": 1
                            }
                          }
                        },
                        "KAnonymityConfig": {
                          "fields": {
                            "quasiIds": {
                              "rule": "repeated",
                              "type": "FieldId",
                              "id": 1
                            },
                            "entityId": {
                              "type": "EntityId",
                              "id": 2
                            }
                          }
                        },
                        "LDiversityConfig": {
                          "fields": {
                            "quasiIds": {
                              "rule": "repeated",
                              "type": "FieldId",
                              "id": 1
                            },
                            "sensitiveAttribute": {
                              "type": "FieldId",
                              "id": 2
                            }
                          }
                        },
                        "KMapEstimationConfig": {
                          "fields": {
                            "quasiIds": {
                              "rule": "repeated",
                              "type": "TaggedField",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "regionCode": {
                              "type": "string",
                              "id": 2
                            },
                            "auxiliaryTables": {
                              "rule": "repeated",
                              "type": "AuxiliaryTable",
                              "id": 3
                            }
                          },
                          "nested": {
                            "TaggedField": {
                              "oneofs": {
                                "tag": {
                                  "oneof": [
                                    "infoType",
                                    "customTag",
                                    "inferred"
                                  ]
                                }
                              },
                              "fields": {
                                "field": {
                                  "type": "FieldId",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "infoType": {
                                  "type": "InfoType",
                                  "id": 2
                                },
                                "customTag": {
                                  "type": "string",
                                  "id": 3
                                },
                                "inferred": {
                                  "type": "google.protobuf.Empty",
                                  "id": 4
                                }
                              }
                            },
                            "AuxiliaryTable": {
                              "fields": {
                                "table": {
                                  "type": "BigQueryTable",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "quasiIds": {
                                  "rule": "repeated",
                                  "type": "QuasiIdField",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "relativeFrequency": {
                                  "type": "FieldId",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              },
                              "nested": {
                                "QuasiIdField": {
                                  "fields": {
                                    "field": {
                                      "type": "FieldId",
                                      "id": 1
                                    },
                                    "customTag": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "DeltaPresenceEstimationConfig": {
                          "fields": {
                            "quasiIds": {
                              "rule": "repeated",
                              "type": "QuasiId",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "regionCode": {
                              "type": "string",
                              "id": 2
                            },
                            "auxiliaryTables": {
                              "rule": "repeated",
                              "type": "StatisticalTable",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "AnalyzeDataSourceRiskDetails": {
                      "oneofs": {
                        "result": {
                          "oneof": [
                            "numericalStatsResult",
                            "categoricalStatsResult",
                            "kAnonymityResult",
                            "lDiversityResult",
                            "kMapEstimationResult",
                            "deltaPresenceEstimationResult"
                          ]
                        }
                      },
                      "fields": {
                        "requestedPrivacyMetric": {
                          "type": "PrivacyMetric",
                          "id": 1
                        },
                        "requestedSourceTable": {
                          "type": "BigQueryTable",
                          "id": 2
                        },
                        "numericalStatsResult": {
                          "type": "NumericalStatsResult",
                          "id": 3
                        },
                        "categoricalStatsResult": {
                          "type": "CategoricalStatsResult",
                          "id": 4
                        },
                        "kAnonymityResult": {
                          "type": "KAnonymityResult",
                          "id": 5
                        },
                        "lDiversityResult": {
                          "type": "LDiversityResult",
                          "id": 6
                        },
                        "kMapEstimationResult": {
                          "type": "KMapEstimationResult",
                          "id": 7
                        },
                        "deltaPresenceEstimationResult": {
                          "type": "DeltaPresenceEstimationResult",
                          "id": 9
                        },
                        "requestedOptions": {
                          "type": "RequestedRiskAnalysisOptions",
                          "id": 10
                        }
                      },
                      "nested": {
                        "NumericalStatsResult": {
                          "fields": {
                            "minValue": {
                              "type": "Value",
                              "id": 1
                            },
                            "maxValue": {
                              "type": "Value",
                              "id": 2
                            },
                            "quantileValues": {
                              "rule": "repeated",
                              "type": "Value",
                              "id": 4
                            }
                          }
                        },
                        "CategoricalStatsResult": {
                          "fields": {
                            "valueFrequencyHistogramBuckets": {
                              "rule": "repeated",
                              "type": "CategoricalStatsHistogramBucket",
                              "id": 5
                            }
                          },
                          "nested": {
                            "CategoricalStatsHistogramBucket": {
                              "fields": {
                                "valueFrequencyLowerBound": {
                                  "type": "int64",
                                  "id": 1
                                },
                                "valueFrequencyUpperBound": {
                                  "type": "int64",
                                  "id": 2
                                },
                                "bucketSize": {
                                  "type": "int64",
                                  "id": 3
                                },
                                "bucketValues": {
                                  "rule": "repeated",
                                  "type": "ValueFrequency",
                                  "id": 4
                                },
                                "bucketValueCount": {
                                  "type": "int64",
                                  "id": 5
                                }
                              }
                            }
                          }
                        },
                        "KAnonymityResult": {
                          "fields": {
                            "equivalenceClassHistogramBuckets": {
                              "rule": "repeated",
                              "type": "KAnonymityHistogramBucket",
                              "id": 5
                            }
                          },
                          "nested": {
                            "KAnonymityEquivalenceClass": {
                              "fields": {
                                "quasiIdsValues": {
                                  "rule": "repeated",
                                  "type": "Value",
                                  "id": 1
                                },
                                "equivalenceClassSize": {
                                  "type": "int64",
                                  "id": 2
                                }
                              }
                            },
                            "KAnonymityHistogramBucket": {
                              "fields": {
                                "equivalenceClassSizeLowerBound": {
                                  "type": "int64",
                                  "id": 1
                                },
                                "equivalenceClassSizeUpperBound": {
                                  "type": "int64",
                                  "id": 2
                                },
                                "bucketSize": {
                                  "type": "int64",
                                  "id": 3
                                },
                                "bucketValues": {
                                  "rule": "repeated",
                                  "type": "KAnonymityEquivalenceClass",
                                  "id": 4
                                },
                                "bucketValueCount": {
                                  "type": "int64",
                                  "id": 5
                                }
                              }
                            }
                          }
                        },
                        "LDiversityResult": {
                          "fields": {
                            "sensitiveValueFrequencyHistogramBuckets": {
                              "rule": "repeated",
                              "type": "LDiversityHistogramBucket",
                              "id": 5
                            }
                          },
                          "nested": {
                            "LDiversityEquivalenceClass": {
                              "fields": {
                                "quasiIdsValues": {
                                  "rule": "repeated",
                                  "type": "Value",
                                  "id": 1
                                },
                                "equivalenceClassSize": {
                                  "type": "int64",
                                  "id": 2
                                },
                                "numDistinctSensitiveValues": {
                                  "type": "int64",
                                  "id": 3
                                },
                                "topSensitiveValues": {
                                  "rule": "repeated",
                                  "type": "ValueFrequency",
                                  "id": 4
                                }
                              }
                            },
                            "LDiversityHistogramBucket": {
                              "fields": {
                                "sensitiveValueFrequencyLowerBound": {
                                  "type": "int64",
                                  "id": 1
                                },
                                "sensitiveValueFrequencyUpperBound": {
                                  "type": "int64",
                                  "id": 2
                                },
                                "bucketSize": {
                                  "type": "int64",
                                  "id": 3
                                },
                                "bucketValues": {
                                  "rule": "repeated",
                                  "type": "LDiversityEquivalenceClass",
                                  "id": 4
                                },
                                "bucketValueCount": {
                                  "type": "int64",
                                  "id": 5
                                }
                              }
                            }
                          }
                        },
                        "KMapEstimationResult": {
                          "fields": {
                            "kMapEstimationHistogram": {
                              "rule": "repeated",
                              "type": "KMapEstimationHistogramBucket",
                              "id": 1
                            }
                          },
                          "nested": {
                            "KMapEstimationQuasiIdValues": {
                              "fields": {
                                "quasiIdsValues": {
                                  "rule": "repeated",
                                  "type": "Value",
                                  "id": 1
                                },
                                "estimatedAnonymity": {
                                  "type": "int64",
                                  "id": 2
                                }
                              }
                            },
                            "KMapEstimationHistogramBucket": {
                              "fields": {
                                "minAnonymity": {
                                  "type": "int64",
                                  "id": 1
                                },
                                "maxAnonymity": {
                                  "type": "int64",
                                  "id": 2
                                },
                                "bucketSize": {
                                  "type": "int64",
                                  "id": 5
                                },
                                "bucketValues": {
                                  "rule": "repeated",
                                  "type": "KMapEstimationQuasiIdValues",
                                  "id": 6
                                },
                                "bucketValueCount": {
                                  "type": "int64",
                                  "id": 7
                                }
                              }
                            }
                          }
                        },
                        "DeltaPresenceEstimationResult": {
                          "fields": {
                            "deltaPresenceEstimationHistogram": {
                              "rule": "repeated",
                              "type": "DeltaPresenceEstimationHistogramBucket",
                              "id": 1
                            }
                          },
                          "nested": {
                            "DeltaPresenceEstimationQuasiIdValues": {
                              "fields": {
                                "quasiIdsValues": {
                                  "rule": "repeated",
                                  "type": "Value",
                                  "id": 1
                                },
                                "estimatedProbability": {
                                  "type": "double",
                                  "id": 2
                                }
                              }
                            },
                            "DeltaPresenceEstimationHistogramBucket": {
                              "fields": {
                                "minProbability": {
                                  "type": "double",
                                  "id": 1
                                },
                                "maxProbability": {
                                  "type": "double",
                                  "id": 2
                                },
                                "bucketSize": {
                                  "type": "int64",
                                  "id": 5
                                },
                                "bucketValues": {
                                  "rule": "repeated",
                                  "type": "DeltaPresenceEstimationQuasiIdValues",
                                  "id": 6
                                },
                                "bucketValueCount": {
                                  "type": "int64",
                                  "id": 7
                                }
                              }
                            }
                          }
                        },
                        "RequestedRiskAnalysisOptions": {
                          "fields": {
                            "jobConfig": {
                              "type": "RiskAnalysisJobConfig",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ValueFrequency": {
                      "fields": {
                        "value": {
                          "type": "Value",
                          "id": 1
                        },
                        "count": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "Value": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "integerValue",
                            "floatValue",
                            "stringValue",
                            "booleanValue",
                            "timestampValue",
                            "timeValue",
                            "dateValue",
                            "dayOfWeekValue"
                          ]
                        }
                      },
                      "fields": {
                        "integerValue": {
                          "type": "int64",
                          "id": 1
                        },
                        "floatValue": {
                          "type": "double",
                          "id": 2
                        },
                        "stringValue": {
                          "type": "string",
                          "id": 3
                        },
                        "booleanValue": {
                          "type": "bool",
                          "id": 4
                        },
                        "timestampValue": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "timeValue": {
                          "type": "google.type.TimeOfDay",
                          "id": 6
                        },
                        "dateValue": {
                          "type": "google.type.Date",
                          "id": 7
                        },
                        "dayOfWeekValue": {
                          "type": "google.type.DayOfWeek",
                          "id": 8
                        }
                      }
                    },
                    "QuoteInfo": {
                      "oneofs": {
                        "parsedQuote": {
                          "oneof": [
                            "dateTime"
                          ]
                        }
                      },
                      "fields": {
                        "dateTime": {
                          "type": "DateTime",
                          "id": 2
                        }
                      }
                    },
                    "DateTime": {
                      "fields": {
                        "date": {
                          "type": "google.type.Date",
                          "id": 1
                        },
                        "dayOfWeek": {
                          "type": "google.type.DayOfWeek",
                          "id": 2
                        },
                        "time": {
                          "type": "google.type.TimeOfDay",
                          "id": 3
                        },
                        "timeZone": {
                          "type": "TimeZone",
                          "id": 4
                        }
                      },
                      "nested": {
                        "TimeZone": {
                          "fields": {
                            "offsetMinutes": {
                              "type": "int32",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "DeidentifyConfig": {
                      "oneofs": {
                        "transformation": {
                          "oneof": [
                            "infoTypeTransformations",
                            "recordTransformations",
                            "imageTransformations"
                          ]
                        }
                      },
                      "fields": {
                        "infoTypeTransformations": {
                          "type": "InfoTypeTransformations",
                          "id": 1
                        },
                        "recordTransformations": {
                          "type": "RecordTransformations",
                          "id": 2
                        },
                        "imageTransformations": {
                          "type": "ImageTransformations",
                          "id": 4
                        },
                        "transformationErrorHandling": {
                          "type": "TransformationErrorHandling",
                          "id": 3
                        }
                      }
                    },
                    "ImageTransformations": {
                      "fields": {
                        "transforms": {
                          "rule": "repeated",
                          "type": "ImageTransformation",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ImageTransformation": {
                          "oneofs": {
                            "target": {
                              "oneof": [
                                "selectedInfoTypes",
                                "allInfoTypes",
                                "allText"
                              ]
                            }
                          },
                          "fields": {
                            "selectedInfoTypes": {
                              "type": "SelectedInfoTypes",
                              "id": 4
                            },
                            "allInfoTypes": {
                              "type": "AllInfoTypes",
                              "id": 5
                            },
                            "allText": {
                              "type": "AllText",
                              "id": 6
                            },
                            "redactionColor": {
                              "type": "Color",
                              "id": 3
                            }
                          },
                          "nested": {
                            "SelectedInfoTypes": {
                              "fields": {
                                "infoTypes": {
                                  "rule": "repeated",
                                  "type": "InfoType",
                                  "id": 5,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "AllInfoTypes": {
                              "fields": {}
                            },
                            "AllText": {
                              "fields": {}
                            }
                          }
                        }
                      }
                    },
                    "TransformationErrorHandling": {
                      "oneofs": {
                        "mode": {
                          "oneof": [
                            "throwError",
                            "leaveUntransformed"
                          ]
                        }
                      },
                      "fields": {
                        "throwError": {
                          "type": "ThrowError",
                          "id": 1
                        },
                        "leaveUntransformed": {
                          "type": "LeaveUntransformed",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ThrowError": {
                          "fields": {}
                        },
                        "LeaveUntransformed": {
                          "fields": {}
                        }
                      }
                    },
                    "PrimitiveTransformation": {
                      "oneofs": {
                        "transformation": {
                          "oneof": [
                            "replaceConfig",
                            "redactConfig",
                            "characterMaskConfig",
                            "cryptoReplaceFfxFpeConfig",
                            "fixedSizeBucketingConfig",
                            "bucketingConfig",
                            "replaceWithInfoTypeConfig",
                            "timePartConfig",
                            "cryptoHashConfig",
                            "dateShiftConfig",
                            "cryptoDeterministicConfig",
                            "replaceDictionaryConfig"
                          ]
                        }
                      },
                      "fields": {
                        "replaceConfig": {
                          "type": "ReplaceValueConfig",
                          "id": 1
                        },
                        "redactConfig": {
                          "type": "RedactConfig",
                          "id": 2
                        },
                        "characterMaskConfig": {
                          "type": "CharacterMaskConfig",
                          "id": 3
                        },
                        "cryptoReplaceFfxFpeConfig": {
                          "type": "CryptoReplaceFfxFpeConfig",
                          "id": 4
                        },
                        "fixedSizeBucketingConfig": {
                          "type": "FixedSizeBucketingConfig",
                          "id": 5
                        },
                        "bucketingConfig": {
                          "type": "BucketingConfig",
                          "id": 6
                        },
                        "replaceWithInfoTypeConfig": {
                          "type": "ReplaceWithInfoTypeConfig",
                          "id": 7
                        },
                        "timePartConfig": {
                          "type": "TimePartConfig",
                          "id": 8
                        },
                        "cryptoHashConfig": {
                          "type": "CryptoHashConfig",
                          "id": 9
                        },
                        "dateShiftConfig": {
                          "type": "DateShiftConfig",
                          "id": 11
                        },
                        "cryptoDeterministicConfig": {
                          "type": "CryptoDeterministicConfig",
                          "id": 12
                        },
                        "replaceDictionaryConfig": {
                          "type": "ReplaceDictionaryConfig",
                          "id": 13
                        }
                      }
                    },
                    "TimePartConfig": {
                      "fields": {
                        "partToExtract": {
                          "type": "TimePart",
                          "id": 1
                        }
                      },
                      "nested": {
                        "TimePart": {
                          "values": {
                            "TIME_PART_UNSPECIFIED": 0,
                            "YEAR": 1,
                            "MONTH": 2,
                            "DAY_OF_MONTH": 3,
                            "DAY_OF_WEEK": 4,
                            "WEEK_OF_YEAR": 5,
                            "HOUR_OF_DAY": 6
                          }
                        }
                      }
                    },
                    "CryptoHashConfig": {
                      "fields": {
                        "cryptoKey": {
                          "type": "CryptoKey",
                          "id": 1
                        }
                      }
                    },
                    "CryptoDeterministicConfig": {
                      "fields": {
                        "cryptoKey": {
                          "type": "CryptoKey",
                          "id": 1
                        },
                        "surrogateInfoType": {
                          "type": "InfoType",
                          "id": 2
                        },
                        "context": {
                          "type": "FieldId",
                          "id": 3
                        }
                      }
                    },
                    "ReplaceValueConfig": {
                      "fields": {
                        "newValue": {
                          "type": "Value",
                          "id": 1
                        }
                      }
                    },
                    "ReplaceDictionaryConfig": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "wordList"
                          ]
                        }
                      },
                      "fields": {
                        "wordList": {
                          "type": "CustomInfoType.Dictionary.WordList",
                          "id": 1
                        }
                      }
                    },
                    "ReplaceWithInfoTypeConfig": {
                      "fields": {}
                    },
                    "RedactConfig": {
                      "fields": {}
                    },
                    "CharsToIgnore": {
                      "oneofs": {
                        "characters": {
                          "oneof": [
                            "charactersToSkip",
                            "commonCharactersToIgnore"
                          ]
                        }
                      },
                      "fields": {
                        "charactersToSkip": {
                          "type": "string",
                          "id": 1
                        },
                        "commonCharactersToIgnore": {
                          "type": "CommonCharsToIgnore",
                          "id": 2
                        }
                      },
                      "nested": {
                        "CommonCharsToIgnore": {
                          "values": {
                            "COMMON_CHARS_TO_IGNORE_UNSPECIFIED": 0,
                            "NUMERIC": 1,
                            "ALPHA_UPPER_CASE": 2,
                            "ALPHA_LOWER_CASE": 3,
                            "PUNCTUATION": 4,
                            "WHITESPACE": 5
                          }
                        }
                      }
                    },
                    "CharacterMaskConfig": {
                      "fields": {
                        "maskingCharacter": {
                          "type": "string",
                          "id": 1
                        },
                        "numberToMask": {
                          "type": "int32",
                          "id": 2
                        },
                        "reverseOrder": {
                          "type": "bool",
                          "id": 3
                        },
                        "charactersToIgnore": {
                          "rule": "repeated",
                          "type": "CharsToIgnore",
                          "id": 4
                        }
                      }
                    },
                    "FixedSizeBucketingConfig": {
                      "fields": {
                        "lowerBound": {
                          "type": "Value",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "upperBound": {
                          "type": "Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "bucketSize": {
                          "type": "double",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BucketingConfig": {
                      "fields": {
                        "buckets": {
                          "rule": "repeated",
                          "type": "Bucket",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Bucket": {
                          "fields": {
                            "min": {
                              "type": "Value",
                              "id": 1
                            },
                            "max": {
                              "type": "Value",
                              "id": 2
                            },
                            "replacementValue": {
                              "type": "Value",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        }
                      }
                    },
                    "CryptoReplaceFfxFpeConfig": {
                      "oneofs": {
                        "alphabet": {
                          "oneof": [
                            "commonAlphabet",
                            "customAlphabet",
                            "radix"
                          ]
                        }
                      },
                      "fields": {
                        "cryptoKey": {
                          "type": "CryptoKey",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "context": {
                          "type": "FieldId",
                          "id": 2
                        },
                        "commonAlphabet": {
                          "type": "FfxCommonNativeAlphabet",
                          "id": 4
                        },
                        "customAlphabet": {
                          "type": "string",
                          "id": 5
                        },
                        "radix": {
                          "type": "int32",
                          "id": 6
                        },
                        "surrogateInfoType": {
                          "type": "InfoType",
                          "id": 8
                        }
                      },
                      "nested": {
                        "FfxCommonNativeAlphabet": {
                          "values": {
                            "FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED": 0,
                            "NUMERIC": 1,
                            "HEXADECIMAL": 2,
                            "UPPER_CASE_ALPHA_NUMERIC": 3,
                            "ALPHA_NUMERIC": 4
                          }
                        }
                      }
                    },
                    "CryptoKey": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "transient",
                            "unwrapped",
                            "kmsWrapped"
                          ]
                        }
                      },
                      "fields": {
                        "transient": {
                          "type": "TransientCryptoKey",
                          "id": 1
                        },
                        "unwrapped": {
                          "type": "UnwrappedCryptoKey",
                          "id": 2
                        },
                        "kmsWrapped": {
                          "type": "KmsWrappedCryptoKey",
                          "id": 3
                        }
                      }
                    },
                    "TransientCryptoKey": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UnwrappedCryptoKey": {
                      "fields": {
                        "key": {
                          "type": "bytes",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "KmsWrappedCryptoKey": {
                      "fields": {
                        "wrappedKey": {
                          "type": "bytes",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "cryptoKeyName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DateShiftConfig": {
                      "oneofs": {
                        "method": {
                          "oneof": [
                            "cryptoKey"
                          ]
                        }
                      },
                      "fields": {
                        "upperBoundDays": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "lowerBoundDays": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "context": {
                          "type": "FieldId",
                          "id": 3
                        },
                        "cryptoKey": {
                          "type": "CryptoKey",
                          "id": 4
                        }
                      }
                    },
                    "InfoTypeTransformations": {
                      "fields": {
                        "transformations": {
                          "rule": "repeated",
                          "type": "InfoTypeTransformation",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "InfoTypeTransformation": {
                          "fields": {
                            "infoTypes": {
                              "rule": "repeated",
                              "type": "InfoType",
                              "id": 1
                            },
                            "primitiveTransformation": {
                              "type": "PrimitiveTransformation",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        }
                      }
                    },
                    "FieldTransformation": {
                      "oneofs": {
                        "transformation": {
                          "oneof": [
                            "primitiveTransformation",
                            "infoTypeTransformations"
                          ]
                        }
                      },
                      "fields": {
                        "fields": {
                          "rule": "repeated",
                          "type": "FieldId",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "condition": {
                          "type": "RecordCondition",
                          "id": 3
                        },
                        "primitiveTransformation": {
                          "type": "PrimitiveTransformation",
                          "id": 4
                        },
                        "infoTypeTransformations": {
                          "type": "InfoTypeTransformations",
                          "id": 5
                        }
                      }
                    },
                    "RecordTransformations": {
                      "fields": {
                        "fieldTransformations": {
                          "rule": "repeated",
                          "type": "FieldTransformation",
                          "id": 1
                        },
                        "recordSuppressions": {
                          "rule": "repeated",
                          "type": "RecordSuppression",
                          "id": 2
                        }
                      }
                    },
                    "RecordSuppression": {
                      "fields": {
                        "condition": {
                          "type": "RecordCondition",
                          "id": 1
                        }
                      }
                    },
                    "RecordCondition": {
                      "fields": {
                        "expressions": {
                          "type": "Expressions",
                          "id": 3
                        }
                      },
                      "nested": {
                        "Condition": {
                          "fields": {
                            "field": {
                              "type": "FieldId",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "operator": {
                              "type": "RelationalOperator",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "value": {
                              "type": "Value",
                              "id": 4
                            }
                          }
                        },
                        "Conditions": {
                          "fields": {
                            "conditions": {
                              "rule": "repeated",
                              "type": "Condition",
                              "id": 1
                            }
                          }
                        },
                        "Expressions": {
                          "oneofs": {
                            "type": {
                              "oneof": [
                                "conditions"
                              ]
                            }
                          },
                          "fields": {
                            "logicalOperator": {
                              "type": "LogicalOperator",
                              "id": 1
                            },
                            "conditions": {
                              "type": "Conditions",
                              "id": 3
                            }
                          },
                          "nested": {
                            "LogicalOperator": {
                              "values": {
                                "LOGICAL_OPERATOR_UNSPECIFIED": 0,
                                "AND": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "TransformationOverview": {
                      "fields": {
                        "transformedBytes": {
                          "type": "int64",
                          "id": 2
                        },
                        "transformationSummaries": {
                          "rule": "repeated",
                          "type": "TransformationSummary",
                          "id": 3
                        }
                      }
                    },
                    "TransformationSummary": {
                      "fields": {
                        "infoType": {
                          "type": "InfoType",
                          "id": 1
                        },
                        "field": {
                          "type": "FieldId",
                          "id": 2
                        },
                        "transformation": {
                          "type": "PrimitiveTransformation",
                          "id": 3
                        },
                        "fieldTransformations": {
                          "rule": "repeated",
                          "type": "FieldTransformation",
                          "id": 5
                        },
                        "recordSuppress": {
                          "type": "RecordSuppression",
                          "id": 6
                        },
                        "results": {
                          "rule": "repeated",
                          "type": "SummaryResult",
                          "id": 4
                        },
                        "transformedBytes": {
                          "type": "int64",
                          "id": 7
                        }
                      },
                      "nested": {
                        "TransformationResultCode": {
                          "values": {
                            "TRANSFORMATION_RESULT_CODE_UNSPECIFIED": 0,
                            "SUCCESS": 1,
                            "ERROR": 2
                          }
                        },
                        "SummaryResult": {
                          "fields": {
                            "count": {
                              "type": "int64",
                              "id": 1
                            },
                            "code": {
                              "type": "TransformationResultCode",
                              "id": 2
                            },
                            "details": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "TransformationDescription": {
                      "fields": {
                        "type": {
                          "type": "TransformationType",
                          "id": 1
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "condition": {
                          "type": "string",
                          "id": 3
                        },
                        "infoType": {
                          "type": "InfoType",
                          "id": 4
                        }
                      }
                    },
                    "TransformationDetails": {
                      "fields": {
                        "resourceName": {
                          "type": "string",
                          "id": 1
                        },
                        "containerName": {
                          "type": "string",
                          "id": 2
                        },
                        "transformation": {
                          "rule": "repeated",
                          "type": "TransformationDescription",
                          "id": 3
                        },
                        "statusDetails": {
                          "type": "TransformationResultStatus",
                          "id": 4
                        },
                        "transformedBytes": {
                          "type": "int64",
                          "id": 5
                        },
                        "transformationLocation": {
                          "type": "TransformationLocation",
                          "id": 6
                        }
                      }
                    },
                    "TransformationLocation": {
                      "oneofs": {
                        "locationType": {
                          "oneof": [
                            "findingId",
                            "recordTransformation"
                          ]
                        }
                      },
                      "fields": {
                        "findingId": {
                          "type": "string",
                          "id": 1
                        },
                        "recordTransformation": {
                          "type": "RecordTransformation",
                          "id": 2
                        },
                        "containerType": {
                          "type": "TransformationContainerType",
                          "id": 3
                        }
                      }
                    },
                    "RecordTransformation": {
                      "fields": {
                        "fieldId": {
                          "type": "FieldId",
                          "id": 1
                        },
                        "containerTimestamp": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "containerVersion": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "TransformationResultStatus": {
                      "fields": {
                        "resultStatusType": {
                          "type": "TransformationResultStatusType",
                          "id": 1
                        },
                        "details": {
                          "type": "google.rpc.Status",
                          "id": 2
                        }
                      }
                    },
                    "TransformationResultStatusType": {
                      "values": {
                        "STATE_TYPE_UNSPECIFIED": 0,
                        "INVALID_TRANSFORM": 1,
                        "BIGQUERY_MAX_ROW_SIZE_EXCEEDED": 2,
                        "METADATA_UNRETRIEVABLE": 3,
                        "SUCCESS": 4
                      }
                    },
                    "TransformationContainerType": {
                      "values": {
                        "TRANSFORM_UNKNOWN_CONTAINER": 0,
                        "TRANSFORM_BODY": 1,
                        "TRANSFORM_METADATA": 2,
                        "TRANSFORM_TABLE": 3
                      }
                    },
                    "TransformationType": {
                      "values": {
                        "TRANSFORMATION_TYPE_UNSPECIFIED": 0,
                        "RECORD_SUPPRESSION": 1,
                        "REPLACE_VALUE": 2,
                        "REPLACE_DICTIONARY": 15,
                        "REDACT": 3,
                        "CHARACTER_MASK": 4,
                        "CRYPTO_REPLACE_FFX_FPE": 5,
                        "FIXED_SIZE_BUCKETING": 6,
                        "BUCKETING": 7,
                        "REPLACE_WITH_INFO_TYPE": 8,
                        "TIME_PART": 9,
                        "CRYPTO_HASH": 10,
                        "DATE_SHIFT": 12,
                        "CRYPTO_DETERMINISTIC_CONFIG": 13,
                        "REDACT_IMAGE": 14
                      }
                    },
                    "TransformationDetailsStorageConfig": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "table"
                          ]
                        }
                      },
                      "fields": {
                        "table": {
                          "type": "BigQueryTable",
                          "id": 1
                        }
                      }
                    },
                    "Schedule": {
                      "oneofs": {
                        "option": {
                          "oneof": [
                            "recurrencePeriodDuration"
                          ]
                        }
                      },
                      "fields": {
                        "recurrencePeriodDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 1
                        }
                      }
                    },
                    "Manual": {
                      "fields": {}
                    },
                    "InspectTemplate": {
                      "options": {
                        "(google.api.resource).type": "dlp.googleapis.com/InspectTemplate",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/inspectTemplates/{inspect_template}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "inspectConfig": {
                          "type": "InspectConfig",
                          "id": 6
                        }
                      }
                    },
                    "DeidentifyTemplate": {
                      "options": {
                        "(google.api.resource).type": "dlp.googleapis.com/DeidentifyTemplate",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/deidentifyTemplates/{deidentify_template}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deidentifyConfig": {
                          "type": "DeidentifyConfig",
                          "id": 6
                        }
                      }
                    },
                    "Error": {
                      "fields": {
                        "details": {
                          "type": "google.rpc.Status",
                          "id": 1
                        },
                        "timestamps": {
                          "rule": "repeated",
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        }
                      }
                    },
                    "JobTrigger": {
                      "options": {
                        "(google.api.resource).type": "dlp.googleapis.com/JobTrigger",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobTriggers/{job_trigger}"
                      },
                      "oneofs": {
                        "job": {
                          "oneof": [
                            "inspectJob"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "inspectJob": {
                          "type": "InspectJobConfig",
                          "id": 4
                        },
                        "triggers": {
                          "rule": "repeated",
                          "type": "Trigger",
                          "id": 5
                        },
                        "errors": {
                          "rule": "repeated",
                          "type": "Error",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastRunTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "status": {
                          "type": "Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "Trigger": {
                          "oneofs": {
                            "trigger": {
                              "oneof": [
                                "schedule",
                                "manual"
                              ]
                            }
                          },
                          "fields": {
                            "schedule": {
                              "type": "Schedule",
                              "id": 1
                            },
                            "manual": {
                              "type": "Manual",
                              "id": 2
                            }
                          }
                        },
                        "Status": {
                          "values": {
                            "STATUS_UNSPECIFIED": 0,
                            "HEALTHY": 1,
                            "PAUSED": 2,
                            "CANCELLED": 3
                          }
                        }
                      }
                    },
                    "Action": {
                      "oneofs": {
                        "action": {
                          "oneof": [
                            "saveFindings",
                            "pubSub",
                            "publishSummaryToCscc",
                            "publishFindingsToCloudDataCatalog",
                            "deidentify",
                            "jobNotificationEmails",
                            "publishToStackdriver"
                          ]
                        }
                      },
                      "fields": {
                        "saveFindings": {
                          "type": "SaveFindings",
                          "id": 1
                        },
                        "pubSub": {
                          "type": "PublishToPubSub",
                          "id": 2
                        },
                        "publishSummaryToCscc": {
                          "type": "PublishSummaryToCscc",
                          "id": 3
                        },
                        "publishFindingsToCloudDataCatalog": {
                          "type": "PublishFindingsToCloudDataCatalog",
                          "id": 5
                        },
                        "deidentify": {
                          "type": "Deidentify",
                          "id": 7
                        },
                        "jobNotificationEmails": {
                          "type": "JobNotificationEmails",
                          "id": 8
                        },
                        "publishToStackdriver": {
                          "type": "PublishToStackdriver",
                          "id": 9
                        }
                      },
                      "nested": {
                        "SaveFindings": {
                          "fields": {
                            "outputConfig": {
                              "type": "OutputStorageConfig",
                              "id": 1
                            }
                          }
                        },
                        "PublishToPubSub": {
                          "fields": {
                            "topic": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "PublishSummaryToCscc": {
                          "fields": {}
                        },
                        "PublishFindingsToCloudDataCatalog": {
                          "fields": {}
                        },
                        "Deidentify": {
                          "oneofs": {
                            "output": {
                              "oneof": [
                                "cloudStorageOutput"
                              ]
                            }
                          },
                          "fields": {
                            "transformationConfig": {
                              "type": "TransformationConfig",
                              "id": 7
                            },
                            "transformationDetailsStorageConfig": {
                              "type": "TransformationDetailsStorageConfig",
                              "id": 3
                            },
                            "cloudStorageOutput": {
                              "type": "string",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "fileTypesToTransform": {
                              "rule": "repeated",
                              "type": "FileType",
                              "id": 8
                            }
                          }
                        },
                        "JobNotificationEmails": {
                          "fields": {}
                        },
                        "PublishToStackdriver": {
                          "fields": {}
                        }
                      }
                    },
                    "TransformationConfig": {
                      "fields": {
                        "deidentifyTemplate": {
                          "type": "string",
                          "id": 1
                        },
                        "structuredDeidentifyTemplate": {
                          "type": "string",
                          "id": 2
                        },
                        "imageRedactTemplate": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "CreateInspectTemplateRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/InspectTemplate"
                          }
                        },
                        "inspectTemplate": {
                          "type": "InspectTemplate",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "templateId": {
                          "type": "string",
                          "id": 3
                        },
                        "locationId": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "UpdateInspectTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/InspectTemplate"
                          }
                        },
                        "inspectTemplate": {
                          "type": "InspectTemplate",
                          "id": 2
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 3
                        }
                      }
                    },
                    "GetInspectTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/InspectTemplate"
                          }
                        }
                      }
                    },
                    "ListInspectTemplatesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/InspectTemplate"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 4
                        },
                        "locationId": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListInspectTemplatesResponse": {
                      "fields": {
                        "inspectTemplates": {
                          "rule": "repeated",
                          "type": "InspectTemplate",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteInspectTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/InspectTemplate"
                          }
                        }
                      }
                    },
                    "CreateJobTriggerRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/JobTrigger"
                          }
                        },
                        "jobTrigger": {
                          "type": "JobTrigger",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "triggerId": {
                          "type": "string",
                          "id": 3
                        },
                        "locationId": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ActivateJobTriggerRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/JobTrigger"
                          }
                        }
                      }
                    },
                    "UpdateJobTriggerRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/JobTrigger"
                          }
                        },
                        "jobTrigger": {
                          "type": "JobTrigger",
                          "id": 2
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 3
                        }
                      }
                    },
                    "GetJobTriggerRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/JobTrigger"
                          }
                        }
                      }
                    },
                    "CreateDlpJobRequest": {
                      "oneofs": {
                        "job": {
                          "oneof": [
                            "inspectJob",
                            "riskJob"
                          ]
                        }
                      },
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/DlpJob"
                          }
                        },
                        "inspectJob": {
                          "type": "InspectJobConfig",
                          "id": 2
                        },
                        "riskJob": {
                          "type": "RiskAnalysisJobConfig",
                          "id": 3
                        },
                        "jobId": {
                          "type": "string",
                          "id": 4
                        },
                        "locationId": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListJobTriggersRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/JobTrigger"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 4
                        },
                        "filter": {
                          "type": "string",
                          "id": 5
                        },
                        "type": {
                          "type": "DlpJobType",
                          "id": 6
                        },
                        "locationId": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "ListJobTriggersResponse": {
                      "fields": {
                        "jobTriggers": {
                          "rule": "repeated",
                          "type": "JobTrigger",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteJobTriggerRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/JobTrigger"
                          }
                        }
                      }
                    },
                    "InspectJobConfig": {
                      "fields": {
                        "storageConfig": {
                          "type": "StorageConfig",
                          "id": 1
                        },
                        "inspectConfig": {
                          "type": "InspectConfig",
                          "id": 2
                        },
                        "inspectTemplateName": {
                          "type": "string",
                          "id": 3
                        },
                        "actions": {
                          "rule": "repeated",
                          "type": "Action",
                          "id": 4
                        }
                      }
                    },
                    "DataProfileAction": {
                      "oneofs": {
                        "action": {
                          "oneof": [
                            "exportData",
                            "pubSubNotification"
                          ]
                        }
                      },
                      "fields": {
                        "exportData": {
                          "type": "Export",
                          "id": 1
                        },
                        "pubSubNotification": {
                          "type": "PubSubNotification",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Export": {
                          "fields": {
                            "profileTable": {
                              "type": "BigQueryTable",
                              "id": 1
                            }
                          }
                        },
                        "PubSubNotification": {
                          "fields": {
                            "topic": {
                              "type": "string",
                              "id": 1
                            },
                            "event": {
                              "type": "EventType",
                              "id": 2
                            },
                            "pubsubCondition": {
                              "type": "DataProfilePubSubCondition",
                              "id": 3
                            },
                            "detailOfMessage": {
                              "type": "DetailLevel",
                              "id": 4
                            }
                          },
                          "nested": {
                            "DetailLevel": {
                              "values": {
                                "DETAIL_LEVEL_UNSPECIFIED": 0,
                                "TABLE_PROFILE": 1,
                                "RESOURCE_NAME": 2
                              }
                            }
                          }
                        },
                        "EventType": {
                          "values": {
                            "EVENT_TYPE_UNSPECIFIED": 0,
                            "NEW_PROFILE": 1,
                            "CHANGED_PROFILE": 2,
                            "SCORE_INCREASED": 3,
                            "ERROR_CHANGED": 4
                          }
                        }
                      }
                    },
                    "DataProfileJobConfig": {
                      "fields": {
                        "location": {
                          "type": "DataProfileLocation",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 5
                        },
                        "inspectTemplates": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 7
                        },
                        "dataProfileActions": {
                          "rule": "repeated",
                          "type": "DataProfileAction",
                          "id": 6
                        }
                      }
                    },
                    "DataProfileLocation": {
                      "oneofs": {
                        "location": {
                          "oneof": [
                            "organizationId",
                            "folderId"
                          ]
                        }
                      },
                      "fields": {
                        "organizationId": {
                          "type": "int64",
                          "id": 1
                        },
                        "folderId": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "DlpJob": {
                      "options": {
                        "(google.api.resource).type": "dlp.googleapis.com/DlpJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/dlpJobs/{dlp_job}"
                      },
                      "oneofs": {
                        "details": {
                          "oneof": [
                            "riskDetails",
                            "inspectDetails"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "DlpJobType",
                          "id": 2
                        },
                        "state": {
                          "type": "JobState",
                          "id": 3
                        },
                        "riskDetails": {
                          "type": "AnalyzeDataSourceRiskDetails",
                          "id": 4
                        },
                        "inspectDetails": {
                          "type": "InspectDataSourceDetails",
                          "id": 5
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8
                        },
                        "jobTriggerName": {
                          "type": "string",
                          "id": 10
                        },
                        "errors": {
                          "rule": "repeated",
                          "type": "Error",
                          "id": 11
                        }
                      },
                      "nested": {
                        "JobState": {
                          "values": {
                            "JOB_STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "RUNNING": 2,
                            "DONE": 3,
                            "CANCELED": 4,
                            "FAILED": 5,
                            "ACTIVE": 6
                          }
                        }
                      }
                    },
                    "GetDlpJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DlpJob"
                          }
                        }
                      }
                    },
                    "ListDlpJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/DlpJob"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 1
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "type": {
                          "type": "DlpJobType",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        },
                        "locationId": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "ListDlpJobsResponse": {
                      "fields": {
                        "jobs": {
                          "rule": "repeated",
                          "type": "DlpJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CancelDlpJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DlpJob"
                          }
                        }
                      }
                    },
                    "FinishDlpJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DlpJob"
                          }
                        }
                      }
                    },
                    "DeleteDlpJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DlpJob"
                          }
                        }
                      }
                    },
                    "CreateDeidentifyTemplateRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/DeidentifyTemplate"
                          }
                        },
                        "deidentifyTemplate": {
                          "type": "DeidentifyTemplate",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "templateId": {
                          "type": "string",
                          "id": 3
                        },
                        "locationId": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "UpdateDeidentifyTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DeidentifyTemplate"
                          }
                        },
                        "deidentifyTemplate": {
                          "type": "DeidentifyTemplate",
                          "id": 2
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 3
                        }
                      }
                    },
                    "GetDeidentifyTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DeidentifyTemplate"
                          }
                        }
                      }
                    },
                    "ListDeidentifyTemplatesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/DeidentifyTemplate"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 4
                        },
                        "locationId": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListDeidentifyTemplatesResponse": {
                      "fields": {
                        "deidentifyTemplates": {
                          "rule": "repeated",
                          "type": "DeidentifyTemplate",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDeidentifyTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DeidentifyTemplate"
                          }
                        }
                      }
                    },
                    "LargeCustomDictionaryConfig": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "cloudStorageFileSet",
                            "bigQueryField"
                          ]
                        }
                      },
                      "fields": {
                        "outputPath": {
                          "type": "CloudStoragePath",
                          "id": 1
                        },
                        "cloudStorageFileSet": {
                          "type": "CloudStorageFileSet",
                          "id": 2
                        },
                        "bigQueryField": {
                          "type": "BigQueryField",
                          "id": 3
                        }
                      }
                    },
                    "LargeCustomDictionaryStats": {
                      "fields": {
                        "approxNumPhrases": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "StoredInfoTypeConfig": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "largeCustomDictionary",
                            "dictionary",
                            "regex"
                          ]
                        }
                      },
                      "fields": {
                        "displayName": {
                          "type": "string",
                          "id": 1
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "largeCustomDictionary": {
                          "type": "LargeCustomDictionaryConfig",
                          "id": 3
                        },
                        "dictionary": {
                          "type": "CustomInfoType.Dictionary",
                          "id": 4
                        },
                        "regex": {
                          "type": "CustomInfoType.Regex",
                          "id": 5
                        }
                      }
                    },
                    "StoredInfoTypeStats": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "largeCustomDictionary"
                          ]
                        }
                      },
                      "fields": {
                        "largeCustomDictionary": {
                          "type": "LargeCustomDictionaryStats",
                          "id": 1
                        }
                      }
                    },
                    "StoredInfoTypeVersion": {
                      "fields": {
                        "config": {
                          "type": "StoredInfoTypeConfig",
                          "id": 1
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "state": {
                          "type": "StoredInfoTypeState",
                          "id": 3
                        },
                        "errors": {
                          "rule": "repeated",
                          "type": "Error",
                          "id": 4
                        },
                        "stats": {
                          "type": "StoredInfoTypeStats",
                          "id": 5
                        }
                      }
                    },
                    "StoredInfoType": {
                      "options": {
                        "(google.api.resource).type": "dlp.googleapis.com/StoredInfoType",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/storedInfoTypes/{stored_info_type}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "currentVersion": {
                          "type": "StoredInfoTypeVersion",
                          "id": 2
                        },
                        "pendingVersions": {
                          "rule": "repeated",
                          "type": "StoredInfoTypeVersion",
                          "id": 3
                        }
                      }
                    },
                    "CreateStoredInfoTypeRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/StoredInfoType"
                          }
                        },
                        "config": {
                          "type": "StoredInfoTypeConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "storedInfoTypeId": {
                          "type": "string",
                          "id": 3
                        },
                        "locationId": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "UpdateStoredInfoTypeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/StoredInfoType"
                          }
                        },
                        "config": {
                          "type": "StoredInfoTypeConfig",
                          "id": 2
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 3
                        }
                      }
                    },
                    "GetStoredInfoTypeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/StoredInfoType"
                          }
                        }
                      }
                    },
                    "ListStoredInfoTypesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "dlp.googleapis.com/StoredInfoType"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 4
                        },
                        "locationId": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListStoredInfoTypesResponse": {
                      "fields": {
                        "storedInfoTypes": {
                          "rule": "repeated",
                          "type": "StoredInfoType",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteStoredInfoTypeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/StoredInfoType"
                          }
                        }
                      }
                    },
                    "HybridInspectJobTriggerRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/JobTrigger"
                          }
                        },
                        "hybridItem": {
                          "type": "HybridContentItem",
                          "id": 3
                        }
                      }
                    },
                    "HybridInspectDlpJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dlp.googleapis.com/DlpJob"
                          }
                        },
                        "hybridItem": {
                          "type": "HybridContentItem",
                          "id": 3
                        }
                      }
                    },
                    "HybridContentItem": {
                      "fields": {
                        "item": {
                          "type": "ContentItem",
                          "id": 1
                        },
                        "findingDetails": {
                          "type": "HybridFindingDetails",
                          "id": 2
                        }
                      }
                    },
                    "HybridFindingDetails": {
                      "fields": {
                        "containerDetails": {
                          "type": "Container",
                          "id": 1
                        },
                        "fileOffset": {
                          "type": "int64",
                          "id": 2
                        },
                        "rowOffset": {
                          "type": "int64",
                          "id": 3
                        },
                        "tableOptions": {
                          "type": "TableOptions",
                          "id": 4
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "HybridInspectResponse": {
                      "fields": {}
                    },
                    "RelationalOperator": {
                      "values": {
                        "RELATIONAL_OPERATOR_UNSPECIFIED": 0,
                        "EQUAL_TO": 1,
                        "NOT_EQUAL_TO": 2,
                        "GREATER_THAN": 3,
                        "LESS_THAN": 4,
                        "GREATER_THAN_OR_EQUALS": 5,
                        "LESS_THAN_OR_EQUALS": 6,
                        "EXISTS": 7
                      }
                    },
                    "MatchingType": {
                      "values": {
                        "MATCHING_TYPE_UNSPECIFIED": 0,
                        "MATCHING_TYPE_FULL_MATCH": 1,
                        "MATCHING_TYPE_PARTIAL_MATCH": 2,
                        "MATCHING_TYPE_INVERSE_MATCH": 3
                      }
                    },
                    "ContentOption": {
                      "values": {
                        "CONTENT_UNSPECIFIED": 0,
                        "CONTENT_TEXT": 1,
                        "CONTENT_IMAGE": 2
                      }
                    },
                    "MetadataType": {
                      "values": {
                        "METADATATYPE_UNSPECIFIED": 0,
                        "STORAGE_METADATA": 2
                      }
                    },
                    "InfoTypeSupportedBy": {
                      "values": {
                        "ENUM_TYPE_UNSPECIFIED": 0,
                        "INSPECT": 1,
                        "RISK_ANALYSIS": 2
                      }
                    },
                    "DlpJobType": {
                      "values": {
                        "DLP_JOB_TYPE_UNSPECIFIED": 0,
                        "INSPECT_JOB": 1,
                        "RISK_ANALYSIS_JOB": 2
                      }
                    },
                    "StoredInfoTypeState": {
                      "values": {
                        "STORED_INFO_TYPE_STATE_UNSPECIFIED": 0,
                        "PENDING": 1,
                        "READY": 2,
                        "FAILED": 3,
                        "INVALID": 4
                      }
                    },
                    "DataRiskLevel": {
                      "fields": {
                        "score": {
                          "type": "DataRiskLevelScore",
                          "id": 1
                        }
                      },
                      "nested": {
                        "DataRiskLevelScore": {
                          "values": {
                            "RISK_SCORE_UNSPECIFIED": 0,
                            "RISK_LOW": 10,
                            "RISK_MODERATE": 20,
                            "RISK_HIGH": 30
                          }
                        }
                      }
                    },
                    "ResourceVisibility": {
                      "values": {
                        "RESOURCE_VISIBILITY_UNSPECIFIED": 0,
                        "RESOURCE_VISIBILITY_PUBLIC": 10,
                        "RESOURCE_VISIBILITY_RESTRICTED": 20
                      }
                    },
                    "DataProfileConfigSnapshot": {
                      "fields": {
                        "inspectConfig": {
                          "type": "InspectConfig",
                          "id": 2
                        },
                        "dataProfileJob": {
                          "type": "DataProfileJobConfig",
                          "id": 3
                        }
                      }
                    },
                    "TableDataProfile": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "projectDataProfile": {
                          "type": "string",
                          "id": 2
                        },
                        "datasetProjectId": {
                          "type": "string",
                          "id": 24
                        },
                        "datasetLocation": {
                          "type": "string",
                          "id": 29
                        },
                        "datasetId": {
                          "type": "string",
                          "id": 25
                        },
                        "tableId": {
                          "type": "string",
                          "id": 26
                        },
                        "fullResource": {
                          "type": "string",
                          "id": 3
                        },
                        "profileStatus": {
                          "type": "ProfileStatus",
                          "id": 21
                        },
                        "state": {
                          "type": "State",
                          "id": 22
                        },
                        "sensitivityScore": {
                          "type": "SensitivityScore",
                          "id": 5
                        },
                        "dataRiskLevel": {
                          "type": "DataRiskLevel",
                          "id": 6
                        },
                        "predictedInfoTypes": {
                          "rule": "repeated",
                          "type": "InfoTypeSummary",
                          "id": 27
                        },
                        "otherInfoTypes": {
                          "rule": "repeated",
                          "type": "OtherInfoTypeSummary",
                          "id": 28
                        },
                        "configSnapshot": {
                          "type": "DataProfileConfigSnapshot",
                          "id": 7
                        },
                        "lastModifiedTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8
                        },
                        "expirationTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9
                        },
                        "scannedColumnCount": {
                          "type": "int64",
                          "id": 10
                        },
                        "failedColumnCount": {
                          "type": "int64",
                          "id": 11
                        },
                        "tableSizeBytes": {
                          "type": "int64",
                          "id": 12
                        },
                        "rowCount": {
                          "type": "int64",
                          "id": 13
                        },
                        "encryptionStatus": {
                          "type": "EncryptionStatus",
                          "id": 14
                        },
                        "resourceVisibility": {
                          "type": "ResourceVisibility",
                          "id": 15
                        },
                        "profileLastGenerated": {
                          "type": "google.protobuf.Timestamp",
                          "id": 16
                        },
                        "resourceLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 17
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 23
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "DONE": 2
                          }
                        }
                      }
                    },
                    "ProfileStatus": {
                      "fields": {
                        "status": {
                          "type": "google.rpc.Status",
                          "id": 1
                        },
                        "timestamp": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "EncryptionStatus": {
                      "values": {
                        "ENCRYPTION_STATUS_UNSPECIFIED": 0,
                        "ENCRYPTION_GOOGLE_MANAGED": 1,
                        "ENCRYPTION_CUSTOMER_MANAGED": 2
                      }
                    },
                    "InfoTypeSummary": {
                      "fields": {
                        "infoType": {
                          "type": "InfoType",
                          "id": 1
                        },
                        "estimatedPrevalence": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "deprecated": true
                          }
                        }
                      }
                    },
                    "OtherInfoTypeSummary": {
                      "fields": {
                        "infoType": {
                          "type": "InfoType",
                          "id": 1
                        },
                        "estimatedPrevalence": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "DataProfilePubSubCondition": {
                      "fields": {
                        "expressions": {
                          "type": "PubSubExpressions",
                          "id": 1
                        }
                      },
                      "nested": {
                        "ProfileScoreBucket": {
                          "values": {
                            "PROFILE_SCORE_BUCKET_UNSPECIFIED": 0,
                            "HIGH": 1,
                            "MEDIUM_OR_HIGH": 2
                          }
                        },
                        "PubSubCondition": {
                          "oneofs": {
                            "value": {
                              "oneof": [
                                "minimumRiskScore",
                                "minimumSensitivityScore"
                              ]
                            }
                          },
                          "fields": {
                            "minimumRiskScore": {
                              "type": "ProfileScoreBucket",
                              "id": 1
                            },
                            "minimumSensitivityScore": {
                              "type": "ProfileScoreBucket",
                              "id": 2
                            }
                          }
                        },
                        "PubSubExpressions": {
                          "fields": {
                            "logicalOperator": {
                              "type": "PubSubLogicalOperator",
                              "id": 1
                            },
                            "conditions": {
                              "rule": "repeated",
                              "type": "PubSubCondition",
                              "id": 2
                            }
                          },
                          "nested": {
                            "PubSubLogicalOperator": {
                              "values": {
                                "LOGICAL_OPERATOR_UNSPECIFIED": 0,
                                "OR": 1,
                                "AND": 2
                              }
                            }
                          }
                        }
                      }
                    },
                    "DataProfilePubSubMessage": {
                      "fields": {
                        "profile": {
                          "type": "TableDataProfile",
                          "id": 1
                        },
                        "event": {
                          "type": "DataProfileAction.EventType",
                          "id": 2
                        }
                      }
                    },
                    "InfoType": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "version": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "SensitivityScore": {
                      "fields": {
                        "score": {
                          "type": "SensitivityScoreLevel",
                          "id": 1
                        }
                      },
                      "nested": {
                        "SensitivityScoreLevel": {
                          "values": {
                            "SENSITIVITY_SCORE_UNSPECIFIED": 0,
                            "SENSITIVITY_LOW": 10,
                            "SENSITIVITY_MODERATE": 20,
                            "SENSITIVITY_HIGH": 30
                          }
                        }
                      }
                    },
                    "Likelihood": {
                      "values": {
                        "LIKELIHOOD_UNSPECIFIED": 0,
                        "VERY_UNLIKELY": 1,
                        "UNLIKELY": 2,
                        "POSSIBLE": 3,
                        "LIKELY": 4,
                        "VERY_LIKELY": 5
                      }
                    },
                    "StoredType": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        }
                      }
                    },
                    "CustomInfoType": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "dictionary",
                            "regex",
                            "surrogateType",
                            "storedType"
                          ]
                        }
                      },
                      "fields": {
                        "infoType": {
                          "type": "InfoType",
                          "id": 1
                        },
                        "likelihood": {
                          "type": "Likelihood",
                          "id": 6
                        },
                        "dictionary": {
                          "type": "Dictionary",
                          "id": 2
                        },
                        "regex": {
                          "type": "Regex",
                          "id": 3
                        },
                        "surrogateType": {
                          "type": "SurrogateType",
                          "id": 4
                        },
                        "storedType": {
                          "type": "StoredType",
                          "id": 5
                        },
                        "detectionRules": {
                          "rule": "repeated",
                          "type": "DetectionRule",
                          "id": 7
                        },
                        "exclusionType": {
                          "type": "ExclusionType",
                          "id": 8
                        }
                      },
                      "nested": {
                        "Dictionary": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "wordList",
                                "cloudStoragePath"
                              ]
                            }
                          },
                          "fields": {
                            "wordList": {
                              "type": "WordList",
                              "id": 1
                            },
                            "cloudStoragePath": {
                              "type": "CloudStoragePath",
                              "id": 3
                            }
                          },
                          "nested": {
                            "WordList": {
                              "fields": {
                                "words": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "Regex": {
                          "fields": {
                            "pattern": {
                              "type": "string",
                              "id": 1
                            },
                            "groupIndexes": {
                              "rule": "repeated",
                              "type": "int32",
                              "id": 2
                            }
                          }
                        },
                        "SurrogateType": {
                          "fields": {}
                        },
                        "DetectionRule": {
                          "oneofs": {
                            "type": {
                              "oneof": [
                                "hotwordRule"
                              ]
                            }
                          },
                          "fields": {
                            "hotwordRule": {
                              "type": "HotwordRule",
                              "id": 1
                            }
                          },
                          "nested": {
                            "Proximity": {
                              "fields": {
                                "windowBefore": {
                                  "type": "int32",
                                  "id": 1
                                },
                                "windowAfter": {
                                  "type": "int32",
                                  "id": 2
                                }
                              }
                            },
                            "LikelihoodAdjustment": {
                              "oneofs": {
                                "adjustment": {
                                  "oneof": [
                                    "fixedLikelihood",
                                    "relativeLikelihood"
                                  ]
                                }
                              },
                              "fields": {
                                "fixedLikelihood": {
                                  "type": "Likelihood",
                                  "id": 1
                                },
                                "relativeLikelihood": {
                                  "type": "int32",
                                  "id": 2
                                }
                              }
                            },
                            "HotwordRule": {
                              "fields": {
                                "hotwordRegex": {
                                  "type": "Regex",
                                  "id": 1
                                },
                                "proximity": {
                                  "type": "Proximity",
                                  "id": 2
                                },
                                "likelihoodAdjustment": {
                                  "type": "LikelihoodAdjustment",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "ExclusionType": {
                          "values": {
                            "EXCLUSION_TYPE_UNSPECIFIED": 0,
                            "EXCLUSION_TYPE_EXCLUDE": 1
                          }
                        }
                      }
                    },
                    "FieldId": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "PartitionId": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "namespaceId": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "KindExpression": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "DatastoreOptions": {
                      "fields": {
                        "partitionId": {
                          "type": "PartitionId",
                          "id": 1
                        },
                        "kind": {
                          "type": "KindExpression",
                          "id": 2
                        }
                      }
                    },
                    "FileType": {
                      "values": {
                        "FILE_TYPE_UNSPECIFIED": 0,
                        "BINARY_FILE": 1,
                        "TEXT_FILE": 2,
                        "IMAGE": 3,
                        "WORD": 5,
                        "PDF": 6,
                        "AVRO": 7,
                        "CSV": 8,
                        "TSV": 9,
                        "POWERPOINT": 11,
                        "EXCEL": 12
                      }
                    },
                    "CloudStorageRegexFileSet": {
                      "fields": {
                        "bucketName": {
                          "type": "string",
                          "id": 1
                        },
                        "includeRegex": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "excludeRegex": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CloudStorageOptions": {
                      "fields": {
                        "fileSet": {
                          "type": "FileSet",
                          "id": 1
                        },
                        "bytesLimitPerFile": {
                          "type": "int64",
                          "id": 4
                        },
                        "bytesLimitPerFilePercent": {
                          "type": "int32",
                          "id": 8
                        },
                        "fileTypes": {
                          "rule": "repeated",
                          "type": "FileType",
                          "id": 5
                        },
                        "sampleMethod": {
                          "type": "SampleMethod",
                          "id": 6
                        },
                        "filesLimitPercent": {
                          "type": "int32",
                          "id": 7
                        }
                      },
                      "nested": {
                        "FileSet": {
                          "fields": {
                            "url": {
                              "type": "string",
                              "id": 1
                            },
                            "regexFileSet": {
                              "type": "CloudStorageRegexFileSet",
                              "id": 2
                            }
                          }
                        },
                        "SampleMethod": {
                          "values": {
                            "SAMPLE_METHOD_UNSPECIFIED": 0,
                            "TOP": 1,
                            "RANDOM_START": 2
                          }
                        }
                      }
                    },
                    "CloudStorageFileSet": {
                      "fields": {
                        "url": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "CloudStoragePath": {
                      "fields": {
                        "path": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "BigQueryOptions": {
                      "fields": {
                        "tableReference": {
                          "type": "BigQueryTable",
                          "id": 1
                        },
                        "identifyingFields": {
                          "rule": "repeated",
                          "type": "FieldId",
                          "id": 2
                        },
                        "rowsLimit": {
                          "type": "int64",
                          "id": 3
                        },
                        "rowsLimitPercent": {
                          "type": "int32",
                          "id": 6
                        },
                        "sampleMethod": {
                          "type": "SampleMethod",
                          "id": 4
                        },
                        "excludedFields": {
                          "rule": "repeated",
                          "type": "FieldId",
                          "id": 5
                        },
                        "includedFields": {
                          "rule": "repeated",
                          "type": "FieldId",
                          "id": 7
                        }
                      },
                      "nested": {
                        "SampleMethod": {
                          "values": {
                            "SAMPLE_METHOD_UNSPECIFIED": 0,
                            "TOP": 1,
                            "RANDOM_START": 2
                          }
                        }
                      }
                    },
                    "StorageConfig": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "datastoreOptions",
                            "cloudStorageOptions",
                            "bigQueryOptions",
                            "hybridOptions"
                          ]
                        }
                      },
                      "fields": {
                        "datastoreOptions": {
                          "type": "DatastoreOptions",
                          "id": 2
                        },
                        "cloudStorageOptions": {
                          "type": "CloudStorageOptions",
                          "id": 3
                        },
                        "bigQueryOptions": {
                          "type": "BigQueryOptions",
                          "id": 4
                        },
                        "hybridOptions": {
                          "type": "HybridOptions",
                          "id": 9
                        },
                        "timespanConfig": {
                          "type": "TimespanConfig",
                          "id": 6
                        }
                      },
                      "nested": {
                        "TimespanConfig": {
                          "fields": {
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "timestampField": {
                              "type": "FieldId",
                              "id": 3
                            },
                            "enableAutoPopulationOfTimespanConfig": {
                              "type": "bool",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "HybridOptions": {
                      "fields": {
                        "description": {
                          "type": "string",
                          "id": 1
                        },
                        "requiredFindingLabelKeys": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3
                        },
                        "tableOptions": {
                          "type": "TableOptions",
                          "id": 4
                        }
                      }
                    },
                    "BigQueryKey": {
                      "fields": {
                        "tableReference": {
                          "type": "BigQueryTable",
                          "id": 1
                        },
                        "rowNumber": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "DatastoreKey": {
                      "fields": {
                        "entityKey": {
                          "type": "Key",
                          "id": 1
                        }
                      }
                    },
                    "Key": {
                      "fields": {
                        "partitionId": {
                          "type": "PartitionId",
                          "id": 1
                        },
                        "path": {
                          "rule": "repeated",
                          "type": "PathElement",
                          "id": 2
                        }
                      },
                      "nested": {
                        "PathElement": {
                          "oneofs": {
                            "idType": {
                              "oneof": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "fields": {
                            "kind": {
                              "type": "string",
                              "id": 1
                            },
                            "id": {
                              "type": "int64",
                              "id": 2
                            },
                            "name": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "RecordKey": {
                      "oneofs": {
                        "type": {
                          "oneof": [
                            "datastoreKey",
                            "bigQueryKey"
                          ]
                        }
                      },
                      "fields": {
                        "datastoreKey": {
                          "type": "DatastoreKey",
                          "id": 2
                        },
                        "bigQueryKey": {
                          "type": "BigQueryKey",
                          "id": 3
                        },
                        "idValues": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "BigQueryTable": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "datasetId": {
                          "type": "string",
                          "id": 2
                        },
                        "tableId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "BigQueryField": {
                      "fields": {
                        "table": {
                          "type": "BigQueryTable",
                          "id": 1
                        },
                        "field": {
                          "type": "FieldId",
                          "id": 2
                        }
                      }
                    },
                    "EntityId": {
                      "fields": {
                        "field": {
                          "type": "FieldId",
                          "id": 1
                        }
                      }
                    },
                    "TableOptions": {
                      "fields": {
                        "identifyingFields": {
                          "rule": "repeated",
                          "type": "FieldId",
                          "id": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/type/timeofday;timeofday",
            "java_multiple_files": true,
            "java_outer_classname": "TimeOfDayProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Date": {
              "fields": {
                "year": {
                  "type": "int32",
                  "id": 1
                },
                "month": {
                  "type": "int32",
                  "id": 2
                },
                "day": {
                  "type": "int32",
                  "id": 3
                }
              }
            },
            "DayOfWeek": {
              "values": {
                "DAY_OF_WEEK_UNSPECIFIED": 0,
                "MONDAY": 1,
                "TUESDAY": 2,
                "WEDNESDAY": 3,
                "THURSDAY": 4,
                "FRIDAY": 5,
                "SATURDAY": 6,
                "SUNDAY": 7
              }
            },
            "TimeOfDay": {
              "fields": {
                "hours": {
                  "type": "int32",
                  "id": 1
                },
                "minutes": {
                  "type": "int32",
                  "id": 2
                },
                "seconds": {
                  "type": "int32",
                  "id": 3
                },
                "nanos": {
                  "type": "int32",
                  "id": 4
                }
              }
            }
          }
        }
      }
    }
  }
}