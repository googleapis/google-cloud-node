// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_bigquery_storage_protos || ($protobuf.roots._google_cloud_bigquery_storage_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.bigquery = (function() {
    
                /**
                 * Namespace bigquery.
                 * @memberof google.cloud
                 * @namespace
                 */
                var bigquery = {};
    
                bigquery.storage = (function() {
    
                    /**
                     * Namespace storage.
                     * @memberof google.cloud.bigquery
                     * @namespace
                     */
                    var storage = {};
    
                    storage.v1 = (function() {
    
                        /**
                         * Namespace v1.
                         * @memberof google.cloud.bigquery.storage
                         * @namespace
                         */
                        var v1 = {};
    
                        v1.ArrowSchema = (function() {
    
                            /**
                             * Properties of an ArrowSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IArrowSchema
                             * @property {Uint8Array|null} [serializedSchema] ArrowSchema serializedSchema
                             */
    
                            /**
                             * Constructs a new ArrowSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents an ArrowSchema.
                             * @implements IArrowSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IArrowSchema=} [properties] Properties to set
                             */
                            function ArrowSchema(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArrowSchema serializedSchema.
                             * @member {Uint8Array} serializedSchema
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @instance
                             */
                            ArrowSchema.prototype.serializedSchema = $util.newBuffer([]);
    
                            /**
                             * Creates a new ArrowSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ArrowSchema} ArrowSchema instance
                             */
                            ArrowSchema.create = function create(properties) {
                                return new ArrowSchema(properties);
                            };
    
                            /**
                             * Encodes the specified ArrowSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ArrowSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowSchema} message ArrowSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedSchema != null && Object.hasOwnProperty.call(message, "serializedSchema"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedSchema);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArrowSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ArrowSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowSchema} message ArrowSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArrowSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ArrowSchema} ArrowSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ArrowSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedSchema = reader.bytes();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArrowSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ArrowSchema} ArrowSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArrowSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArrowSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedSchema != null && message.hasOwnProperty("serializedSchema"))
                                    if (!(message.serializedSchema && typeof message.serializedSchema.length === "number" || $util.isString(message.serializedSchema)))
                                        return "serializedSchema: buffer expected";
                                return null;
                            };
    
                            /**
                             * Creates an ArrowSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ArrowSchema} ArrowSchema
                             */
                            ArrowSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ArrowSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ArrowSchema();
                                if (object.serializedSchema != null)
                                    if (typeof object.serializedSchema === "string")
                                        $util.base64.decode(object.serializedSchema, message.serializedSchema = $util.newBuffer($util.base64.length(object.serializedSchema)), 0);
                                    else if (object.serializedSchema.length >= 0)
                                        message.serializedSchema = object.serializedSchema;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArrowSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ArrowSchema} message ArrowSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArrowSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if (options.bytes === String)
                                        object.serializedSchema = "";
                                    else {
                                        object.serializedSchema = [];
                                        if (options.bytes !== Array)
                                            object.serializedSchema = $util.newBuffer(object.serializedSchema);
                                    }
                                if (message.serializedSchema != null && message.hasOwnProperty("serializedSchema"))
                                    object.serializedSchema = options.bytes === String ? $util.base64.encode(message.serializedSchema, 0, message.serializedSchema.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedSchema) : message.serializedSchema;
                                return object;
                            };
    
                            /**
                             * Converts this ArrowSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArrowSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArrowSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArrowSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ArrowSchema";
                            };
    
                            return ArrowSchema;
                        })();
    
                        v1.ArrowRecordBatch = (function() {
    
                            /**
                             * Properties of an ArrowRecordBatch.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IArrowRecordBatch
                             * @property {Uint8Array|null} [serializedRecordBatch] ArrowRecordBatch serializedRecordBatch
                             * @property {number|Long|null} [rowCount] ArrowRecordBatch rowCount
                             */
    
                            /**
                             * Constructs a new ArrowRecordBatch.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents an ArrowRecordBatch.
                             * @implements IArrowRecordBatch
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IArrowRecordBatch=} [properties] Properties to set
                             */
                            function ArrowRecordBatch(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArrowRecordBatch serializedRecordBatch.
                             * @member {Uint8Array} serializedRecordBatch
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @instance
                             */
                            ArrowRecordBatch.prototype.serializedRecordBatch = $util.newBuffer([]);
    
                            /**
                             * ArrowRecordBatch rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @instance
                             */
                            ArrowRecordBatch.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new ArrowRecordBatch instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowRecordBatch=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ArrowRecordBatch} ArrowRecordBatch instance
                             */
                            ArrowRecordBatch.create = function create(properties) {
                                return new ArrowRecordBatch(properties);
                            };
    
                            /**
                             * Encodes the specified ArrowRecordBatch message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ArrowRecordBatch.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowRecordBatch} message ArrowRecordBatch message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowRecordBatch.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedRecordBatch != null && Object.hasOwnProperty.call(message, "serializedRecordBatch"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedRecordBatch);
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.rowCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArrowRecordBatch message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ArrowRecordBatch.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowRecordBatch} message ArrowRecordBatch message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowRecordBatch.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArrowRecordBatch message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ArrowRecordBatch} ArrowRecordBatch
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowRecordBatch.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ArrowRecordBatch();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedRecordBatch = reader.bytes();
                                            break;
                                        }
                                    case 2: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArrowRecordBatch message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ArrowRecordBatch} ArrowRecordBatch
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowRecordBatch.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArrowRecordBatch message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArrowRecordBatch.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedRecordBatch != null && message.hasOwnProperty("serializedRecordBatch"))
                                    if (!(message.serializedRecordBatch && typeof message.serializedRecordBatch.length === "number" || $util.isString(message.serializedRecordBatch)))
                                        return "serializedRecordBatch: buffer expected";
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates an ArrowRecordBatch message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ArrowRecordBatch} ArrowRecordBatch
                             */
                            ArrowRecordBatch.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ArrowRecordBatch)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ArrowRecordBatch();
                                if (object.serializedRecordBatch != null)
                                    if (typeof object.serializedRecordBatch === "string")
                                        $util.base64.decode(object.serializedRecordBatch, message.serializedRecordBatch = $util.newBuffer($util.base64.length(object.serializedRecordBatch)), 0);
                                    else if (object.serializedRecordBatch.length >= 0)
                                        message.serializedRecordBatch = object.serializedRecordBatch;
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArrowRecordBatch message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ArrowRecordBatch} message ArrowRecordBatch
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArrowRecordBatch.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if (options.bytes === String)
                                        object.serializedRecordBatch = "";
                                    else {
                                        object.serializedRecordBatch = [];
                                        if (options.bytes !== Array)
                                            object.serializedRecordBatch = $util.newBuffer(object.serializedRecordBatch);
                                    }
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                }
                                if (message.serializedRecordBatch != null && message.hasOwnProperty("serializedRecordBatch"))
                                    object.serializedRecordBatch = options.bytes === String ? $util.base64.encode(message.serializedRecordBatch, 0, message.serializedRecordBatch.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedRecordBatch) : message.serializedRecordBatch;
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                return object;
                            };
    
                            /**
                             * Converts this ArrowRecordBatch to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArrowRecordBatch.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArrowRecordBatch
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ArrowRecordBatch
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArrowRecordBatch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ArrowRecordBatch";
                            };
    
                            return ArrowRecordBatch;
                        })();
    
                        v1.ArrowSerializationOptions = (function() {
    
                            /**
                             * Properties of an ArrowSerializationOptions.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IArrowSerializationOptions
                             * @property {google.cloud.bigquery.storage.v1.ArrowSerializationOptions.CompressionCodec|null} [bufferCompression] ArrowSerializationOptions bufferCompression
                             */
    
                            /**
                             * Constructs a new ArrowSerializationOptions.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents an ArrowSerializationOptions.
                             * @implements IArrowSerializationOptions
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IArrowSerializationOptions=} [properties] Properties to set
                             */
                            function ArrowSerializationOptions(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArrowSerializationOptions bufferCompression.
                             * @member {google.cloud.bigquery.storage.v1.ArrowSerializationOptions.CompressionCodec} bufferCompression
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @instance
                             */
                            ArrowSerializationOptions.prototype.bufferCompression = 0;
    
                            /**
                             * Creates a new ArrowSerializationOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowSerializationOptions=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ArrowSerializationOptions} ArrowSerializationOptions instance
                             */
                            ArrowSerializationOptions.create = function create(properties) {
                                return new ArrowSerializationOptions(properties);
                            };
    
                            /**
                             * Encodes the specified ArrowSerializationOptions message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ArrowSerializationOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowSerializationOptions} message ArrowSerializationOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSerializationOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.bufferCompression != null && Object.hasOwnProperty.call(message, "bufferCompression"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.bufferCompression);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArrowSerializationOptions message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ArrowSerializationOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IArrowSerializationOptions} message ArrowSerializationOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSerializationOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArrowSerializationOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ArrowSerializationOptions} ArrowSerializationOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSerializationOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.bufferCompression = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArrowSerializationOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ArrowSerializationOptions} ArrowSerializationOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSerializationOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArrowSerializationOptions message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArrowSerializationOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.bufferCompression != null && message.hasOwnProperty("bufferCompression"))
                                    switch (message.bufferCompression) {
                                    default:
                                        return "bufferCompression: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates an ArrowSerializationOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ArrowSerializationOptions} ArrowSerializationOptions
                             */
                            ArrowSerializationOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions();
                                switch (object.bufferCompression) {
                                default:
                                    if (typeof object.bufferCompression === "number") {
                                        message.bufferCompression = object.bufferCompression;
                                        break;
                                    }
                                    break;
                                case "COMPRESSION_UNSPECIFIED":
                                case 0:
                                    message.bufferCompression = 0;
                                    break;
                                case "LZ4_FRAME":
                                case 1:
                                    message.bufferCompression = 1;
                                    break;
                                case "ZSTD":
                                case 2:
                                    message.bufferCompression = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArrowSerializationOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ArrowSerializationOptions} message ArrowSerializationOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArrowSerializationOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.bufferCompression = options.enums === String ? "COMPRESSION_UNSPECIFIED" : 0;
                                if (message.bufferCompression != null && message.hasOwnProperty("bufferCompression"))
                                    object.bufferCompression = options.enums === String ? $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions.CompressionCodec[message.bufferCompression] === undefined ? message.bufferCompression : $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions.CompressionCodec[message.bufferCompression] : message.bufferCompression;
                                return object;
                            };
    
                            /**
                             * Converts this ArrowSerializationOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArrowSerializationOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArrowSerializationOptions
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ArrowSerializationOptions
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArrowSerializationOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ArrowSerializationOptions";
                            };
    
                            /**
                             * CompressionCodec enum.
                             * @name google.cloud.bigquery.storage.v1.ArrowSerializationOptions.CompressionCodec
                             * @enum {number}
                             * @property {number} COMPRESSION_UNSPECIFIED=0 COMPRESSION_UNSPECIFIED value
                             * @property {number} LZ4_FRAME=1 LZ4_FRAME value
                             * @property {number} ZSTD=2 ZSTD value
                             */
                            ArrowSerializationOptions.CompressionCodec = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "COMPRESSION_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "LZ4_FRAME"] = 1;
                                values[valuesById[2] = "ZSTD"] = 2;
                                return values;
                            })();
    
                            return ArrowSerializationOptions;
                        })();
    
                        v1.AvroSchema = (function() {
    
                            /**
                             * Properties of an AvroSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IAvroSchema
                             * @property {string|null} [schema] AvroSchema schema
                             */
    
                            /**
                             * Constructs a new AvroSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents an AvroSchema.
                             * @implements IAvroSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IAvroSchema=} [properties] Properties to set
                             */
                            function AvroSchema(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AvroSchema schema.
                             * @member {string} schema
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @instance
                             */
                            AvroSchema.prototype.schema = "";
    
                            /**
                             * Creates a new AvroSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.AvroSchema} AvroSchema instance
                             */
                            AvroSchema.create = function create(properties) {
                                return new AvroSchema(properties);
                            };
    
                            /**
                             * Encodes the specified AvroSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1.AvroSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroSchema} message AvroSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.schema);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AvroSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.AvroSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroSchema} message AvroSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AvroSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.AvroSchema} AvroSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.AvroSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.schema = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AvroSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.AvroSchema} AvroSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AvroSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AvroSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    if (!$util.isString(message.schema))
                                        return "schema: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an AvroSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.AvroSchema} AvroSchema
                             */
                            AvroSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.AvroSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.AvroSchema();
                                if (object.schema != null)
                                    message.schema = String(object.schema);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AvroSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.AvroSchema} message AvroSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AvroSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.schema = "";
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    object.schema = message.schema;
                                return object;
                            };
    
                            /**
                             * Converts this AvroSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AvroSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AvroSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.AvroSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AvroSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.AvroSchema";
                            };
    
                            return AvroSchema;
                        })();
    
                        v1.AvroRows = (function() {
    
                            /**
                             * Properties of an AvroRows.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IAvroRows
                             * @property {Uint8Array|null} [serializedBinaryRows] AvroRows serializedBinaryRows
                             * @property {number|Long|null} [rowCount] AvroRows rowCount
                             */
    
                            /**
                             * Constructs a new AvroRows.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents an AvroRows.
                             * @implements IAvroRows
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IAvroRows=} [properties] Properties to set
                             */
                            function AvroRows(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AvroRows serializedBinaryRows.
                             * @member {Uint8Array} serializedBinaryRows
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @instance
                             */
                            AvroRows.prototype.serializedBinaryRows = $util.newBuffer([]);
    
                            /**
                             * AvroRows rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @instance
                             */
                            AvroRows.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new AvroRows instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroRows=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.AvroRows} AvroRows instance
                             */
                            AvroRows.create = function create(properties) {
                                return new AvroRows(properties);
                            };
    
                            /**
                             * Encodes the specified AvroRows message. Does not implicitly {@link google.cloud.bigquery.storage.v1.AvroRows.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroRows} message AvroRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroRows.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedBinaryRows != null && Object.hasOwnProperty.call(message, "serializedBinaryRows"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedBinaryRows);
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.rowCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AvroRows message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.AvroRows.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroRows} message AvroRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroRows.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AvroRows message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.AvroRows} AvroRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroRows.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.AvroRows();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedBinaryRows = reader.bytes();
                                            break;
                                        }
                                    case 2: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AvroRows message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.AvroRows} AvroRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroRows.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AvroRows message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AvroRows.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedBinaryRows != null && message.hasOwnProperty("serializedBinaryRows"))
                                    if (!(message.serializedBinaryRows && typeof message.serializedBinaryRows.length === "number" || $util.isString(message.serializedBinaryRows)))
                                        return "serializedBinaryRows: buffer expected";
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates an AvroRows message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.AvroRows} AvroRows
                             */
                            AvroRows.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.AvroRows)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.AvroRows();
                                if (object.serializedBinaryRows != null)
                                    if (typeof object.serializedBinaryRows === "string")
                                        $util.base64.decode(object.serializedBinaryRows, message.serializedBinaryRows = $util.newBuffer($util.base64.length(object.serializedBinaryRows)), 0);
                                    else if (object.serializedBinaryRows.length >= 0)
                                        message.serializedBinaryRows = object.serializedBinaryRows;
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AvroRows message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.AvroRows} message AvroRows
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AvroRows.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if (options.bytes === String)
                                        object.serializedBinaryRows = "";
                                    else {
                                        object.serializedBinaryRows = [];
                                        if (options.bytes !== Array)
                                            object.serializedBinaryRows = $util.newBuffer(object.serializedBinaryRows);
                                    }
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                }
                                if (message.serializedBinaryRows != null && message.hasOwnProperty("serializedBinaryRows"))
                                    object.serializedBinaryRows = options.bytes === String ? $util.base64.encode(message.serializedBinaryRows, 0, message.serializedBinaryRows.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedBinaryRows) : message.serializedBinaryRows;
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                return object;
                            };
    
                            /**
                             * Converts this AvroRows to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AvroRows.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AvroRows
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.AvroRows
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AvroRows.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.AvroRows";
                            };
    
                            return AvroRows;
                        })();
    
                        v1.AvroSerializationOptions = (function() {
    
                            /**
                             * Properties of an AvroSerializationOptions.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IAvroSerializationOptions
                             * @property {boolean|null} [enableDisplayNameAttribute] AvroSerializationOptions enableDisplayNameAttribute
                             */
    
                            /**
                             * Constructs a new AvroSerializationOptions.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents an AvroSerializationOptions.
                             * @implements IAvroSerializationOptions
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IAvroSerializationOptions=} [properties] Properties to set
                             */
                            function AvroSerializationOptions(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AvroSerializationOptions enableDisplayNameAttribute.
                             * @member {boolean} enableDisplayNameAttribute
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @instance
                             */
                            AvroSerializationOptions.prototype.enableDisplayNameAttribute = false;
    
                            /**
                             * Creates a new AvroSerializationOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroSerializationOptions=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.AvroSerializationOptions} AvroSerializationOptions instance
                             */
                            AvroSerializationOptions.create = function create(properties) {
                                return new AvroSerializationOptions(properties);
                            };
    
                            /**
                             * Encodes the specified AvroSerializationOptions message. Does not implicitly {@link google.cloud.bigquery.storage.v1.AvroSerializationOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroSerializationOptions} message AvroSerializationOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroSerializationOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enableDisplayNameAttribute != null && Object.hasOwnProperty.call(message, "enableDisplayNameAttribute"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableDisplayNameAttribute);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AvroSerializationOptions message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.AvroSerializationOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAvroSerializationOptions} message AvroSerializationOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroSerializationOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AvroSerializationOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.AvroSerializationOptions} AvroSerializationOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroSerializationOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.AvroSerializationOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.enableDisplayNameAttribute = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AvroSerializationOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.AvroSerializationOptions} AvroSerializationOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroSerializationOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AvroSerializationOptions message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AvroSerializationOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enableDisplayNameAttribute != null && message.hasOwnProperty("enableDisplayNameAttribute"))
                                    if (typeof message.enableDisplayNameAttribute !== "boolean")
                                        return "enableDisplayNameAttribute: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates an AvroSerializationOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.AvroSerializationOptions} AvroSerializationOptions
                             */
                            AvroSerializationOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.AvroSerializationOptions)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.AvroSerializationOptions();
                                if (object.enableDisplayNameAttribute != null)
                                    message.enableDisplayNameAttribute = Boolean(object.enableDisplayNameAttribute);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AvroSerializationOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.AvroSerializationOptions} message AvroSerializationOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AvroSerializationOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.enableDisplayNameAttribute = false;
                                if (message.enableDisplayNameAttribute != null && message.hasOwnProperty("enableDisplayNameAttribute"))
                                    object.enableDisplayNameAttribute = message.enableDisplayNameAttribute;
                                return object;
                            };
    
                            /**
                             * Converts this AvroSerializationOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AvroSerializationOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AvroSerializationOptions
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.AvroSerializationOptions
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AvroSerializationOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.AvroSerializationOptions";
                            };
    
                            return AvroSerializationOptions;
                        })();
    
                        v1.ProtoSchema = (function() {
    
                            /**
                             * Properties of a ProtoSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IProtoSchema
                             * @property {google.protobuf.IDescriptorProto|null} [protoDescriptor] ProtoSchema protoDescriptor
                             */
    
                            /**
                             * Constructs a new ProtoSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a ProtoSchema.
                             * @implements IProtoSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IProtoSchema=} [properties] Properties to set
                             */
                            function ProtoSchema(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ProtoSchema protoDescriptor.
                             * @member {google.protobuf.IDescriptorProto|null|undefined} protoDescriptor
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @instance
                             */
                            ProtoSchema.prototype.protoDescriptor = null;
    
                            /**
                             * Creates a new ProtoSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IProtoSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ProtoSchema} ProtoSchema instance
                             */
                            ProtoSchema.create = function create(properties) {
                                return new ProtoSchema(properties);
                            };
    
                            /**
                             * Encodes the specified ProtoSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ProtoSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IProtoSchema} message ProtoSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProtoSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.protoDescriptor != null && Object.hasOwnProperty.call(message, "protoDescriptor"))
                                    $root.google.protobuf.DescriptorProto.encode(message.protoDescriptor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ProtoSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ProtoSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IProtoSchema} message ProtoSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProtoSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ProtoSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ProtoSchema} ProtoSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProtoSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ProtoSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.protoDescriptor = $root.google.protobuf.DescriptorProto.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ProtoSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ProtoSchema} ProtoSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProtoSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ProtoSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ProtoSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.protoDescriptor != null && message.hasOwnProperty("protoDescriptor")) {
                                    var error = $root.google.protobuf.DescriptorProto.verify(message.protoDescriptor);
                                    if (error)
                                        return "protoDescriptor." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ProtoSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ProtoSchema} ProtoSchema
                             */
                            ProtoSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ProtoSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ProtoSchema();
                                if (object.protoDescriptor != null) {
                                    if (typeof object.protoDescriptor !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ProtoSchema.protoDescriptor: object expected");
                                    message.protoDescriptor = $root.google.protobuf.DescriptorProto.fromObject(object.protoDescriptor);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ProtoSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ProtoSchema} message ProtoSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ProtoSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.protoDescriptor = null;
                                if (message.protoDescriptor != null && message.hasOwnProperty("protoDescriptor"))
                                    object.protoDescriptor = $root.google.protobuf.DescriptorProto.toObject(message.protoDescriptor, options);
                                return object;
                            };
    
                            /**
                             * Converts this ProtoSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ProtoSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ProtoSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ProtoSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ProtoSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ProtoSchema";
                            };
    
                            return ProtoSchema;
                        })();
    
                        v1.ProtoRows = (function() {
    
                            /**
                             * Properties of a ProtoRows.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IProtoRows
                             * @property {Array.<Uint8Array>|null} [serializedRows] ProtoRows serializedRows
                             */
    
                            /**
                             * Constructs a new ProtoRows.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a ProtoRows.
                             * @implements IProtoRows
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IProtoRows=} [properties] Properties to set
                             */
                            function ProtoRows(properties) {
                                this.serializedRows = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ProtoRows serializedRows.
                             * @member {Array.<Uint8Array>} serializedRows
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @instance
                             */
                            ProtoRows.prototype.serializedRows = $util.emptyArray;
    
                            /**
                             * Creates a new ProtoRows instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IProtoRows=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ProtoRows} ProtoRows instance
                             */
                            ProtoRows.create = function create(properties) {
                                return new ProtoRows(properties);
                            };
    
                            /**
                             * Encodes the specified ProtoRows message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ProtoRows.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IProtoRows} message ProtoRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProtoRows.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedRows != null && message.serializedRows.length)
                                    for (var i = 0; i < message.serializedRows.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedRows[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ProtoRows message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ProtoRows.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IProtoRows} message ProtoRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProtoRows.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ProtoRows message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ProtoRows} ProtoRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProtoRows.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ProtoRows();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.serializedRows && message.serializedRows.length))
                                                message.serializedRows = [];
                                            message.serializedRows.push(reader.bytes());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ProtoRows message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ProtoRows} ProtoRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProtoRows.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ProtoRows message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ProtoRows.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedRows != null && message.hasOwnProperty("serializedRows")) {
                                    if (!Array.isArray(message.serializedRows))
                                        return "serializedRows: array expected";
                                    for (var i = 0; i < message.serializedRows.length; ++i)
                                        if (!(message.serializedRows[i] && typeof message.serializedRows[i].length === "number" || $util.isString(message.serializedRows[i])))
                                            return "serializedRows: buffer[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ProtoRows message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ProtoRows} ProtoRows
                             */
                            ProtoRows.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ProtoRows)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ProtoRows();
                                if (object.serializedRows) {
                                    if (!Array.isArray(object.serializedRows))
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ProtoRows.serializedRows: array expected");
                                    message.serializedRows = [];
                                    for (var i = 0; i < object.serializedRows.length; ++i)
                                        if (typeof object.serializedRows[i] === "string")
                                            $util.base64.decode(object.serializedRows[i], message.serializedRows[i] = $util.newBuffer($util.base64.length(object.serializedRows[i])), 0);
                                        else if (object.serializedRows[i].length >= 0)
                                            message.serializedRows[i] = object.serializedRows[i];
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ProtoRows message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ProtoRows} message ProtoRows
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ProtoRows.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.serializedRows = [];
                                if (message.serializedRows && message.serializedRows.length) {
                                    object.serializedRows = [];
                                    for (var j = 0; j < message.serializedRows.length; ++j)
                                        object.serializedRows[j] = options.bytes === String ? $util.base64.encode(message.serializedRows[j], 0, message.serializedRows[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedRows[j]) : message.serializedRows[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ProtoRows to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ProtoRows.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ProtoRows
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ProtoRows
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ProtoRows.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ProtoRows";
                            };
    
                            return ProtoRows;
                        })();
    
                        v1.BigQueryRead = (function() {
    
                            /**
                             * Constructs a new BigQueryRead service.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a BigQueryRead
                             * @extends $protobuf.rpc.Service
                             * @constructor
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             */
                            function BigQueryRead(rpcImpl, requestDelimited, responseDelimited) {
                                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                            }
    
                            (BigQueryRead.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BigQueryRead;
    
                            /**
                             * Creates new BigQueryRead service using the specified rpc implementation.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @static
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             * @returns {BigQueryRead} RPC service. Useful where requests and/or responses are streamed.
                             */
                            BigQueryRead.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                                return new this(rpcImpl, requestDelimited, responseDelimited);
                            };
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryRead|createReadSession}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @typedef CreateReadSessionCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.ReadSession} [response] ReadSession
                             */
    
                            /**
                             * Calls CreateReadSession.
                             * @function createReadSession
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.ICreateReadSessionRequest} request CreateReadSessionRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryRead.CreateReadSessionCallback} callback Node-style callback called with the error, if any, and ReadSession
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryRead.prototype.createReadSession = function createReadSession(request, callback) {
                                return this.rpcCall(createReadSession, $root.google.cloud.bigquery.storage.v1.CreateReadSessionRequest, $root.google.cloud.bigquery.storage.v1.ReadSession, request, callback);
                            }, "name", { value: "CreateReadSession" });
    
                            /**
                             * Calls CreateReadSession.
                             * @function createReadSession
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.ICreateReadSessionRequest} request CreateReadSessionRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.ReadSession>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryRead|readRows}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @typedef ReadRowsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.ReadRowsResponse} [response] ReadRowsResponse
                             */
    
                            /**
                             * Calls ReadRows.
                             * @function readRows
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsRequest} request ReadRowsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryRead.ReadRowsCallback} callback Node-style callback called with the error, if any, and ReadRowsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryRead.prototype.readRows = function readRows(request, callback) {
                                return this.rpcCall(readRows, $root.google.cloud.bigquery.storage.v1.ReadRowsRequest, $root.google.cloud.bigquery.storage.v1.ReadRowsResponse, request, callback);
                            }, "name", { value: "ReadRows" });
    
                            /**
                             * Calls ReadRows.
                             * @function readRows
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsRequest} request ReadRowsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.ReadRowsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryRead|splitReadStream}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @typedef SplitReadStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.SplitReadStreamResponse} [response] SplitReadStreamResponse
                             */
    
                            /**
                             * Calls SplitReadStream.
                             * @function splitReadStream
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamRequest} request SplitReadStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryRead.SplitReadStreamCallback} callback Node-style callback called with the error, if any, and SplitReadStreamResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryRead.prototype.splitReadStream = function splitReadStream(request, callback) {
                                return this.rpcCall(splitReadStream, $root.google.cloud.bigquery.storage.v1.SplitReadStreamRequest, $root.google.cloud.bigquery.storage.v1.SplitReadStreamResponse, request, callback);
                            }, "name", { value: "SplitReadStream" });
    
                            /**
                             * Calls SplitReadStream.
                             * @function splitReadStream
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamRequest} request SplitReadStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.SplitReadStreamResponse>} Promise
                             * @variation 2
                             */
    
                            return BigQueryRead;
                        })();
    
                        v1.BigQueryWrite = (function() {
    
                            /**
                             * Constructs a new BigQueryWrite service.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a BigQueryWrite
                             * @extends $protobuf.rpc.Service
                             * @constructor
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             */
                            function BigQueryWrite(rpcImpl, requestDelimited, responseDelimited) {
                                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                            }
    
                            (BigQueryWrite.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BigQueryWrite;
    
                            /**
                             * Creates new BigQueryWrite service using the specified rpc implementation.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @static
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             * @returns {BigQueryWrite} RPC service. Useful where requests and/or responses are streamed.
                             */
                            BigQueryWrite.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                                return new this(rpcImpl, requestDelimited, responseDelimited);
                            };
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryWrite|createWriteStream}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @typedef CreateWriteStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.WriteStream} [response] WriteStream
                             */
    
                            /**
                             * Calls CreateWriteStream.
                             * @function createWriteStream
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.ICreateWriteStreamRequest} request CreateWriteStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryWrite.CreateWriteStreamCallback} callback Node-style callback called with the error, if any, and WriteStream
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.createWriteStream = function createWriteStream(request, callback) {
                                return this.rpcCall(createWriteStream, $root.google.cloud.bigquery.storage.v1.CreateWriteStreamRequest, $root.google.cloud.bigquery.storage.v1.WriteStream, request, callback);
                            }, "name", { value: "CreateWriteStream" });
    
                            /**
                             * Calls CreateWriteStream.
                             * @function createWriteStream
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.ICreateWriteStreamRequest} request CreateWriteStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.WriteStream>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryWrite|appendRows}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @typedef AppendRowsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.AppendRowsResponse} [response] AppendRowsResponse
                             */
    
                            /**
                             * Calls AppendRows.
                             * @function appendRows
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsRequest} request AppendRowsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryWrite.AppendRowsCallback} callback Node-style callback called with the error, if any, and AppendRowsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.appendRows = function appendRows(request, callback) {
                                return this.rpcCall(appendRows, $root.google.cloud.bigquery.storage.v1.AppendRowsRequest, $root.google.cloud.bigquery.storage.v1.AppendRowsResponse, request, callback);
                            }, "name", { value: "AppendRows" });
    
                            /**
                             * Calls AppendRows.
                             * @function appendRows
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsRequest} request AppendRowsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.AppendRowsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryWrite|getWriteStream}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @typedef GetWriteStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.WriteStream} [response] WriteStream
                             */
    
                            /**
                             * Calls GetWriteStream.
                             * @function getWriteStream
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IGetWriteStreamRequest} request GetWriteStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryWrite.GetWriteStreamCallback} callback Node-style callback called with the error, if any, and WriteStream
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.getWriteStream = function getWriteStream(request, callback) {
                                return this.rpcCall(getWriteStream, $root.google.cloud.bigquery.storage.v1.GetWriteStreamRequest, $root.google.cloud.bigquery.storage.v1.WriteStream, request, callback);
                            }, "name", { value: "GetWriteStream" });
    
                            /**
                             * Calls GetWriteStream.
                             * @function getWriteStream
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IGetWriteStreamRequest} request GetWriteStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.WriteStream>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryWrite|finalizeWriteStream}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @typedef FinalizeWriteStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse} [response] FinalizeWriteStreamResponse
                             */
    
                            /**
                             * Calls FinalizeWriteStream.
                             * @function finalizeWriteStream
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamRequest} request FinalizeWriteStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryWrite.FinalizeWriteStreamCallback} callback Node-style callback called with the error, if any, and FinalizeWriteStreamResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.finalizeWriteStream = function finalizeWriteStream(request, callback) {
                                return this.rpcCall(finalizeWriteStream, $root.google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest, $root.google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse, request, callback);
                            }, "name", { value: "FinalizeWriteStream" });
    
                            /**
                             * Calls FinalizeWriteStream.
                             * @function finalizeWriteStream
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamRequest} request FinalizeWriteStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryWrite|batchCommitWriteStreams}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @typedef BatchCommitWriteStreamsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse} [response] BatchCommitWriteStreamsResponse
                             */
    
                            /**
                             * Calls BatchCommitWriteStreams.
                             * @function batchCommitWriteStreams
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsRequest} request BatchCommitWriteStreamsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryWrite.BatchCommitWriteStreamsCallback} callback Node-style callback called with the error, if any, and BatchCommitWriteStreamsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.batchCommitWriteStreams = function batchCommitWriteStreams(request, callback) {
                                return this.rpcCall(batchCommitWriteStreams, $root.google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest, $root.google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse, request, callback);
                            }, "name", { value: "BatchCommitWriteStreams" });
    
                            /**
                             * Calls BatchCommitWriteStreams.
                             * @function batchCommitWriteStreams
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsRequest} request BatchCommitWriteStreamsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1.BigQueryWrite|flushRows}.
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @typedef FlushRowsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1.FlushRowsResponse} [response] FlushRowsResponse
                             */
    
                            /**
                             * Calls FlushRows.
                             * @function flushRows
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsRequest} request FlushRowsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1.BigQueryWrite.FlushRowsCallback} callback Node-style callback called with the error, if any, and FlushRowsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.flushRows = function flushRows(request, callback) {
                                return this.rpcCall(flushRows, $root.google.cloud.bigquery.storage.v1.FlushRowsRequest, $root.google.cloud.bigquery.storage.v1.FlushRowsResponse, request, callback);
                            }, "name", { value: "FlushRows" });
    
                            /**
                             * Calls FlushRows.
                             * @function flushRows
                             * @memberof google.cloud.bigquery.storage.v1.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsRequest} request FlushRowsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1.FlushRowsResponse>} Promise
                             * @variation 2
                             */
    
                            return BigQueryWrite;
                        })();
    
                        v1.CreateReadSessionRequest = (function() {
    
                            /**
                             * Properties of a CreateReadSessionRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface ICreateReadSessionRequest
                             * @property {string|null} [parent] CreateReadSessionRequest parent
                             * @property {google.cloud.bigquery.storage.v1.IReadSession|null} [readSession] CreateReadSessionRequest readSession
                             * @property {number|null} [maxStreamCount] CreateReadSessionRequest maxStreamCount
                             * @property {number|null} [preferredMinStreamCount] CreateReadSessionRequest preferredMinStreamCount
                             */
    
                            /**
                             * Constructs a new CreateReadSessionRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a CreateReadSessionRequest.
                             * @implements ICreateReadSessionRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.ICreateReadSessionRequest=} [properties] Properties to set
                             */
                            function CreateReadSessionRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateReadSessionRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.parent = "";
    
                            /**
                             * CreateReadSessionRequest readSession.
                             * @member {google.cloud.bigquery.storage.v1.IReadSession|null|undefined} readSession
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.readSession = null;
    
                            /**
                             * CreateReadSessionRequest maxStreamCount.
                             * @member {number} maxStreamCount
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.maxStreamCount = 0;
    
                            /**
                             * CreateReadSessionRequest preferredMinStreamCount.
                             * @member {number} preferredMinStreamCount
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.preferredMinStreamCount = 0;
    
                            /**
                             * Creates a new CreateReadSessionRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ICreateReadSessionRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.CreateReadSessionRequest} CreateReadSessionRequest instance
                             */
                            CreateReadSessionRequest.create = function create(properties) {
                                return new CreateReadSessionRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateReadSessionRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.CreateReadSessionRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ICreateReadSessionRequest} message CreateReadSessionRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateReadSessionRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.readSession != null && Object.hasOwnProperty.call(message, "readSession"))
                                    $root.google.cloud.bigquery.storage.v1.ReadSession.encode(message.readSession, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.maxStreamCount != null && Object.hasOwnProperty.call(message, "maxStreamCount"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxStreamCount);
                                if (message.preferredMinStreamCount != null && Object.hasOwnProperty.call(message, "preferredMinStreamCount"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.preferredMinStreamCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateReadSessionRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.CreateReadSessionRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ICreateReadSessionRequest} message CreateReadSessionRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateReadSessionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateReadSessionRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.CreateReadSessionRequest} CreateReadSessionRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateReadSessionRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.CreateReadSessionRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.readSession = $root.google.cloud.bigquery.storage.v1.ReadSession.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.maxStreamCount = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.preferredMinStreamCount = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateReadSessionRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.CreateReadSessionRequest} CreateReadSessionRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateReadSessionRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateReadSessionRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateReadSessionRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.readSession != null && message.hasOwnProperty("readSession")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.ReadSession.verify(message.readSession);
                                    if (error)
                                        return "readSession." + error;
                                }
                                if (message.maxStreamCount != null && message.hasOwnProperty("maxStreamCount"))
                                    if (!$util.isInteger(message.maxStreamCount))
                                        return "maxStreamCount: integer expected";
                                if (message.preferredMinStreamCount != null && message.hasOwnProperty("preferredMinStreamCount"))
                                    if (!$util.isInteger(message.preferredMinStreamCount))
                                        return "preferredMinStreamCount: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateReadSessionRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.CreateReadSessionRequest} CreateReadSessionRequest
                             */
                            CreateReadSessionRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.CreateReadSessionRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.CreateReadSessionRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.readSession != null) {
                                    if (typeof object.readSession !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.CreateReadSessionRequest.readSession: object expected");
                                    message.readSession = $root.google.cloud.bigquery.storage.v1.ReadSession.fromObject(object.readSession);
                                }
                                if (object.maxStreamCount != null)
                                    message.maxStreamCount = object.maxStreamCount | 0;
                                if (object.preferredMinStreamCount != null)
                                    message.preferredMinStreamCount = object.preferredMinStreamCount | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateReadSessionRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.CreateReadSessionRequest} message CreateReadSessionRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateReadSessionRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.readSession = null;
                                    object.maxStreamCount = 0;
                                    object.preferredMinStreamCount = 0;
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.readSession != null && message.hasOwnProperty("readSession"))
                                    object.readSession = $root.google.cloud.bigquery.storage.v1.ReadSession.toObject(message.readSession, options);
                                if (message.maxStreamCount != null && message.hasOwnProperty("maxStreamCount"))
                                    object.maxStreamCount = message.maxStreamCount;
                                if (message.preferredMinStreamCount != null && message.hasOwnProperty("preferredMinStreamCount"))
                                    object.preferredMinStreamCount = message.preferredMinStreamCount;
                                return object;
                            };
    
                            /**
                             * Converts this CreateReadSessionRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateReadSessionRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateReadSessionRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.CreateReadSessionRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateReadSessionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.CreateReadSessionRequest";
                            };
    
                            return CreateReadSessionRequest;
                        })();
    
                        v1.ReadRowsRequest = (function() {
    
                            /**
                             * Properties of a ReadRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IReadRowsRequest
                             * @property {string|null} [readStream] ReadRowsRequest readStream
                             * @property {number|Long|null} [offset] ReadRowsRequest offset
                             */
    
                            /**
                             * Constructs a new ReadRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a ReadRowsRequest.
                             * @implements IReadRowsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsRequest=} [properties] Properties to set
                             */
                            function ReadRowsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadRowsRequest readStream.
                             * @member {string} readStream
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @instance
                             */
                            ReadRowsRequest.prototype.readStream = "";
    
                            /**
                             * ReadRowsRequest offset.
                             * @member {number|Long} offset
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @instance
                             */
                            ReadRowsRequest.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new ReadRowsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ReadRowsRequest} ReadRowsRequest instance
                             */
                            ReadRowsRequest.create = function create(properties) {
                                return new ReadRowsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ReadRowsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadRowsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsRequest} message ReadRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.readStream != null && Object.hasOwnProperty.call(message, "readStream"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.readStream);
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.offset);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadRowsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadRowsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsRequest} message ReadRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadRowsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ReadRowsRequest} ReadRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ReadRowsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.readStream = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.offset = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadRowsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ReadRowsRequest} ReadRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadRowsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadRowsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.readStream != null && message.hasOwnProperty("readStream"))
                                    if (!$util.isString(message.readStream))
                                        return "readStream: string expected";
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                        return "offset: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a ReadRowsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ReadRowsRequest} ReadRowsRequest
                             */
                            ReadRowsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ReadRowsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ReadRowsRequest();
                                if (object.readStream != null)
                                    message.readStream = String(object.readStream);
                                if (object.offset != null)
                                    if ($util.Long)
                                        (message.offset = $util.Long.fromValue(object.offset)).unsigned = false;
                                    else if (typeof object.offset === "string")
                                        message.offset = parseInt(object.offset, 10);
                                    else if (typeof object.offset === "number")
                                        message.offset = object.offset;
                                    else if (typeof object.offset === "object")
                                        message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadRowsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ReadRowsRequest} message ReadRowsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadRowsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.readStream = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.offset = options.longs === String ? "0" : 0;
                                }
                                if (message.readStream != null && message.hasOwnProperty("readStream"))
                                    object.readStream = message.readStream;
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (typeof message.offset === "number")
                                        object.offset = options.longs === String ? String(message.offset) : message.offset;
                                    else
                                        object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber() : message.offset;
                                return object;
                            };
    
                            /**
                             * Converts this ReadRowsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadRowsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadRowsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadRowsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ReadRowsRequest";
                            };
    
                            return ReadRowsRequest;
                        })();
    
                        v1.ThrottleState = (function() {
    
                            /**
                             * Properties of a ThrottleState.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IThrottleState
                             * @property {number|null} [throttlePercent] ThrottleState throttlePercent
                             */
    
                            /**
                             * Constructs a new ThrottleState.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a ThrottleState.
                             * @implements IThrottleState
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IThrottleState=} [properties] Properties to set
                             */
                            function ThrottleState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ThrottleState throttlePercent.
                             * @member {number} throttlePercent
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @instance
                             */
                            ThrottleState.prototype.throttlePercent = 0;
    
                            /**
                             * Creates a new ThrottleState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IThrottleState=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ThrottleState} ThrottleState instance
                             */
                            ThrottleState.create = function create(properties) {
                                return new ThrottleState(properties);
                            };
    
                            /**
                             * Encodes the specified ThrottleState message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ThrottleState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IThrottleState} message ThrottleState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ThrottleState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.throttlePercent != null && Object.hasOwnProperty.call(message, "throttlePercent"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.throttlePercent);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ThrottleState message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ThrottleState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IThrottleState} message ThrottleState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ThrottleState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ThrottleState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ThrottleState} ThrottleState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ThrottleState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ThrottleState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.throttlePercent = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ThrottleState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ThrottleState} ThrottleState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ThrottleState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ThrottleState message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ThrottleState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.throttlePercent != null && message.hasOwnProperty("throttlePercent"))
                                    if (!$util.isInteger(message.throttlePercent))
                                        return "throttlePercent: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a ThrottleState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ThrottleState} ThrottleState
                             */
                            ThrottleState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ThrottleState)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ThrottleState();
                                if (object.throttlePercent != null)
                                    message.throttlePercent = object.throttlePercent | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ThrottleState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ThrottleState} message ThrottleState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ThrottleState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.throttlePercent = 0;
                                if (message.throttlePercent != null && message.hasOwnProperty("throttlePercent"))
                                    object.throttlePercent = message.throttlePercent;
                                return object;
                            };
    
                            /**
                             * Converts this ThrottleState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ThrottleState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ThrottleState
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ThrottleState
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ThrottleState.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ThrottleState";
                            };
    
                            return ThrottleState;
                        })();
    
                        v1.StreamStats = (function() {
    
                            /**
                             * Properties of a StreamStats.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IStreamStats
                             * @property {google.cloud.bigquery.storage.v1.StreamStats.IProgress|null} [progress] StreamStats progress
                             */
    
                            /**
                             * Constructs a new StreamStats.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a StreamStats.
                             * @implements IStreamStats
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IStreamStats=} [properties] Properties to set
                             */
                            function StreamStats(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StreamStats progress.
                             * @member {google.cloud.bigquery.storage.v1.StreamStats.IProgress|null|undefined} progress
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @instance
                             */
                            StreamStats.prototype.progress = null;
    
                            /**
                             * Creates a new StreamStats instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IStreamStats=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.StreamStats} StreamStats instance
                             */
                            StreamStats.create = function create(properties) {
                                return new StreamStats(properties);
                            };
    
                            /**
                             * Encodes the specified StreamStats message. Does not implicitly {@link google.cloud.bigquery.storage.v1.StreamStats.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IStreamStats} message StreamStats message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamStats.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.progress != null && Object.hasOwnProperty.call(message, "progress"))
                                    $root.google.cloud.bigquery.storage.v1.StreamStats.Progress.encode(message.progress, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StreamStats message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.StreamStats.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IStreamStats} message StreamStats message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamStats.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StreamStats message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.StreamStats} StreamStats
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamStats.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.StreamStats();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.progress = $root.google.cloud.bigquery.storage.v1.StreamStats.Progress.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StreamStats message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.StreamStats} StreamStats
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamStats.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StreamStats message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StreamStats.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.progress != null && message.hasOwnProperty("progress")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.StreamStats.Progress.verify(message.progress);
                                    if (error)
                                        return "progress." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a StreamStats message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.StreamStats} StreamStats
                             */
                            StreamStats.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.StreamStats)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.StreamStats();
                                if (object.progress != null) {
                                    if (typeof object.progress !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.StreamStats.progress: object expected");
                                    message.progress = $root.google.cloud.bigquery.storage.v1.StreamStats.Progress.fromObject(object.progress);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StreamStats message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.StreamStats} message StreamStats
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StreamStats.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.progress = null;
                                if (message.progress != null && message.hasOwnProperty("progress"))
                                    object.progress = $root.google.cloud.bigquery.storage.v1.StreamStats.Progress.toObject(message.progress, options);
                                return object;
                            };
    
                            /**
                             * Converts this StreamStats to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StreamStats.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StreamStats
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.StreamStats
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StreamStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.StreamStats";
                            };
    
                            StreamStats.Progress = (function() {
    
                                /**
                                 * Properties of a Progress.
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats
                                 * @interface IProgress
                                 * @property {number|null} [atResponseStart] Progress atResponseStart
                                 * @property {number|null} [atResponseEnd] Progress atResponseEnd
                                 */
    
                                /**
                                 * Constructs a new Progress.
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats
                                 * @classdesc Represents a Progress.
                                 * @implements IProgress
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1.StreamStats.IProgress=} [properties] Properties to set
                                 */
                                function Progress(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Progress atResponseStart.
                                 * @member {number} atResponseStart
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @instance
                                 */
                                Progress.prototype.atResponseStart = 0;
    
                                /**
                                 * Progress atResponseEnd.
                                 * @member {number} atResponseEnd
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @instance
                                 */
                                Progress.prototype.atResponseEnd = 0;
    
                                /**
                                 * Creates a new Progress instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.StreamStats.IProgress=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1.StreamStats.Progress} Progress instance
                                 */
                                Progress.create = function create(properties) {
                                    return new Progress(properties);
                                };
    
                                /**
                                 * Encodes the specified Progress message. Does not implicitly {@link google.cloud.bigquery.storage.v1.StreamStats.Progress.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.StreamStats.IProgress} message Progress message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Progress.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.atResponseStart != null && Object.hasOwnProperty.call(message, "atResponseStart"))
                                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.atResponseStart);
                                    if (message.atResponseEnd != null && Object.hasOwnProperty.call(message, "atResponseEnd"))
                                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.atResponseEnd);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Progress message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.StreamStats.Progress.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.StreamStats.IProgress} message Progress message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Progress.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Progress message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1.StreamStats.Progress} Progress
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Progress.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.StreamStats.Progress();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.atResponseStart = reader.double();
                                                break;
                                            }
                                        case 2: {
                                                message.atResponseEnd = reader.double();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Progress message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1.StreamStats.Progress} Progress
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Progress.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Progress message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Progress.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.atResponseStart != null && message.hasOwnProperty("atResponseStart"))
                                        if (typeof message.atResponseStart !== "number")
                                            return "atResponseStart: number expected";
                                    if (message.atResponseEnd != null && message.hasOwnProperty("atResponseEnd"))
                                        if (typeof message.atResponseEnd !== "number")
                                            return "atResponseEnd: number expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Progress message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1.StreamStats.Progress} Progress
                                 */
                                Progress.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1.StreamStats.Progress)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1.StreamStats.Progress();
                                    if (object.atResponseStart != null)
                                        message.atResponseStart = Number(object.atResponseStart);
                                    if (object.atResponseEnd != null)
                                        message.atResponseEnd = Number(object.atResponseEnd);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Progress message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.StreamStats.Progress} message Progress
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Progress.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.atResponseStart = 0;
                                        object.atResponseEnd = 0;
                                    }
                                    if (message.atResponseStart != null && message.hasOwnProperty("atResponseStart"))
                                        object.atResponseStart = options.json && !isFinite(message.atResponseStart) ? String(message.atResponseStart) : message.atResponseStart;
                                    if (message.atResponseEnd != null && message.hasOwnProperty("atResponseEnd"))
                                        object.atResponseEnd = options.json && !isFinite(message.atResponseEnd) ? String(message.atResponseEnd) : message.atResponseEnd;
                                    return object;
                                };
    
                                /**
                                 * Converts this Progress to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Progress.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Progress
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1.StreamStats.Progress
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Progress.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.StreamStats.Progress";
                                };
    
                                return Progress;
                            })();
    
                            return StreamStats;
                        })();
    
                        v1.ReadRowsResponse = (function() {
    
                            /**
                             * Properties of a ReadRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IReadRowsResponse
                             * @property {google.cloud.bigquery.storage.v1.IAvroRows|null} [avroRows] ReadRowsResponse avroRows
                             * @property {google.cloud.bigquery.storage.v1.IArrowRecordBatch|null} [arrowRecordBatch] ReadRowsResponse arrowRecordBatch
                             * @property {number|Long|null} [rowCount] ReadRowsResponse rowCount
                             * @property {google.cloud.bigquery.storage.v1.IStreamStats|null} [stats] ReadRowsResponse stats
                             * @property {google.cloud.bigquery.storage.v1.IThrottleState|null} [throttleState] ReadRowsResponse throttleState
                             * @property {google.cloud.bigquery.storage.v1.IAvroSchema|null} [avroSchema] ReadRowsResponse avroSchema
                             * @property {google.cloud.bigquery.storage.v1.IArrowSchema|null} [arrowSchema] ReadRowsResponse arrowSchema
                             */
    
                            /**
                             * Constructs a new ReadRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a ReadRowsResponse.
                             * @implements IReadRowsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsResponse=} [properties] Properties to set
                             */
                            function ReadRowsResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadRowsResponse avroRows.
                             * @member {google.cloud.bigquery.storage.v1.IAvroRows|null|undefined} avroRows
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.avroRows = null;
    
                            /**
                             * ReadRowsResponse arrowRecordBatch.
                             * @member {google.cloud.bigquery.storage.v1.IArrowRecordBatch|null|undefined} arrowRecordBatch
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.arrowRecordBatch = null;
    
                            /**
                             * ReadRowsResponse rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ReadRowsResponse stats.
                             * @member {google.cloud.bigquery.storage.v1.IStreamStats|null|undefined} stats
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.stats = null;
    
                            /**
                             * ReadRowsResponse throttleState.
                             * @member {google.cloud.bigquery.storage.v1.IThrottleState|null|undefined} throttleState
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.throttleState = null;
    
                            /**
                             * ReadRowsResponse avroSchema.
                             * @member {google.cloud.bigquery.storage.v1.IAvroSchema|null|undefined} avroSchema
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.avroSchema = null;
    
                            /**
                             * ReadRowsResponse arrowSchema.
                             * @member {google.cloud.bigquery.storage.v1.IArrowSchema|null|undefined} arrowSchema
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.arrowSchema = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * ReadRowsResponse rows.
                             * @member {"avroRows"|"arrowRecordBatch"|undefined} rows
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            Object.defineProperty(ReadRowsResponse.prototype, "rows", {
                                get: $util.oneOfGetter($oneOfFields = ["avroRows", "arrowRecordBatch"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * ReadRowsResponse schema.
                             * @member {"avroSchema"|"arrowSchema"|undefined} schema
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             */
                            Object.defineProperty(ReadRowsResponse.prototype, "schema", {
                                get: $util.oneOfGetter($oneOfFields = ["avroSchema", "arrowSchema"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new ReadRowsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ReadRowsResponse} ReadRowsResponse instance
                             */
                            ReadRowsResponse.create = function create(properties) {
                                return new ReadRowsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ReadRowsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadRowsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsResponse} message ReadRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.stats != null && Object.hasOwnProperty.call(message, "stats"))
                                    $root.google.cloud.bigquery.storage.v1.StreamStats.encode(message.stats, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.avroRows != null && Object.hasOwnProperty.call(message, "avroRows"))
                                    $root.google.cloud.bigquery.storage.v1.AvroRows.encode(message.avroRows, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.arrowRecordBatch != null && Object.hasOwnProperty.call(message, "arrowRecordBatch"))
                                    $root.google.cloud.bigquery.storage.v1.ArrowRecordBatch.encode(message.arrowRecordBatch, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.throttleState != null && Object.hasOwnProperty.call(message, "throttleState"))
                                    $root.google.cloud.bigquery.storage.v1.ThrottleState.encode(message.throttleState, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int64(message.rowCount);
                                if (message.avroSchema != null && Object.hasOwnProperty.call(message, "avroSchema"))
                                    $root.google.cloud.bigquery.storage.v1.AvroSchema.encode(message.avroSchema, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.arrowSchema != null && Object.hasOwnProperty.call(message, "arrowSchema"))
                                    $root.google.cloud.bigquery.storage.v1.ArrowSchema.encode(message.arrowSchema, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadRowsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadRowsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadRowsResponse} message ReadRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadRowsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ReadRowsResponse} ReadRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ReadRowsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 3: {
                                            message.avroRows = $root.google.cloud.bigquery.storage.v1.AvroRows.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1.ArrowRecordBatch.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    case 2: {
                                            message.stats = $root.google.cloud.bigquery.storage.v1.StreamStats.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.throttleState = $root.google.cloud.bigquery.storage.v1.ThrottleState.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.avroSchema = $root.google.cloud.bigquery.storage.v1.AvroSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.arrowSchema = $root.google.cloud.bigquery.storage.v1.ArrowSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadRowsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ReadRowsResponse} ReadRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadRowsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadRowsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.avroRows != null && message.hasOwnProperty("avroRows")) {
                                    properties.rows = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1.AvroRows.verify(message.avroRows);
                                        if (error)
                                            return "avroRows." + error;
                                    }
                                }
                                if (message.arrowRecordBatch != null && message.hasOwnProperty("arrowRecordBatch")) {
                                    if (properties.rows === 1)
                                        return "rows: multiple values";
                                    properties.rows = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1.ArrowRecordBatch.verify(message.arrowRecordBatch);
                                        if (error)
                                            return "arrowRecordBatch." + error;
                                    }
                                }
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                if (message.stats != null && message.hasOwnProperty("stats")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.StreamStats.verify(message.stats);
                                    if (error)
                                        return "stats." + error;
                                }
                                if (message.throttleState != null && message.hasOwnProperty("throttleState")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.ThrottleState.verify(message.throttleState);
                                    if (error)
                                        return "throttleState." + error;
                                }
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1.AvroSchema.verify(message.avroSchema);
                                        if (error)
                                            return "avroSchema." + error;
                                    }
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    if (properties.schema === 1)
                                        return "schema: multiple values";
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1.ArrowSchema.verify(message.arrowSchema);
                                        if (error)
                                            return "arrowSchema." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReadRowsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ReadRowsResponse} ReadRowsResponse
                             */
                            ReadRowsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ReadRowsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ReadRowsResponse();
                                if (object.avroRows != null) {
                                    if (typeof object.avroRows !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadRowsResponse.avroRows: object expected");
                                    message.avroRows = $root.google.cloud.bigquery.storage.v1.AvroRows.fromObject(object.avroRows);
                                }
                                if (object.arrowRecordBatch != null) {
                                    if (typeof object.arrowRecordBatch !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadRowsResponse.arrowRecordBatch: object expected");
                                    message.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1.ArrowRecordBatch.fromObject(object.arrowRecordBatch);
                                }
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                if (object.stats != null) {
                                    if (typeof object.stats !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadRowsResponse.stats: object expected");
                                    message.stats = $root.google.cloud.bigquery.storage.v1.StreamStats.fromObject(object.stats);
                                }
                                if (object.throttleState != null) {
                                    if (typeof object.throttleState !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadRowsResponse.throttleState: object expected");
                                    message.throttleState = $root.google.cloud.bigquery.storage.v1.ThrottleState.fromObject(object.throttleState);
                                }
                                if (object.avroSchema != null) {
                                    if (typeof object.avroSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadRowsResponse.avroSchema: object expected");
                                    message.avroSchema = $root.google.cloud.bigquery.storage.v1.AvroSchema.fromObject(object.avroSchema);
                                }
                                if (object.arrowSchema != null) {
                                    if (typeof object.arrowSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadRowsResponse.arrowSchema: object expected");
                                    message.arrowSchema = $root.google.cloud.bigquery.storage.v1.ArrowSchema.fromObject(object.arrowSchema);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadRowsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ReadRowsResponse} message ReadRowsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadRowsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.stats = null;
                                    object.throttleState = null;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                }
                                if (message.stats != null && message.hasOwnProperty("stats"))
                                    object.stats = $root.google.cloud.bigquery.storage.v1.StreamStats.toObject(message.stats, options);
                                if (message.avroRows != null && message.hasOwnProperty("avroRows")) {
                                    object.avroRows = $root.google.cloud.bigquery.storage.v1.AvroRows.toObject(message.avroRows, options);
                                    if (options.oneofs)
                                        object.rows = "avroRows";
                                }
                                if (message.arrowRecordBatch != null && message.hasOwnProperty("arrowRecordBatch")) {
                                    object.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1.ArrowRecordBatch.toObject(message.arrowRecordBatch, options);
                                    if (options.oneofs)
                                        object.rows = "arrowRecordBatch";
                                }
                                if (message.throttleState != null && message.hasOwnProperty("throttleState"))
                                    object.throttleState = $root.google.cloud.bigquery.storage.v1.ThrottleState.toObject(message.throttleState, options);
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    object.avroSchema = $root.google.cloud.bigquery.storage.v1.AvroSchema.toObject(message.avroSchema, options);
                                    if (options.oneofs)
                                        object.schema = "avroSchema";
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    object.arrowSchema = $root.google.cloud.bigquery.storage.v1.ArrowSchema.toObject(message.arrowSchema, options);
                                    if (options.oneofs)
                                        object.schema = "arrowSchema";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ReadRowsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadRowsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadRowsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ReadRowsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadRowsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ReadRowsResponse";
                            };
    
                            return ReadRowsResponse;
                        })();
    
                        v1.SplitReadStreamRequest = (function() {
    
                            /**
                             * Properties of a SplitReadStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface ISplitReadStreamRequest
                             * @property {string|null} [name] SplitReadStreamRequest name
                             * @property {number|null} [fraction] SplitReadStreamRequest fraction
                             */
    
                            /**
                             * Constructs a new SplitReadStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a SplitReadStreamRequest.
                             * @implements ISplitReadStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamRequest=} [properties] Properties to set
                             */
                            function SplitReadStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SplitReadStreamRequest name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @instance
                             */
                            SplitReadStreamRequest.prototype.name = "";
    
                            /**
                             * SplitReadStreamRequest fraction.
                             * @member {number} fraction
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @instance
                             */
                            SplitReadStreamRequest.prototype.fraction = 0;
    
                            /**
                             * Creates a new SplitReadStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.SplitReadStreamRequest} SplitReadStreamRequest instance
                             */
                            SplitReadStreamRequest.create = function create(properties) {
                                return new SplitReadStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.SplitReadStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamRequest} message SplitReadStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.fraction != null && Object.hasOwnProperty.call(message, "fraction"))
                                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.fraction);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.SplitReadStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamRequest} message SplitReadStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SplitReadStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.SplitReadStreamRequest} SplitReadStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.SplitReadStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.fraction = reader.double();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SplitReadStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.SplitReadStreamRequest} SplitReadStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SplitReadStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SplitReadStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.fraction != null && message.hasOwnProperty("fraction"))
                                    if (typeof message.fraction !== "number")
                                        return "fraction: number expected";
                                return null;
                            };
    
                            /**
                             * Creates a SplitReadStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.SplitReadStreamRequest} SplitReadStreamRequest
                             */
                            SplitReadStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.SplitReadStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.SplitReadStreamRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.fraction != null)
                                    message.fraction = Number(object.fraction);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SplitReadStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.SplitReadStreamRequest} message SplitReadStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SplitReadStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.fraction = 0;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.fraction != null && message.hasOwnProperty("fraction"))
                                    object.fraction = options.json && !isFinite(message.fraction) ? String(message.fraction) : message.fraction;
                                return object;
                            };
    
                            /**
                             * Converts this SplitReadStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SplitReadStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SplitReadStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SplitReadStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.SplitReadStreamRequest";
                            };
    
                            return SplitReadStreamRequest;
                        })();
    
                        v1.SplitReadStreamResponse = (function() {
    
                            /**
                             * Properties of a SplitReadStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface ISplitReadStreamResponse
                             * @property {google.cloud.bigquery.storage.v1.IReadStream|null} [primaryStream] SplitReadStreamResponse primaryStream
                             * @property {google.cloud.bigquery.storage.v1.IReadStream|null} [remainderStream] SplitReadStreamResponse remainderStream
                             */
    
                            /**
                             * Constructs a new SplitReadStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a SplitReadStreamResponse.
                             * @implements ISplitReadStreamResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamResponse=} [properties] Properties to set
                             */
                            function SplitReadStreamResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SplitReadStreamResponse primaryStream.
                             * @member {google.cloud.bigquery.storage.v1.IReadStream|null|undefined} primaryStream
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @instance
                             */
                            SplitReadStreamResponse.prototype.primaryStream = null;
    
                            /**
                             * SplitReadStreamResponse remainderStream.
                             * @member {google.cloud.bigquery.storage.v1.IReadStream|null|undefined} remainderStream
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @instance
                             */
                            SplitReadStreamResponse.prototype.remainderStream = null;
    
                            /**
                             * Creates a new SplitReadStreamResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.SplitReadStreamResponse} SplitReadStreamResponse instance
                             */
                            SplitReadStreamResponse.create = function create(properties) {
                                return new SplitReadStreamResponse(properties);
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1.SplitReadStreamResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamResponse} message SplitReadStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.primaryStream != null && Object.hasOwnProperty.call(message, "primaryStream"))
                                    $root.google.cloud.bigquery.storage.v1.ReadStream.encode(message.primaryStream, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.remainderStream != null && Object.hasOwnProperty.call(message, "remainderStream"))
                                    $root.google.cloud.bigquery.storage.v1.ReadStream.encode(message.remainderStream, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.SplitReadStreamResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ISplitReadStreamResponse} message SplitReadStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SplitReadStreamResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.SplitReadStreamResponse} SplitReadStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.SplitReadStreamResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.primaryStream = $root.google.cloud.bigquery.storage.v1.ReadStream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.remainderStream = $root.google.cloud.bigquery.storage.v1.ReadStream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SplitReadStreamResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.SplitReadStreamResponse} SplitReadStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SplitReadStreamResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SplitReadStreamResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.primaryStream != null && message.hasOwnProperty("primaryStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.ReadStream.verify(message.primaryStream);
                                    if (error)
                                        return "primaryStream." + error;
                                }
                                if (message.remainderStream != null && message.hasOwnProperty("remainderStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.ReadStream.verify(message.remainderStream);
                                    if (error)
                                        return "remainderStream." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SplitReadStreamResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.SplitReadStreamResponse} SplitReadStreamResponse
                             */
                            SplitReadStreamResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.SplitReadStreamResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.SplitReadStreamResponse();
                                if (object.primaryStream != null) {
                                    if (typeof object.primaryStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.SplitReadStreamResponse.primaryStream: object expected");
                                    message.primaryStream = $root.google.cloud.bigquery.storage.v1.ReadStream.fromObject(object.primaryStream);
                                }
                                if (object.remainderStream != null) {
                                    if (typeof object.remainderStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.SplitReadStreamResponse.remainderStream: object expected");
                                    message.remainderStream = $root.google.cloud.bigquery.storage.v1.ReadStream.fromObject(object.remainderStream);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SplitReadStreamResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.SplitReadStreamResponse} message SplitReadStreamResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SplitReadStreamResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.primaryStream = null;
                                    object.remainderStream = null;
                                }
                                if (message.primaryStream != null && message.hasOwnProperty("primaryStream"))
                                    object.primaryStream = $root.google.cloud.bigquery.storage.v1.ReadStream.toObject(message.primaryStream, options);
                                if (message.remainderStream != null && message.hasOwnProperty("remainderStream"))
                                    object.remainderStream = $root.google.cloud.bigquery.storage.v1.ReadStream.toObject(message.remainderStream, options);
                                return object;
                            };
    
                            /**
                             * Converts this SplitReadStreamResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SplitReadStreamResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SplitReadStreamResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.SplitReadStreamResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SplitReadStreamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.SplitReadStreamResponse";
                            };
    
                            return SplitReadStreamResponse;
                        })();
    
                        v1.CreateWriteStreamRequest = (function() {
    
                            /**
                             * Properties of a CreateWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface ICreateWriteStreamRequest
                             * @property {string|null} [parent] CreateWriteStreamRequest parent
                             * @property {google.cloud.bigquery.storage.v1.IWriteStream|null} [writeStream] CreateWriteStreamRequest writeStream
                             */
    
                            /**
                             * Constructs a new CreateWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a CreateWriteStreamRequest.
                             * @implements ICreateWriteStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.ICreateWriteStreamRequest=} [properties] Properties to set
                             */
                            function CreateWriteStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateWriteStreamRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @instance
                             */
                            CreateWriteStreamRequest.prototype.parent = "";
    
                            /**
                             * CreateWriteStreamRequest writeStream.
                             * @member {google.cloud.bigquery.storage.v1.IWriteStream|null|undefined} writeStream
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @instance
                             */
                            CreateWriteStreamRequest.prototype.writeStream = null;
    
                            /**
                             * Creates a new CreateWriteStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ICreateWriteStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.CreateWriteStreamRequest} CreateWriteStreamRequest instance
                             */
                            CreateWriteStreamRequest.create = function create(properties) {
                                return new CreateWriteStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateWriteStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.CreateWriteStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ICreateWriteStreamRequest} message CreateWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateWriteStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.writeStream != null && Object.hasOwnProperty.call(message, "writeStream"))
                                    $root.google.cloud.bigquery.storage.v1.WriteStream.encode(message.writeStream, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateWriteStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.CreateWriteStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ICreateWriteStreamRequest} message CreateWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateWriteStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateWriteStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.CreateWriteStreamRequest} CreateWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateWriteStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.CreateWriteStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.writeStream = $root.google.cloud.bigquery.storage.v1.WriteStream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateWriteStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.CreateWriteStreamRequest} CreateWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateWriteStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateWriteStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateWriteStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.writeStream != null && message.hasOwnProperty("writeStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.WriteStream.verify(message.writeStream);
                                    if (error)
                                        return "writeStream." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CreateWriteStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.CreateWriteStreamRequest} CreateWriteStreamRequest
                             */
                            CreateWriteStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.CreateWriteStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.CreateWriteStreamRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.writeStream != null) {
                                    if (typeof object.writeStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.CreateWriteStreamRequest.writeStream: object expected");
                                    message.writeStream = $root.google.cloud.bigquery.storage.v1.WriteStream.fromObject(object.writeStream);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateWriteStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.CreateWriteStreamRequest} message CreateWriteStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateWriteStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.writeStream = null;
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    object.writeStream = $root.google.cloud.bigquery.storage.v1.WriteStream.toObject(message.writeStream, options);
                                return object;
                            };
    
                            /**
                             * Converts this CreateWriteStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateWriteStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateWriteStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.CreateWriteStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateWriteStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.CreateWriteStreamRequest";
                            };
    
                            return CreateWriteStreamRequest;
                        })();
    
                        v1.AppendRowsRequest = (function() {
    
                            /**
                             * Properties of an AppendRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IAppendRowsRequest
                             * @property {string|null} [writeStream] AppendRowsRequest writeStream
                             * @property {google.protobuf.IInt64Value|null} [offset] AppendRowsRequest offset
                             * @property {google.cloud.bigquery.storage.v1.AppendRowsRequest.IProtoData|null} [protoRows] AppendRowsRequest protoRows
                             * @property {string|null} [traceId] AppendRowsRequest traceId
                             * @property {Object.<string,google.cloud.bigquery.storage.v1.AppendRowsRequest.MissingValueInterpretation>|null} [missingValueInterpretations] AppendRowsRequest missingValueInterpretations
                             */
    
                            /**
                             * Constructs a new AppendRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents an AppendRowsRequest.
                             * @implements IAppendRowsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsRequest=} [properties] Properties to set
                             */
                            function AppendRowsRequest(properties) {
                                this.missingValueInterpretations = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AppendRowsRequest writeStream.
                             * @member {string} writeStream
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.writeStream = "";
    
                            /**
                             * AppendRowsRequest offset.
                             * @member {google.protobuf.IInt64Value|null|undefined} offset
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.offset = null;
    
                            /**
                             * AppendRowsRequest protoRows.
                             * @member {google.cloud.bigquery.storage.v1.AppendRowsRequest.IProtoData|null|undefined} protoRows
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.protoRows = null;
    
                            /**
                             * AppendRowsRequest traceId.
                             * @member {string} traceId
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.traceId = "";
    
                            /**
                             * AppendRowsRequest missingValueInterpretations.
                             * @member {Object.<string,google.cloud.bigquery.storage.v1.AppendRowsRequest.MissingValueInterpretation>} missingValueInterpretations
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.missingValueInterpretations = $util.emptyObject;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * AppendRowsRequest rows.
                             * @member {"protoRows"|undefined} rows
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @instance
                             */
                            Object.defineProperty(AppendRowsRequest.prototype, "rows", {
                                get: $util.oneOfGetter($oneOfFields = ["protoRows"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new AppendRowsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.AppendRowsRequest} AppendRowsRequest instance
                             */
                            AppendRowsRequest.create = function create(properties) {
                                return new AppendRowsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified AppendRowsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.AppendRowsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsRequest} message AppendRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AppendRowsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.writeStream != null && Object.hasOwnProperty.call(message, "writeStream"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.writeStream);
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    $root.google.protobuf.Int64Value.encode(message.offset, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.protoRows != null && Object.hasOwnProperty.call(message, "protoRows"))
                                    $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.encode(message.protoRows, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.traceId != null && Object.hasOwnProperty.call(message, "traceId"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.traceId);
                                if (message.missingValueInterpretations != null && Object.hasOwnProperty.call(message, "missingValueInterpretations"))
                                    for (var keys = Object.keys(message.missingValueInterpretations), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 0 =*/16).int32(message.missingValueInterpretations[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AppendRowsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.AppendRowsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsRequest} message AppendRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AppendRowsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AppendRowsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.AppendRowsRequest} AppendRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AppendRowsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.AppendRowsRequest(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.writeStream = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.offset = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.protoRows = $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.traceId = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            if (message.missingValueInterpretations === $util.emptyObject)
                                                message.missingValueInterpretations = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = 0;
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.missingValueInterpretations[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AppendRowsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.AppendRowsRequest} AppendRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AppendRowsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AppendRowsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AppendRowsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    if (!$util.isString(message.writeStream))
                                        return "writeStream: string expected";
                                if (message.offset != null && message.hasOwnProperty("offset")) {
                                    var error = $root.google.protobuf.Int64Value.verify(message.offset);
                                    if (error)
                                        return "offset." + error;
                                }
                                if (message.protoRows != null && message.hasOwnProperty("protoRows")) {
                                    properties.rows = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.verify(message.protoRows);
                                        if (error)
                                            return "protoRows." + error;
                                    }
                                }
                                if (message.traceId != null && message.hasOwnProperty("traceId"))
                                    if (!$util.isString(message.traceId))
                                        return "traceId: string expected";
                                if (message.missingValueInterpretations != null && message.hasOwnProperty("missingValueInterpretations")) {
                                    if (!$util.isObject(message.missingValueInterpretations))
                                        return "missingValueInterpretations: object expected";
                                    var key = Object.keys(message.missingValueInterpretations);
                                    for (var i = 0; i < key.length; ++i)
                                        switch (message.missingValueInterpretations[key[i]]) {
                                        default:
                                            return "missingValueInterpretations: enum value{k:string} expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                            break;
                                        }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an AppendRowsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.AppendRowsRequest} AppendRowsRequest
                             */
                            AppendRowsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.AppendRowsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.AppendRowsRequest();
                                if (object.writeStream != null)
                                    message.writeStream = String(object.writeStream);
                                if (object.offset != null) {
                                    if (typeof object.offset !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsRequest.offset: object expected");
                                    message.offset = $root.google.protobuf.Int64Value.fromObject(object.offset);
                                }
                                if (object.protoRows != null) {
                                    if (typeof object.protoRows !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsRequest.protoRows: object expected");
                                    message.protoRows = $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.fromObject(object.protoRows);
                                }
                                if (object.traceId != null)
                                    message.traceId = String(object.traceId);
                                if (object.missingValueInterpretations) {
                                    if (typeof object.missingValueInterpretations !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsRequest.missingValueInterpretations: object expected");
                                    message.missingValueInterpretations = {};
                                    for (var keys = Object.keys(object.missingValueInterpretations), i = 0; i < keys.length; ++i)
                                        switch (object.missingValueInterpretations[keys[i]]) {
                                        default:
                                            if (typeof object.missingValueInterpretations[keys[i]] === "number") {
                                                message.missingValueInterpretations[keys[i]] = object.missingValueInterpretations[keys[i]];
                                                break;
                                            }
                                            break;
                                        case "MISSING_VALUE_INTERPRETATION_UNSPECIFIED":
                                        case 0:
                                            message.missingValueInterpretations[keys[i]] = 0;
                                            break;
                                        case "NULL_VALUE":
                                        case 1:
                                            message.missingValueInterpretations[keys[i]] = 1;
                                            break;
                                        case "DEFAULT_VALUE":
                                        case 2:
                                            message.missingValueInterpretations[keys[i]] = 2;
                                            break;
                                        }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AppendRowsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.AppendRowsRequest} message AppendRowsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AppendRowsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.objects || options.defaults)
                                    object.missingValueInterpretations = {};
                                if (options.defaults) {
                                    object.writeStream = "";
                                    object.offset = null;
                                    object.traceId = "";
                                }
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    object.writeStream = message.writeStream;
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    object.offset = $root.google.protobuf.Int64Value.toObject(message.offset, options);
                                if (message.protoRows != null && message.hasOwnProperty("protoRows")) {
                                    object.protoRows = $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.toObject(message.protoRows, options);
                                    if (options.oneofs)
                                        object.rows = "protoRows";
                                }
                                if (message.traceId != null && message.hasOwnProperty("traceId"))
                                    object.traceId = message.traceId;
                                var keys2;
                                if (message.missingValueInterpretations && (keys2 = Object.keys(message.missingValueInterpretations)).length) {
                                    object.missingValueInterpretations = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.missingValueInterpretations[keys2[j]] = options.enums === String ? $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.MissingValueInterpretation[message.missingValueInterpretations[keys2[j]]] === undefined ? message.missingValueInterpretations[keys2[j]] : $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.MissingValueInterpretation[message.missingValueInterpretations[keys2[j]]] : message.missingValueInterpretations[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this AppendRowsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AppendRowsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AppendRowsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AppendRowsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.AppendRowsRequest";
                            };
    
                            AppendRowsRequest.ProtoData = (function() {
    
                                /**
                                 * Properties of a ProtoData.
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                                 * @interface IProtoData
                                 * @property {google.cloud.bigquery.storage.v1.IProtoSchema|null} [writerSchema] ProtoData writerSchema
                                 * @property {google.cloud.bigquery.storage.v1.IProtoRows|null} [rows] ProtoData rows
                                 */
    
                                /**
                                 * Constructs a new ProtoData.
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest
                                 * @classdesc Represents a ProtoData.
                                 * @implements IProtoData
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsRequest.IProtoData=} [properties] Properties to set
                                 */
                                function ProtoData(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ProtoData writerSchema.
                                 * @member {google.cloud.bigquery.storage.v1.IProtoSchema|null|undefined} writerSchema
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @instance
                                 */
                                ProtoData.prototype.writerSchema = null;
    
                                /**
                                 * ProtoData rows.
                                 * @member {google.cloud.bigquery.storage.v1.IProtoRows|null|undefined} rows
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @instance
                                 */
                                ProtoData.prototype.rows = null;
    
                                /**
                                 * Creates a new ProtoData instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsRequest.IProtoData=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData} ProtoData instance
                                 */
                                ProtoData.create = function create(properties) {
                                    return new ProtoData(properties);
                                };
    
                                /**
                                 * Encodes the specified ProtoData message. Does not implicitly {@link google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsRequest.IProtoData} message ProtoData message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ProtoData.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.writerSchema != null && Object.hasOwnProperty.call(message, "writerSchema"))
                                        $root.google.cloud.bigquery.storage.v1.ProtoSchema.encode(message.writerSchema, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.rows != null && Object.hasOwnProperty.call(message, "rows"))
                                        $root.google.cloud.bigquery.storage.v1.ProtoRows.encode(message.rows, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ProtoData message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsRequest.IProtoData} message ProtoData message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ProtoData.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a ProtoData message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData} ProtoData
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ProtoData.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.writerSchema = $root.google.cloud.bigquery.storage.v1.ProtoSchema.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.rows = $root.google.cloud.bigquery.storage.v1.ProtoRows.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a ProtoData message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData} ProtoData
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ProtoData.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a ProtoData message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ProtoData.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.writerSchema != null && message.hasOwnProperty("writerSchema")) {
                                        var error = $root.google.cloud.bigquery.storage.v1.ProtoSchema.verify(message.writerSchema);
                                        if (error)
                                            return "writerSchema." + error;
                                    }
                                    if (message.rows != null && message.hasOwnProperty("rows")) {
                                        var error = $root.google.cloud.bigquery.storage.v1.ProtoRows.verify(message.rows);
                                        if (error)
                                            return "rows." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a ProtoData message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData} ProtoData
                                 */
                                ProtoData.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData();
                                    if (object.writerSchema != null) {
                                        if (typeof object.writerSchema !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.writerSchema: object expected");
                                        message.writerSchema = $root.google.cloud.bigquery.storage.v1.ProtoSchema.fromObject(object.writerSchema);
                                    }
                                    if (object.rows != null) {
                                        if (typeof object.rows !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData.rows: object expected");
                                        message.rows = $root.google.cloud.bigquery.storage.v1.ProtoRows.fromObject(object.rows);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a ProtoData message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData} message ProtoData
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ProtoData.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.writerSchema = null;
                                        object.rows = null;
                                    }
                                    if (message.writerSchema != null && message.hasOwnProperty("writerSchema"))
                                        object.writerSchema = $root.google.cloud.bigquery.storage.v1.ProtoSchema.toObject(message.writerSchema, options);
                                    if (message.rows != null && message.hasOwnProperty("rows"))
                                        object.rows = $root.google.cloud.bigquery.storage.v1.ProtoRows.toObject(message.rows, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this ProtoData to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ProtoData.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ProtoData
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ProtoData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.AppendRowsRequest.ProtoData";
                                };
    
                                return ProtoData;
                            })();
    
                            /**
                             * MissingValueInterpretation enum.
                             * @name google.cloud.bigquery.storage.v1.AppendRowsRequest.MissingValueInterpretation
                             * @enum {number}
                             * @property {number} MISSING_VALUE_INTERPRETATION_UNSPECIFIED=0 MISSING_VALUE_INTERPRETATION_UNSPECIFIED value
                             * @property {number} NULL_VALUE=1 NULL_VALUE value
                             * @property {number} DEFAULT_VALUE=2 DEFAULT_VALUE value
                             */
                            AppendRowsRequest.MissingValueInterpretation = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "MISSING_VALUE_INTERPRETATION_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "NULL_VALUE"] = 1;
                                values[valuesById[2] = "DEFAULT_VALUE"] = 2;
                                return values;
                            })();
    
                            return AppendRowsRequest;
                        })();
    
                        v1.AppendRowsResponse = (function() {
    
                            /**
                             * Properties of an AppendRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IAppendRowsResponse
                             * @property {google.cloud.bigquery.storage.v1.AppendRowsResponse.IAppendResult|null} [appendResult] AppendRowsResponse appendResult
                             * @property {google.rpc.IStatus|null} [error] AppendRowsResponse error
                             * @property {google.cloud.bigquery.storage.v1.ITableSchema|null} [updatedSchema] AppendRowsResponse updatedSchema
                             * @property {Array.<google.cloud.bigquery.storage.v1.IRowError>|null} [rowErrors] AppendRowsResponse rowErrors
                             * @property {string|null} [writeStream] AppendRowsResponse writeStream
                             */
    
                            /**
                             * Constructs a new AppendRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents an AppendRowsResponse.
                             * @implements IAppendRowsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsResponse=} [properties] Properties to set
                             */
                            function AppendRowsResponse(properties) {
                                this.rowErrors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AppendRowsResponse appendResult.
                             * @member {google.cloud.bigquery.storage.v1.AppendRowsResponse.IAppendResult|null|undefined} appendResult
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @instance
                             */
                            AppendRowsResponse.prototype.appendResult = null;
    
                            /**
                             * AppendRowsResponse error.
                             * @member {google.rpc.IStatus|null|undefined} error
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @instance
                             */
                            AppendRowsResponse.prototype.error = null;
    
                            /**
                             * AppendRowsResponse updatedSchema.
                             * @member {google.cloud.bigquery.storage.v1.ITableSchema|null|undefined} updatedSchema
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @instance
                             */
                            AppendRowsResponse.prototype.updatedSchema = null;
    
                            /**
                             * AppendRowsResponse rowErrors.
                             * @member {Array.<google.cloud.bigquery.storage.v1.IRowError>} rowErrors
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @instance
                             */
                            AppendRowsResponse.prototype.rowErrors = $util.emptyArray;
    
                            /**
                             * AppendRowsResponse writeStream.
                             * @member {string} writeStream
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @instance
                             */
                            AppendRowsResponse.prototype.writeStream = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * AppendRowsResponse response.
                             * @member {"appendResult"|"error"|undefined} response
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @instance
                             */
                            Object.defineProperty(AppendRowsResponse.prototype, "response", {
                                get: $util.oneOfGetter($oneOfFields = ["appendResult", "error"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new AppendRowsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.AppendRowsResponse} AppendRowsResponse instance
                             */
                            AppendRowsResponse.create = function create(properties) {
                                return new AppendRowsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified AppendRowsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1.AppendRowsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsResponse} message AppendRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AppendRowsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.appendResult != null && Object.hasOwnProperty.call(message, "appendResult"))
                                    $root.google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult.encode(message.appendResult, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                    $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.updatedSchema != null && Object.hasOwnProperty.call(message, "updatedSchema"))
                                    $root.google.cloud.bigquery.storage.v1.TableSchema.encode(message.updatedSchema, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.rowErrors != null && message.rowErrors.length)
                                    for (var i = 0; i < message.rowErrors.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1.RowError.encode(message.rowErrors[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.writeStream != null && Object.hasOwnProperty.call(message, "writeStream"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.writeStream);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AppendRowsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.AppendRowsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IAppendRowsResponse} message AppendRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AppendRowsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AppendRowsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.AppendRowsResponse} AppendRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AppendRowsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.AppendRowsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.appendResult = $root.google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.updatedSchema = $root.google.cloud.bigquery.storage.v1.TableSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.rowErrors && message.rowErrors.length))
                                                message.rowErrors = [];
                                            message.rowErrors.push($root.google.cloud.bigquery.storage.v1.RowError.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 5: {
                                            message.writeStream = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AppendRowsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.AppendRowsResponse} AppendRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AppendRowsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AppendRowsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AppendRowsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.appendResult != null && message.hasOwnProperty("appendResult")) {
                                    properties.response = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult.verify(message.appendResult);
                                        if (error)
                                            return "appendResult." + error;
                                    }
                                }
                                if (message.error != null && message.hasOwnProperty("error")) {
                                    if (properties.response === 1)
                                        return "response: multiple values";
                                    properties.response = 1;
                                    {
                                        var error = $root.google.rpc.Status.verify(message.error);
                                        if (error)
                                            return "error." + error;
                                    }
                                }
                                if (message.updatedSchema != null && message.hasOwnProperty("updatedSchema")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.TableSchema.verify(message.updatedSchema);
                                    if (error)
                                        return "updatedSchema." + error;
                                }
                                if (message.rowErrors != null && message.hasOwnProperty("rowErrors")) {
                                    if (!Array.isArray(message.rowErrors))
                                        return "rowErrors: array expected";
                                    for (var i = 0; i < message.rowErrors.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1.RowError.verify(message.rowErrors[i]);
                                        if (error)
                                            return "rowErrors." + error;
                                    }
                                }
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    if (!$util.isString(message.writeStream))
                                        return "writeStream: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an AppendRowsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.AppendRowsResponse} AppendRowsResponse
                             */
                            AppendRowsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.AppendRowsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.AppendRowsResponse();
                                if (object.appendResult != null) {
                                    if (typeof object.appendResult !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsResponse.appendResult: object expected");
                                    message.appendResult = $root.google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult.fromObject(object.appendResult);
                                }
                                if (object.error != null) {
                                    if (typeof object.error !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsResponse.error: object expected");
                                    message.error = $root.google.rpc.Status.fromObject(object.error);
                                }
                                if (object.updatedSchema != null) {
                                    if (typeof object.updatedSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsResponse.updatedSchema: object expected");
                                    message.updatedSchema = $root.google.cloud.bigquery.storage.v1.TableSchema.fromObject(object.updatedSchema);
                                }
                                if (object.rowErrors) {
                                    if (!Array.isArray(object.rowErrors))
                                        throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsResponse.rowErrors: array expected");
                                    message.rowErrors = [];
                                    for (var i = 0; i < object.rowErrors.length; ++i) {
                                        if (typeof object.rowErrors[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsResponse.rowErrors: object expected");
                                        message.rowErrors[i] = $root.google.cloud.bigquery.storage.v1.RowError.fromObject(object.rowErrors[i]);
                                    }
                                }
                                if (object.writeStream != null)
                                    message.writeStream = String(object.writeStream);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AppendRowsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.AppendRowsResponse} message AppendRowsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AppendRowsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.rowErrors = [];
                                if (options.defaults) {
                                    object.updatedSchema = null;
                                    object.writeStream = "";
                                }
                                if (message.appendResult != null && message.hasOwnProperty("appendResult")) {
                                    object.appendResult = $root.google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult.toObject(message.appendResult, options);
                                    if (options.oneofs)
                                        object.response = "appendResult";
                                }
                                if (message.error != null && message.hasOwnProperty("error")) {
                                    object.error = $root.google.rpc.Status.toObject(message.error, options);
                                    if (options.oneofs)
                                        object.response = "error";
                                }
                                if (message.updatedSchema != null && message.hasOwnProperty("updatedSchema"))
                                    object.updatedSchema = $root.google.cloud.bigquery.storage.v1.TableSchema.toObject(message.updatedSchema, options);
                                if (message.rowErrors && message.rowErrors.length) {
                                    object.rowErrors = [];
                                    for (var j = 0; j < message.rowErrors.length; ++j)
                                        object.rowErrors[j] = $root.google.cloud.bigquery.storage.v1.RowError.toObject(message.rowErrors[j], options);
                                }
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    object.writeStream = message.writeStream;
                                return object;
                            };
    
                            /**
                             * Converts this AppendRowsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AppendRowsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AppendRowsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AppendRowsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.AppendRowsResponse";
                            };
    
                            AppendRowsResponse.AppendResult = (function() {
    
                                /**
                                 * Properties of an AppendResult.
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                                 * @interface IAppendResult
                                 * @property {google.protobuf.IInt64Value|null} [offset] AppendResult offset
                                 */
    
                                /**
                                 * Constructs a new AppendResult.
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse
                                 * @classdesc Represents an AppendResult.
                                 * @implements IAppendResult
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsResponse.IAppendResult=} [properties] Properties to set
                                 */
                                function AppendResult(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * AppendResult offset.
                                 * @member {google.protobuf.IInt64Value|null|undefined} offset
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @instance
                                 */
                                AppendResult.prototype.offset = null;
    
                                /**
                                 * Creates a new AppendResult instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsResponse.IAppendResult=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult} AppendResult instance
                                 */
                                AppendResult.create = function create(properties) {
                                    return new AppendResult(properties);
                                };
    
                                /**
                                 * Encodes the specified AppendResult message. Does not implicitly {@link google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsResponse.IAppendResult} message AppendResult message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                AppendResult.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                        $root.google.protobuf.Int64Value.encode(message.offset, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified AppendResult message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsResponse.IAppendResult} message AppendResult message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                AppendResult.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an AppendResult message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult} AppendResult
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                AppendResult.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.offset = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an AppendResult message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult} AppendResult
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                AppendResult.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an AppendResult message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                AppendResult.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.offset != null && message.hasOwnProperty("offset")) {
                                        var error = $root.google.protobuf.Int64Value.verify(message.offset);
                                        if (error)
                                            return "offset." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates an AppendResult message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult} AppendResult
                                 */
                                AppendResult.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult();
                                    if (object.offset != null) {
                                        if (typeof object.offset !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult.offset: object expected");
                                        message.offset = $root.google.protobuf.Int64Value.fromObject(object.offset);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an AppendResult message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult} message AppendResult
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                AppendResult.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.offset = null;
                                    if (message.offset != null && message.hasOwnProperty("offset"))
                                        object.offset = $root.google.protobuf.Int64Value.toObject(message.offset, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this AppendResult to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                AppendResult.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for AppendResult
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                AppendResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.AppendRowsResponse.AppendResult";
                                };
    
                                return AppendResult;
                            })();
    
                            return AppendRowsResponse;
                        })();
    
                        v1.GetWriteStreamRequest = (function() {
    
                            /**
                             * Properties of a GetWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IGetWriteStreamRequest
                             * @property {string|null} [name] GetWriteStreamRequest name
                             * @property {google.cloud.bigquery.storage.v1.WriteStreamView|null} [view] GetWriteStreamRequest view
                             */
    
                            /**
                             * Constructs a new GetWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a GetWriteStreamRequest.
                             * @implements IGetWriteStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IGetWriteStreamRequest=} [properties] Properties to set
                             */
                            function GetWriteStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetWriteStreamRequest name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @instance
                             */
                            GetWriteStreamRequest.prototype.name = "";
    
                            /**
                             * GetWriteStreamRequest view.
                             * @member {google.cloud.bigquery.storage.v1.WriteStreamView} view
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @instance
                             */
                            GetWriteStreamRequest.prototype.view = 0;
    
                            /**
                             * Creates a new GetWriteStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IGetWriteStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.GetWriteStreamRequest} GetWriteStreamRequest instance
                             */
                            GetWriteStreamRequest.create = function create(properties) {
                                return new GetWriteStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetWriteStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.GetWriteStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IGetWriteStreamRequest} message GetWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetWriteStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.view);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetWriteStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.GetWriteStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IGetWriteStreamRequest} message GetWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetWriteStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetWriteStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.GetWriteStreamRequest} GetWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetWriteStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.GetWriteStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.view = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetWriteStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.GetWriteStreamRequest} GetWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetWriteStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetWriteStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetWriteStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.view != null && message.hasOwnProperty("view"))
                                    switch (message.view) {
                                    default:
                                        return "view: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a GetWriteStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.GetWriteStreamRequest} GetWriteStreamRequest
                             */
                            GetWriteStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.GetWriteStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.GetWriteStreamRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.view) {
                                default:
                                    if (typeof object.view === "number") {
                                        message.view = object.view;
                                        break;
                                    }
                                    break;
                                case "WRITE_STREAM_VIEW_UNSPECIFIED":
                                case 0:
                                    message.view = 0;
                                    break;
                                case "BASIC":
                                case 1:
                                    message.view = 1;
                                    break;
                                case "FULL":
                                case 2:
                                    message.view = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetWriteStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.GetWriteStreamRequest} message GetWriteStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetWriteStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.view = options.enums === String ? "WRITE_STREAM_VIEW_UNSPECIFIED" : 0;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.view != null && message.hasOwnProperty("view"))
                                    object.view = options.enums === String ? $root.google.cloud.bigquery.storage.v1.WriteStreamView[message.view] === undefined ? message.view : $root.google.cloud.bigquery.storage.v1.WriteStreamView[message.view] : message.view;
                                return object;
                            };
    
                            /**
                             * Converts this GetWriteStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetWriteStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetWriteStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.GetWriteStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetWriteStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.GetWriteStreamRequest";
                            };
    
                            return GetWriteStreamRequest;
                        })();
    
                        v1.BatchCommitWriteStreamsRequest = (function() {
    
                            /**
                             * Properties of a BatchCommitWriteStreamsRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IBatchCommitWriteStreamsRequest
                             * @property {string|null} [parent] BatchCommitWriteStreamsRequest parent
                             * @property {Array.<string>|null} [writeStreams] BatchCommitWriteStreamsRequest writeStreams
                             */
    
                            /**
                             * Constructs a new BatchCommitWriteStreamsRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a BatchCommitWriteStreamsRequest.
                             * @implements IBatchCommitWriteStreamsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsRequest=} [properties] Properties to set
                             */
                            function BatchCommitWriteStreamsRequest(properties) {
                                this.writeStreams = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BatchCommitWriteStreamsRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @instance
                             */
                            BatchCommitWriteStreamsRequest.prototype.parent = "";
    
                            /**
                             * BatchCommitWriteStreamsRequest writeStreams.
                             * @member {Array.<string>} writeStreams
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @instance
                             */
                            BatchCommitWriteStreamsRequest.prototype.writeStreams = $util.emptyArray;
    
                            /**
                             * Creates a new BatchCommitWriteStreamsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest} BatchCommitWriteStreamsRequest instance
                             */
                            BatchCommitWriteStreamsRequest.create = function create(properties) {
                                return new BatchCommitWriteStreamsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified BatchCommitWriteStreamsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsRequest} message BatchCommitWriteStreamsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCommitWriteStreamsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.writeStreams != null && message.writeStreams.length)
                                    for (var i = 0; i < message.writeStreams.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.writeStreams[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BatchCommitWriteStreamsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsRequest} message BatchCommitWriteStreamsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCommitWriteStreamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BatchCommitWriteStreamsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest} BatchCommitWriteStreamsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCommitWriteStreamsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.writeStreams && message.writeStreams.length))
                                                message.writeStreams = [];
                                            message.writeStreams.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BatchCommitWriteStreamsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest} BatchCommitWriteStreamsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCommitWriteStreamsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BatchCommitWriteStreamsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BatchCommitWriteStreamsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.writeStreams != null && message.hasOwnProperty("writeStreams")) {
                                    if (!Array.isArray(message.writeStreams))
                                        return "writeStreams: array expected";
                                    for (var i = 0; i < message.writeStreams.length; ++i)
                                        if (!$util.isString(message.writeStreams[i]))
                                            return "writeStreams: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BatchCommitWriteStreamsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest} BatchCommitWriteStreamsRequest
                             */
                            BatchCommitWriteStreamsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.writeStreams) {
                                    if (!Array.isArray(object.writeStreams))
                                        throw TypeError(".google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest.writeStreams: array expected");
                                    message.writeStreams = [];
                                    for (var i = 0; i < object.writeStreams.length; ++i)
                                        message.writeStreams[i] = String(object.writeStreams[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BatchCommitWriteStreamsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest} message BatchCommitWriteStreamsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BatchCommitWriteStreamsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.writeStreams = [];
                                if (options.defaults)
                                    object.parent = "";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.writeStreams && message.writeStreams.length) {
                                    object.writeStreams = [];
                                    for (var j = 0; j < message.writeStreams.length; ++j)
                                        object.writeStreams[j] = message.writeStreams[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this BatchCommitWriteStreamsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BatchCommitWriteStreamsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BatchCommitWriteStreamsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BatchCommitWriteStreamsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsRequest";
                            };
    
                            return BatchCommitWriteStreamsRequest;
                        })();
    
                        v1.BatchCommitWriteStreamsResponse = (function() {
    
                            /**
                             * Properties of a BatchCommitWriteStreamsResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IBatchCommitWriteStreamsResponse
                             * @property {google.protobuf.ITimestamp|null} [commitTime] BatchCommitWriteStreamsResponse commitTime
                             * @property {Array.<google.cloud.bigquery.storage.v1.IStorageError>|null} [streamErrors] BatchCommitWriteStreamsResponse streamErrors
                             */
    
                            /**
                             * Constructs a new BatchCommitWriteStreamsResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a BatchCommitWriteStreamsResponse.
                             * @implements IBatchCommitWriteStreamsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsResponse=} [properties] Properties to set
                             */
                            function BatchCommitWriteStreamsResponse(properties) {
                                this.streamErrors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BatchCommitWriteStreamsResponse commitTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} commitTime
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @instance
                             */
                            BatchCommitWriteStreamsResponse.prototype.commitTime = null;
    
                            /**
                             * BatchCommitWriteStreamsResponse streamErrors.
                             * @member {Array.<google.cloud.bigquery.storage.v1.IStorageError>} streamErrors
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @instance
                             */
                            BatchCommitWriteStreamsResponse.prototype.streamErrors = $util.emptyArray;
    
                            /**
                             * Creates a new BatchCommitWriteStreamsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse} BatchCommitWriteStreamsResponse instance
                             */
                            BatchCommitWriteStreamsResponse.create = function create(properties) {
                                return new BatchCommitWriteStreamsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified BatchCommitWriteStreamsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsResponse} message BatchCommitWriteStreamsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCommitWriteStreamsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.commitTime != null && Object.hasOwnProperty.call(message, "commitTime"))
                                    $root.google.protobuf.Timestamp.encode(message.commitTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.streamErrors != null && message.streamErrors.length)
                                    for (var i = 0; i < message.streamErrors.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1.StorageError.encode(message.streamErrors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BatchCommitWriteStreamsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IBatchCommitWriteStreamsResponse} message BatchCommitWriteStreamsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCommitWriteStreamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BatchCommitWriteStreamsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse} BatchCommitWriteStreamsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCommitWriteStreamsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.commitTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.streamErrors && message.streamErrors.length))
                                                message.streamErrors = [];
                                            message.streamErrors.push($root.google.cloud.bigquery.storage.v1.StorageError.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BatchCommitWriteStreamsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse} BatchCommitWriteStreamsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCommitWriteStreamsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BatchCommitWriteStreamsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BatchCommitWriteStreamsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.commitTime != null && message.hasOwnProperty("commitTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.commitTime);
                                    if (error)
                                        return "commitTime." + error;
                                }
                                if (message.streamErrors != null && message.hasOwnProperty("streamErrors")) {
                                    if (!Array.isArray(message.streamErrors))
                                        return "streamErrors: array expected";
                                    for (var i = 0; i < message.streamErrors.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1.StorageError.verify(message.streamErrors[i]);
                                        if (error)
                                            return "streamErrors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BatchCommitWriteStreamsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse} BatchCommitWriteStreamsResponse
                             */
                            BatchCommitWriteStreamsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse();
                                if (object.commitTime != null) {
                                    if (typeof object.commitTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse.commitTime: object expected");
                                    message.commitTime = $root.google.protobuf.Timestamp.fromObject(object.commitTime);
                                }
                                if (object.streamErrors) {
                                    if (!Array.isArray(object.streamErrors))
                                        throw TypeError(".google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse.streamErrors: array expected");
                                    message.streamErrors = [];
                                    for (var i = 0; i < object.streamErrors.length; ++i) {
                                        if (typeof object.streamErrors[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse.streamErrors: object expected");
                                        message.streamErrors[i] = $root.google.cloud.bigquery.storage.v1.StorageError.fromObject(object.streamErrors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BatchCommitWriteStreamsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse} message BatchCommitWriteStreamsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BatchCommitWriteStreamsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.streamErrors = [];
                                if (options.defaults)
                                    object.commitTime = null;
                                if (message.commitTime != null && message.hasOwnProperty("commitTime"))
                                    object.commitTime = $root.google.protobuf.Timestamp.toObject(message.commitTime, options);
                                if (message.streamErrors && message.streamErrors.length) {
                                    object.streamErrors = [];
                                    for (var j = 0; j < message.streamErrors.length; ++j)
                                        object.streamErrors[j] = $root.google.cloud.bigquery.storage.v1.StorageError.toObject(message.streamErrors[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this BatchCommitWriteStreamsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BatchCommitWriteStreamsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BatchCommitWriteStreamsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BatchCommitWriteStreamsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.BatchCommitWriteStreamsResponse";
                            };
    
                            return BatchCommitWriteStreamsResponse;
                        })();
    
                        v1.FinalizeWriteStreamRequest = (function() {
    
                            /**
                             * Properties of a FinalizeWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IFinalizeWriteStreamRequest
                             * @property {string|null} [name] FinalizeWriteStreamRequest name
                             */
    
                            /**
                             * Constructs a new FinalizeWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a FinalizeWriteStreamRequest.
                             * @implements IFinalizeWriteStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamRequest=} [properties] Properties to set
                             */
                            function FinalizeWriteStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FinalizeWriteStreamRequest name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @instance
                             */
                            FinalizeWriteStreamRequest.prototype.name = "";
    
                            /**
                             * Creates a new FinalizeWriteStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest} FinalizeWriteStreamRequest instance
                             */
                            FinalizeWriteStreamRequest.create = function create(properties) {
                                return new FinalizeWriteStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified FinalizeWriteStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamRequest} message FinalizeWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeWriteStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FinalizeWriteStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamRequest} message FinalizeWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeWriteStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FinalizeWriteStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest} FinalizeWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeWriteStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FinalizeWriteStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest} FinalizeWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeWriteStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FinalizeWriteStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FinalizeWriteStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FinalizeWriteStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest} FinalizeWriteStreamRequest
                             */
                            FinalizeWriteStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FinalizeWriteStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest} message FinalizeWriteStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FinalizeWriteStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this FinalizeWriteStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FinalizeWriteStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FinalizeWriteStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FinalizeWriteStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.FinalizeWriteStreamRequest";
                            };
    
                            return FinalizeWriteStreamRequest;
                        })();
    
                        v1.FinalizeWriteStreamResponse = (function() {
    
                            /**
                             * Properties of a FinalizeWriteStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IFinalizeWriteStreamResponse
                             * @property {number|Long|null} [rowCount] FinalizeWriteStreamResponse rowCount
                             */
    
                            /**
                             * Constructs a new FinalizeWriteStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a FinalizeWriteStreamResponse.
                             * @implements IFinalizeWriteStreamResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamResponse=} [properties] Properties to set
                             */
                            function FinalizeWriteStreamResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FinalizeWriteStreamResponse rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @instance
                             */
                            FinalizeWriteStreamResponse.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new FinalizeWriteStreamResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse} FinalizeWriteStreamResponse instance
                             */
                            FinalizeWriteStreamResponse.create = function create(properties) {
                                return new FinalizeWriteStreamResponse(properties);
                            };
    
                            /**
                             * Encodes the specified FinalizeWriteStreamResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamResponse} message FinalizeWriteStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeWriteStreamResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.rowCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FinalizeWriteStreamResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFinalizeWriteStreamResponse} message FinalizeWriteStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeWriteStreamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FinalizeWriteStreamResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse} FinalizeWriteStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeWriteStreamResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FinalizeWriteStreamResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse} FinalizeWriteStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeWriteStreamResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FinalizeWriteStreamResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FinalizeWriteStreamResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a FinalizeWriteStreamResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse} FinalizeWriteStreamResponse
                             */
                            FinalizeWriteStreamResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse();
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FinalizeWriteStreamResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse} message FinalizeWriteStreamResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FinalizeWriteStreamResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                return object;
                            };
    
                            /**
                             * Converts this FinalizeWriteStreamResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FinalizeWriteStreamResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FinalizeWriteStreamResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FinalizeWriteStreamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.FinalizeWriteStreamResponse";
                            };
    
                            return FinalizeWriteStreamResponse;
                        })();
    
                        v1.FlushRowsRequest = (function() {
    
                            /**
                             * Properties of a FlushRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IFlushRowsRequest
                             * @property {string|null} [writeStream] FlushRowsRequest writeStream
                             * @property {google.protobuf.IInt64Value|null} [offset] FlushRowsRequest offset
                             */
    
                            /**
                             * Constructs a new FlushRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a FlushRowsRequest.
                             * @implements IFlushRowsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsRequest=} [properties] Properties to set
                             */
                            function FlushRowsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FlushRowsRequest writeStream.
                             * @member {string} writeStream
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @instance
                             */
                            FlushRowsRequest.prototype.writeStream = "";
    
                            /**
                             * FlushRowsRequest offset.
                             * @member {google.protobuf.IInt64Value|null|undefined} offset
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @instance
                             */
                            FlushRowsRequest.prototype.offset = null;
    
                            /**
                             * Creates a new FlushRowsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.FlushRowsRequest} FlushRowsRequest instance
                             */
                            FlushRowsRequest.create = function create(properties) {
                                return new FlushRowsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified FlushRowsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1.FlushRowsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsRequest} message FlushRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FlushRowsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.writeStream != null && Object.hasOwnProperty.call(message, "writeStream"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.writeStream);
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    $root.google.protobuf.Int64Value.encode(message.offset, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FlushRowsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.FlushRowsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsRequest} message FlushRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FlushRowsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FlushRowsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.FlushRowsRequest} FlushRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FlushRowsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.FlushRowsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.writeStream = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.offset = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FlushRowsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.FlushRowsRequest} FlushRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FlushRowsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FlushRowsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FlushRowsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    if (!$util.isString(message.writeStream))
                                        return "writeStream: string expected";
                                if (message.offset != null && message.hasOwnProperty("offset")) {
                                    var error = $root.google.protobuf.Int64Value.verify(message.offset);
                                    if (error)
                                        return "offset." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a FlushRowsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.FlushRowsRequest} FlushRowsRequest
                             */
                            FlushRowsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.FlushRowsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.FlushRowsRequest();
                                if (object.writeStream != null)
                                    message.writeStream = String(object.writeStream);
                                if (object.offset != null) {
                                    if (typeof object.offset !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.FlushRowsRequest.offset: object expected");
                                    message.offset = $root.google.protobuf.Int64Value.fromObject(object.offset);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FlushRowsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.FlushRowsRequest} message FlushRowsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FlushRowsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.writeStream = "";
                                    object.offset = null;
                                }
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    object.writeStream = message.writeStream;
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    object.offset = $root.google.protobuf.Int64Value.toObject(message.offset, options);
                                return object;
                            };
    
                            /**
                             * Converts this FlushRowsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FlushRowsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FlushRowsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FlushRowsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.FlushRowsRequest";
                            };
    
                            return FlushRowsRequest;
                        })();
    
                        v1.FlushRowsResponse = (function() {
    
                            /**
                             * Properties of a FlushRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IFlushRowsResponse
                             * @property {number|Long|null} [offset] FlushRowsResponse offset
                             */
    
                            /**
                             * Constructs a new FlushRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a FlushRowsResponse.
                             * @implements IFlushRowsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsResponse=} [properties] Properties to set
                             */
                            function FlushRowsResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FlushRowsResponse offset.
                             * @member {number|Long} offset
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @instance
                             */
                            FlushRowsResponse.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new FlushRowsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.FlushRowsResponse} FlushRowsResponse instance
                             */
                            FlushRowsResponse.create = function create(properties) {
                                return new FlushRowsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified FlushRowsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1.FlushRowsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsResponse} message FlushRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FlushRowsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.offset);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FlushRowsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.FlushRowsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IFlushRowsResponse} message FlushRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FlushRowsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FlushRowsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.FlushRowsResponse} FlushRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FlushRowsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.FlushRowsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.offset = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FlushRowsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.FlushRowsResponse} FlushRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FlushRowsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FlushRowsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FlushRowsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                        return "offset: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a FlushRowsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.FlushRowsResponse} FlushRowsResponse
                             */
                            FlushRowsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.FlushRowsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.FlushRowsResponse();
                                if (object.offset != null)
                                    if ($util.Long)
                                        (message.offset = $util.Long.fromValue(object.offset)).unsigned = false;
                                    else if (typeof object.offset === "string")
                                        message.offset = parseInt(object.offset, 10);
                                    else if (typeof object.offset === "number")
                                        message.offset = object.offset;
                                    else if (typeof object.offset === "object")
                                        message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FlushRowsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.FlushRowsResponse} message FlushRowsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FlushRowsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.offset = options.longs === String ? "0" : 0;
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (typeof message.offset === "number")
                                        object.offset = options.longs === String ? String(message.offset) : message.offset;
                                    else
                                        object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber() : message.offset;
                                return object;
                            };
    
                            /**
                             * Converts this FlushRowsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FlushRowsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FlushRowsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.FlushRowsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FlushRowsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.FlushRowsResponse";
                            };
    
                            return FlushRowsResponse;
                        })();
    
                        v1.StorageError = (function() {
    
                            /**
                             * Properties of a StorageError.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IStorageError
                             * @property {google.cloud.bigquery.storage.v1.StorageError.StorageErrorCode|null} [code] StorageError code
                             * @property {string|null} [entity] StorageError entity
                             * @property {string|null} [errorMessage] StorageError errorMessage
                             */
    
                            /**
                             * Constructs a new StorageError.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a StorageError.
                             * @implements IStorageError
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IStorageError=} [properties] Properties to set
                             */
                            function StorageError(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StorageError code.
                             * @member {google.cloud.bigquery.storage.v1.StorageError.StorageErrorCode} code
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @instance
                             */
                            StorageError.prototype.code = 0;
    
                            /**
                             * StorageError entity.
                             * @member {string} entity
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @instance
                             */
                            StorageError.prototype.entity = "";
    
                            /**
                             * StorageError errorMessage.
                             * @member {string} errorMessage
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @instance
                             */
                            StorageError.prototype.errorMessage = "";
    
                            /**
                             * Creates a new StorageError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IStorageError=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.StorageError} StorageError instance
                             */
                            StorageError.create = function create(properties) {
                                return new StorageError(properties);
                            };
    
                            /**
                             * Encodes the specified StorageError message. Does not implicitly {@link google.cloud.bigquery.storage.v1.StorageError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IStorageError} message StorageError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StorageError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                                if (message.entity != null && Object.hasOwnProperty.call(message, "entity"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.entity);
                                if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.errorMessage);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StorageError message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.StorageError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IStorageError} message StorageError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StorageError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StorageError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.StorageError} StorageError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StorageError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.StorageError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.code = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.entity = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.errorMessage = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StorageError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.StorageError} StorageError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StorageError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StorageError message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StorageError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.code != null && message.hasOwnProperty("code"))
                                    switch (message.code) {
                                    default:
                                        return "code: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 9:
                                        break;
                                    }
                                if (message.entity != null && message.hasOwnProperty("entity"))
                                    if (!$util.isString(message.entity))
                                        return "entity: string expected";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    if (!$util.isString(message.errorMessage))
                                        return "errorMessage: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a StorageError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.StorageError} StorageError
                             */
                            StorageError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.StorageError)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.StorageError();
                                switch (object.code) {
                                default:
                                    if (typeof object.code === "number") {
                                        message.code = object.code;
                                        break;
                                    }
                                    break;
                                case "STORAGE_ERROR_CODE_UNSPECIFIED":
                                case 0:
                                    message.code = 0;
                                    break;
                                case "TABLE_NOT_FOUND":
                                case 1:
                                    message.code = 1;
                                    break;
                                case "STREAM_ALREADY_COMMITTED":
                                case 2:
                                    message.code = 2;
                                    break;
                                case "STREAM_NOT_FOUND":
                                case 3:
                                    message.code = 3;
                                    break;
                                case "INVALID_STREAM_TYPE":
                                case 4:
                                    message.code = 4;
                                    break;
                                case "INVALID_STREAM_STATE":
                                case 5:
                                    message.code = 5;
                                    break;
                                case "STREAM_FINALIZED":
                                case 6:
                                    message.code = 6;
                                    break;
                                case "SCHEMA_MISMATCH_EXTRA_FIELDS":
                                case 7:
                                    message.code = 7;
                                    break;
                                case "OFFSET_ALREADY_EXISTS":
                                case 8:
                                    message.code = 8;
                                    break;
                                case "OFFSET_OUT_OF_RANGE":
                                case 9:
                                    message.code = 9;
                                    break;
                                }
                                if (object.entity != null)
                                    message.entity = String(object.entity);
                                if (object.errorMessage != null)
                                    message.errorMessage = String(object.errorMessage);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StorageError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.StorageError} message StorageError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StorageError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.code = options.enums === String ? "STORAGE_ERROR_CODE_UNSPECIFIED" : 0;
                                    object.entity = "";
                                    object.errorMessage = "";
                                }
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = options.enums === String ? $root.google.cloud.bigquery.storage.v1.StorageError.StorageErrorCode[message.code] === undefined ? message.code : $root.google.cloud.bigquery.storage.v1.StorageError.StorageErrorCode[message.code] : message.code;
                                if (message.entity != null && message.hasOwnProperty("entity"))
                                    object.entity = message.entity;
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    object.errorMessage = message.errorMessage;
                                return object;
                            };
    
                            /**
                             * Converts this StorageError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StorageError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StorageError
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.StorageError
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StorageError.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.StorageError";
                            };
    
                            /**
                             * StorageErrorCode enum.
                             * @name google.cloud.bigquery.storage.v1.StorageError.StorageErrorCode
                             * @enum {number}
                             * @property {number} STORAGE_ERROR_CODE_UNSPECIFIED=0 STORAGE_ERROR_CODE_UNSPECIFIED value
                             * @property {number} TABLE_NOT_FOUND=1 TABLE_NOT_FOUND value
                             * @property {number} STREAM_ALREADY_COMMITTED=2 STREAM_ALREADY_COMMITTED value
                             * @property {number} STREAM_NOT_FOUND=3 STREAM_NOT_FOUND value
                             * @property {number} INVALID_STREAM_TYPE=4 INVALID_STREAM_TYPE value
                             * @property {number} INVALID_STREAM_STATE=5 INVALID_STREAM_STATE value
                             * @property {number} STREAM_FINALIZED=6 STREAM_FINALIZED value
                             * @property {number} SCHEMA_MISMATCH_EXTRA_FIELDS=7 SCHEMA_MISMATCH_EXTRA_FIELDS value
                             * @property {number} OFFSET_ALREADY_EXISTS=8 OFFSET_ALREADY_EXISTS value
                             * @property {number} OFFSET_OUT_OF_RANGE=9 OFFSET_OUT_OF_RANGE value
                             */
                            StorageError.StorageErrorCode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "STORAGE_ERROR_CODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "TABLE_NOT_FOUND"] = 1;
                                values[valuesById[2] = "STREAM_ALREADY_COMMITTED"] = 2;
                                values[valuesById[3] = "STREAM_NOT_FOUND"] = 3;
                                values[valuesById[4] = "INVALID_STREAM_TYPE"] = 4;
                                values[valuesById[5] = "INVALID_STREAM_STATE"] = 5;
                                values[valuesById[6] = "STREAM_FINALIZED"] = 6;
                                values[valuesById[7] = "SCHEMA_MISMATCH_EXTRA_FIELDS"] = 7;
                                values[valuesById[8] = "OFFSET_ALREADY_EXISTS"] = 8;
                                values[valuesById[9] = "OFFSET_OUT_OF_RANGE"] = 9;
                                return values;
                            })();
    
                            return StorageError;
                        })();
    
                        v1.RowError = (function() {
    
                            /**
                             * Properties of a RowError.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IRowError
                             * @property {number|Long|null} [index] RowError index
                             * @property {google.cloud.bigquery.storage.v1.RowError.RowErrorCode|null} [code] RowError code
                             * @property {string|null} [message] RowError message
                             */
    
                            /**
                             * Constructs a new RowError.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a RowError.
                             * @implements IRowError
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IRowError=} [properties] Properties to set
                             */
                            function RowError(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RowError index.
                             * @member {number|Long} index
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @instance
                             */
                            RowError.prototype.index = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * RowError code.
                             * @member {google.cloud.bigquery.storage.v1.RowError.RowErrorCode} code
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @instance
                             */
                            RowError.prototype.code = 0;
    
                            /**
                             * RowError message.
                             * @member {string} message
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @instance
                             */
                            RowError.prototype.message = "";
    
                            /**
                             * Creates a new RowError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IRowError=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.RowError} RowError instance
                             */
                            RowError.create = function create(properties) {
                                return new RowError(properties);
                            };
    
                            /**
                             * Encodes the specified RowError message. Does not implicitly {@link google.cloud.bigquery.storage.v1.RowError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IRowError} message RowError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RowError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.index);
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.code);
                                if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RowError message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.RowError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IRowError} message RowError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RowError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RowError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.RowError} RowError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RowError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.RowError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.index = reader.int64();
                                            break;
                                        }
                                    case 2: {
                                            message.code = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.message = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RowError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.RowError} RowError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RowError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RowError message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RowError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.index != null && message.hasOwnProperty("index"))
                                    if (!$util.isInteger(message.index) && !(message.index && $util.isInteger(message.index.low) && $util.isInteger(message.index.high)))
                                        return "index: integer|Long expected";
                                if (message.code != null && message.hasOwnProperty("code"))
                                    switch (message.code) {
                                    default:
                                        return "code: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                if (message.message != null && message.hasOwnProperty("message"))
                                    if (!$util.isString(message.message))
                                        return "message: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a RowError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.RowError} RowError
                             */
                            RowError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.RowError)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.RowError();
                                if (object.index != null)
                                    if ($util.Long)
                                        (message.index = $util.Long.fromValue(object.index)).unsigned = false;
                                    else if (typeof object.index === "string")
                                        message.index = parseInt(object.index, 10);
                                    else if (typeof object.index === "number")
                                        message.index = object.index;
                                    else if (typeof object.index === "object")
                                        message.index = new $util.LongBits(object.index.low >>> 0, object.index.high >>> 0).toNumber();
                                switch (object.code) {
                                default:
                                    if (typeof object.code === "number") {
                                        message.code = object.code;
                                        break;
                                    }
                                    break;
                                case "ROW_ERROR_CODE_UNSPECIFIED":
                                case 0:
                                    message.code = 0;
                                    break;
                                case "FIELDS_ERROR":
                                case 1:
                                    message.code = 1;
                                    break;
                                }
                                if (object.message != null)
                                    message.message = String(object.message);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RowError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.RowError} message RowError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RowError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.index = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.index = options.longs === String ? "0" : 0;
                                    object.code = options.enums === String ? "ROW_ERROR_CODE_UNSPECIFIED" : 0;
                                    object.message = "";
                                }
                                if (message.index != null && message.hasOwnProperty("index"))
                                    if (typeof message.index === "number")
                                        object.index = options.longs === String ? String(message.index) : message.index;
                                    else
                                        object.index = options.longs === String ? $util.Long.prototype.toString.call(message.index) : options.longs === Number ? new $util.LongBits(message.index.low >>> 0, message.index.high >>> 0).toNumber() : message.index;
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = options.enums === String ? $root.google.cloud.bigquery.storage.v1.RowError.RowErrorCode[message.code] === undefined ? message.code : $root.google.cloud.bigquery.storage.v1.RowError.RowErrorCode[message.code] : message.code;
                                if (message.message != null && message.hasOwnProperty("message"))
                                    object.message = message.message;
                                return object;
                            };
    
                            /**
                             * Converts this RowError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RowError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RowError
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.RowError
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RowError.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.RowError";
                            };
    
                            /**
                             * RowErrorCode enum.
                             * @name google.cloud.bigquery.storage.v1.RowError.RowErrorCode
                             * @enum {number}
                             * @property {number} ROW_ERROR_CODE_UNSPECIFIED=0 ROW_ERROR_CODE_UNSPECIFIED value
                             * @property {number} FIELDS_ERROR=1 FIELDS_ERROR value
                             */
                            RowError.RowErrorCode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "ROW_ERROR_CODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "FIELDS_ERROR"] = 1;
                                return values;
                            })();
    
                            return RowError;
                        })();
    
                        /**
                         * DataFormat enum.
                         * @name google.cloud.bigquery.storage.v1.DataFormat
                         * @enum {number}
                         * @property {number} DATA_FORMAT_UNSPECIFIED=0 DATA_FORMAT_UNSPECIFIED value
                         * @property {number} AVRO=1 AVRO value
                         * @property {number} ARROW=2 ARROW value
                         */
                        v1.DataFormat = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DATA_FORMAT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AVRO"] = 1;
                            values[valuesById[2] = "ARROW"] = 2;
                            return values;
                        })();
    
                        v1.ReadSession = (function() {
    
                            /**
                             * Properties of a ReadSession.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IReadSession
                             * @property {string|null} [name] ReadSession name
                             * @property {google.protobuf.ITimestamp|null} [expireTime] ReadSession expireTime
                             * @property {google.cloud.bigquery.storage.v1.DataFormat|null} [dataFormat] ReadSession dataFormat
                             * @property {google.cloud.bigquery.storage.v1.IAvroSchema|null} [avroSchema] ReadSession avroSchema
                             * @property {google.cloud.bigquery.storage.v1.IArrowSchema|null} [arrowSchema] ReadSession arrowSchema
                             * @property {string|null} [table] ReadSession table
                             * @property {google.cloud.bigquery.storage.v1.ReadSession.ITableModifiers|null} [tableModifiers] ReadSession tableModifiers
                             * @property {google.cloud.bigquery.storage.v1.ReadSession.ITableReadOptions|null} [readOptions] ReadSession readOptions
                             * @property {Array.<google.cloud.bigquery.storage.v1.IReadStream>|null} [streams] ReadSession streams
                             * @property {number|Long|null} [estimatedTotalBytesScanned] ReadSession estimatedTotalBytesScanned
                             * @property {number|Long|null} [estimatedRowCount] ReadSession estimatedRowCount
                             * @property {string|null} [traceId] ReadSession traceId
                             */
    
                            /**
                             * Constructs a new ReadSession.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a ReadSession.
                             * @implements IReadSession
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IReadSession=} [properties] Properties to set
                             */
                            function ReadSession(properties) {
                                this.streams = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadSession name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.name = "";
    
                            /**
                             * ReadSession expireTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.expireTime = null;
    
                            /**
                             * ReadSession dataFormat.
                             * @member {google.cloud.bigquery.storage.v1.DataFormat} dataFormat
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.dataFormat = 0;
    
                            /**
                             * ReadSession avroSchema.
                             * @member {google.cloud.bigquery.storage.v1.IAvroSchema|null|undefined} avroSchema
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.avroSchema = null;
    
                            /**
                             * ReadSession arrowSchema.
                             * @member {google.cloud.bigquery.storage.v1.IArrowSchema|null|undefined} arrowSchema
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.arrowSchema = null;
    
                            /**
                             * ReadSession table.
                             * @member {string} table
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.table = "";
    
                            /**
                             * ReadSession tableModifiers.
                             * @member {google.cloud.bigquery.storage.v1.ReadSession.ITableModifiers|null|undefined} tableModifiers
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.tableModifiers = null;
    
                            /**
                             * ReadSession readOptions.
                             * @member {google.cloud.bigquery.storage.v1.ReadSession.ITableReadOptions|null|undefined} readOptions
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.readOptions = null;
    
                            /**
                             * ReadSession streams.
                             * @member {Array.<google.cloud.bigquery.storage.v1.IReadStream>} streams
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.streams = $util.emptyArray;
    
                            /**
                             * ReadSession estimatedTotalBytesScanned.
                             * @member {number|Long} estimatedTotalBytesScanned
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.estimatedTotalBytesScanned = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ReadSession estimatedRowCount.
                             * @member {number|Long} estimatedRowCount
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.estimatedRowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ReadSession traceId.
                             * @member {string} traceId
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.traceId = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * ReadSession schema.
                             * @member {"avroSchema"|"arrowSchema"|undefined} schema
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             */
                            Object.defineProperty(ReadSession.prototype, "schema", {
                                get: $util.oneOfGetter($oneOfFields = ["avroSchema", "arrowSchema"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new ReadSession instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadSession=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ReadSession} ReadSession instance
                             */
                            ReadSession.create = function create(properties) {
                                return new ReadSession(properties);
                            };
    
                            /**
                             * Encodes the specified ReadSession message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadSession.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadSession} message ReadSession message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadSession.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                    $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.dataFormat != null && Object.hasOwnProperty.call(message, "dataFormat"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.dataFormat);
                                if (message.avroSchema != null && Object.hasOwnProperty.call(message, "avroSchema"))
                                    $root.google.cloud.bigquery.storage.v1.AvroSchema.encode(message.avroSchema, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.arrowSchema != null && Object.hasOwnProperty.call(message, "arrowSchema"))
                                    $root.google.cloud.bigquery.storage.v1.ArrowSchema.encode(message.arrowSchema, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.table);
                                if (message.tableModifiers != null && Object.hasOwnProperty.call(message, "tableModifiers"))
                                    $root.google.cloud.bigquery.storage.v1.ReadSession.TableModifiers.encode(message.tableModifiers, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.readOptions != null && Object.hasOwnProperty.call(message, "readOptions"))
                                    $root.google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.encode(message.readOptions, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.streams != null && message.streams.length)
                                    for (var i = 0; i < message.streams.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1.ReadStream.encode(message.streams[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                if (message.estimatedTotalBytesScanned != null && Object.hasOwnProperty.call(message, "estimatedTotalBytesScanned"))
                                    writer.uint32(/* id 12, wireType 0 =*/96).int64(message.estimatedTotalBytesScanned);
                                if (message.traceId != null && Object.hasOwnProperty.call(message, "traceId"))
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.traceId);
                                if (message.estimatedRowCount != null && Object.hasOwnProperty.call(message, "estimatedRowCount"))
                                    writer.uint32(/* id 14, wireType 0 =*/112).int64(message.estimatedRowCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadSession message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadSession.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadSession} message ReadSession message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadSession.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadSession message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ReadSession} ReadSession
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadSession.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ReadSession();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.dataFormat = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.avroSchema = $root.google.cloud.bigquery.storage.v1.AvroSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.arrowSchema = $root.google.cloud.bigquery.storage.v1.ArrowSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.table = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.tableModifiers = $root.google.cloud.bigquery.storage.v1.ReadSession.TableModifiers.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.readOptions = $root.google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 10: {
                                            if (!(message.streams && message.streams.length))
                                                message.streams = [];
                                            message.streams.push($root.google.cloud.bigquery.storage.v1.ReadStream.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 12: {
                                            message.estimatedTotalBytesScanned = reader.int64();
                                            break;
                                        }
                                    case 14: {
                                            message.estimatedRowCount = reader.int64();
                                            break;
                                        }
                                    case 13: {
                                            message.traceId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadSession message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ReadSession} ReadSession
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadSession.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadSession message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadSession.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                    if (error)
                                        return "expireTime." + error;
                                }
                                if (message.dataFormat != null && message.hasOwnProperty("dataFormat"))
                                    switch (message.dataFormat) {
                                    default:
                                        return "dataFormat: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1.AvroSchema.verify(message.avroSchema);
                                        if (error)
                                            return "avroSchema." + error;
                                    }
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    if (properties.schema === 1)
                                        return "schema: multiple values";
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1.ArrowSchema.verify(message.arrowSchema);
                                        if (error)
                                            return "arrowSchema." + error;
                                    }
                                }
                                if (message.table != null && message.hasOwnProperty("table"))
                                    if (!$util.isString(message.table))
                                        return "table: string expected";
                                if (message.tableModifiers != null && message.hasOwnProperty("tableModifiers")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.ReadSession.TableModifiers.verify(message.tableModifiers);
                                    if (error)
                                        return "tableModifiers." + error;
                                }
                                if (message.readOptions != null && message.hasOwnProperty("readOptions")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.verify(message.readOptions);
                                    if (error)
                                        return "readOptions." + error;
                                }
                                if (message.streams != null && message.hasOwnProperty("streams")) {
                                    if (!Array.isArray(message.streams))
                                        return "streams: array expected";
                                    for (var i = 0; i < message.streams.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1.ReadStream.verify(message.streams[i]);
                                        if (error)
                                            return "streams." + error;
                                    }
                                }
                                if (message.estimatedTotalBytesScanned != null && message.hasOwnProperty("estimatedTotalBytesScanned"))
                                    if (!$util.isInteger(message.estimatedTotalBytesScanned) && !(message.estimatedTotalBytesScanned && $util.isInteger(message.estimatedTotalBytesScanned.low) && $util.isInteger(message.estimatedTotalBytesScanned.high)))
                                        return "estimatedTotalBytesScanned: integer|Long expected";
                                if (message.estimatedRowCount != null && message.hasOwnProperty("estimatedRowCount"))
                                    if (!$util.isInteger(message.estimatedRowCount) && !(message.estimatedRowCount && $util.isInteger(message.estimatedRowCount.low) && $util.isInteger(message.estimatedRowCount.high)))
                                        return "estimatedRowCount: integer|Long expected";
                                if (message.traceId != null && message.hasOwnProperty("traceId"))
                                    if (!$util.isString(message.traceId))
                                        return "traceId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ReadSession message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ReadSession} ReadSession
                             */
                            ReadSession.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ReadSession)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ReadSession();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.expireTime != null) {
                                    if (typeof object.expireTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.expireTime: object expected");
                                    message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                                }
                                switch (object.dataFormat) {
                                default:
                                    if (typeof object.dataFormat === "number") {
                                        message.dataFormat = object.dataFormat;
                                        break;
                                    }
                                    break;
                                case "DATA_FORMAT_UNSPECIFIED":
                                case 0:
                                    message.dataFormat = 0;
                                    break;
                                case "AVRO":
                                case 1:
                                    message.dataFormat = 1;
                                    break;
                                case "ARROW":
                                case 2:
                                    message.dataFormat = 2;
                                    break;
                                }
                                if (object.avroSchema != null) {
                                    if (typeof object.avroSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.avroSchema: object expected");
                                    message.avroSchema = $root.google.cloud.bigquery.storage.v1.AvroSchema.fromObject(object.avroSchema);
                                }
                                if (object.arrowSchema != null) {
                                    if (typeof object.arrowSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.arrowSchema: object expected");
                                    message.arrowSchema = $root.google.cloud.bigquery.storage.v1.ArrowSchema.fromObject(object.arrowSchema);
                                }
                                if (object.table != null)
                                    message.table = String(object.table);
                                if (object.tableModifiers != null) {
                                    if (typeof object.tableModifiers !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.tableModifiers: object expected");
                                    message.tableModifiers = $root.google.cloud.bigquery.storage.v1.ReadSession.TableModifiers.fromObject(object.tableModifiers);
                                }
                                if (object.readOptions != null) {
                                    if (typeof object.readOptions !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.readOptions: object expected");
                                    message.readOptions = $root.google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.fromObject(object.readOptions);
                                }
                                if (object.streams) {
                                    if (!Array.isArray(object.streams))
                                        throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.streams: array expected");
                                    message.streams = [];
                                    for (var i = 0; i < object.streams.length; ++i) {
                                        if (typeof object.streams[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.streams: object expected");
                                        message.streams[i] = $root.google.cloud.bigquery.storage.v1.ReadStream.fromObject(object.streams[i]);
                                    }
                                }
                                if (object.estimatedTotalBytesScanned != null)
                                    if ($util.Long)
                                        (message.estimatedTotalBytesScanned = $util.Long.fromValue(object.estimatedTotalBytesScanned)).unsigned = false;
                                    else if (typeof object.estimatedTotalBytesScanned === "string")
                                        message.estimatedTotalBytesScanned = parseInt(object.estimatedTotalBytesScanned, 10);
                                    else if (typeof object.estimatedTotalBytesScanned === "number")
                                        message.estimatedTotalBytesScanned = object.estimatedTotalBytesScanned;
                                    else if (typeof object.estimatedTotalBytesScanned === "object")
                                        message.estimatedTotalBytesScanned = new $util.LongBits(object.estimatedTotalBytesScanned.low >>> 0, object.estimatedTotalBytesScanned.high >>> 0).toNumber();
                                if (object.estimatedRowCount != null)
                                    if ($util.Long)
                                        (message.estimatedRowCount = $util.Long.fromValue(object.estimatedRowCount)).unsigned = false;
                                    else if (typeof object.estimatedRowCount === "string")
                                        message.estimatedRowCount = parseInt(object.estimatedRowCount, 10);
                                    else if (typeof object.estimatedRowCount === "number")
                                        message.estimatedRowCount = object.estimatedRowCount;
                                    else if (typeof object.estimatedRowCount === "object")
                                        message.estimatedRowCount = new $util.LongBits(object.estimatedRowCount.low >>> 0, object.estimatedRowCount.high >>> 0).toNumber();
                                if (object.traceId != null)
                                    message.traceId = String(object.traceId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadSession message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ReadSession} message ReadSession
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadSession.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.streams = [];
                                if (options.defaults) {
                                    object.name = "";
                                    object.expireTime = null;
                                    object.dataFormat = options.enums === String ? "DATA_FORMAT_UNSPECIFIED" : 0;
                                    object.table = "";
                                    object.tableModifiers = null;
                                    object.readOptions = null;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.estimatedTotalBytesScanned = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.estimatedTotalBytesScanned = options.longs === String ? "0" : 0;
                                    object.traceId = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.estimatedRowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.estimatedRowCount = options.longs === String ? "0" : 0;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                    object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                                if (message.dataFormat != null && message.hasOwnProperty("dataFormat"))
                                    object.dataFormat = options.enums === String ? $root.google.cloud.bigquery.storage.v1.DataFormat[message.dataFormat] === undefined ? message.dataFormat : $root.google.cloud.bigquery.storage.v1.DataFormat[message.dataFormat] : message.dataFormat;
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    object.avroSchema = $root.google.cloud.bigquery.storage.v1.AvroSchema.toObject(message.avroSchema, options);
                                    if (options.oneofs)
                                        object.schema = "avroSchema";
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    object.arrowSchema = $root.google.cloud.bigquery.storage.v1.ArrowSchema.toObject(message.arrowSchema, options);
                                    if (options.oneofs)
                                        object.schema = "arrowSchema";
                                }
                                if (message.table != null && message.hasOwnProperty("table"))
                                    object.table = message.table;
                                if (message.tableModifiers != null && message.hasOwnProperty("tableModifiers"))
                                    object.tableModifiers = $root.google.cloud.bigquery.storage.v1.ReadSession.TableModifiers.toObject(message.tableModifiers, options);
                                if (message.readOptions != null && message.hasOwnProperty("readOptions"))
                                    object.readOptions = $root.google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.toObject(message.readOptions, options);
                                if (message.streams && message.streams.length) {
                                    object.streams = [];
                                    for (var j = 0; j < message.streams.length; ++j)
                                        object.streams[j] = $root.google.cloud.bigquery.storage.v1.ReadStream.toObject(message.streams[j], options);
                                }
                                if (message.estimatedTotalBytesScanned != null && message.hasOwnProperty("estimatedTotalBytesScanned"))
                                    if (typeof message.estimatedTotalBytesScanned === "number")
                                        object.estimatedTotalBytesScanned = options.longs === String ? String(message.estimatedTotalBytesScanned) : message.estimatedTotalBytesScanned;
                                    else
                                        object.estimatedTotalBytesScanned = options.longs === String ? $util.Long.prototype.toString.call(message.estimatedTotalBytesScanned) : options.longs === Number ? new $util.LongBits(message.estimatedTotalBytesScanned.low >>> 0, message.estimatedTotalBytesScanned.high >>> 0).toNumber() : message.estimatedTotalBytesScanned;
                                if (message.traceId != null && message.hasOwnProperty("traceId"))
                                    object.traceId = message.traceId;
                                if (message.estimatedRowCount != null && message.hasOwnProperty("estimatedRowCount"))
                                    if (typeof message.estimatedRowCount === "number")
                                        object.estimatedRowCount = options.longs === String ? String(message.estimatedRowCount) : message.estimatedRowCount;
                                    else
                                        object.estimatedRowCount = options.longs === String ? $util.Long.prototype.toString.call(message.estimatedRowCount) : options.longs === Number ? new $util.LongBits(message.estimatedRowCount.low >>> 0, message.estimatedRowCount.high >>> 0).toNumber() : message.estimatedRowCount;
                                return object;
                            };
    
                            /**
                             * Converts this ReadSession to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadSession.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadSession
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ReadSession
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadSession.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ReadSession";
                            };
    
                            ReadSession.TableModifiers = (function() {
    
                                /**
                                 * Properties of a TableModifiers.
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession
                                 * @interface ITableModifiers
                                 * @property {google.protobuf.ITimestamp|null} [snapshotTime] TableModifiers snapshotTime
                                 */
    
                                /**
                                 * Constructs a new TableModifiers.
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession
                                 * @classdesc Represents a TableModifiers.
                                 * @implements ITableModifiers
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.ITableModifiers=} [properties] Properties to set
                                 */
                                function TableModifiers(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * TableModifiers snapshotTime.
                                 * @member {google.protobuf.ITimestamp|null|undefined} snapshotTime
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @instance
                                 */
                                TableModifiers.prototype.snapshotTime = null;
    
                                /**
                                 * Creates a new TableModifiers instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.ITableModifiers=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1.ReadSession.TableModifiers} TableModifiers instance
                                 */
                                TableModifiers.create = function create(properties) {
                                    return new TableModifiers(properties);
                                };
    
                                /**
                                 * Encodes the specified TableModifiers message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadSession.TableModifiers.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.ITableModifiers} message TableModifiers message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TableModifiers.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.snapshotTime != null && Object.hasOwnProperty.call(message, "snapshotTime"))
                                        $root.google.protobuf.Timestamp.encode(message.snapshotTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified TableModifiers message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadSession.TableModifiers.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.ITableModifiers} message TableModifiers message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TableModifiers.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a TableModifiers message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1.ReadSession.TableModifiers} TableModifiers
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TableModifiers.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ReadSession.TableModifiers();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.snapshotTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a TableModifiers message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1.ReadSession.TableModifiers} TableModifiers
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TableModifiers.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a TableModifiers message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                TableModifiers.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.snapshotTime != null && message.hasOwnProperty("snapshotTime")) {
                                        var error = $root.google.protobuf.Timestamp.verify(message.snapshotTime);
                                        if (error)
                                            return "snapshotTime." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a TableModifiers message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1.ReadSession.TableModifiers} TableModifiers
                                 */
                                TableModifiers.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1.ReadSession.TableModifiers();
                                    if (object.snapshotTime != null) {
                                        if (typeof object.snapshotTime !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.TableModifiers.snapshotTime: object expected");
                                        message.snapshotTime = $root.google.protobuf.Timestamp.fromObject(object.snapshotTime);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a TableModifiers message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.TableModifiers} message TableModifiers
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                TableModifiers.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.snapshotTime = null;
                                    if (message.snapshotTime != null && message.hasOwnProperty("snapshotTime"))
                                        object.snapshotTime = $root.google.protobuf.Timestamp.toObject(message.snapshotTime, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this TableModifiers to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                TableModifiers.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for TableModifiers
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableModifiers
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                TableModifiers.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ReadSession.TableModifiers";
                                };
    
                                return TableModifiers;
                            })();
    
                            ReadSession.TableReadOptions = (function() {
    
                                /**
                                 * Properties of a TableReadOptions.
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession
                                 * @interface ITableReadOptions
                                 * @property {Array.<string>|null} [selectedFields] TableReadOptions selectedFields
                                 * @property {string|null} [rowRestriction] TableReadOptions rowRestriction
                                 * @property {google.cloud.bigquery.storage.v1.IArrowSerializationOptions|null} [arrowSerializationOptions] TableReadOptions arrowSerializationOptions
                                 * @property {google.cloud.bigquery.storage.v1.IAvroSerializationOptions|null} [avroSerializationOptions] TableReadOptions avroSerializationOptions
                                 */
    
                                /**
                                 * Constructs a new TableReadOptions.
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession
                                 * @classdesc Represents a TableReadOptions.
                                 * @implements ITableReadOptions
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.ITableReadOptions=} [properties] Properties to set
                                 */
                                function TableReadOptions(properties) {
                                    this.selectedFields = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * TableReadOptions selectedFields.
                                 * @member {Array.<string>} selectedFields
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @instance
                                 */
                                TableReadOptions.prototype.selectedFields = $util.emptyArray;
    
                                /**
                                 * TableReadOptions rowRestriction.
                                 * @member {string} rowRestriction
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @instance
                                 */
                                TableReadOptions.prototype.rowRestriction = "";
    
                                /**
                                 * TableReadOptions arrowSerializationOptions.
                                 * @member {google.cloud.bigquery.storage.v1.IArrowSerializationOptions|null|undefined} arrowSerializationOptions
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @instance
                                 */
                                TableReadOptions.prototype.arrowSerializationOptions = null;
    
                                /**
                                 * TableReadOptions avroSerializationOptions.
                                 * @member {google.cloud.bigquery.storage.v1.IAvroSerializationOptions|null|undefined} avroSerializationOptions
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @instance
                                 */
                                TableReadOptions.prototype.avroSerializationOptions = null;
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * TableReadOptions outputFormatSerializationOptions.
                                 * @member {"arrowSerializationOptions"|"avroSerializationOptions"|undefined} outputFormatSerializationOptions
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @instance
                                 */
                                Object.defineProperty(TableReadOptions.prototype, "outputFormatSerializationOptions", {
                                    get: $util.oneOfGetter($oneOfFields = ["arrowSerializationOptions", "avroSerializationOptions"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new TableReadOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.ITableReadOptions=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions} TableReadOptions instance
                                 */
                                TableReadOptions.create = function create(properties) {
                                    return new TableReadOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified TableReadOptions message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.ITableReadOptions} message TableReadOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TableReadOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.selectedFields != null && message.selectedFields.length)
                                        for (var i = 0; i < message.selectedFields.length; ++i)
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.selectedFields[i]);
                                    if (message.rowRestriction != null && Object.hasOwnProperty.call(message, "rowRestriction"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.rowRestriction);
                                    if (message.arrowSerializationOptions != null && Object.hasOwnProperty.call(message, "arrowSerializationOptions"))
                                        $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions.encode(message.arrowSerializationOptions, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.avroSerializationOptions != null && Object.hasOwnProperty.call(message, "avroSerializationOptions"))
                                        $root.google.cloud.bigquery.storage.v1.AvroSerializationOptions.encode(message.avroSerializationOptions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified TableReadOptions message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.ITableReadOptions} message TableReadOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TableReadOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a TableReadOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions} TableReadOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TableReadOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                if (!(message.selectedFields && message.selectedFields.length))
                                                    message.selectedFields = [];
                                                message.selectedFields.push(reader.string());
                                                break;
                                            }
                                        case 2: {
                                                message.rowRestriction = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.arrowSerializationOptions = $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 4: {
                                                message.avroSerializationOptions = $root.google.cloud.bigquery.storage.v1.AvroSerializationOptions.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a TableReadOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions} TableReadOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TableReadOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a TableReadOptions message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                TableReadOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.selectedFields != null && message.hasOwnProperty("selectedFields")) {
                                        if (!Array.isArray(message.selectedFields))
                                            return "selectedFields: array expected";
                                        for (var i = 0; i < message.selectedFields.length; ++i)
                                            if (!$util.isString(message.selectedFields[i]))
                                                return "selectedFields: string[] expected";
                                    }
                                    if (message.rowRestriction != null && message.hasOwnProperty("rowRestriction"))
                                        if (!$util.isString(message.rowRestriction))
                                            return "rowRestriction: string expected";
                                    if (message.arrowSerializationOptions != null && message.hasOwnProperty("arrowSerializationOptions")) {
                                        properties.outputFormatSerializationOptions = 1;
                                        {
                                            var error = $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions.verify(message.arrowSerializationOptions);
                                            if (error)
                                                return "arrowSerializationOptions." + error;
                                        }
                                    }
                                    if (message.avroSerializationOptions != null && message.hasOwnProperty("avroSerializationOptions")) {
                                        if (properties.outputFormatSerializationOptions === 1)
                                            return "outputFormatSerializationOptions: multiple values";
                                        properties.outputFormatSerializationOptions = 1;
                                        {
                                            var error = $root.google.cloud.bigquery.storage.v1.AvroSerializationOptions.verify(message.avroSerializationOptions);
                                            if (error)
                                                return "avroSerializationOptions." + error;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a TableReadOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions} TableReadOptions
                                 */
                                TableReadOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions();
                                    if (object.selectedFields) {
                                        if (!Array.isArray(object.selectedFields))
                                            throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.selectedFields: array expected");
                                        message.selectedFields = [];
                                        for (var i = 0; i < object.selectedFields.length; ++i)
                                            message.selectedFields[i] = String(object.selectedFields[i]);
                                    }
                                    if (object.rowRestriction != null)
                                        message.rowRestriction = String(object.rowRestriction);
                                    if (object.arrowSerializationOptions != null) {
                                        if (typeof object.arrowSerializationOptions !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.arrowSerializationOptions: object expected");
                                        message.arrowSerializationOptions = $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions.fromObject(object.arrowSerializationOptions);
                                    }
                                    if (object.avroSerializationOptions != null) {
                                        if (typeof object.avroSerializationOptions !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.avroSerializationOptions: object expected");
                                        message.avroSerializationOptions = $root.google.cloud.bigquery.storage.v1.AvroSerializationOptions.fromObject(object.avroSerializationOptions);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a TableReadOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions} message TableReadOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                TableReadOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.selectedFields = [];
                                    if (options.defaults)
                                        object.rowRestriction = "";
                                    if (message.selectedFields && message.selectedFields.length) {
                                        object.selectedFields = [];
                                        for (var j = 0; j < message.selectedFields.length; ++j)
                                            object.selectedFields[j] = message.selectedFields[j];
                                    }
                                    if (message.rowRestriction != null && message.hasOwnProperty("rowRestriction"))
                                        object.rowRestriction = message.rowRestriction;
                                    if (message.arrowSerializationOptions != null && message.hasOwnProperty("arrowSerializationOptions")) {
                                        object.arrowSerializationOptions = $root.google.cloud.bigquery.storage.v1.ArrowSerializationOptions.toObject(message.arrowSerializationOptions, options);
                                        if (options.oneofs)
                                            object.outputFormatSerializationOptions = "arrowSerializationOptions";
                                    }
                                    if (message.avroSerializationOptions != null && message.hasOwnProperty("avroSerializationOptions")) {
                                        object.avroSerializationOptions = $root.google.cloud.bigquery.storage.v1.AvroSerializationOptions.toObject(message.avroSerializationOptions, options);
                                        if (options.oneofs)
                                            object.outputFormatSerializationOptions = "avroSerializationOptions";
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this TableReadOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                TableReadOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for TableReadOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                TableReadOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions";
                                };
    
                                return TableReadOptions;
                            })();
    
                            return ReadSession;
                        })();
    
                        v1.ReadStream = (function() {
    
                            /**
                             * Properties of a ReadStream.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IReadStream
                             * @property {string|null} [name] ReadStream name
                             */
    
                            /**
                             * Constructs a new ReadStream.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a ReadStream.
                             * @implements IReadStream
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IReadStream=} [properties] Properties to set
                             */
                            function ReadStream(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadStream name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @instance
                             */
                            ReadStream.prototype.name = "";
    
                            /**
                             * Creates a new ReadStream instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadStream=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.ReadStream} ReadStream instance
                             */
                            ReadStream.create = function create(properties) {
                                return new ReadStream(properties);
                            };
    
                            /**
                             * Encodes the specified ReadStream message. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadStream.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadStream} message ReadStream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadStream.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadStream message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.ReadStream.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IReadStream} message ReadStream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadStream.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadStream message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.ReadStream} ReadStream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadStream.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.ReadStream();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadStream message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.ReadStream} ReadStream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadStream.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadStream message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadStream.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ReadStream message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.ReadStream} ReadStream
                             */
                            ReadStream.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.ReadStream)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.ReadStream();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadStream message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ReadStream} message ReadStream
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadStream.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this ReadStream to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadStream.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadStream
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.ReadStream
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadStream.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.ReadStream";
                            };
    
                            return ReadStream;
                        })();
    
                        /**
                         * WriteStreamView enum.
                         * @name google.cloud.bigquery.storage.v1.WriteStreamView
                         * @enum {number}
                         * @property {number} WRITE_STREAM_VIEW_UNSPECIFIED=0 WRITE_STREAM_VIEW_UNSPECIFIED value
                         * @property {number} BASIC=1 BASIC value
                         * @property {number} FULL=2 FULL value
                         */
                        v1.WriteStreamView = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "WRITE_STREAM_VIEW_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BASIC"] = 1;
                            values[valuesById[2] = "FULL"] = 2;
                            return values;
                        })();
    
                        v1.WriteStream = (function() {
    
                            /**
                             * Properties of a WriteStream.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface IWriteStream
                             * @property {string|null} [name] WriteStream name
                             * @property {google.cloud.bigquery.storage.v1.WriteStream.Type|null} [type] WriteStream type
                             * @property {google.protobuf.ITimestamp|null} [createTime] WriteStream createTime
                             * @property {google.protobuf.ITimestamp|null} [commitTime] WriteStream commitTime
                             * @property {google.cloud.bigquery.storage.v1.ITableSchema|null} [tableSchema] WriteStream tableSchema
                             * @property {google.cloud.bigquery.storage.v1.WriteStream.WriteMode|null} [writeMode] WriteStream writeMode
                             * @property {string|null} [location] WriteStream location
                             */
    
                            /**
                             * Constructs a new WriteStream.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a WriteStream.
                             * @implements IWriteStream
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.IWriteStream=} [properties] Properties to set
                             */
                            function WriteStream(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * WriteStream name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.name = "";
    
                            /**
                             * WriteStream type.
                             * @member {google.cloud.bigquery.storage.v1.WriteStream.Type} type
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.type = 0;
    
                            /**
                             * WriteStream createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.createTime = null;
    
                            /**
                             * WriteStream commitTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} commitTime
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.commitTime = null;
    
                            /**
                             * WriteStream tableSchema.
                             * @member {google.cloud.bigquery.storage.v1.ITableSchema|null|undefined} tableSchema
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.tableSchema = null;
    
                            /**
                             * WriteStream writeMode.
                             * @member {google.cloud.bigquery.storage.v1.WriteStream.WriteMode} writeMode
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.writeMode = 0;
    
                            /**
                             * WriteStream location.
                             * @member {string} location
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.location = "";
    
                            /**
                             * Creates a new WriteStream instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IWriteStream=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.WriteStream} WriteStream instance
                             */
                            WriteStream.create = function create(properties) {
                                return new WriteStream(properties);
                            };
    
                            /**
                             * Encodes the specified WriteStream message. Does not implicitly {@link google.cloud.bigquery.storage.v1.WriteStream.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IWriteStream} message WriteStream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            WriteStream.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.commitTime != null && Object.hasOwnProperty.call(message, "commitTime"))
                                    $root.google.protobuf.Timestamp.encode(message.commitTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.tableSchema != null && Object.hasOwnProperty.call(message, "tableSchema"))
                                    $root.google.cloud.bigquery.storage.v1.TableSchema.encode(message.tableSchema, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.writeMode != null && Object.hasOwnProperty.call(message, "writeMode"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.writeMode);
                                if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.location);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified WriteStream message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.WriteStream.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.IWriteStream} message WriteStream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            WriteStream.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a WriteStream message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.WriteStream} WriteStream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            WriteStream.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.WriteStream();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.commitTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.tableSchema = $root.google.cloud.bigquery.storage.v1.TableSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.writeMode = reader.int32();
                                            break;
                                        }
                                    case 8: {
                                            message.location = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a WriteStream message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.WriteStream} WriteStream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            WriteStream.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a WriteStream message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            WriteStream.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.commitTime != null && message.hasOwnProperty("commitTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.commitTime);
                                    if (error)
                                        return "commitTime." + error;
                                }
                                if (message.tableSchema != null && message.hasOwnProperty("tableSchema")) {
                                    var error = $root.google.cloud.bigquery.storage.v1.TableSchema.verify(message.tableSchema);
                                    if (error)
                                        return "tableSchema." + error;
                                }
                                if (message.writeMode != null && message.hasOwnProperty("writeMode"))
                                    switch (message.writeMode) {
                                    default:
                                        return "writeMode: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                if (message.location != null && message.hasOwnProperty("location"))
                                    if (!$util.isString(message.location))
                                        return "location: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a WriteStream message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.WriteStream} WriteStream
                             */
                            WriteStream.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.WriteStream)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.WriteStream();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "COMMITTED":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "PENDING":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "BUFFERED":
                                case 3:
                                    message.type = 3;
                                    break;
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.WriteStream.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.commitTime != null) {
                                    if (typeof object.commitTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.WriteStream.commitTime: object expected");
                                    message.commitTime = $root.google.protobuf.Timestamp.fromObject(object.commitTime);
                                }
                                if (object.tableSchema != null) {
                                    if (typeof object.tableSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1.WriteStream.tableSchema: object expected");
                                    message.tableSchema = $root.google.cloud.bigquery.storage.v1.TableSchema.fromObject(object.tableSchema);
                                }
                                switch (object.writeMode) {
                                default:
                                    if (typeof object.writeMode === "number") {
                                        message.writeMode = object.writeMode;
                                        break;
                                    }
                                    break;
                                case "WRITE_MODE_UNSPECIFIED":
                                case 0:
                                    message.writeMode = 0;
                                    break;
                                case "INSERT":
                                case 1:
                                    message.writeMode = 1;
                                    break;
                                }
                                if (object.location != null)
                                    message.location = String(object.location);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a WriteStream message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.WriteStream} message WriteStream
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            WriteStream.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                    object.createTime = null;
                                    object.commitTime = null;
                                    object.tableSchema = null;
                                    object.writeMode = options.enums === String ? "WRITE_MODE_UNSPECIFIED" : 0;
                                    object.location = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.bigquery.storage.v1.WriteStream.Type[message.type] === undefined ? message.type : $root.google.cloud.bigquery.storage.v1.WriteStream.Type[message.type] : message.type;
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.commitTime != null && message.hasOwnProperty("commitTime"))
                                    object.commitTime = $root.google.protobuf.Timestamp.toObject(message.commitTime, options);
                                if (message.tableSchema != null && message.hasOwnProperty("tableSchema"))
                                    object.tableSchema = $root.google.cloud.bigquery.storage.v1.TableSchema.toObject(message.tableSchema, options);
                                if (message.writeMode != null && message.hasOwnProperty("writeMode"))
                                    object.writeMode = options.enums === String ? $root.google.cloud.bigquery.storage.v1.WriteStream.WriteMode[message.writeMode] === undefined ? message.writeMode : $root.google.cloud.bigquery.storage.v1.WriteStream.WriteMode[message.writeMode] : message.writeMode;
                                if (message.location != null && message.hasOwnProperty("location"))
                                    object.location = message.location;
                                return object;
                            };
    
                            /**
                             * Converts this WriteStream to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            WriteStream.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for WriteStream
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.WriteStream
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            WriteStream.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.WriteStream";
                            };
    
                            /**
                             * Type enum.
                             * @name google.cloud.bigquery.storage.v1.WriteStream.Type
                             * @enum {number}
                             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                             * @property {number} COMMITTED=1 COMMITTED value
                             * @property {number} PENDING=2 PENDING value
                             * @property {number} BUFFERED=3 BUFFERED value
                             */
                            WriteStream.Type = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "COMMITTED"] = 1;
                                values[valuesById[2] = "PENDING"] = 2;
                                values[valuesById[3] = "BUFFERED"] = 3;
                                return values;
                            })();
    
                            /**
                             * WriteMode enum.
                             * @name google.cloud.bigquery.storage.v1.WriteStream.WriteMode
                             * @enum {number}
                             * @property {number} WRITE_MODE_UNSPECIFIED=0 WRITE_MODE_UNSPECIFIED value
                             * @property {number} INSERT=1 INSERT value
                             */
                            WriteStream.WriteMode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "WRITE_MODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "INSERT"] = 1;
                                return values;
                            })();
    
                            return WriteStream;
                        })();
    
                        v1.TableSchema = (function() {
    
                            /**
                             * Properties of a TableSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface ITableSchema
                             * @property {Array.<google.cloud.bigquery.storage.v1.ITableFieldSchema>|null} [fields] TableSchema fields
                             */
    
                            /**
                             * Constructs a new TableSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a TableSchema.
                             * @implements ITableSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.ITableSchema=} [properties] Properties to set
                             */
                            function TableSchema(properties) {
                                this.fields = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TableSchema fields.
                             * @member {Array.<google.cloud.bigquery.storage.v1.ITableFieldSchema>} fields
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @instance
                             */
                            TableSchema.prototype.fields = $util.emptyArray;
    
                            /**
                             * Creates a new TableSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ITableSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.TableSchema} TableSchema instance
                             */
                            TableSchema.create = function create(properties) {
                                return new TableSchema(properties);
                            };
    
                            /**
                             * Encodes the specified TableSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1.TableSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ITableSchema} message TableSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.fields != null && message.fields.length)
                                    for (var i = 0; i < message.fields.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1.TableFieldSchema.encode(message.fields[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TableSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.TableSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ITableSchema} message TableSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TableSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.TableSchema} TableSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.TableSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.fields && message.fields.length))
                                                message.fields = [];
                                            message.fields.push($root.google.cloud.bigquery.storage.v1.TableFieldSchema.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TableSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.TableSchema} TableSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TableSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TableSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.fields != null && message.hasOwnProperty("fields")) {
                                    if (!Array.isArray(message.fields))
                                        return "fields: array expected";
                                    for (var i = 0; i < message.fields.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1.TableFieldSchema.verify(message.fields[i]);
                                        if (error)
                                            return "fields." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a TableSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.TableSchema} TableSchema
                             */
                            TableSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.TableSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.TableSchema();
                                if (object.fields) {
                                    if (!Array.isArray(object.fields))
                                        throw TypeError(".google.cloud.bigquery.storage.v1.TableSchema.fields: array expected");
                                    message.fields = [];
                                    for (var i = 0; i < object.fields.length; ++i) {
                                        if (typeof object.fields[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.TableSchema.fields: object expected");
                                        message.fields[i] = $root.google.cloud.bigquery.storage.v1.TableFieldSchema.fromObject(object.fields[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TableSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.TableSchema} message TableSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TableSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.fields = [];
                                if (message.fields && message.fields.length) {
                                    object.fields = [];
                                    for (var j = 0; j < message.fields.length; ++j)
                                        object.fields[j] = $root.google.cloud.bigquery.storage.v1.TableFieldSchema.toObject(message.fields[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this TableSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TableSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TableSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.TableSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TableSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.TableSchema";
                            };
    
                            return TableSchema;
                        })();
    
                        v1.TableFieldSchema = (function() {
    
                            /**
                             * Properties of a TableFieldSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @interface ITableFieldSchema
                             * @property {string|null} [name] TableFieldSchema name
                             * @property {google.cloud.bigquery.storage.v1.TableFieldSchema.Type|null} [type] TableFieldSchema type
                             * @property {google.cloud.bigquery.storage.v1.TableFieldSchema.Mode|null} [mode] TableFieldSchema mode
                             * @property {Array.<google.cloud.bigquery.storage.v1.ITableFieldSchema>|null} [fields] TableFieldSchema fields
                             * @property {string|null} [description] TableFieldSchema description
                             * @property {number|Long|null} [maxLength] TableFieldSchema maxLength
                             * @property {number|Long|null} [precision] TableFieldSchema precision
                             * @property {number|Long|null} [scale] TableFieldSchema scale
                             */
    
                            /**
                             * Constructs a new TableFieldSchema.
                             * @memberof google.cloud.bigquery.storage.v1
                             * @classdesc Represents a TableFieldSchema.
                             * @implements ITableFieldSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1.ITableFieldSchema=} [properties] Properties to set
                             */
                            function TableFieldSchema(properties) {
                                this.fields = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TableFieldSchema name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.name = "";
    
                            /**
                             * TableFieldSchema type.
                             * @member {google.cloud.bigquery.storage.v1.TableFieldSchema.Type} type
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.type = 0;
    
                            /**
                             * TableFieldSchema mode.
                             * @member {google.cloud.bigquery.storage.v1.TableFieldSchema.Mode} mode
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.mode = 0;
    
                            /**
                             * TableFieldSchema fields.
                             * @member {Array.<google.cloud.bigquery.storage.v1.ITableFieldSchema>} fields
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.fields = $util.emptyArray;
    
                            /**
                             * TableFieldSchema description.
                             * @member {string} description
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.description = "";
    
                            /**
                             * TableFieldSchema maxLength.
                             * @member {number|Long} maxLength
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.maxLength = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * TableFieldSchema precision.
                             * @member {number|Long} precision
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.precision = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * TableFieldSchema scale.
                             * @member {number|Long} scale
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.scale = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new TableFieldSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ITableFieldSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1.TableFieldSchema} TableFieldSchema instance
                             */
                            TableFieldSchema.create = function create(properties) {
                                return new TableFieldSchema(properties);
                            };
    
                            /**
                             * Encodes the specified TableFieldSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1.TableFieldSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ITableFieldSchema} message TableFieldSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableFieldSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.mode);
                                if (message.fields != null && message.fields.length)
                                    for (var i = 0; i < message.fields.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1.TableFieldSchema.encode(message.fields[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                                if (message.maxLength != null && Object.hasOwnProperty.call(message, "maxLength"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).int64(message.maxLength);
                                if (message.precision != null && Object.hasOwnProperty.call(message, "precision"))
                                    writer.uint32(/* id 8, wireType 0 =*/64).int64(message.precision);
                                if (message.scale != null && Object.hasOwnProperty.call(message, "scale"))
                                    writer.uint32(/* id 9, wireType 0 =*/72).int64(message.scale);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TableFieldSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1.TableFieldSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.ITableFieldSchema} message TableFieldSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableFieldSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TableFieldSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1.TableFieldSchema} TableFieldSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableFieldSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1.TableFieldSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.mode = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.fields && message.fields.length))
                                                message.fields = [];
                                            message.fields.push($root.google.cloud.bigquery.storage.v1.TableFieldSchema.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 6: {
                                            message.description = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.maxLength = reader.int64();
                                            break;
                                        }
                                    case 8: {
                                            message.precision = reader.int64();
                                            break;
                                        }
                                    case 9: {
                                            message.scale = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TableFieldSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1.TableFieldSchema} TableFieldSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableFieldSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TableFieldSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TableFieldSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 11:
                                    case 12:
                                    case 13:
                                    case 14:
                                    case 15:
                                        break;
                                    }
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    switch (message.mode) {
                                    default:
                                        return "mode: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.fields != null && message.hasOwnProperty("fields")) {
                                    if (!Array.isArray(message.fields))
                                        return "fields: array expected";
                                    for (var i = 0; i < message.fields.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1.TableFieldSchema.verify(message.fields[i]);
                                        if (error)
                                            return "fields." + error;
                                    }
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    if (!$util.isString(message.description))
                                        return "description: string expected";
                                if (message.maxLength != null && message.hasOwnProperty("maxLength"))
                                    if (!$util.isInteger(message.maxLength) && !(message.maxLength && $util.isInteger(message.maxLength.low) && $util.isInteger(message.maxLength.high)))
                                        return "maxLength: integer|Long expected";
                                if (message.precision != null && message.hasOwnProperty("precision"))
                                    if (!$util.isInteger(message.precision) && !(message.precision && $util.isInteger(message.precision.low) && $util.isInteger(message.precision.high)))
                                        return "precision: integer|Long expected";
                                if (message.scale != null && message.hasOwnProperty("scale"))
                                    if (!$util.isInteger(message.scale) && !(message.scale && $util.isInteger(message.scale.low) && $util.isInteger(message.scale.high)))
                                        return "scale: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a TableFieldSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1.TableFieldSchema} TableFieldSchema
                             */
                            TableFieldSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1.TableFieldSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1.TableFieldSchema();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "STRING":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "INT64":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "DOUBLE":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "STRUCT":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "BYTES":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "BOOL":
                                case 6:
                                    message.type = 6;
                                    break;
                                case "TIMESTAMP":
                                case 7:
                                    message.type = 7;
                                    break;
                                case "DATE":
                                case 8:
                                    message.type = 8;
                                    break;
                                case "TIME":
                                case 9:
                                    message.type = 9;
                                    break;
                                case "DATETIME":
                                case 10:
                                    message.type = 10;
                                    break;
                                case "GEOGRAPHY":
                                case 11:
                                    message.type = 11;
                                    break;
                                case "NUMERIC":
                                case 12:
                                    message.type = 12;
                                    break;
                                case "BIGNUMERIC":
                                case 13:
                                    message.type = 13;
                                    break;
                                case "INTERVAL":
                                case 14:
                                    message.type = 14;
                                    break;
                                case "JSON":
                                case 15:
                                    message.type = 15;
                                    break;
                                }
                                switch (object.mode) {
                                default:
                                    if (typeof object.mode === "number") {
                                        message.mode = object.mode;
                                        break;
                                    }
                                    break;
                                case "MODE_UNSPECIFIED":
                                case 0:
                                    message.mode = 0;
                                    break;
                                case "NULLABLE":
                                case 1:
                                    message.mode = 1;
                                    break;
                                case "REQUIRED":
                                case 2:
                                    message.mode = 2;
                                    break;
                                case "REPEATED":
                                case 3:
                                    message.mode = 3;
                                    break;
                                }
                                if (object.fields) {
                                    if (!Array.isArray(object.fields))
                                        throw TypeError(".google.cloud.bigquery.storage.v1.TableFieldSchema.fields: array expected");
                                    message.fields = [];
                                    for (var i = 0; i < object.fields.length; ++i) {
                                        if (typeof object.fields[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1.TableFieldSchema.fields: object expected");
                                        message.fields[i] = $root.google.cloud.bigquery.storage.v1.TableFieldSchema.fromObject(object.fields[i]);
                                    }
                                }
                                if (object.description != null)
                                    message.description = String(object.description);
                                if (object.maxLength != null)
                                    if ($util.Long)
                                        (message.maxLength = $util.Long.fromValue(object.maxLength)).unsigned = false;
                                    else if (typeof object.maxLength === "string")
                                        message.maxLength = parseInt(object.maxLength, 10);
                                    else if (typeof object.maxLength === "number")
                                        message.maxLength = object.maxLength;
                                    else if (typeof object.maxLength === "object")
                                        message.maxLength = new $util.LongBits(object.maxLength.low >>> 0, object.maxLength.high >>> 0).toNumber();
                                if (object.precision != null)
                                    if ($util.Long)
                                        (message.precision = $util.Long.fromValue(object.precision)).unsigned = false;
                                    else if (typeof object.precision === "string")
                                        message.precision = parseInt(object.precision, 10);
                                    else if (typeof object.precision === "number")
                                        message.precision = object.precision;
                                    else if (typeof object.precision === "object")
                                        message.precision = new $util.LongBits(object.precision.low >>> 0, object.precision.high >>> 0).toNumber();
                                if (object.scale != null)
                                    if ($util.Long)
                                        (message.scale = $util.Long.fromValue(object.scale)).unsigned = false;
                                    else if (typeof object.scale === "string")
                                        message.scale = parseInt(object.scale, 10);
                                    else if (typeof object.scale === "number")
                                        message.scale = object.scale;
                                    else if (typeof object.scale === "object")
                                        message.scale = new $util.LongBits(object.scale.low >>> 0, object.scale.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TableFieldSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1.TableFieldSchema} message TableFieldSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TableFieldSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.fields = [];
                                if (options.defaults) {
                                    object.name = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                    object.mode = options.enums === String ? "MODE_UNSPECIFIED" : 0;
                                    object.description = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.maxLength = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.maxLength = options.longs === String ? "0" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.precision = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.precision = options.longs === String ? "0" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.scale = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.scale = options.longs === String ? "0" : 0;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.bigquery.storage.v1.TableFieldSchema.Type[message.type] === undefined ? message.type : $root.google.cloud.bigquery.storage.v1.TableFieldSchema.Type[message.type] : message.type;
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    object.mode = options.enums === String ? $root.google.cloud.bigquery.storage.v1.TableFieldSchema.Mode[message.mode] === undefined ? message.mode : $root.google.cloud.bigquery.storage.v1.TableFieldSchema.Mode[message.mode] : message.mode;
                                if (message.fields && message.fields.length) {
                                    object.fields = [];
                                    for (var j = 0; j < message.fields.length; ++j)
                                        object.fields[j] = $root.google.cloud.bigquery.storage.v1.TableFieldSchema.toObject(message.fields[j], options);
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    object.description = message.description;
                                if (message.maxLength != null && message.hasOwnProperty("maxLength"))
                                    if (typeof message.maxLength === "number")
                                        object.maxLength = options.longs === String ? String(message.maxLength) : message.maxLength;
                                    else
                                        object.maxLength = options.longs === String ? $util.Long.prototype.toString.call(message.maxLength) : options.longs === Number ? new $util.LongBits(message.maxLength.low >>> 0, message.maxLength.high >>> 0).toNumber() : message.maxLength;
                                if (message.precision != null && message.hasOwnProperty("precision"))
                                    if (typeof message.precision === "number")
                                        object.precision = options.longs === String ? String(message.precision) : message.precision;
                                    else
                                        object.precision = options.longs === String ? $util.Long.prototype.toString.call(message.precision) : options.longs === Number ? new $util.LongBits(message.precision.low >>> 0, message.precision.high >>> 0).toNumber() : message.precision;
                                if (message.scale != null && message.hasOwnProperty("scale"))
                                    if (typeof message.scale === "number")
                                        object.scale = options.longs === String ? String(message.scale) : message.scale;
                                    else
                                        object.scale = options.longs === String ? $util.Long.prototype.toString.call(message.scale) : options.longs === Number ? new $util.LongBits(message.scale.low >>> 0, message.scale.high >>> 0).toNumber() : message.scale;
                                return object;
                            };
    
                            /**
                             * Converts this TableFieldSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TableFieldSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TableFieldSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1.TableFieldSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TableFieldSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1.TableFieldSchema";
                            };
    
                            /**
                             * Type enum.
                             * @name google.cloud.bigquery.storage.v1.TableFieldSchema.Type
                             * @enum {number}
                             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                             * @property {number} STRING=1 STRING value
                             * @property {number} INT64=2 INT64 value
                             * @property {number} DOUBLE=3 DOUBLE value
                             * @property {number} STRUCT=4 STRUCT value
                             * @property {number} BYTES=5 BYTES value
                             * @property {number} BOOL=6 BOOL value
                             * @property {number} TIMESTAMP=7 TIMESTAMP value
                             * @property {number} DATE=8 DATE value
                             * @property {number} TIME=9 TIME value
                             * @property {number} DATETIME=10 DATETIME value
                             * @property {number} GEOGRAPHY=11 GEOGRAPHY value
                             * @property {number} NUMERIC=12 NUMERIC value
                             * @property {number} BIGNUMERIC=13 BIGNUMERIC value
                             * @property {number} INTERVAL=14 INTERVAL value
                             * @property {number} JSON=15 JSON value
                             */
                            TableFieldSchema.Type = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "STRING"] = 1;
                                values[valuesById[2] = "INT64"] = 2;
                                values[valuesById[3] = "DOUBLE"] = 3;
                                values[valuesById[4] = "STRUCT"] = 4;
                                values[valuesById[5] = "BYTES"] = 5;
                                values[valuesById[6] = "BOOL"] = 6;
                                values[valuesById[7] = "TIMESTAMP"] = 7;
                                values[valuesById[8] = "DATE"] = 8;
                                values[valuesById[9] = "TIME"] = 9;
                                values[valuesById[10] = "DATETIME"] = 10;
                                values[valuesById[11] = "GEOGRAPHY"] = 11;
                                values[valuesById[12] = "NUMERIC"] = 12;
                                values[valuesById[13] = "BIGNUMERIC"] = 13;
                                values[valuesById[14] = "INTERVAL"] = 14;
                                values[valuesById[15] = "JSON"] = 15;
                                return values;
                            })();
    
                            /**
                             * Mode enum.
                             * @name google.cloud.bigquery.storage.v1.TableFieldSchema.Mode
                             * @enum {number}
                             * @property {number} MODE_UNSPECIFIED=0 MODE_UNSPECIFIED value
                             * @property {number} NULLABLE=1 NULLABLE value
                             * @property {number} REQUIRED=2 REQUIRED value
                             * @property {number} REPEATED=3 REPEATED value
                             */
                            TableFieldSchema.Mode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "MODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "NULLABLE"] = 1;
                                values[valuesById[2] = "REQUIRED"] = 2;
                                values[valuesById[3] = "REPEATED"] = 3;
                                return values;
                            })();
    
                            return TableFieldSchema;
                        })();
    
                        return v1;
                    })();
    
                    storage.v1beta1 = (function() {
    
                        /**
                         * Namespace v1beta1.
                         * @memberof google.cloud.bigquery.storage
                         * @namespace
                         */
                        var v1beta1 = {};
    
                        v1beta1.ArrowSchema = (function() {
    
                            /**
                             * Properties of an ArrowSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IArrowSchema
                             * @property {Uint8Array|null} [serializedSchema] ArrowSchema serializedSchema
                             */
    
                            /**
                             * Constructs a new ArrowSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents an ArrowSchema.
                             * @implements IArrowSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IArrowSchema=} [properties] Properties to set
                             */
                            function ArrowSchema(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArrowSchema serializedSchema.
                             * @member {Uint8Array} serializedSchema
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @instance
                             */
                            ArrowSchema.prototype.serializedSchema = $util.newBuffer([]);
    
                            /**
                             * Creates a new ArrowSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IArrowSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.ArrowSchema} ArrowSchema instance
                             */
                            ArrowSchema.create = function create(properties) {
                                return new ArrowSchema(properties);
                            };
    
                            /**
                             * Encodes the specified ArrowSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ArrowSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IArrowSchema} message ArrowSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedSchema != null && Object.hasOwnProperty.call(message, "serializedSchema"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedSchema);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArrowSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ArrowSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IArrowSchema} message ArrowSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArrowSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.ArrowSchema} ArrowSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.ArrowSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedSchema = reader.bytes();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArrowSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.ArrowSchema} ArrowSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArrowSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArrowSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedSchema != null && message.hasOwnProperty("serializedSchema"))
                                    if (!(message.serializedSchema && typeof message.serializedSchema.length === "number" || $util.isString(message.serializedSchema)))
                                        return "serializedSchema: buffer expected";
                                return null;
                            };
    
                            /**
                             * Creates an ArrowSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.ArrowSchema} ArrowSchema
                             */
                            ArrowSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.ArrowSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.ArrowSchema();
                                if (object.serializedSchema != null)
                                    if (typeof object.serializedSchema === "string")
                                        $util.base64.decode(object.serializedSchema, message.serializedSchema = $util.newBuffer($util.base64.length(object.serializedSchema)), 0);
                                    else if (object.serializedSchema.length >= 0)
                                        message.serializedSchema = object.serializedSchema;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArrowSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ArrowSchema} message ArrowSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArrowSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if (options.bytes === String)
                                        object.serializedSchema = "";
                                    else {
                                        object.serializedSchema = [];
                                        if (options.bytes !== Array)
                                            object.serializedSchema = $util.newBuffer(object.serializedSchema);
                                    }
                                if (message.serializedSchema != null && message.hasOwnProperty("serializedSchema"))
                                    object.serializedSchema = options.bytes === String ? $util.base64.encode(message.serializedSchema, 0, message.serializedSchema.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedSchema) : message.serializedSchema;
                                return object;
                            };
    
                            /**
                             * Converts this ArrowSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArrowSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArrowSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArrowSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.ArrowSchema";
                            };
    
                            return ArrowSchema;
                        })();
    
                        v1beta1.ArrowRecordBatch = (function() {
    
                            /**
                             * Properties of an ArrowRecordBatch.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IArrowRecordBatch
                             * @property {Uint8Array|null} [serializedRecordBatch] ArrowRecordBatch serializedRecordBatch
                             * @property {number|Long|null} [rowCount] ArrowRecordBatch rowCount
                             */
    
                            /**
                             * Constructs a new ArrowRecordBatch.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents an ArrowRecordBatch.
                             * @implements IArrowRecordBatch
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IArrowRecordBatch=} [properties] Properties to set
                             */
                            function ArrowRecordBatch(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArrowRecordBatch serializedRecordBatch.
                             * @member {Uint8Array} serializedRecordBatch
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @instance
                             */
                            ArrowRecordBatch.prototype.serializedRecordBatch = $util.newBuffer([]);
    
                            /**
                             * ArrowRecordBatch rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @instance
                             */
                            ArrowRecordBatch.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new ArrowRecordBatch instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IArrowRecordBatch=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch} ArrowRecordBatch instance
                             */
                            ArrowRecordBatch.create = function create(properties) {
                                return new ArrowRecordBatch(properties);
                            };
    
                            /**
                             * Encodes the specified ArrowRecordBatch message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IArrowRecordBatch} message ArrowRecordBatch message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowRecordBatch.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedRecordBatch != null && Object.hasOwnProperty.call(message, "serializedRecordBatch"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedRecordBatch);
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.rowCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArrowRecordBatch message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IArrowRecordBatch} message ArrowRecordBatch message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowRecordBatch.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArrowRecordBatch message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch} ArrowRecordBatch
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowRecordBatch.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedRecordBatch = reader.bytes();
                                            break;
                                        }
                                    case 2: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArrowRecordBatch message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch} ArrowRecordBatch
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowRecordBatch.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArrowRecordBatch message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArrowRecordBatch.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedRecordBatch != null && message.hasOwnProperty("serializedRecordBatch"))
                                    if (!(message.serializedRecordBatch && typeof message.serializedRecordBatch.length === "number" || $util.isString(message.serializedRecordBatch)))
                                        return "serializedRecordBatch: buffer expected";
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates an ArrowRecordBatch message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch} ArrowRecordBatch
                             */
                            ArrowRecordBatch.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch();
                                if (object.serializedRecordBatch != null)
                                    if (typeof object.serializedRecordBatch === "string")
                                        $util.base64.decode(object.serializedRecordBatch, message.serializedRecordBatch = $util.newBuffer($util.base64.length(object.serializedRecordBatch)), 0);
                                    else if (object.serializedRecordBatch.length >= 0)
                                        message.serializedRecordBatch = object.serializedRecordBatch;
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArrowRecordBatch message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch} message ArrowRecordBatch
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArrowRecordBatch.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if (options.bytes === String)
                                        object.serializedRecordBatch = "";
                                    else {
                                        object.serializedRecordBatch = [];
                                        if (options.bytes !== Array)
                                            object.serializedRecordBatch = $util.newBuffer(object.serializedRecordBatch);
                                    }
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                }
                                if (message.serializedRecordBatch != null && message.hasOwnProperty("serializedRecordBatch"))
                                    object.serializedRecordBatch = options.bytes === String ? $util.base64.encode(message.serializedRecordBatch, 0, message.serializedRecordBatch.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedRecordBatch) : message.serializedRecordBatch;
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                return object;
                            };
    
                            /**
                             * Converts this ArrowRecordBatch to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArrowRecordBatch.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArrowRecordBatch
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArrowRecordBatch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch";
                            };
    
                            return ArrowRecordBatch;
                        })();
    
                        v1beta1.AvroSchema = (function() {
    
                            /**
                             * Properties of an AvroSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IAvroSchema
                             * @property {string|null} [schema] AvroSchema schema
                             */
    
                            /**
                             * Constructs a new AvroSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents an AvroSchema.
                             * @implements IAvroSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IAvroSchema=} [properties] Properties to set
                             */
                            function AvroSchema(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AvroSchema schema.
                             * @member {string} schema
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @instance
                             */
                            AvroSchema.prototype.schema = "";
    
                            /**
                             * Creates a new AvroSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IAvroSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.AvroSchema} AvroSchema instance
                             */
                            AvroSchema.create = function create(properties) {
                                return new AvroSchema(properties);
                            };
    
                            /**
                             * Encodes the specified AvroSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.AvroSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IAvroSchema} message AvroSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.schema);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AvroSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.AvroSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IAvroSchema} message AvroSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AvroSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.AvroSchema} AvroSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.AvroSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.schema = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AvroSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.AvroSchema} AvroSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AvroSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AvroSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    if (!$util.isString(message.schema))
                                        return "schema: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an AvroSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.AvroSchema} AvroSchema
                             */
                            AvroSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.AvroSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.AvroSchema();
                                if (object.schema != null)
                                    message.schema = String(object.schema);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AvroSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.AvroSchema} message AvroSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AvroSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.schema = "";
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    object.schema = message.schema;
                                return object;
                            };
    
                            /**
                             * Converts this AvroSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AvroSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AvroSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AvroSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.AvroSchema";
                            };
    
                            return AvroSchema;
                        })();
    
                        v1beta1.AvroRows = (function() {
    
                            /**
                             * Properties of an AvroRows.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IAvroRows
                             * @property {Uint8Array|null} [serializedBinaryRows] AvroRows serializedBinaryRows
                             * @property {number|Long|null} [rowCount] AvroRows rowCount
                             */
    
                            /**
                             * Constructs a new AvroRows.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents an AvroRows.
                             * @implements IAvroRows
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IAvroRows=} [properties] Properties to set
                             */
                            function AvroRows(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AvroRows serializedBinaryRows.
                             * @member {Uint8Array} serializedBinaryRows
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @instance
                             */
                            AvroRows.prototype.serializedBinaryRows = $util.newBuffer([]);
    
                            /**
                             * AvroRows rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @instance
                             */
                            AvroRows.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new AvroRows instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IAvroRows=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.AvroRows} AvroRows instance
                             */
                            AvroRows.create = function create(properties) {
                                return new AvroRows(properties);
                            };
    
                            /**
                             * Encodes the specified AvroRows message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.AvroRows.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IAvroRows} message AvroRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroRows.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedBinaryRows != null && Object.hasOwnProperty.call(message, "serializedBinaryRows"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedBinaryRows);
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.rowCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AvroRows message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.AvroRows.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IAvroRows} message AvroRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroRows.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AvroRows message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.AvroRows} AvroRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroRows.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.AvroRows();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedBinaryRows = reader.bytes();
                                            break;
                                        }
                                    case 2: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AvroRows message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.AvroRows} AvroRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroRows.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AvroRows message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AvroRows.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedBinaryRows != null && message.hasOwnProperty("serializedBinaryRows"))
                                    if (!(message.serializedBinaryRows && typeof message.serializedBinaryRows.length === "number" || $util.isString(message.serializedBinaryRows)))
                                        return "serializedBinaryRows: buffer expected";
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates an AvroRows message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.AvroRows} AvroRows
                             */
                            AvroRows.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.AvroRows)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.AvroRows();
                                if (object.serializedBinaryRows != null)
                                    if (typeof object.serializedBinaryRows === "string")
                                        $util.base64.decode(object.serializedBinaryRows, message.serializedBinaryRows = $util.newBuffer($util.base64.length(object.serializedBinaryRows)), 0);
                                    else if (object.serializedBinaryRows.length >= 0)
                                        message.serializedBinaryRows = object.serializedBinaryRows;
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AvroRows message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.AvroRows} message AvroRows
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AvroRows.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if (options.bytes === String)
                                        object.serializedBinaryRows = "";
                                    else {
                                        object.serializedBinaryRows = [];
                                        if (options.bytes !== Array)
                                            object.serializedBinaryRows = $util.newBuffer(object.serializedBinaryRows);
                                    }
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                }
                                if (message.serializedBinaryRows != null && message.hasOwnProperty("serializedBinaryRows"))
                                    object.serializedBinaryRows = options.bytes === String ? $util.base64.encode(message.serializedBinaryRows, 0, message.serializedBinaryRows.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedBinaryRows) : message.serializedBinaryRows;
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                return object;
                            };
    
                            /**
                             * Converts this AvroRows to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AvroRows.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AvroRows
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.AvroRows
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AvroRows.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.AvroRows";
                            };
    
                            return AvroRows;
                        })();
    
                        v1beta1.TableReadOptions = (function() {
    
                            /**
                             * Properties of a TableReadOptions.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface ITableReadOptions
                             * @property {Array.<string>|null} [selectedFields] TableReadOptions selectedFields
                             * @property {string|null} [rowRestriction] TableReadOptions rowRestriction
                             */
    
                            /**
                             * Constructs a new TableReadOptions.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a TableReadOptions.
                             * @implements ITableReadOptions
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableReadOptions=} [properties] Properties to set
                             */
                            function TableReadOptions(properties) {
                                this.selectedFields = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TableReadOptions selectedFields.
                             * @member {Array.<string>} selectedFields
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @instance
                             */
                            TableReadOptions.prototype.selectedFields = $util.emptyArray;
    
                            /**
                             * TableReadOptions rowRestriction.
                             * @member {string} rowRestriction
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @instance
                             */
                            TableReadOptions.prototype.rowRestriction = "";
    
                            /**
                             * Creates a new TableReadOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableReadOptions=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableReadOptions} TableReadOptions instance
                             */
                            TableReadOptions.create = function create(properties) {
                                return new TableReadOptions(properties);
                            };
    
                            /**
                             * Encodes the specified TableReadOptions message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.TableReadOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableReadOptions} message TableReadOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableReadOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.selectedFields != null && message.selectedFields.length)
                                    for (var i = 0; i < message.selectedFields.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selectedFields[i]);
                                if (message.rowRestriction != null && Object.hasOwnProperty.call(message, "rowRestriction"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.rowRestriction);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TableReadOptions message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.TableReadOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableReadOptions} message TableReadOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableReadOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TableReadOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableReadOptions} TableReadOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableReadOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.TableReadOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.selectedFields && message.selectedFields.length))
                                                message.selectedFields = [];
                                            message.selectedFields.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            message.rowRestriction = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TableReadOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableReadOptions} TableReadOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableReadOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TableReadOptions message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TableReadOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.selectedFields != null && message.hasOwnProperty("selectedFields")) {
                                    if (!Array.isArray(message.selectedFields))
                                        return "selectedFields: array expected";
                                    for (var i = 0; i < message.selectedFields.length; ++i)
                                        if (!$util.isString(message.selectedFields[i]))
                                            return "selectedFields: string[] expected";
                                }
                                if (message.rowRestriction != null && message.hasOwnProperty("rowRestriction"))
                                    if (!$util.isString(message.rowRestriction))
                                        return "rowRestriction: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a TableReadOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableReadOptions} TableReadOptions
                             */
                            TableReadOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.TableReadOptions)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.TableReadOptions();
                                if (object.selectedFields) {
                                    if (!Array.isArray(object.selectedFields))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.TableReadOptions.selectedFields: array expected");
                                    message.selectedFields = [];
                                    for (var i = 0; i < object.selectedFields.length; ++i)
                                        message.selectedFields[i] = String(object.selectedFields[i]);
                                }
                                if (object.rowRestriction != null)
                                    message.rowRestriction = String(object.rowRestriction);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TableReadOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.TableReadOptions} message TableReadOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TableReadOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.selectedFields = [];
                                if (options.defaults)
                                    object.rowRestriction = "";
                                if (message.selectedFields && message.selectedFields.length) {
                                    object.selectedFields = [];
                                    for (var j = 0; j < message.selectedFields.length; ++j)
                                        object.selectedFields[j] = message.selectedFields[j];
                                }
                                if (message.rowRestriction != null && message.hasOwnProperty("rowRestriction"))
                                    object.rowRestriction = message.rowRestriction;
                                return object;
                            };
    
                            /**
                             * Converts this TableReadOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TableReadOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TableReadOptions
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReadOptions
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TableReadOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.TableReadOptions";
                            };
    
                            return TableReadOptions;
                        })();
    
                        v1beta1.BigQueryStorage = (function() {
    
                            /**
                             * Constructs a new BigQueryStorage service.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a BigQueryStorage
                             * @extends $protobuf.rpc.Service
                             * @constructor
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             */
                            function BigQueryStorage(rpcImpl, requestDelimited, responseDelimited) {
                                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                            }
    
                            (BigQueryStorage.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BigQueryStorage;
    
                            /**
                             * Creates new BigQueryStorage service using the specified rpc implementation.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @static
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             * @returns {BigQueryStorage} RPC service. Useful where requests and/or responses are streamed.
                             */
                            BigQueryStorage.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                                return new this(rpcImpl, requestDelimited, responseDelimited);
                            };
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta1.BigQueryStorage|createReadSession}.
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @typedef CreateReadSessionCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta1.ReadSession} [response] ReadSession
                             */
    
                            /**
                             * Calls CreateReadSession.
                             * @function createReadSession
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.ICreateReadSessionRequest} request CreateReadSessionRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta1.BigQueryStorage.CreateReadSessionCallback} callback Node-style callback called with the error, if any, and ReadSession
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryStorage.prototype.createReadSession = function createReadSession(request, callback) {
                                return this.rpcCall(createReadSession, $root.google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest, $root.google.cloud.bigquery.storage.v1beta1.ReadSession, request, callback);
                            }, "name", { value: "CreateReadSession" });
    
                            /**
                             * Calls CreateReadSession.
                             * @function createReadSession
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.ICreateReadSessionRequest} request CreateReadSessionRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta1.ReadSession>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta1.BigQueryStorage|readRows}.
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @typedef ReadRowsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta1.ReadRowsResponse} [response] ReadRowsResponse
                             */
    
                            /**
                             * Calls ReadRows.
                             * @function readRows
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsRequest} request ReadRowsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta1.BigQueryStorage.ReadRowsCallback} callback Node-style callback called with the error, if any, and ReadRowsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryStorage.prototype.readRows = function readRows(request, callback) {
                                return this.rpcCall(readRows, $root.google.cloud.bigquery.storage.v1beta1.ReadRowsRequest, $root.google.cloud.bigquery.storage.v1beta1.ReadRowsResponse, request, callback);
                            }, "name", { value: "ReadRows" });
    
                            /**
                             * Calls ReadRows.
                             * @function readRows
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsRequest} request ReadRowsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta1.ReadRowsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta1.BigQueryStorage|batchCreateReadSessionStreams}.
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @typedef BatchCreateReadSessionStreamsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse} [response] BatchCreateReadSessionStreamsResponse
                             */
    
                            /**
                             * Calls BatchCreateReadSessionStreams.
                             * @function batchCreateReadSessionStreams
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsRequest} request BatchCreateReadSessionStreamsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta1.BigQueryStorage.BatchCreateReadSessionStreamsCallback} callback Node-style callback called with the error, if any, and BatchCreateReadSessionStreamsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryStorage.prototype.batchCreateReadSessionStreams = function batchCreateReadSessionStreams(request, callback) {
                                return this.rpcCall(batchCreateReadSessionStreams, $root.google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest, $root.google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse, request, callback);
                            }, "name", { value: "BatchCreateReadSessionStreams" });
    
                            /**
                             * Calls BatchCreateReadSessionStreams.
                             * @function batchCreateReadSessionStreams
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsRequest} request BatchCreateReadSessionStreamsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta1.BigQueryStorage|finalizeStream}.
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @typedef FinalizeStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.protobuf.Empty} [response] Empty
                             */
    
                            /**
                             * Calls FinalizeStream.
                             * @function finalizeStream
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.IFinalizeStreamRequest} request FinalizeStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta1.BigQueryStorage.FinalizeStreamCallback} callback Node-style callback called with the error, if any, and Empty
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryStorage.prototype.finalizeStream = function finalizeStream(request, callback) {
                                return this.rpcCall(finalizeStream, $root.google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest, $root.google.protobuf.Empty, request, callback);
                            }, "name", { value: "FinalizeStream" });
    
                            /**
                             * Calls FinalizeStream.
                             * @function finalizeStream
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.IFinalizeStreamRequest} request FinalizeStreamRequest message or plain object
                             * @returns {Promise<google.protobuf.Empty>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta1.BigQueryStorage|splitReadStream}.
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @typedef SplitReadStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse} [response] SplitReadStreamResponse
                             */
    
                            /**
                             * Calls SplitReadStream.
                             * @function splitReadStream
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamRequest} request SplitReadStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta1.BigQueryStorage.SplitReadStreamCallback} callback Node-style callback called with the error, if any, and SplitReadStreamResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryStorage.prototype.splitReadStream = function splitReadStream(request, callback) {
                                return this.rpcCall(splitReadStream, $root.google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest, $root.google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse, request, callback);
                            }, "name", { value: "SplitReadStream" });
    
                            /**
                             * Calls SplitReadStream.
                             * @function splitReadStream
                             * @memberof google.cloud.bigquery.storage.v1beta1.BigQueryStorage
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamRequest} request SplitReadStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse>} Promise
                             * @variation 2
                             */
    
                            return BigQueryStorage;
                        })();
    
                        v1beta1.Stream = (function() {
    
                            /**
                             * Properties of a Stream.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IStream
                             * @property {string|null} [name] Stream name
                             */
    
                            /**
                             * Constructs a new Stream.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a Stream.
                             * @implements IStream
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IStream=} [properties] Properties to set
                             */
                            function Stream(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Stream name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @instance
                             */
                            Stream.prototype.name = "";
    
                            /**
                             * Creates a new Stream instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStream=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.Stream} Stream instance
                             */
                            Stream.create = function create(properties) {
                                return new Stream(properties);
                            };
    
                            /**
                             * Encodes the specified Stream message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.Stream.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStream} message Stream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Stream.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Stream message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.Stream.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStream} message Stream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Stream.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Stream message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.Stream} Stream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Stream.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.Stream();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Stream message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.Stream} Stream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Stream.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Stream message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Stream.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Stream message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.Stream} Stream
                             */
                            Stream.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.Stream)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.Stream();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Stream message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.Stream} message Stream
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Stream.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this Stream to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Stream.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Stream
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.Stream
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Stream.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.Stream";
                            };
    
                            return Stream;
                        })();
    
                        v1beta1.StreamPosition = (function() {
    
                            /**
                             * Properties of a StreamPosition.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IStreamPosition
                             * @property {google.cloud.bigquery.storage.v1beta1.IStream|null} [stream] StreamPosition stream
                             * @property {number|Long|null} [offset] StreamPosition offset
                             */
    
                            /**
                             * Constructs a new StreamPosition.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a StreamPosition.
                             * @implements IStreamPosition
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IStreamPosition=} [properties] Properties to set
                             */
                            function StreamPosition(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StreamPosition stream.
                             * @member {google.cloud.bigquery.storage.v1beta1.IStream|null|undefined} stream
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @instance
                             */
                            StreamPosition.prototype.stream = null;
    
                            /**
                             * StreamPosition offset.
                             * @member {number|Long} offset
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @instance
                             */
                            StreamPosition.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new StreamPosition instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStreamPosition=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.StreamPosition} StreamPosition instance
                             */
                            StreamPosition.create = function create(properties) {
                                return new StreamPosition(properties);
                            };
    
                            /**
                             * Encodes the specified StreamPosition message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.StreamPosition.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStreamPosition} message StreamPosition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamPosition.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.stream != null && Object.hasOwnProperty.call(message, "stream"))
                                    $root.google.cloud.bigquery.storage.v1beta1.Stream.encode(message.stream, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.offset);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StreamPosition message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.StreamPosition.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStreamPosition} message StreamPosition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamPosition.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StreamPosition message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.StreamPosition} StreamPosition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamPosition.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.StreamPosition();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.stream = $root.google.cloud.bigquery.storage.v1beta1.Stream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.offset = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StreamPosition message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.StreamPosition} StreamPosition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamPosition.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StreamPosition message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StreamPosition.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.stream != null && message.hasOwnProperty("stream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.Stream.verify(message.stream);
                                    if (error)
                                        return "stream." + error;
                                }
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                        return "offset: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a StreamPosition message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.StreamPosition} StreamPosition
                             */
                            StreamPosition.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.StreamPosition)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.StreamPosition();
                                if (object.stream != null) {
                                    if (typeof object.stream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.StreamPosition.stream: object expected");
                                    message.stream = $root.google.cloud.bigquery.storage.v1beta1.Stream.fromObject(object.stream);
                                }
                                if (object.offset != null)
                                    if ($util.Long)
                                        (message.offset = $util.Long.fromValue(object.offset)).unsigned = false;
                                    else if (typeof object.offset === "string")
                                        message.offset = parseInt(object.offset, 10);
                                    else if (typeof object.offset === "number")
                                        message.offset = object.offset;
                                    else if (typeof object.offset === "object")
                                        message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StreamPosition message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.StreamPosition} message StreamPosition
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StreamPosition.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.stream = null;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.offset = options.longs === String ? "0" : 0;
                                }
                                if (message.stream != null && message.hasOwnProperty("stream"))
                                    object.stream = $root.google.cloud.bigquery.storage.v1beta1.Stream.toObject(message.stream, options);
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (typeof message.offset === "number")
                                        object.offset = options.longs === String ? String(message.offset) : message.offset;
                                    else
                                        object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber() : message.offset;
                                return object;
                            };
    
                            /**
                             * Converts this StreamPosition to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StreamPosition.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StreamPosition
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamPosition
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StreamPosition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.StreamPosition";
                            };
    
                            return StreamPosition;
                        })();
    
                        v1beta1.ReadSession = (function() {
    
                            /**
                             * Properties of a ReadSession.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IReadSession
                             * @property {string|null} [name] ReadSession name
                             * @property {google.protobuf.ITimestamp|null} [expireTime] ReadSession expireTime
                             * @property {google.cloud.bigquery.storage.v1beta1.IAvroSchema|null} [avroSchema] ReadSession avroSchema
                             * @property {google.cloud.bigquery.storage.v1beta1.IArrowSchema|null} [arrowSchema] ReadSession arrowSchema
                             * @property {Array.<google.cloud.bigquery.storage.v1beta1.IStream>|null} [streams] ReadSession streams
                             * @property {google.cloud.bigquery.storage.v1beta1.ITableReference|null} [tableReference] ReadSession tableReference
                             * @property {google.cloud.bigquery.storage.v1beta1.ITableModifiers|null} [tableModifiers] ReadSession tableModifiers
                             * @property {google.cloud.bigquery.storage.v1beta1.ShardingStrategy|null} [shardingStrategy] ReadSession shardingStrategy
                             */
    
                            /**
                             * Constructs a new ReadSession.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a ReadSession.
                             * @implements IReadSession
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadSession=} [properties] Properties to set
                             */
                            function ReadSession(properties) {
                                this.streams = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadSession name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.name = "";
    
                            /**
                             * ReadSession expireTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.expireTime = null;
    
                            /**
                             * ReadSession avroSchema.
                             * @member {google.cloud.bigquery.storage.v1beta1.IAvroSchema|null|undefined} avroSchema
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.avroSchema = null;
    
                            /**
                             * ReadSession arrowSchema.
                             * @member {google.cloud.bigquery.storage.v1beta1.IArrowSchema|null|undefined} arrowSchema
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.arrowSchema = null;
    
                            /**
                             * ReadSession streams.
                             * @member {Array.<google.cloud.bigquery.storage.v1beta1.IStream>} streams
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.streams = $util.emptyArray;
    
                            /**
                             * ReadSession tableReference.
                             * @member {google.cloud.bigquery.storage.v1beta1.ITableReference|null|undefined} tableReference
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.tableReference = null;
    
                            /**
                             * ReadSession tableModifiers.
                             * @member {google.cloud.bigquery.storage.v1beta1.ITableModifiers|null|undefined} tableModifiers
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.tableModifiers = null;
    
                            /**
                             * ReadSession shardingStrategy.
                             * @member {google.cloud.bigquery.storage.v1beta1.ShardingStrategy} shardingStrategy
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.shardingStrategy = 0;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * ReadSession schema.
                             * @member {"avroSchema"|"arrowSchema"|undefined} schema
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             */
                            Object.defineProperty(ReadSession.prototype, "schema", {
                                get: $util.oneOfGetter($oneOfFields = ["avroSchema", "arrowSchema"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new ReadSession instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadSession=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadSession} ReadSession instance
                             */
                            ReadSession.create = function create(properties) {
                                return new ReadSession(properties);
                            };
    
                            /**
                             * Encodes the specified ReadSession message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ReadSession.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadSession} message ReadSession message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadSession.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                    $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.streams != null && message.streams.length)
                                    for (var i = 0; i < message.streams.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1beta1.Stream.encode(message.streams[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.avroSchema != null && Object.hasOwnProperty.call(message, "avroSchema"))
                                    $root.google.cloud.bigquery.storage.v1beta1.AvroSchema.encode(message.avroSchema, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.arrowSchema != null && Object.hasOwnProperty.call(message, "arrowSchema"))
                                    $root.google.cloud.bigquery.storage.v1beta1.ArrowSchema.encode(message.arrowSchema, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.tableReference != null && Object.hasOwnProperty.call(message, "tableReference"))
                                    $root.google.cloud.bigquery.storage.v1beta1.TableReference.encode(message.tableReference, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.tableModifiers != null && Object.hasOwnProperty.call(message, "tableModifiers"))
                                    $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.encode(message.tableModifiers, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.shardingStrategy != null && Object.hasOwnProperty.call(message, "shardingStrategy"))
                                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.shardingStrategy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadSession message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ReadSession.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadSession} message ReadSession message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadSession.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadSession message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadSession} ReadSession
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadSession.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.ReadSession();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.avroSchema = $root.google.cloud.bigquery.storage.v1beta1.AvroSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.arrowSchema = $root.google.cloud.bigquery.storage.v1beta1.ArrowSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.streams && message.streams.length))
                                                message.streams = [];
                                            message.streams.push($root.google.cloud.bigquery.storage.v1beta1.Stream.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 7: {
                                            message.tableReference = $root.google.cloud.bigquery.storage.v1beta1.TableReference.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.tableModifiers = $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 9: {
                                            message.shardingStrategy = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadSession message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadSession} ReadSession
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadSession.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadSession message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadSession.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                    if (error)
                                        return "expireTime." + error;
                                }
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta1.AvroSchema.verify(message.avroSchema);
                                        if (error)
                                            return "avroSchema." + error;
                                    }
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    if (properties.schema === 1)
                                        return "schema: multiple values";
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta1.ArrowSchema.verify(message.arrowSchema);
                                        if (error)
                                            return "arrowSchema." + error;
                                    }
                                }
                                if (message.streams != null && message.hasOwnProperty("streams")) {
                                    if (!Array.isArray(message.streams))
                                        return "streams: array expected";
                                    for (var i = 0; i < message.streams.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta1.Stream.verify(message.streams[i]);
                                        if (error)
                                            return "streams." + error;
                                    }
                                }
                                if (message.tableReference != null && message.hasOwnProperty("tableReference")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.TableReference.verify(message.tableReference);
                                    if (error)
                                        return "tableReference." + error;
                                }
                                if (message.tableModifiers != null && message.hasOwnProperty("tableModifiers")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.verify(message.tableModifiers);
                                    if (error)
                                        return "tableModifiers." + error;
                                }
                                if (message.shardingStrategy != null && message.hasOwnProperty("shardingStrategy"))
                                    switch (message.shardingStrategy) {
                                    default:
                                        return "shardingStrategy: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a ReadSession message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadSession} ReadSession
                             */
                            ReadSession.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.ReadSession)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.ReadSession();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.expireTime != null) {
                                    if (typeof object.expireTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadSession.expireTime: object expected");
                                    message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                                }
                                if (object.avroSchema != null) {
                                    if (typeof object.avroSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadSession.avroSchema: object expected");
                                    message.avroSchema = $root.google.cloud.bigquery.storage.v1beta1.AvroSchema.fromObject(object.avroSchema);
                                }
                                if (object.arrowSchema != null) {
                                    if (typeof object.arrowSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadSession.arrowSchema: object expected");
                                    message.arrowSchema = $root.google.cloud.bigquery.storage.v1beta1.ArrowSchema.fromObject(object.arrowSchema);
                                }
                                if (object.streams) {
                                    if (!Array.isArray(object.streams))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadSession.streams: array expected");
                                    message.streams = [];
                                    for (var i = 0; i < object.streams.length; ++i) {
                                        if (typeof object.streams[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadSession.streams: object expected");
                                        message.streams[i] = $root.google.cloud.bigquery.storage.v1beta1.Stream.fromObject(object.streams[i]);
                                    }
                                }
                                if (object.tableReference != null) {
                                    if (typeof object.tableReference !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadSession.tableReference: object expected");
                                    message.tableReference = $root.google.cloud.bigquery.storage.v1beta1.TableReference.fromObject(object.tableReference);
                                }
                                if (object.tableModifiers != null) {
                                    if (typeof object.tableModifiers !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadSession.tableModifiers: object expected");
                                    message.tableModifiers = $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.fromObject(object.tableModifiers);
                                }
                                switch (object.shardingStrategy) {
                                default:
                                    if (typeof object.shardingStrategy === "number") {
                                        message.shardingStrategy = object.shardingStrategy;
                                        break;
                                    }
                                    break;
                                case "SHARDING_STRATEGY_UNSPECIFIED":
                                case 0:
                                    message.shardingStrategy = 0;
                                    break;
                                case "LIQUID":
                                case 1:
                                    message.shardingStrategy = 1;
                                    break;
                                case "BALANCED":
                                case 2:
                                    message.shardingStrategy = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadSession message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ReadSession} message ReadSession
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadSession.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.streams = [];
                                if (options.defaults) {
                                    object.name = "";
                                    object.expireTime = null;
                                    object.tableReference = null;
                                    object.tableModifiers = null;
                                    object.shardingStrategy = options.enums === String ? "SHARDING_STRATEGY_UNSPECIFIED" : 0;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                    object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                                if (message.streams && message.streams.length) {
                                    object.streams = [];
                                    for (var j = 0; j < message.streams.length; ++j)
                                        object.streams[j] = $root.google.cloud.bigquery.storage.v1beta1.Stream.toObject(message.streams[j], options);
                                }
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    object.avroSchema = $root.google.cloud.bigquery.storage.v1beta1.AvroSchema.toObject(message.avroSchema, options);
                                    if (options.oneofs)
                                        object.schema = "avroSchema";
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    object.arrowSchema = $root.google.cloud.bigquery.storage.v1beta1.ArrowSchema.toObject(message.arrowSchema, options);
                                    if (options.oneofs)
                                        object.schema = "arrowSchema";
                                }
                                if (message.tableReference != null && message.hasOwnProperty("tableReference"))
                                    object.tableReference = $root.google.cloud.bigquery.storage.v1beta1.TableReference.toObject(message.tableReference, options);
                                if (message.tableModifiers != null && message.hasOwnProperty("tableModifiers"))
                                    object.tableModifiers = $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.toObject(message.tableModifiers, options);
                                if (message.shardingStrategy != null && message.hasOwnProperty("shardingStrategy"))
                                    object.shardingStrategy = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta1.ShardingStrategy[message.shardingStrategy] === undefined ? message.shardingStrategy : $root.google.cloud.bigquery.storage.v1beta1.ShardingStrategy[message.shardingStrategy] : message.shardingStrategy;
                                return object;
                            };
    
                            /**
                             * Converts this ReadSession to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadSession.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadSession
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadSession
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadSession.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.ReadSession";
                            };
    
                            return ReadSession;
                        })();
    
                        v1beta1.CreateReadSessionRequest = (function() {
    
                            /**
                             * Properties of a CreateReadSessionRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface ICreateReadSessionRequest
                             * @property {google.cloud.bigquery.storage.v1beta1.ITableReference|null} [tableReference] CreateReadSessionRequest tableReference
                             * @property {string|null} [parent] CreateReadSessionRequest parent
                             * @property {google.cloud.bigquery.storage.v1beta1.ITableModifiers|null} [tableModifiers] CreateReadSessionRequest tableModifiers
                             * @property {number|null} [requestedStreams] CreateReadSessionRequest requestedStreams
                             * @property {google.cloud.bigquery.storage.v1beta1.ITableReadOptions|null} [readOptions] CreateReadSessionRequest readOptions
                             * @property {google.cloud.bigquery.storage.v1beta1.DataFormat|null} [format] CreateReadSessionRequest format
                             * @property {google.cloud.bigquery.storage.v1beta1.ShardingStrategy|null} [shardingStrategy] CreateReadSessionRequest shardingStrategy
                             */
    
                            /**
                             * Constructs a new CreateReadSessionRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a CreateReadSessionRequest.
                             * @implements ICreateReadSessionRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.ICreateReadSessionRequest=} [properties] Properties to set
                             */
                            function CreateReadSessionRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateReadSessionRequest tableReference.
                             * @member {google.cloud.bigquery.storage.v1beta1.ITableReference|null|undefined} tableReference
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.tableReference = null;
    
                            /**
                             * CreateReadSessionRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.parent = "";
    
                            /**
                             * CreateReadSessionRequest tableModifiers.
                             * @member {google.cloud.bigquery.storage.v1beta1.ITableModifiers|null|undefined} tableModifiers
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.tableModifiers = null;
    
                            /**
                             * CreateReadSessionRequest requestedStreams.
                             * @member {number} requestedStreams
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.requestedStreams = 0;
    
                            /**
                             * CreateReadSessionRequest readOptions.
                             * @member {google.cloud.bigquery.storage.v1beta1.ITableReadOptions|null|undefined} readOptions
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.readOptions = null;
    
                            /**
                             * CreateReadSessionRequest format.
                             * @member {google.cloud.bigquery.storage.v1beta1.DataFormat} format
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.format = 0;
    
                            /**
                             * CreateReadSessionRequest shardingStrategy.
                             * @member {google.cloud.bigquery.storage.v1beta1.ShardingStrategy} shardingStrategy
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.shardingStrategy = 0;
    
                            /**
                             * Creates a new CreateReadSessionRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ICreateReadSessionRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest} CreateReadSessionRequest instance
                             */
                            CreateReadSessionRequest.create = function create(properties) {
                                return new CreateReadSessionRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateReadSessionRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ICreateReadSessionRequest} message CreateReadSessionRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateReadSessionRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.tableReference != null && Object.hasOwnProperty.call(message, "tableReference"))
                                    $root.google.cloud.bigquery.storage.v1beta1.TableReference.encode(message.tableReference, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.tableModifiers != null && Object.hasOwnProperty.call(message, "tableModifiers"))
                                    $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.encode(message.tableModifiers, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestedStreams != null && Object.hasOwnProperty.call(message, "requestedStreams"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.requestedStreams);
                                if (message.readOptions != null && Object.hasOwnProperty.call(message, "readOptions"))
                                    $root.google.cloud.bigquery.storage.v1beta1.TableReadOptions.encode(message.readOptions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.format);
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.parent);
                                if (message.shardingStrategy != null && Object.hasOwnProperty.call(message, "shardingStrategy"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.shardingStrategy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateReadSessionRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ICreateReadSessionRequest} message CreateReadSessionRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateReadSessionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateReadSessionRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest} CreateReadSessionRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateReadSessionRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.tableReference = $root.google.cloud.bigquery.storage.v1beta1.TableReference.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.tableModifiers = $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestedStreams = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.readOptions = $root.google.cloud.bigquery.storage.v1beta1.TableReadOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.format = reader.int32();
                                            break;
                                        }
                                    case 7: {
                                            message.shardingStrategy = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateReadSessionRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest} CreateReadSessionRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateReadSessionRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateReadSessionRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateReadSessionRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.tableReference != null && message.hasOwnProperty("tableReference")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.TableReference.verify(message.tableReference);
                                    if (error)
                                        return "tableReference." + error;
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.tableModifiers != null && message.hasOwnProperty("tableModifiers")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.verify(message.tableModifiers);
                                    if (error)
                                        return "tableModifiers." + error;
                                }
                                if (message.requestedStreams != null && message.hasOwnProperty("requestedStreams"))
                                    if (!$util.isInteger(message.requestedStreams))
                                        return "requestedStreams: integer expected";
                                if (message.readOptions != null && message.hasOwnProperty("readOptions")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.TableReadOptions.verify(message.readOptions);
                                    if (error)
                                        return "readOptions." + error;
                                }
                                if (message.format != null && message.hasOwnProperty("format"))
                                    switch (message.format) {
                                    default:
                                        return "format: enum value expected";
                                    case 0:
                                    case 1:
                                    case 3:
                                        break;
                                    }
                                if (message.shardingStrategy != null && message.hasOwnProperty("shardingStrategy"))
                                    switch (message.shardingStrategy) {
                                    default:
                                        return "shardingStrategy: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a CreateReadSessionRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest} CreateReadSessionRequest
                             */
                            CreateReadSessionRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest();
                                if (object.tableReference != null) {
                                    if (typeof object.tableReference !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest.tableReference: object expected");
                                    message.tableReference = $root.google.cloud.bigquery.storage.v1beta1.TableReference.fromObject(object.tableReference);
                                }
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.tableModifiers != null) {
                                    if (typeof object.tableModifiers !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest.tableModifiers: object expected");
                                    message.tableModifiers = $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.fromObject(object.tableModifiers);
                                }
                                if (object.requestedStreams != null)
                                    message.requestedStreams = object.requestedStreams | 0;
                                if (object.readOptions != null) {
                                    if (typeof object.readOptions !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest.readOptions: object expected");
                                    message.readOptions = $root.google.cloud.bigquery.storage.v1beta1.TableReadOptions.fromObject(object.readOptions);
                                }
                                switch (object.format) {
                                default:
                                    if (typeof object.format === "number") {
                                        message.format = object.format;
                                        break;
                                    }
                                    break;
                                case "DATA_FORMAT_UNSPECIFIED":
                                case 0:
                                    message.format = 0;
                                    break;
                                case "AVRO":
                                case 1:
                                    message.format = 1;
                                    break;
                                case "ARROW":
                                case 3:
                                    message.format = 3;
                                    break;
                                }
                                switch (object.shardingStrategy) {
                                default:
                                    if (typeof object.shardingStrategy === "number") {
                                        message.shardingStrategy = object.shardingStrategy;
                                        break;
                                    }
                                    break;
                                case "SHARDING_STRATEGY_UNSPECIFIED":
                                case 0:
                                    message.shardingStrategy = 0;
                                    break;
                                case "LIQUID":
                                case 1:
                                    message.shardingStrategy = 1;
                                    break;
                                case "BALANCED":
                                case 2:
                                    message.shardingStrategy = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateReadSessionRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest} message CreateReadSessionRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateReadSessionRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.tableReference = null;
                                    object.tableModifiers = null;
                                    object.requestedStreams = 0;
                                    object.readOptions = null;
                                    object.format = options.enums === String ? "DATA_FORMAT_UNSPECIFIED" : 0;
                                    object.parent = "";
                                    object.shardingStrategy = options.enums === String ? "SHARDING_STRATEGY_UNSPECIFIED" : 0;
                                }
                                if (message.tableReference != null && message.hasOwnProperty("tableReference"))
                                    object.tableReference = $root.google.cloud.bigquery.storage.v1beta1.TableReference.toObject(message.tableReference, options);
                                if (message.tableModifiers != null && message.hasOwnProperty("tableModifiers"))
                                    object.tableModifiers = $root.google.cloud.bigquery.storage.v1beta1.TableModifiers.toObject(message.tableModifiers, options);
                                if (message.requestedStreams != null && message.hasOwnProperty("requestedStreams"))
                                    object.requestedStreams = message.requestedStreams;
                                if (message.readOptions != null && message.hasOwnProperty("readOptions"))
                                    object.readOptions = $root.google.cloud.bigquery.storage.v1beta1.TableReadOptions.toObject(message.readOptions, options);
                                if (message.format != null && message.hasOwnProperty("format"))
                                    object.format = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta1.DataFormat[message.format] === undefined ? message.format : $root.google.cloud.bigquery.storage.v1beta1.DataFormat[message.format] : message.format;
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.shardingStrategy != null && message.hasOwnProperty("shardingStrategy"))
                                    object.shardingStrategy = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta1.ShardingStrategy[message.shardingStrategy] === undefined ? message.shardingStrategy : $root.google.cloud.bigquery.storage.v1beta1.ShardingStrategy[message.shardingStrategy] : message.shardingStrategy;
                                return object;
                            };
    
                            /**
                             * Converts this CreateReadSessionRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateReadSessionRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateReadSessionRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateReadSessionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.CreateReadSessionRequest";
                            };
    
                            return CreateReadSessionRequest;
                        })();
    
                        /**
                         * DataFormat enum.
                         * @name google.cloud.bigquery.storage.v1beta1.DataFormat
                         * @enum {number}
                         * @property {number} DATA_FORMAT_UNSPECIFIED=0 DATA_FORMAT_UNSPECIFIED value
                         * @property {number} AVRO=1 AVRO value
                         * @property {number} ARROW=3 ARROW value
                         */
                        v1beta1.DataFormat = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DATA_FORMAT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AVRO"] = 1;
                            values[valuesById[3] = "ARROW"] = 3;
                            return values;
                        })();
    
                        /**
                         * ShardingStrategy enum.
                         * @name google.cloud.bigquery.storage.v1beta1.ShardingStrategy
                         * @enum {number}
                         * @property {number} SHARDING_STRATEGY_UNSPECIFIED=0 SHARDING_STRATEGY_UNSPECIFIED value
                         * @property {number} LIQUID=1 LIQUID value
                         * @property {number} BALANCED=2 BALANCED value
                         */
                        v1beta1.ShardingStrategy = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SHARDING_STRATEGY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LIQUID"] = 1;
                            values[valuesById[2] = "BALANCED"] = 2;
                            return values;
                        })();
    
                        v1beta1.ReadRowsRequest = (function() {
    
                            /**
                             * Properties of a ReadRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IReadRowsRequest
                             * @property {google.cloud.bigquery.storage.v1beta1.IStreamPosition|null} [readPosition] ReadRowsRequest readPosition
                             */
    
                            /**
                             * Constructs a new ReadRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a ReadRowsRequest.
                             * @implements IReadRowsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsRequest=} [properties] Properties to set
                             */
                            function ReadRowsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadRowsRequest readPosition.
                             * @member {google.cloud.bigquery.storage.v1beta1.IStreamPosition|null|undefined} readPosition
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @instance
                             */
                            ReadRowsRequest.prototype.readPosition = null;
    
                            /**
                             * Creates a new ReadRowsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadRowsRequest} ReadRowsRequest instance
                             */
                            ReadRowsRequest.create = function create(properties) {
                                return new ReadRowsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ReadRowsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ReadRowsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsRequest} message ReadRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.readPosition != null && Object.hasOwnProperty.call(message, "readPosition"))
                                    $root.google.cloud.bigquery.storage.v1beta1.StreamPosition.encode(message.readPosition, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadRowsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ReadRowsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsRequest} message ReadRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadRowsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadRowsRequest} ReadRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.ReadRowsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.readPosition = $root.google.cloud.bigquery.storage.v1beta1.StreamPosition.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadRowsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadRowsRequest} ReadRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadRowsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadRowsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.readPosition != null && message.hasOwnProperty("readPosition")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.StreamPosition.verify(message.readPosition);
                                    if (error)
                                        return "readPosition." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReadRowsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadRowsRequest} ReadRowsRequest
                             */
                            ReadRowsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.ReadRowsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.ReadRowsRequest();
                                if (object.readPosition != null) {
                                    if (typeof object.readPosition !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadRowsRequest.readPosition: object expected");
                                    message.readPosition = $root.google.cloud.bigquery.storage.v1beta1.StreamPosition.fromObject(object.readPosition);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadRowsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ReadRowsRequest} message ReadRowsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadRowsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.readPosition = null;
                                if (message.readPosition != null && message.hasOwnProperty("readPosition"))
                                    object.readPosition = $root.google.cloud.bigquery.storage.v1beta1.StreamPosition.toObject(message.readPosition, options);
                                return object;
                            };
    
                            /**
                             * Converts this ReadRowsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadRowsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadRowsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadRowsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.ReadRowsRequest";
                            };
    
                            return ReadRowsRequest;
                        })();
    
                        v1beta1.StreamStatus = (function() {
    
                            /**
                             * Properties of a StreamStatus.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IStreamStatus
                             * @property {number|Long|null} [estimatedRowCount] StreamStatus estimatedRowCount
                             * @property {number|null} [fractionConsumed] StreamStatus fractionConsumed
                             * @property {google.cloud.bigquery.storage.v1beta1.IProgress|null} [progress] StreamStatus progress
                             * @property {boolean|null} [isSplittable] StreamStatus isSplittable
                             */
    
                            /**
                             * Constructs a new StreamStatus.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a StreamStatus.
                             * @implements IStreamStatus
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IStreamStatus=} [properties] Properties to set
                             */
                            function StreamStatus(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StreamStatus estimatedRowCount.
                             * @member {number|Long} estimatedRowCount
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @instance
                             */
                            StreamStatus.prototype.estimatedRowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * StreamStatus fractionConsumed.
                             * @member {number} fractionConsumed
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @instance
                             */
                            StreamStatus.prototype.fractionConsumed = 0;
    
                            /**
                             * StreamStatus progress.
                             * @member {google.cloud.bigquery.storage.v1beta1.IProgress|null|undefined} progress
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @instance
                             */
                            StreamStatus.prototype.progress = null;
    
                            /**
                             * StreamStatus isSplittable.
                             * @member {boolean} isSplittable
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @instance
                             */
                            StreamStatus.prototype.isSplittable = false;
    
                            /**
                             * Creates a new StreamStatus instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStreamStatus=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.StreamStatus} StreamStatus instance
                             */
                            StreamStatus.create = function create(properties) {
                                return new StreamStatus(properties);
                            };
    
                            /**
                             * Encodes the specified StreamStatus message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.StreamStatus.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStreamStatus} message StreamStatus message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamStatus.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.estimatedRowCount != null && Object.hasOwnProperty.call(message, "estimatedRowCount"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.estimatedRowCount);
                                if (message.fractionConsumed != null && Object.hasOwnProperty.call(message, "fractionConsumed"))
                                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.fractionConsumed);
                                if (message.isSplittable != null && Object.hasOwnProperty.call(message, "isSplittable"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.isSplittable);
                                if (message.progress != null && Object.hasOwnProperty.call(message, "progress"))
                                    $root.google.cloud.bigquery.storage.v1beta1.Progress.encode(message.progress, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StreamStatus message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.StreamStatus.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IStreamStatus} message StreamStatus message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamStatus.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StreamStatus message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.StreamStatus} StreamStatus
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamStatus.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.StreamStatus();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.estimatedRowCount = reader.int64();
                                            break;
                                        }
                                    case 2: {
                                            message.fractionConsumed = reader.float();
                                            break;
                                        }
                                    case 4: {
                                            message.progress = $root.google.cloud.bigquery.storage.v1beta1.Progress.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.isSplittable = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StreamStatus message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.StreamStatus} StreamStatus
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamStatus.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StreamStatus message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StreamStatus.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.estimatedRowCount != null && message.hasOwnProperty("estimatedRowCount"))
                                    if (!$util.isInteger(message.estimatedRowCount) && !(message.estimatedRowCount && $util.isInteger(message.estimatedRowCount.low) && $util.isInteger(message.estimatedRowCount.high)))
                                        return "estimatedRowCount: integer|Long expected";
                                if (message.fractionConsumed != null && message.hasOwnProperty("fractionConsumed"))
                                    if (typeof message.fractionConsumed !== "number")
                                        return "fractionConsumed: number expected";
                                if (message.progress != null && message.hasOwnProperty("progress")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.Progress.verify(message.progress);
                                    if (error)
                                        return "progress." + error;
                                }
                                if (message.isSplittable != null && message.hasOwnProperty("isSplittable"))
                                    if (typeof message.isSplittable !== "boolean")
                                        return "isSplittable: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a StreamStatus message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.StreamStatus} StreamStatus
                             */
                            StreamStatus.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.StreamStatus)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.StreamStatus();
                                if (object.estimatedRowCount != null)
                                    if ($util.Long)
                                        (message.estimatedRowCount = $util.Long.fromValue(object.estimatedRowCount)).unsigned = false;
                                    else if (typeof object.estimatedRowCount === "string")
                                        message.estimatedRowCount = parseInt(object.estimatedRowCount, 10);
                                    else if (typeof object.estimatedRowCount === "number")
                                        message.estimatedRowCount = object.estimatedRowCount;
                                    else if (typeof object.estimatedRowCount === "object")
                                        message.estimatedRowCount = new $util.LongBits(object.estimatedRowCount.low >>> 0, object.estimatedRowCount.high >>> 0).toNumber();
                                if (object.fractionConsumed != null)
                                    message.fractionConsumed = Number(object.fractionConsumed);
                                if (object.progress != null) {
                                    if (typeof object.progress !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.StreamStatus.progress: object expected");
                                    message.progress = $root.google.cloud.bigquery.storage.v1beta1.Progress.fromObject(object.progress);
                                }
                                if (object.isSplittable != null)
                                    message.isSplittable = Boolean(object.isSplittable);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StreamStatus message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.StreamStatus} message StreamStatus
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StreamStatus.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.estimatedRowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.estimatedRowCount = options.longs === String ? "0" : 0;
                                    object.fractionConsumed = 0;
                                    object.isSplittable = false;
                                    object.progress = null;
                                }
                                if (message.estimatedRowCount != null && message.hasOwnProperty("estimatedRowCount"))
                                    if (typeof message.estimatedRowCount === "number")
                                        object.estimatedRowCount = options.longs === String ? String(message.estimatedRowCount) : message.estimatedRowCount;
                                    else
                                        object.estimatedRowCount = options.longs === String ? $util.Long.prototype.toString.call(message.estimatedRowCount) : options.longs === Number ? new $util.LongBits(message.estimatedRowCount.low >>> 0, message.estimatedRowCount.high >>> 0).toNumber() : message.estimatedRowCount;
                                if (message.fractionConsumed != null && message.hasOwnProperty("fractionConsumed"))
                                    object.fractionConsumed = options.json && !isFinite(message.fractionConsumed) ? String(message.fractionConsumed) : message.fractionConsumed;
                                if (message.isSplittable != null && message.hasOwnProperty("isSplittable"))
                                    object.isSplittable = message.isSplittable;
                                if (message.progress != null && message.hasOwnProperty("progress"))
                                    object.progress = $root.google.cloud.bigquery.storage.v1beta1.Progress.toObject(message.progress, options);
                                return object;
                            };
    
                            /**
                             * Converts this StreamStatus to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StreamStatus.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StreamStatus
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.StreamStatus
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StreamStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.StreamStatus";
                            };
    
                            return StreamStatus;
                        })();
    
                        v1beta1.Progress = (function() {
    
                            /**
                             * Properties of a Progress.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IProgress
                             * @property {number|null} [atResponseStart] Progress atResponseStart
                             * @property {number|null} [atResponseEnd] Progress atResponseEnd
                             */
    
                            /**
                             * Constructs a new Progress.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a Progress.
                             * @implements IProgress
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IProgress=} [properties] Properties to set
                             */
                            function Progress(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Progress atResponseStart.
                             * @member {number} atResponseStart
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @instance
                             */
                            Progress.prototype.atResponseStart = 0;
    
                            /**
                             * Progress atResponseEnd.
                             * @member {number} atResponseEnd
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @instance
                             */
                            Progress.prototype.atResponseEnd = 0;
    
                            /**
                             * Creates a new Progress instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IProgress=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.Progress} Progress instance
                             */
                            Progress.create = function create(properties) {
                                return new Progress(properties);
                            };
    
                            /**
                             * Encodes the specified Progress message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.Progress.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IProgress} message Progress message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Progress.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.atResponseStart != null && Object.hasOwnProperty.call(message, "atResponseStart"))
                                    writer.uint32(/* id 1, wireType 5 =*/13).float(message.atResponseStart);
                                if (message.atResponseEnd != null && Object.hasOwnProperty.call(message, "atResponseEnd"))
                                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.atResponseEnd);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Progress message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.Progress.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IProgress} message Progress message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Progress.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Progress message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.Progress} Progress
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Progress.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.Progress();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.atResponseStart = reader.float();
                                            break;
                                        }
                                    case 2: {
                                            message.atResponseEnd = reader.float();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Progress message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.Progress} Progress
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Progress.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Progress message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Progress.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.atResponseStart != null && message.hasOwnProperty("atResponseStart"))
                                    if (typeof message.atResponseStart !== "number")
                                        return "atResponseStart: number expected";
                                if (message.atResponseEnd != null && message.hasOwnProperty("atResponseEnd"))
                                    if (typeof message.atResponseEnd !== "number")
                                        return "atResponseEnd: number expected";
                                return null;
                            };
    
                            /**
                             * Creates a Progress message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.Progress} Progress
                             */
                            Progress.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.Progress)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.Progress();
                                if (object.atResponseStart != null)
                                    message.atResponseStart = Number(object.atResponseStart);
                                if (object.atResponseEnd != null)
                                    message.atResponseEnd = Number(object.atResponseEnd);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Progress message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.Progress} message Progress
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Progress.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.atResponseStart = 0;
                                    object.atResponseEnd = 0;
                                }
                                if (message.atResponseStart != null && message.hasOwnProperty("atResponseStart"))
                                    object.atResponseStart = options.json && !isFinite(message.atResponseStart) ? String(message.atResponseStart) : message.atResponseStart;
                                if (message.atResponseEnd != null && message.hasOwnProperty("atResponseEnd"))
                                    object.atResponseEnd = options.json && !isFinite(message.atResponseEnd) ? String(message.atResponseEnd) : message.atResponseEnd;
                                return object;
                            };
    
                            /**
                             * Converts this Progress to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Progress.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Progress
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.Progress
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Progress.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.Progress";
                            };
    
                            return Progress;
                        })();
    
                        v1beta1.ThrottleStatus = (function() {
    
                            /**
                             * Properties of a ThrottleStatus.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IThrottleStatus
                             * @property {number|null} [throttlePercent] ThrottleStatus throttlePercent
                             */
    
                            /**
                             * Constructs a new ThrottleStatus.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a ThrottleStatus.
                             * @implements IThrottleStatus
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IThrottleStatus=} [properties] Properties to set
                             */
                            function ThrottleStatus(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ThrottleStatus throttlePercent.
                             * @member {number} throttlePercent
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @instance
                             */
                            ThrottleStatus.prototype.throttlePercent = 0;
    
                            /**
                             * Creates a new ThrottleStatus instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IThrottleStatus=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.ThrottleStatus} ThrottleStatus instance
                             */
                            ThrottleStatus.create = function create(properties) {
                                return new ThrottleStatus(properties);
                            };
    
                            /**
                             * Encodes the specified ThrottleStatus message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ThrottleStatus.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IThrottleStatus} message ThrottleStatus message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ThrottleStatus.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.throttlePercent != null && Object.hasOwnProperty.call(message, "throttlePercent"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.throttlePercent);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ThrottleStatus message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ThrottleStatus.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IThrottleStatus} message ThrottleStatus message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ThrottleStatus.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ThrottleStatus message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.ThrottleStatus} ThrottleStatus
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ThrottleStatus.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.ThrottleStatus();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.throttlePercent = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ThrottleStatus message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.ThrottleStatus} ThrottleStatus
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ThrottleStatus.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ThrottleStatus message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ThrottleStatus.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.throttlePercent != null && message.hasOwnProperty("throttlePercent"))
                                    if (!$util.isInteger(message.throttlePercent))
                                        return "throttlePercent: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a ThrottleStatus message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.ThrottleStatus} ThrottleStatus
                             */
                            ThrottleStatus.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.ThrottleStatus)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.ThrottleStatus();
                                if (object.throttlePercent != null)
                                    message.throttlePercent = object.throttlePercent | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ThrottleStatus message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ThrottleStatus} message ThrottleStatus
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ThrottleStatus.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.throttlePercent = 0;
                                if (message.throttlePercent != null && message.hasOwnProperty("throttlePercent"))
                                    object.throttlePercent = message.throttlePercent;
                                return object;
                            };
    
                            /**
                             * Converts this ThrottleStatus to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ThrottleStatus.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ThrottleStatus
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.ThrottleStatus
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ThrottleStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.ThrottleStatus";
                            };
    
                            return ThrottleStatus;
                        })();
    
                        v1beta1.ReadRowsResponse = (function() {
    
                            /**
                             * Properties of a ReadRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IReadRowsResponse
                             * @property {google.cloud.bigquery.storage.v1beta1.IAvroRows|null} [avroRows] ReadRowsResponse avroRows
                             * @property {google.cloud.bigquery.storage.v1beta1.IArrowRecordBatch|null} [arrowRecordBatch] ReadRowsResponse arrowRecordBatch
                             * @property {number|Long|null} [rowCount] ReadRowsResponse rowCount
                             * @property {google.cloud.bigquery.storage.v1beta1.IStreamStatus|null} [status] ReadRowsResponse status
                             * @property {google.cloud.bigquery.storage.v1beta1.IThrottleStatus|null} [throttleStatus] ReadRowsResponse throttleStatus
                             */
    
                            /**
                             * Constructs a new ReadRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a ReadRowsResponse.
                             * @implements IReadRowsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsResponse=} [properties] Properties to set
                             */
                            function ReadRowsResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadRowsResponse avroRows.
                             * @member {google.cloud.bigquery.storage.v1beta1.IAvroRows|null|undefined} avroRows
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.avroRows = null;
    
                            /**
                             * ReadRowsResponse arrowRecordBatch.
                             * @member {google.cloud.bigquery.storage.v1beta1.IArrowRecordBatch|null|undefined} arrowRecordBatch
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.arrowRecordBatch = null;
    
                            /**
                             * ReadRowsResponse rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ReadRowsResponse status.
                             * @member {google.cloud.bigquery.storage.v1beta1.IStreamStatus|null|undefined} status
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.status = null;
    
                            /**
                             * ReadRowsResponse throttleStatus.
                             * @member {google.cloud.bigquery.storage.v1beta1.IThrottleStatus|null|undefined} throttleStatus
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.throttleStatus = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * ReadRowsResponse rows.
                             * @member {"avroRows"|"arrowRecordBatch"|undefined} rows
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @instance
                             */
                            Object.defineProperty(ReadRowsResponse.prototype, "rows", {
                                get: $util.oneOfGetter($oneOfFields = ["avroRows", "arrowRecordBatch"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new ReadRowsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadRowsResponse} ReadRowsResponse instance
                             */
                            ReadRowsResponse.create = function create(properties) {
                                return new ReadRowsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ReadRowsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ReadRowsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsResponse} message ReadRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                    $root.google.cloud.bigquery.storage.v1beta1.StreamStatus.encode(message.status, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.avroRows != null && Object.hasOwnProperty.call(message, "avroRows"))
                                    $root.google.cloud.bigquery.storage.v1beta1.AvroRows.encode(message.avroRows, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.arrowRecordBatch != null && Object.hasOwnProperty.call(message, "arrowRecordBatch"))
                                    $root.google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch.encode(message.arrowRecordBatch, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.throttleStatus != null && Object.hasOwnProperty.call(message, "throttleStatus"))
                                    $root.google.cloud.bigquery.storage.v1beta1.ThrottleStatus.encode(message.throttleStatus, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int64(message.rowCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadRowsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.ReadRowsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IReadRowsResponse} message ReadRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadRowsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadRowsResponse} ReadRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.ReadRowsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 3: {
                                            message.avroRows = $root.google.cloud.bigquery.storage.v1beta1.AvroRows.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    case 2: {
                                            message.status = $root.google.cloud.bigquery.storage.v1beta1.StreamStatus.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.throttleStatus = $root.google.cloud.bigquery.storage.v1beta1.ThrottleStatus.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadRowsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadRowsResponse} ReadRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadRowsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadRowsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.avroRows != null && message.hasOwnProperty("avroRows")) {
                                    properties.rows = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta1.AvroRows.verify(message.avroRows);
                                        if (error)
                                            return "avroRows." + error;
                                    }
                                }
                                if (message.arrowRecordBatch != null && message.hasOwnProperty("arrowRecordBatch")) {
                                    if (properties.rows === 1)
                                        return "rows: multiple values";
                                    properties.rows = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch.verify(message.arrowRecordBatch);
                                        if (error)
                                            return "arrowRecordBatch." + error;
                                    }
                                }
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                if (message.status != null && message.hasOwnProperty("status")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.StreamStatus.verify(message.status);
                                    if (error)
                                        return "status." + error;
                                }
                                if (message.throttleStatus != null && message.hasOwnProperty("throttleStatus")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.ThrottleStatus.verify(message.throttleStatus);
                                    if (error)
                                        return "throttleStatus." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReadRowsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.ReadRowsResponse} ReadRowsResponse
                             */
                            ReadRowsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.ReadRowsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.ReadRowsResponse();
                                if (object.avroRows != null) {
                                    if (typeof object.avroRows !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadRowsResponse.avroRows: object expected");
                                    message.avroRows = $root.google.cloud.bigquery.storage.v1beta1.AvroRows.fromObject(object.avroRows);
                                }
                                if (object.arrowRecordBatch != null) {
                                    if (typeof object.arrowRecordBatch !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadRowsResponse.arrowRecordBatch: object expected");
                                    message.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch.fromObject(object.arrowRecordBatch);
                                }
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                if (object.status != null) {
                                    if (typeof object.status !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadRowsResponse.status: object expected");
                                    message.status = $root.google.cloud.bigquery.storage.v1beta1.StreamStatus.fromObject(object.status);
                                }
                                if (object.throttleStatus != null) {
                                    if (typeof object.throttleStatus !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.ReadRowsResponse.throttleStatus: object expected");
                                    message.throttleStatus = $root.google.cloud.bigquery.storage.v1beta1.ThrottleStatus.fromObject(object.throttleStatus);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadRowsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ReadRowsResponse} message ReadRowsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadRowsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.status = null;
                                    object.throttleStatus = null;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                }
                                if (message.status != null && message.hasOwnProperty("status"))
                                    object.status = $root.google.cloud.bigquery.storage.v1beta1.StreamStatus.toObject(message.status, options);
                                if (message.avroRows != null && message.hasOwnProperty("avroRows")) {
                                    object.avroRows = $root.google.cloud.bigquery.storage.v1beta1.AvroRows.toObject(message.avroRows, options);
                                    if (options.oneofs)
                                        object.rows = "avroRows";
                                }
                                if (message.arrowRecordBatch != null && message.hasOwnProperty("arrowRecordBatch")) {
                                    object.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1beta1.ArrowRecordBatch.toObject(message.arrowRecordBatch, options);
                                    if (options.oneofs)
                                        object.rows = "arrowRecordBatch";
                                }
                                if (message.throttleStatus != null && message.hasOwnProperty("throttleStatus"))
                                    object.throttleStatus = $root.google.cloud.bigquery.storage.v1beta1.ThrottleStatus.toObject(message.throttleStatus, options);
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                return object;
                            };
    
                            /**
                             * Converts this ReadRowsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadRowsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadRowsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.ReadRowsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadRowsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.ReadRowsResponse";
                            };
    
                            return ReadRowsResponse;
                        })();
    
                        v1beta1.BatchCreateReadSessionStreamsRequest = (function() {
    
                            /**
                             * Properties of a BatchCreateReadSessionStreamsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IBatchCreateReadSessionStreamsRequest
                             * @property {google.cloud.bigquery.storage.v1beta1.IReadSession|null} [session] BatchCreateReadSessionStreamsRequest session
                             * @property {number|null} [requestedStreams] BatchCreateReadSessionStreamsRequest requestedStreams
                             */
    
                            /**
                             * Constructs a new BatchCreateReadSessionStreamsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a BatchCreateReadSessionStreamsRequest.
                             * @implements IBatchCreateReadSessionStreamsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsRequest=} [properties] Properties to set
                             */
                            function BatchCreateReadSessionStreamsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BatchCreateReadSessionStreamsRequest session.
                             * @member {google.cloud.bigquery.storage.v1beta1.IReadSession|null|undefined} session
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @instance
                             */
                            BatchCreateReadSessionStreamsRequest.prototype.session = null;
    
                            /**
                             * BatchCreateReadSessionStreamsRequest requestedStreams.
                             * @member {number} requestedStreams
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @instance
                             */
                            BatchCreateReadSessionStreamsRequest.prototype.requestedStreams = 0;
    
                            /**
                             * Creates a new BatchCreateReadSessionStreamsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest} BatchCreateReadSessionStreamsRequest instance
                             */
                            BatchCreateReadSessionStreamsRequest.create = function create(properties) {
                                return new BatchCreateReadSessionStreamsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified BatchCreateReadSessionStreamsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsRequest} message BatchCreateReadSessionStreamsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCreateReadSessionStreamsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.session != null && Object.hasOwnProperty.call(message, "session"))
                                    $root.google.cloud.bigquery.storage.v1beta1.ReadSession.encode(message.session, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.requestedStreams != null && Object.hasOwnProperty.call(message, "requestedStreams"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.requestedStreams);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BatchCreateReadSessionStreamsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsRequest} message BatchCreateReadSessionStreamsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCreateReadSessionStreamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BatchCreateReadSessionStreamsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest} BatchCreateReadSessionStreamsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCreateReadSessionStreamsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.session = $root.google.cloud.bigquery.storage.v1beta1.ReadSession.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.requestedStreams = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BatchCreateReadSessionStreamsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest} BatchCreateReadSessionStreamsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCreateReadSessionStreamsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BatchCreateReadSessionStreamsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BatchCreateReadSessionStreamsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.session != null && message.hasOwnProperty("session")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.ReadSession.verify(message.session);
                                    if (error)
                                        return "session." + error;
                                }
                                if (message.requestedStreams != null && message.hasOwnProperty("requestedStreams"))
                                    if (!$util.isInteger(message.requestedStreams))
                                        return "requestedStreams: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a BatchCreateReadSessionStreamsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest} BatchCreateReadSessionStreamsRequest
                             */
                            BatchCreateReadSessionStreamsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest();
                                if (object.session != null) {
                                    if (typeof object.session !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest.session: object expected");
                                    message.session = $root.google.cloud.bigquery.storage.v1beta1.ReadSession.fromObject(object.session);
                                }
                                if (object.requestedStreams != null)
                                    message.requestedStreams = object.requestedStreams | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BatchCreateReadSessionStreamsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest} message BatchCreateReadSessionStreamsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BatchCreateReadSessionStreamsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.session = null;
                                    object.requestedStreams = 0;
                                }
                                if (message.session != null && message.hasOwnProperty("session"))
                                    object.session = $root.google.cloud.bigquery.storage.v1beta1.ReadSession.toObject(message.session, options);
                                if (message.requestedStreams != null && message.hasOwnProperty("requestedStreams"))
                                    object.requestedStreams = message.requestedStreams;
                                return object;
                            };
    
                            /**
                             * Converts this BatchCreateReadSessionStreamsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BatchCreateReadSessionStreamsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BatchCreateReadSessionStreamsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BatchCreateReadSessionStreamsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsRequest";
                            };
    
                            return BatchCreateReadSessionStreamsRequest;
                        })();
    
                        v1beta1.BatchCreateReadSessionStreamsResponse = (function() {
    
                            /**
                             * Properties of a BatchCreateReadSessionStreamsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IBatchCreateReadSessionStreamsResponse
                             * @property {Array.<google.cloud.bigquery.storage.v1beta1.IStream>|null} [streams] BatchCreateReadSessionStreamsResponse streams
                             */
    
                            /**
                             * Constructs a new BatchCreateReadSessionStreamsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a BatchCreateReadSessionStreamsResponse.
                             * @implements IBatchCreateReadSessionStreamsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsResponse=} [properties] Properties to set
                             */
                            function BatchCreateReadSessionStreamsResponse(properties) {
                                this.streams = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BatchCreateReadSessionStreamsResponse streams.
                             * @member {Array.<google.cloud.bigquery.storage.v1beta1.IStream>} streams
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @instance
                             */
                            BatchCreateReadSessionStreamsResponse.prototype.streams = $util.emptyArray;
    
                            /**
                             * Creates a new BatchCreateReadSessionStreamsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse} BatchCreateReadSessionStreamsResponse instance
                             */
                            BatchCreateReadSessionStreamsResponse.create = function create(properties) {
                                return new BatchCreateReadSessionStreamsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified BatchCreateReadSessionStreamsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsResponse} message BatchCreateReadSessionStreamsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCreateReadSessionStreamsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.streams != null && message.streams.length)
                                    for (var i = 0; i < message.streams.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1beta1.Stream.encode(message.streams[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BatchCreateReadSessionStreamsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IBatchCreateReadSessionStreamsResponse} message BatchCreateReadSessionStreamsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCreateReadSessionStreamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BatchCreateReadSessionStreamsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse} BatchCreateReadSessionStreamsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCreateReadSessionStreamsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.streams && message.streams.length))
                                                message.streams = [];
                                            message.streams.push($root.google.cloud.bigquery.storage.v1beta1.Stream.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BatchCreateReadSessionStreamsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse} BatchCreateReadSessionStreamsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCreateReadSessionStreamsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BatchCreateReadSessionStreamsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BatchCreateReadSessionStreamsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.streams != null && message.hasOwnProperty("streams")) {
                                    if (!Array.isArray(message.streams))
                                        return "streams: array expected";
                                    for (var i = 0; i < message.streams.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta1.Stream.verify(message.streams[i]);
                                        if (error)
                                            return "streams." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BatchCreateReadSessionStreamsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse} BatchCreateReadSessionStreamsResponse
                             */
                            BatchCreateReadSessionStreamsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse();
                                if (object.streams) {
                                    if (!Array.isArray(object.streams))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse.streams: array expected");
                                    message.streams = [];
                                    for (var i = 0; i < object.streams.length; ++i) {
                                        if (typeof object.streams[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse.streams: object expected");
                                        message.streams[i] = $root.google.cloud.bigquery.storage.v1beta1.Stream.fromObject(object.streams[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BatchCreateReadSessionStreamsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse} message BatchCreateReadSessionStreamsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BatchCreateReadSessionStreamsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.streams = [];
                                if (message.streams && message.streams.length) {
                                    object.streams = [];
                                    for (var j = 0; j < message.streams.length; ++j)
                                        object.streams[j] = $root.google.cloud.bigquery.storage.v1beta1.Stream.toObject(message.streams[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this BatchCreateReadSessionStreamsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BatchCreateReadSessionStreamsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BatchCreateReadSessionStreamsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BatchCreateReadSessionStreamsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.BatchCreateReadSessionStreamsResponse";
                            };
    
                            return BatchCreateReadSessionStreamsResponse;
                        })();
    
                        v1beta1.FinalizeStreamRequest = (function() {
    
                            /**
                             * Properties of a FinalizeStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface IFinalizeStreamRequest
                             * @property {google.cloud.bigquery.storage.v1beta1.IStream|null} [stream] FinalizeStreamRequest stream
                             */
    
                            /**
                             * Constructs a new FinalizeStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a FinalizeStreamRequest.
                             * @implements IFinalizeStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.IFinalizeStreamRequest=} [properties] Properties to set
                             */
                            function FinalizeStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FinalizeStreamRequest stream.
                             * @member {google.cloud.bigquery.storage.v1beta1.IStream|null|undefined} stream
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @instance
                             */
                            FinalizeStreamRequest.prototype.stream = null;
    
                            /**
                             * Creates a new FinalizeStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IFinalizeStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest} FinalizeStreamRequest instance
                             */
                            FinalizeStreamRequest.create = function create(properties) {
                                return new FinalizeStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified FinalizeStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IFinalizeStreamRequest} message FinalizeStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.stream != null && Object.hasOwnProperty.call(message, "stream"))
                                    $root.google.cloud.bigquery.storage.v1beta1.Stream.encode(message.stream, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FinalizeStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.IFinalizeStreamRequest} message FinalizeStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FinalizeStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest} FinalizeStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.stream = $root.google.cloud.bigquery.storage.v1beta1.Stream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FinalizeStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest} FinalizeStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FinalizeStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FinalizeStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.stream != null && message.hasOwnProperty("stream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.Stream.verify(message.stream);
                                    if (error)
                                        return "stream." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a FinalizeStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest} FinalizeStreamRequest
                             */
                            FinalizeStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest();
                                if (object.stream != null) {
                                    if (typeof object.stream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest.stream: object expected");
                                    message.stream = $root.google.cloud.bigquery.storage.v1beta1.Stream.fromObject(object.stream);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FinalizeStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest} message FinalizeStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FinalizeStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.stream = null;
                                if (message.stream != null && message.hasOwnProperty("stream"))
                                    object.stream = $root.google.cloud.bigquery.storage.v1beta1.Stream.toObject(message.stream, options);
                                return object;
                            };
    
                            /**
                             * Converts this FinalizeStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FinalizeStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FinalizeStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FinalizeStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.FinalizeStreamRequest";
                            };
    
                            return FinalizeStreamRequest;
                        })();
    
                        v1beta1.SplitReadStreamRequest = (function() {
    
                            /**
                             * Properties of a SplitReadStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface ISplitReadStreamRequest
                             * @property {google.cloud.bigquery.storage.v1beta1.IStream|null} [originalStream] SplitReadStreamRequest originalStream
                             * @property {number|null} [fraction] SplitReadStreamRequest fraction
                             */
    
                            /**
                             * Constructs a new SplitReadStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a SplitReadStreamRequest.
                             * @implements ISplitReadStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamRequest=} [properties] Properties to set
                             */
                            function SplitReadStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SplitReadStreamRequest originalStream.
                             * @member {google.cloud.bigquery.storage.v1beta1.IStream|null|undefined} originalStream
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @instance
                             */
                            SplitReadStreamRequest.prototype.originalStream = null;
    
                            /**
                             * SplitReadStreamRequest fraction.
                             * @member {number} fraction
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @instance
                             */
                            SplitReadStreamRequest.prototype.fraction = 0;
    
                            /**
                             * Creates a new SplitReadStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest} SplitReadStreamRequest instance
                             */
                            SplitReadStreamRequest.create = function create(properties) {
                                return new SplitReadStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamRequest} message SplitReadStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.originalStream != null && Object.hasOwnProperty.call(message, "originalStream"))
                                    $root.google.cloud.bigquery.storage.v1beta1.Stream.encode(message.originalStream, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.fraction != null && Object.hasOwnProperty.call(message, "fraction"))
                                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.fraction);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamRequest} message SplitReadStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SplitReadStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest} SplitReadStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.originalStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.fraction = reader.float();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SplitReadStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest} SplitReadStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SplitReadStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SplitReadStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.originalStream != null && message.hasOwnProperty("originalStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.Stream.verify(message.originalStream);
                                    if (error)
                                        return "originalStream." + error;
                                }
                                if (message.fraction != null && message.hasOwnProperty("fraction"))
                                    if (typeof message.fraction !== "number")
                                        return "fraction: number expected";
                                return null;
                            };
    
                            /**
                             * Creates a SplitReadStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest} SplitReadStreamRequest
                             */
                            SplitReadStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest();
                                if (object.originalStream != null) {
                                    if (typeof object.originalStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest.originalStream: object expected");
                                    message.originalStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.fromObject(object.originalStream);
                                }
                                if (object.fraction != null)
                                    message.fraction = Number(object.fraction);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SplitReadStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest} message SplitReadStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SplitReadStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.originalStream = null;
                                    object.fraction = 0;
                                }
                                if (message.originalStream != null && message.hasOwnProperty("originalStream"))
                                    object.originalStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.toObject(message.originalStream, options);
                                if (message.fraction != null && message.hasOwnProperty("fraction"))
                                    object.fraction = options.json && !isFinite(message.fraction) ? String(message.fraction) : message.fraction;
                                return object;
                            };
    
                            /**
                             * Converts this SplitReadStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SplitReadStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SplitReadStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SplitReadStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.SplitReadStreamRequest";
                            };
    
                            return SplitReadStreamRequest;
                        })();
    
                        v1beta1.SplitReadStreamResponse = (function() {
    
                            /**
                             * Properties of a SplitReadStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface ISplitReadStreamResponse
                             * @property {google.cloud.bigquery.storage.v1beta1.IStream|null} [primaryStream] SplitReadStreamResponse primaryStream
                             * @property {google.cloud.bigquery.storage.v1beta1.IStream|null} [remainderStream] SplitReadStreamResponse remainderStream
                             */
    
                            /**
                             * Constructs a new SplitReadStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a SplitReadStreamResponse.
                             * @implements ISplitReadStreamResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamResponse=} [properties] Properties to set
                             */
                            function SplitReadStreamResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SplitReadStreamResponse primaryStream.
                             * @member {google.cloud.bigquery.storage.v1beta1.IStream|null|undefined} primaryStream
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @instance
                             */
                            SplitReadStreamResponse.prototype.primaryStream = null;
    
                            /**
                             * SplitReadStreamResponse remainderStream.
                             * @member {google.cloud.bigquery.storage.v1beta1.IStream|null|undefined} remainderStream
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @instance
                             */
                            SplitReadStreamResponse.prototype.remainderStream = null;
    
                            /**
                             * Creates a new SplitReadStreamResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse} SplitReadStreamResponse instance
                             */
                            SplitReadStreamResponse.create = function create(properties) {
                                return new SplitReadStreamResponse(properties);
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamResponse} message SplitReadStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.primaryStream != null && Object.hasOwnProperty.call(message, "primaryStream"))
                                    $root.google.cloud.bigquery.storage.v1beta1.Stream.encode(message.primaryStream, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.remainderStream != null && Object.hasOwnProperty.call(message, "remainderStream"))
                                    $root.google.cloud.bigquery.storage.v1beta1.Stream.encode(message.remainderStream, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ISplitReadStreamResponse} message SplitReadStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SplitReadStreamResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse} SplitReadStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.primaryStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.remainderStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SplitReadStreamResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse} SplitReadStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SplitReadStreamResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SplitReadStreamResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.primaryStream != null && message.hasOwnProperty("primaryStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.Stream.verify(message.primaryStream);
                                    if (error)
                                        return "primaryStream." + error;
                                }
                                if (message.remainderStream != null && message.hasOwnProperty("remainderStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta1.Stream.verify(message.remainderStream);
                                    if (error)
                                        return "remainderStream." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SplitReadStreamResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse} SplitReadStreamResponse
                             */
                            SplitReadStreamResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse();
                                if (object.primaryStream != null) {
                                    if (typeof object.primaryStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse.primaryStream: object expected");
                                    message.primaryStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.fromObject(object.primaryStream);
                                }
                                if (object.remainderStream != null) {
                                    if (typeof object.remainderStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse.remainderStream: object expected");
                                    message.remainderStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.fromObject(object.remainderStream);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SplitReadStreamResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse} message SplitReadStreamResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SplitReadStreamResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.primaryStream = null;
                                    object.remainderStream = null;
                                }
                                if (message.primaryStream != null && message.hasOwnProperty("primaryStream"))
                                    object.primaryStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.toObject(message.primaryStream, options);
                                if (message.remainderStream != null && message.hasOwnProperty("remainderStream"))
                                    object.remainderStream = $root.google.cloud.bigquery.storage.v1beta1.Stream.toObject(message.remainderStream, options);
                                return object;
                            };
    
                            /**
                             * Converts this SplitReadStreamResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SplitReadStreamResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SplitReadStreamResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SplitReadStreamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.SplitReadStreamResponse";
                            };
    
                            return SplitReadStreamResponse;
                        })();
    
                        v1beta1.TableReference = (function() {
    
                            /**
                             * Properties of a TableReference.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface ITableReference
                             * @property {string|null} [projectId] TableReference projectId
                             * @property {string|null} [datasetId] TableReference datasetId
                             * @property {string|null} [tableId] TableReference tableId
                             */
    
                            /**
                             * Constructs a new TableReference.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a TableReference.
                             * @implements ITableReference
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableReference=} [properties] Properties to set
                             */
                            function TableReference(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TableReference projectId.
                             * @member {string} projectId
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @instance
                             */
                            TableReference.prototype.projectId = "";
    
                            /**
                             * TableReference datasetId.
                             * @member {string} datasetId
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @instance
                             */
                            TableReference.prototype.datasetId = "";
    
                            /**
                             * TableReference tableId.
                             * @member {string} tableId
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @instance
                             */
                            TableReference.prototype.tableId = "";
    
                            /**
                             * Creates a new TableReference instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableReference=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableReference} TableReference instance
                             */
                            TableReference.create = function create(properties) {
                                return new TableReference(properties);
                            };
    
                            /**
                             * Encodes the specified TableReference message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.TableReference.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableReference} message TableReference message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableReference.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                                if (message.datasetId != null && Object.hasOwnProperty.call(message, "datasetId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.datasetId);
                                if (message.tableId != null && Object.hasOwnProperty.call(message, "tableId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.tableId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TableReference message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.TableReference.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableReference} message TableReference message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableReference.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TableReference message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableReference} TableReference
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableReference.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.TableReference();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.projectId = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.datasetId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.tableId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TableReference message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableReference} TableReference
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableReference.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TableReference message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TableReference.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.projectId != null && message.hasOwnProperty("projectId"))
                                    if (!$util.isString(message.projectId))
                                        return "projectId: string expected";
                                if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                    if (!$util.isString(message.datasetId))
                                        return "datasetId: string expected";
                                if (message.tableId != null && message.hasOwnProperty("tableId"))
                                    if (!$util.isString(message.tableId))
                                        return "tableId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a TableReference message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableReference} TableReference
                             */
                            TableReference.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.TableReference)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.TableReference();
                                if (object.projectId != null)
                                    message.projectId = String(object.projectId);
                                if (object.datasetId != null)
                                    message.datasetId = String(object.datasetId);
                                if (object.tableId != null)
                                    message.tableId = String(object.tableId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TableReference message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.TableReference} message TableReference
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TableReference.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.projectId = "";
                                    object.datasetId = "";
                                    object.tableId = "";
                                }
                                if (message.projectId != null && message.hasOwnProperty("projectId"))
                                    object.projectId = message.projectId;
                                if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                    object.datasetId = message.datasetId;
                                if (message.tableId != null && message.hasOwnProperty("tableId"))
                                    object.tableId = message.tableId;
                                return object;
                            };
    
                            /**
                             * Converts this TableReference to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TableReference.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TableReference
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableReference
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TableReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.TableReference";
                            };
    
                            return TableReference;
                        })();
    
                        v1beta1.TableModifiers = (function() {
    
                            /**
                             * Properties of a TableModifiers.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @interface ITableModifiers
                             * @property {google.protobuf.ITimestamp|null} [snapshotTime] TableModifiers snapshotTime
                             */
    
                            /**
                             * Constructs a new TableModifiers.
                             * @memberof google.cloud.bigquery.storage.v1beta1
                             * @classdesc Represents a TableModifiers.
                             * @implements ITableModifiers
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableModifiers=} [properties] Properties to set
                             */
                            function TableModifiers(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TableModifiers snapshotTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} snapshotTime
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @instance
                             */
                            TableModifiers.prototype.snapshotTime = null;
    
                            /**
                             * Creates a new TableModifiers instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableModifiers=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableModifiers} TableModifiers instance
                             */
                            TableModifiers.create = function create(properties) {
                                return new TableModifiers(properties);
                            };
    
                            /**
                             * Encodes the specified TableModifiers message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.TableModifiers.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableModifiers} message TableModifiers message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableModifiers.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.snapshotTime != null && Object.hasOwnProperty.call(message, "snapshotTime"))
                                    $root.google.protobuf.Timestamp.encode(message.snapshotTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TableModifiers message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta1.TableModifiers.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.ITableModifiers} message TableModifiers message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableModifiers.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TableModifiers message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableModifiers} TableModifiers
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableModifiers.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta1.TableModifiers();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.snapshotTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TableModifiers message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableModifiers} TableModifiers
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableModifiers.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TableModifiers message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TableModifiers.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.snapshotTime != null && message.hasOwnProperty("snapshotTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.snapshotTime);
                                    if (error)
                                        return "snapshotTime." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a TableModifiers message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta1.TableModifiers} TableModifiers
                             */
                            TableModifiers.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta1.TableModifiers)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta1.TableModifiers();
                                if (object.snapshotTime != null) {
                                    if (typeof object.snapshotTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta1.TableModifiers.snapshotTime: object expected");
                                    message.snapshotTime = $root.google.protobuf.Timestamp.fromObject(object.snapshotTime);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TableModifiers message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta1.TableModifiers} message TableModifiers
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TableModifiers.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.snapshotTime = null;
                                if (message.snapshotTime != null && message.hasOwnProperty("snapshotTime"))
                                    object.snapshotTime = $root.google.protobuf.Timestamp.toObject(message.snapshotTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this TableModifiers to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TableModifiers.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TableModifiers
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta1.TableModifiers
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TableModifiers.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta1.TableModifiers";
                            };
    
                            return TableModifiers;
                        })();
    
                        return v1beta1;
                    })();
    
                    storage.v1beta2 = (function() {
    
                        /**
                         * Namespace v1beta2.
                         * @memberof google.cloud.bigquery.storage
                         * @namespace
                         */
                        var v1beta2 = {};
    
                        v1beta2.ArrowSchema = (function() {
    
                            /**
                             * Properties of an ArrowSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IArrowSchema
                             * @property {Uint8Array|null} [serializedSchema] ArrowSchema serializedSchema
                             */
    
                            /**
                             * Constructs a new ArrowSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents an ArrowSchema.
                             * @implements IArrowSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowSchema=} [properties] Properties to set
                             */
                            function ArrowSchema(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArrowSchema serializedSchema.
                             * @member {Uint8Array} serializedSchema
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @instance
                             */
                            ArrowSchema.prototype.serializedSchema = $util.newBuffer([]);
    
                            /**
                             * Creates a new ArrowSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowSchema} ArrowSchema instance
                             */
                            ArrowSchema.create = function create(properties) {
                                return new ArrowSchema(properties);
                            };
    
                            /**
                             * Encodes the specified ArrowSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ArrowSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowSchema} message ArrowSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedSchema != null && Object.hasOwnProperty.call(message, "serializedSchema"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedSchema);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArrowSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ArrowSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowSchema} message ArrowSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArrowSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowSchema} ArrowSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedSchema = reader.bytes();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArrowSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowSchema} ArrowSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArrowSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArrowSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedSchema != null && message.hasOwnProperty("serializedSchema"))
                                    if (!(message.serializedSchema && typeof message.serializedSchema.length === "number" || $util.isString(message.serializedSchema)))
                                        return "serializedSchema: buffer expected";
                                return null;
                            };
    
                            /**
                             * Creates an ArrowSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowSchema} ArrowSchema
                             */
                            ArrowSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema();
                                if (object.serializedSchema != null)
                                    if (typeof object.serializedSchema === "string")
                                        $util.base64.decode(object.serializedSchema, message.serializedSchema = $util.newBuffer($util.base64.length(object.serializedSchema)), 0);
                                    else if (object.serializedSchema.length >= 0)
                                        message.serializedSchema = object.serializedSchema;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArrowSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ArrowSchema} message ArrowSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArrowSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if (options.bytes === String)
                                        object.serializedSchema = "";
                                    else {
                                        object.serializedSchema = [];
                                        if (options.bytes !== Array)
                                            object.serializedSchema = $util.newBuffer(object.serializedSchema);
                                    }
                                if (message.serializedSchema != null && message.hasOwnProperty("serializedSchema"))
                                    object.serializedSchema = options.bytes === String ? $util.base64.encode(message.serializedSchema, 0, message.serializedSchema.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedSchema) : message.serializedSchema;
                                return object;
                            };
    
                            /**
                             * Converts this ArrowSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArrowSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArrowSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArrowSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ArrowSchema";
                            };
    
                            return ArrowSchema;
                        })();
    
                        v1beta2.ArrowRecordBatch = (function() {
    
                            /**
                             * Properties of an ArrowRecordBatch.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IArrowRecordBatch
                             * @property {Uint8Array|null} [serializedRecordBatch] ArrowRecordBatch serializedRecordBatch
                             */
    
                            /**
                             * Constructs a new ArrowRecordBatch.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents an ArrowRecordBatch.
                             * @implements IArrowRecordBatch
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowRecordBatch=} [properties] Properties to set
                             */
                            function ArrowRecordBatch(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArrowRecordBatch serializedRecordBatch.
                             * @member {Uint8Array} serializedRecordBatch
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @instance
                             */
                            ArrowRecordBatch.prototype.serializedRecordBatch = $util.newBuffer([]);
    
                            /**
                             * Creates a new ArrowRecordBatch instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowRecordBatch=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch} ArrowRecordBatch instance
                             */
                            ArrowRecordBatch.create = function create(properties) {
                                return new ArrowRecordBatch(properties);
                            };
    
                            /**
                             * Encodes the specified ArrowRecordBatch message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowRecordBatch} message ArrowRecordBatch message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowRecordBatch.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedRecordBatch != null && Object.hasOwnProperty.call(message, "serializedRecordBatch"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedRecordBatch);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArrowRecordBatch message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowRecordBatch} message ArrowRecordBatch message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowRecordBatch.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArrowRecordBatch message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch} ArrowRecordBatch
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowRecordBatch.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedRecordBatch = reader.bytes();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArrowRecordBatch message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch} ArrowRecordBatch
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowRecordBatch.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArrowRecordBatch message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArrowRecordBatch.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedRecordBatch != null && message.hasOwnProperty("serializedRecordBatch"))
                                    if (!(message.serializedRecordBatch && typeof message.serializedRecordBatch.length === "number" || $util.isString(message.serializedRecordBatch)))
                                        return "serializedRecordBatch: buffer expected";
                                return null;
                            };
    
                            /**
                             * Creates an ArrowRecordBatch message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch} ArrowRecordBatch
                             */
                            ArrowRecordBatch.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch();
                                if (object.serializedRecordBatch != null)
                                    if (typeof object.serializedRecordBatch === "string")
                                        $util.base64.decode(object.serializedRecordBatch, message.serializedRecordBatch = $util.newBuffer($util.base64.length(object.serializedRecordBatch)), 0);
                                    else if (object.serializedRecordBatch.length >= 0)
                                        message.serializedRecordBatch = object.serializedRecordBatch;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArrowRecordBatch message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch} message ArrowRecordBatch
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArrowRecordBatch.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if (options.bytes === String)
                                        object.serializedRecordBatch = "";
                                    else {
                                        object.serializedRecordBatch = [];
                                        if (options.bytes !== Array)
                                            object.serializedRecordBatch = $util.newBuffer(object.serializedRecordBatch);
                                    }
                                if (message.serializedRecordBatch != null && message.hasOwnProperty("serializedRecordBatch"))
                                    object.serializedRecordBatch = options.bytes === String ? $util.base64.encode(message.serializedRecordBatch, 0, message.serializedRecordBatch.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedRecordBatch) : message.serializedRecordBatch;
                                return object;
                            };
    
                            /**
                             * Converts this ArrowRecordBatch to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArrowRecordBatch.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArrowRecordBatch
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArrowRecordBatch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch";
                            };
    
                            return ArrowRecordBatch;
                        })();
    
                        v1beta2.ArrowSerializationOptions = (function() {
    
                            /**
                             * Properties of an ArrowSerializationOptions.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IArrowSerializationOptions
                             * @property {google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.Format|null} [format] ArrowSerializationOptions format
                             */
    
                            /**
                             * Constructs a new ArrowSerializationOptions.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents an ArrowSerializationOptions.
                             * @implements IArrowSerializationOptions
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowSerializationOptions=} [properties] Properties to set
                             */
                            function ArrowSerializationOptions(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArrowSerializationOptions format.
                             * @member {google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.Format} format
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @instance
                             */
                            ArrowSerializationOptions.prototype.format = 0;
    
                            /**
                             * Creates a new ArrowSerializationOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowSerializationOptions=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions} ArrowSerializationOptions instance
                             */
                            ArrowSerializationOptions.create = function create(properties) {
                                return new ArrowSerializationOptions(properties);
                            };
    
                            /**
                             * Encodes the specified ArrowSerializationOptions message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowSerializationOptions} message ArrowSerializationOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSerializationOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.format);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArrowSerializationOptions message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IArrowSerializationOptions} message ArrowSerializationOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArrowSerializationOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArrowSerializationOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions} ArrowSerializationOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSerializationOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.format = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArrowSerializationOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions} ArrowSerializationOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArrowSerializationOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArrowSerializationOptions message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArrowSerializationOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.format != null && message.hasOwnProperty("format"))
                                    switch (message.format) {
                                    default:
                                        return "format: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates an ArrowSerializationOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions} ArrowSerializationOptions
                             */
                            ArrowSerializationOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions();
                                switch (object.format) {
                                default:
                                    if (typeof object.format === "number") {
                                        message.format = object.format;
                                        break;
                                    }
                                    break;
                                case "FORMAT_UNSPECIFIED":
                                case 0:
                                    message.format = 0;
                                    break;
                                case "ARROW_0_14":
                                case 1:
                                    message.format = 1;
                                    break;
                                case "ARROW_0_15":
                                case 2:
                                    message.format = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArrowSerializationOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions} message ArrowSerializationOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArrowSerializationOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.format = options.enums === String ? "FORMAT_UNSPECIFIED" : 0;
                                if (message.format != null && message.hasOwnProperty("format"))
                                    object.format = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.Format[message.format] === undefined ? message.format : $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.Format[message.format] : message.format;
                                return object;
                            };
    
                            /**
                             * Converts this ArrowSerializationOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArrowSerializationOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArrowSerializationOptions
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArrowSerializationOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions";
                            };
    
                            /**
                             * Format enum.
                             * @name google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.Format
                             * @enum {number}
                             * @property {number} FORMAT_UNSPECIFIED=0 FORMAT_UNSPECIFIED value
                             * @property {number} ARROW_0_14=1 ARROW_0_14 value
                             * @property {number} ARROW_0_15=2 ARROW_0_15 value
                             */
                            ArrowSerializationOptions.Format = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "FORMAT_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ARROW_0_14"] = 1;
                                values[valuesById[2] = "ARROW_0_15"] = 2;
                                return values;
                            })();
    
                            return ArrowSerializationOptions;
                        })();
    
                        v1beta2.AvroSchema = (function() {
    
                            /**
                             * Properties of an AvroSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IAvroSchema
                             * @property {string|null} [schema] AvroSchema schema
                             */
    
                            /**
                             * Constructs a new AvroSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents an AvroSchema.
                             * @implements IAvroSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IAvroSchema=} [properties] Properties to set
                             */
                            function AvroSchema(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AvroSchema schema.
                             * @member {string} schema
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @instance
                             */
                            AvroSchema.prototype.schema = "";
    
                            /**
                             * Creates a new AvroSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAvroSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.AvroSchema} AvroSchema instance
                             */
                            AvroSchema.create = function create(properties) {
                                return new AvroSchema(properties);
                            };
    
                            /**
                             * Encodes the specified AvroSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AvroSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAvroSchema} message AvroSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.schema);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AvroSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AvroSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAvroSchema} message AvroSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AvroSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.AvroSchema} AvroSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.AvroSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.schema = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AvroSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.AvroSchema} AvroSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AvroSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AvroSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    if (!$util.isString(message.schema))
                                        return "schema: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an AvroSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.AvroSchema} AvroSchema
                             */
                            AvroSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.AvroSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.AvroSchema();
                                if (object.schema != null)
                                    message.schema = String(object.schema);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AvroSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.AvroSchema} message AvroSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AvroSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.schema = "";
                                if (message.schema != null && message.hasOwnProperty("schema"))
                                    object.schema = message.schema;
                                return object;
                            };
    
                            /**
                             * Converts this AvroSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AvroSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AvroSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AvroSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.AvroSchema";
                            };
    
                            return AvroSchema;
                        })();
    
                        v1beta2.AvroRows = (function() {
    
                            /**
                             * Properties of an AvroRows.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IAvroRows
                             * @property {Uint8Array|null} [serializedBinaryRows] AvroRows serializedBinaryRows
                             */
    
                            /**
                             * Constructs a new AvroRows.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents an AvroRows.
                             * @implements IAvroRows
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IAvroRows=} [properties] Properties to set
                             */
                            function AvroRows(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AvroRows serializedBinaryRows.
                             * @member {Uint8Array} serializedBinaryRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @instance
                             */
                            AvroRows.prototype.serializedBinaryRows = $util.newBuffer([]);
    
                            /**
                             * Creates a new AvroRows instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAvroRows=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.AvroRows} AvroRows instance
                             */
                            AvroRows.create = function create(properties) {
                                return new AvroRows(properties);
                            };
    
                            /**
                             * Encodes the specified AvroRows message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AvroRows.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAvroRows} message AvroRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroRows.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedBinaryRows != null && Object.hasOwnProperty.call(message, "serializedBinaryRows"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedBinaryRows);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AvroRows message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AvroRows.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAvroRows} message AvroRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AvroRows.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AvroRows message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.AvroRows} AvroRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroRows.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.AvroRows();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.serializedBinaryRows = reader.bytes();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AvroRows message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.AvroRows} AvroRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AvroRows.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AvroRows message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AvroRows.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedBinaryRows != null && message.hasOwnProperty("serializedBinaryRows"))
                                    if (!(message.serializedBinaryRows && typeof message.serializedBinaryRows.length === "number" || $util.isString(message.serializedBinaryRows)))
                                        return "serializedBinaryRows: buffer expected";
                                return null;
                            };
    
                            /**
                             * Creates an AvroRows message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.AvroRows} AvroRows
                             */
                            AvroRows.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.AvroRows)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.AvroRows();
                                if (object.serializedBinaryRows != null)
                                    if (typeof object.serializedBinaryRows === "string")
                                        $util.base64.decode(object.serializedBinaryRows, message.serializedBinaryRows = $util.newBuffer($util.base64.length(object.serializedBinaryRows)), 0);
                                    else if (object.serializedBinaryRows.length >= 0)
                                        message.serializedBinaryRows = object.serializedBinaryRows;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AvroRows message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.AvroRows} message AvroRows
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AvroRows.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if (options.bytes === String)
                                        object.serializedBinaryRows = "";
                                    else {
                                        object.serializedBinaryRows = [];
                                        if (options.bytes !== Array)
                                            object.serializedBinaryRows = $util.newBuffer(object.serializedBinaryRows);
                                    }
                                if (message.serializedBinaryRows != null && message.hasOwnProperty("serializedBinaryRows"))
                                    object.serializedBinaryRows = options.bytes === String ? $util.base64.encode(message.serializedBinaryRows, 0, message.serializedBinaryRows.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedBinaryRows) : message.serializedBinaryRows;
                                return object;
                            };
    
                            /**
                             * Converts this AvroRows to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AvroRows.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AvroRows
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.AvroRows
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AvroRows.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.AvroRows";
                            };
    
                            return AvroRows;
                        })();
    
                        v1beta2.ProtoSchema = (function() {
    
                            /**
                             * Properties of a ProtoSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IProtoSchema
                             * @property {google.protobuf.IDescriptorProto|null} [protoDescriptor] ProtoSchema protoDescriptor
                             */
    
                            /**
                             * Constructs a new ProtoSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a ProtoSchema.
                             * @implements IProtoSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IProtoSchema=} [properties] Properties to set
                             */
                            function ProtoSchema(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ProtoSchema protoDescriptor.
                             * @member {google.protobuf.IDescriptorProto|null|undefined} protoDescriptor
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @instance
                             */
                            ProtoSchema.prototype.protoDescriptor = null;
    
                            /**
                             * Creates a new ProtoSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IProtoSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ProtoSchema} ProtoSchema instance
                             */
                            ProtoSchema.create = function create(properties) {
                                return new ProtoSchema(properties);
                            };
    
                            /**
                             * Encodes the specified ProtoSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ProtoSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IProtoSchema} message ProtoSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProtoSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.protoDescriptor != null && Object.hasOwnProperty.call(message, "protoDescriptor"))
                                    $root.google.protobuf.DescriptorProto.encode(message.protoDescriptor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ProtoSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ProtoSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IProtoSchema} message ProtoSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProtoSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ProtoSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ProtoSchema} ProtoSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProtoSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ProtoSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.protoDescriptor = $root.google.protobuf.DescriptorProto.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ProtoSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ProtoSchema} ProtoSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProtoSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ProtoSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ProtoSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.protoDescriptor != null && message.hasOwnProperty("protoDescriptor")) {
                                    var error = $root.google.protobuf.DescriptorProto.verify(message.protoDescriptor);
                                    if (error)
                                        return "protoDescriptor." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ProtoSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ProtoSchema} ProtoSchema
                             */
                            ProtoSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ProtoSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ProtoSchema();
                                if (object.protoDescriptor != null) {
                                    if (typeof object.protoDescriptor !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ProtoSchema.protoDescriptor: object expected");
                                    message.protoDescriptor = $root.google.protobuf.DescriptorProto.fromObject(object.protoDescriptor);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ProtoSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ProtoSchema} message ProtoSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ProtoSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.protoDescriptor = null;
                                if (message.protoDescriptor != null && message.hasOwnProperty("protoDescriptor"))
                                    object.protoDescriptor = $root.google.protobuf.DescriptorProto.toObject(message.protoDescriptor, options);
                                return object;
                            };
    
                            /**
                             * Converts this ProtoSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ProtoSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ProtoSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ProtoSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ProtoSchema";
                            };
    
                            return ProtoSchema;
                        })();
    
                        v1beta2.ProtoRows = (function() {
    
                            /**
                             * Properties of a ProtoRows.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IProtoRows
                             * @property {Array.<Uint8Array>|null} [serializedRows] ProtoRows serializedRows
                             */
    
                            /**
                             * Constructs a new ProtoRows.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a ProtoRows.
                             * @implements IProtoRows
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IProtoRows=} [properties] Properties to set
                             */
                            function ProtoRows(properties) {
                                this.serializedRows = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ProtoRows serializedRows.
                             * @member {Array.<Uint8Array>} serializedRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @instance
                             */
                            ProtoRows.prototype.serializedRows = $util.emptyArray;
    
                            /**
                             * Creates a new ProtoRows instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IProtoRows=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ProtoRows} ProtoRows instance
                             */
                            ProtoRows.create = function create(properties) {
                                return new ProtoRows(properties);
                            };
    
                            /**
                             * Encodes the specified ProtoRows message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ProtoRows.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IProtoRows} message ProtoRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProtoRows.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.serializedRows != null && message.serializedRows.length)
                                    for (var i = 0; i < message.serializedRows.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedRows[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ProtoRows message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ProtoRows.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IProtoRows} message ProtoRows message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProtoRows.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ProtoRows message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ProtoRows} ProtoRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProtoRows.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ProtoRows();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.serializedRows && message.serializedRows.length))
                                                message.serializedRows = [];
                                            message.serializedRows.push(reader.bytes());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ProtoRows message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ProtoRows} ProtoRows
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProtoRows.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ProtoRows message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ProtoRows.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.serializedRows != null && message.hasOwnProperty("serializedRows")) {
                                    if (!Array.isArray(message.serializedRows))
                                        return "serializedRows: array expected";
                                    for (var i = 0; i < message.serializedRows.length; ++i)
                                        if (!(message.serializedRows[i] && typeof message.serializedRows[i].length === "number" || $util.isString(message.serializedRows[i])))
                                            return "serializedRows: buffer[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ProtoRows message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ProtoRows} ProtoRows
                             */
                            ProtoRows.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ProtoRows)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ProtoRows();
                                if (object.serializedRows) {
                                    if (!Array.isArray(object.serializedRows))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ProtoRows.serializedRows: array expected");
                                    message.serializedRows = [];
                                    for (var i = 0; i < object.serializedRows.length; ++i)
                                        if (typeof object.serializedRows[i] === "string")
                                            $util.base64.decode(object.serializedRows[i], message.serializedRows[i] = $util.newBuffer($util.base64.length(object.serializedRows[i])), 0);
                                        else if (object.serializedRows[i].length >= 0)
                                            message.serializedRows[i] = object.serializedRows[i];
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ProtoRows message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ProtoRows} message ProtoRows
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ProtoRows.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.serializedRows = [];
                                if (message.serializedRows && message.serializedRows.length) {
                                    object.serializedRows = [];
                                    for (var j = 0; j < message.serializedRows.length; ++j)
                                        object.serializedRows[j] = options.bytes === String ? $util.base64.encode(message.serializedRows[j], 0, message.serializedRows[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedRows[j]) : message.serializedRows[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ProtoRows to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ProtoRows.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ProtoRows
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ProtoRows
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ProtoRows.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ProtoRows";
                            };
    
                            return ProtoRows;
                        })();
    
                        v1beta2.BigQueryRead = (function() {
    
                            /**
                             * Constructs a new BigQueryRead service.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a BigQueryRead
                             * @extends $protobuf.rpc.Service
                             * @constructor
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             */
                            function BigQueryRead(rpcImpl, requestDelimited, responseDelimited) {
                                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                            }
    
                            (BigQueryRead.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BigQueryRead;
    
                            /**
                             * Creates new BigQueryRead service using the specified rpc implementation.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @static
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             * @returns {BigQueryRead} RPC service. Useful where requests and/or responses are streamed.
                             */
                            BigQueryRead.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                                return new this(rpcImpl, requestDelimited, responseDelimited);
                            };
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryRead|createReadSession}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @typedef CreateReadSessionCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.ReadSession} [response] ReadSession
                             */
    
                            /**
                             * Calls CreateReadSession.
                             * @function createReadSession
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateReadSessionRequest} request CreateReadSessionRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryRead.CreateReadSessionCallback} callback Node-style callback called with the error, if any, and ReadSession
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryRead.prototype.createReadSession = function createReadSession(request, callback) {
                                return this.rpcCall(createReadSession, $root.google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest, $root.google.cloud.bigquery.storage.v1beta2.ReadSession, request, callback);
                            }, "name", { value: "CreateReadSession" });
    
                            /**
                             * Calls CreateReadSession.
                             * @function createReadSession
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateReadSessionRequest} request CreateReadSessionRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.ReadSession>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryRead|readRows}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @typedef ReadRowsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.ReadRowsResponse} [response] ReadRowsResponse
                             */
    
                            /**
                             * Calls ReadRows.
                             * @function readRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsRequest} request ReadRowsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryRead.ReadRowsCallback} callback Node-style callback called with the error, if any, and ReadRowsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryRead.prototype.readRows = function readRows(request, callback) {
                                return this.rpcCall(readRows, $root.google.cloud.bigquery.storage.v1beta2.ReadRowsRequest, $root.google.cloud.bigquery.storage.v1beta2.ReadRowsResponse, request, callback);
                            }, "name", { value: "ReadRows" });
    
                            /**
                             * Calls ReadRows.
                             * @function readRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsRequest} request ReadRowsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.ReadRowsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryRead|splitReadStream}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @typedef SplitReadStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse} [response] SplitReadStreamResponse
                             */
    
                            /**
                             * Calls SplitReadStream.
                             * @function splitReadStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamRequest} request SplitReadStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryRead.SplitReadStreamCallback} callback Node-style callback called with the error, if any, and SplitReadStreamResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryRead.prototype.splitReadStream = function splitReadStream(request, callback) {
                                return this.rpcCall(splitReadStream, $root.google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest, $root.google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse, request, callback);
                            }, "name", { value: "SplitReadStream" });
    
                            /**
                             * Calls SplitReadStream.
                             * @function splitReadStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryRead
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamRequest} request SplitReadStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse>} Promise
                             * @variation 2
                             */
    
                            return BigQueryRead;
                        })();
    
                        v1beta2.BigQueryWrite = (function() {
    
                            /**
                             * Constructs a new BigQueryWrite service.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a BigQueryWrite
                             * @extends $protobuf.rpc.Service
                             * @constructor
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             */
                            function BigQueryWrite(rpcImpl, requestDelimited, responseDelimited) {
                                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                            }
    
                            (BigQueryWrite.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BigQueryWrite;
    
                            /**
                             * Creates new BigQueryWrite service using the specified rpc implementation.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @static
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             * @returns {BigQueryWrite} RPC service. Useful where requests and/or responses are streamed.
                             */
                            BigQueryWrite.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                                return new this(rpcImpl, requestDelimited, responseDelimited);
                            };
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryWrite|createWriteStream}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @typedef CreateWriteStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.WriteStream} [response] WriteStream
                             */
    
                            /**
                             * Calls CreateWriteStream.
                             * @function createWriteStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateWriteStreamRequest} request CreateWriteStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryWrite.CreateWriteStreamCallback} callback Node-style callback called with the error, if any, and WriteStream
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.createWriteStream = function createWriteStream(request, callback) {
                                return this.rpcCall(createWriteStream, $root.google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest, $root.google.cloud.bigquery.storage.v1beta2.WriteStream, request, callback);
                            }, "name", { value: "CreateWriteStream" });
    
                            /**
                             * Calls CreateWriteStream.
                             * @function createWriteStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateWriteStreamRequest} request CreateWriteStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.WriteStream>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryWrite|appendRows}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @typedef AppendRowsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse} [response] AppendRowsResponse
                             */
    
                            /**
                             * Calls AppendRows.
                             * @function appendRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsRequest} request AppendRowsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryWrite.AppendRowsCallback} callback Node-style callback called with the error, if any, and AppendRowsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.appendRows = function appendRows(request, callback) {
                                return this.rpcCall(appendRows, $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest, $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse, request, callback);
                            }, "name", { value: "AppendRows" });
    
                            /**
                             * Calls AppendRows.
                             * @function appendRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsRequest} request AppendRowsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.AppendRowsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryWrite|getWriteStream}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @typedef GetWriteStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.WriteStream} [response] WriteStream
                             */
    
                            /**
                             * Calls GetWriteStream.
                             * @function getWriteStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IGetWriteStreamRequest} request GetWriteStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryWrite.GetWriteStreamCallback} callback Node-style callback called with the error, if any, and WriteStream
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.getWriteStream = function getWriteStream(request, callback) {
                                return this.rpcCall(getWriteStream, $root.google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest, $root.google.cloud.bigquery.storage.v1beta2.WriteStream, request, callback);
                            }, "name", { value: "GetWriteStream" });
    
                            /**
                             * Calls GetWriteStream.
                             * @function getWriteStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IGetWriteStreamRequest} request GetWriteStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.WriteStream>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryWrite|finalizeWriteStream}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @typedef FinalizeWriteStreamCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse} [response] FinalizeWriteStreamResponse
                             */
    
                            /**
                             * Calls FinalizeWriteStream.
                             * @function finalizeWriteStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamRequest} request FinalizeWriteStreamRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryWrite.FinalizeWriteStreamCallback} callback Node-style callback called with the error, if any, and FinalizeWriteStreamResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.finalizeWriteStream = function finalizeWriteStream(request, callback) {
                                return this.rpcCall(finalizeWriteStream, $root.google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest, $root.google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse, request, callback);
                            }, "name", { value: "FinalizeWriteStream" });
    
                            /**
                             * Calls FinalizeWriteStream.
                             * @function finalizeWriteStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamRequest} request FinalizeWriteStreamRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryWrite|batchCommitWriteStreams}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @typedef BatchCommitWriteStreamsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse} [response] BatchCommitWriteStreamsResponse
                             */
    
                            /**
                             * Calls BatchCommitWriteStreams.
                             * @function batchCommitWriteStreams
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsRequest} request BatchCommitWriteStreamsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryWrite.BatchCommitWriteStreamsCallback} callback Node-style callback called with the error, if any, and BatchCommitWriteStreamsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.batchCommitWriteStreams = function batchCommitWriteStreams(request, callback) {
                                return this.rpcCall(batchCommitWriteStreams, $root.google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest, $root.google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse, request, callback);
                            }, "name", { value: "BatchCommitWriteStreams" });
    
                            /**
                             * Calls BatchCommitWriteStreams.
                             * @function batchCommitWriteStreams
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsRequest} request BatchCommitWriteStreamsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.bigquery.storage.v1beta2.BigQueryWrite|flushRows}.
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @typedef FlushRowsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.bigquery.storage.v1beta2.FlushRowsResponse} [response] FlushRowsResponse
                             */
    
                            /**
                             * Calls FlushRows.
                             * @function flushRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsRequest} request FlushRowsRequest message or plain object
                             * @param {google.cloud.bigquery.storage.v1beta2.BigQueryWrite.FlushRowsCallback} callback Node-style callback called with the error, if any, and FlushRowsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(BigQueryWrite.prototype.flushRows = function flushRows(request, callback) {
                                return this.rpcCall(flushRows, $root.google.cloud.bigquery.storage.v1beta2.FlushRowsRequest, $root.google.cloud.bigquery.storage.v1beta2.FlushRowsResponse, request, callback);
                            }, "name", { value: "FlushRows" });
    
                            /**
                             * Calls FlushRows.
                             * @function flushRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.BigQueryWrite
                             * @instance
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsRequest} request FlushRowsRequest message or plain object
                             * @returns {Promise<google.cloud.bigquery.storage.v1beta2.FlushRowsResponse>} Promise
                             * @variation 2
                             */
    
                            return BigQueryWrite;
                        })();
    
                        v1beta2.CreateReadSessionRequest = (function() {
    
                            /**
                             * Properties of a CreateReadSessionRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface ICreateReadSessionRequest
                             * @property {string|null} [parent] CreateReadSessionRequest parent
                             * @property {google.cloud.bigquery.storage.v1beta2.IReadSession|null} [readSession] CreateReadSessionRequest readSession
                             * @property {number|null} [maxStreamCount] CreateReadSessionRequest maxStreamCount
                             */
    
                            /**
                             * Constructs a new CreateReadSessionRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a CreateReadSessionRequest.
                             * @implements ICreateReadSessionRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateReadSessionRequest=} [properties] Properties to set
                             */
                            function CreateReadSessionRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateReadSessionRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.parent = "";
    
                            /**
                             * CreateReadSessionRequest readSession.
                             * @member {google.cloud.bigquery.storage.v1beta2.IReadSession|null|undefined} readSession
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.readSession = null;
    
                            /**
                             * CreateReadSessionRequest maxStreamCount.
                             * @member {number} maxStreamCount
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @instance
                             */
                            CreateReadSessionRequest.prototype.maxStreamCount = 0;
    
                            /**
                             * Creates a new CreateReadSessionRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateReadSessionRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest} CreateReadSessionRequest instance
                             */
                            CreateReadSessionRequest.create = function create(properties) {
                                return new CreateReadSessionRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateReadSessionRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateReadSessionRequest} message CreateReadSessionRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateReadSessionRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.readSession != null && Object.hasOwnProperty.call(message, "readSession"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ReadSession.encode(message.readSession, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.maxStreamCount != null && Object.hasOwnProperty.call(message, "maxStreamCount"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxStreamCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateReadSessionRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateReadSessionRequest} message CreateReadSessionRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateReadSessionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateReadSessionRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest} CreateReadSessionRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateReadSessionRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.readSession = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.maxStreamCount = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateReadSessionRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest} CreateReadSessionRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateReadSessionRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateReadSessionRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateReadSessionRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.readSession != null && message.hasOwnProperty("readSession")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.verify(message.readSession);
                                    if (error)
                                        return "readSession." + error;
                                }
                                if (message.maxStreamCount != null && message.hasOwnProperty("maxStreamCount"))
                                    if (!$util.isInteger(message.maxStreamCount))
                                        return "maxStreamCount: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateReadSessionRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest} CreateReadSessionRequest
                             */
                            CreateReadSessionRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.readSession != null) {
                                    if (typeof object.readSession !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest.readSession: object expected");
                                    message.readSession = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.fromObject(object.readSession);
                                }
                                if (object.maxStreamCount != null)
                                    message.maxStreamCount = object.maxStreamCount | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateReadSessionRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest} message CreateReadSessionRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateReadSessionRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.readSession = null;
                                    object.maxStreamCount = 0;
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.readSession != null && message.hasOwnProperty("readSession"))
                                    object.readSession = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.toObject(message.readSession, options);
                                if (message.maxStreamCount != null && message.hasOwnProperty("maxStreamCount"))
                                    object.maxStreamCount = message.maxStreamCount;
                                return object;
                            };
    
                            /**
                             * Converts this CreateReadSessionRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateReadSessionRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateReadSessionRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateReadSessionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.CreateReadSessionRequest";
                            };
    
                            return CreateReadSessionRequest;
                        })();
    
                        v1beta2.ReadRowsRequest = (function() {
    
                            /**
                             * Properties of a ReadRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IReadRowsRequest
                             * @property {string|null} [readStream] ReadRowsRequest readStream
                             * @property {number|Long|null} [offset] ReadRowsRequest offset
                             */
    
                            /**
                             * Constructs a new ReadRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a ReadRowsRequest.
                             * @implements IReadRowsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsRequest=} [properties] Properties to set
                             */
                            function ReadRowsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadRowsRequest readStream.
                             * @member {string} readStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @instance
                             */
                            ReadRowsRequest.prototype.readStream = "";
    
                            /**
                             * ReadRowsRequest offset.
                             * @member {number|Long} offset
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @instance
                             */
                            ReadRowsRequest.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new ReadRowsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadRowsRequest} ReadRowsRequest instance
                             */
                            ReadRowsRequest.create = function create(properties) {
                                return new ReadRowsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ReadRowsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadRowsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsRequest} message ReadRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.readStream != null && Object.hasOwnProperty.call(message, "readStream"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.readStream);
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.offset);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadRowsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadRowsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsRequest} message ReadRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadRowsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadRowsRequest} ReadRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ReadRowsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.readStream = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.offset = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadRowsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadRowsRequest} ReadRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadRowsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadRowsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.readStream != null && message.hasOwnProperty("readStream"))
                                    if (!$util.isString(message.readStream))
                                        return "readStream: string expected";
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                        return "offset: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a ReadRowsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadRowsRequest} ReadRowsRequest
                             */
                            ReadRowsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ReadRowsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ReadRowsRequest();
                                if (object.readStream != null)
                                    message.readStream = String(object.readStream);
                                if (object.offset != null)
                                    if ($util.Long)
                                        (message.offset = $util.Long.fromValue(object.offset)).unsigned = false;
                                    else if (typeof object.offset === "string")
                                        message.offset = parseInt(object.offset, 10);
                                    else if (typeof object.offset === "number")
                                        message.offset = object.offset;
                                    else if (typeof object.offset === "object")
                                        message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadRowsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ReadRowsRequest} message ReadRowsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadRowsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.readStream = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.offset = options.longs === String ? "0" : 0;
                                }
                                if (message.readStream != null && message.hasOwnProperty("readStream"))
                                    object.readStream = message.readStream;
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (typeof message.offset === "number")
                                        object.offset = options.longs === String ? String(message.offset) : message.offset;
                                    else
                                        object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber() : message.offset;
                                return object;
                            };
    
                            /**
                             * Converts this ReadRowsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadRowsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadRowsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadRowsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ReadRowsRequest";
                            };
    
                            return ReadRowsRequest;
                        })();
    
                        v1beta2.ThrottleState = (function() {
    
                            /**
                             * Properties of a ThrottleState.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IThrottleState
                             * @property {number|null} [throttlePercent] ThrottleState throttlePercent
                             */
    
                            /**
                             * Constructs a new ThrottleState.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a ThrottleState.
                             * @implements IThrottleState
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IThrottleState=} [properties] Properties to set
                             */
                            function ThrottleState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ThrottleState throttlePercent.
                             * @member {number} throttlePercent
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @instance
                             */
                            ThrottleState.prototype.throttlePercent = 0;
    
                            /**
                             * Creates a new ThrottleState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IThrottleState=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ThrottleState} ThrottleState instance
                             */
                            ThrottleState.create = function create(properties) {
                                return new ThrottleState(properties);
                            };
    
                            /**
                             * Encodes the specified ThrottleState message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ThrottleState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IThrottleState} message ThrottleState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ThrottleState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.throttlePercent != null && Object.hasOwnProperty.call(message, "throttlePercent"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.throttlePercent);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ThrottleState message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ThrottleState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IThrottleState} message ThrottleState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ThrottleState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ThrottleState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ThrottleState} ThrottleState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ThrottleState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ThrottleState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.throttlePercent = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ThrottleState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ThrottleState} ThrottleState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ThrottleState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ThrottleState message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ThrottleState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.throttlePercent != null && message.hasOwnProperty("throttlePercent"))
                                    if (!$util.isInteger(message.throttlePercent))
                                        return "throttlePercent: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a ThrottleState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ThrottleState} ThrottleState
                             */
                            ThrottleState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ThrottleState)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ThrottleState();
                                if (object.throttlePercent != null)
                                    message.throttlePercent = object.throttlePercent | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ThrottleState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ThrottleState} message ThrottleState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ThrottleState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.throttlePercent = 0;
                                if (message.throttlePercent != null && message.hasOwnProperty("throttlePercent"))
                                    object.throttlePercent = message.throttlePercent;
                                return object;
                            };
    
                            /**
                             * Converts this ThrottleState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ThrottleState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ThrottleState
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ThrottleState
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ThrottleState.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ThrottleState";
                            };
    
                            return ThrottleState;
                        })();
    
                        v1beta2.StreamStats = (function() {
    
                            /**
                             * Properties of a StreamStats.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IStreamStats
                             * @property {google.cloud.bigquery.storage.v1beta2.StreamStats.IProgress|null} [progress] StreamStats progress
                             */
    
                            /**
                             * Constructs a new StreamStats.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a StreamStats.
                             * @implements IStreamStats
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IStreamStats=} [properties] Properties to set
                             */
                            function StreamStats(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StreamStats progress.
                             * @member {google.cloud.bigquery.storage.v1beta2.StreamStats.IProgress|null|undefined} progress
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @instance
                             */
                            StreamStats.prototype.progress = null;
    
                            /**
                             * Creates a new StreamStats instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IStreamStats=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.StreamStats} StreamStats instance
                             */
                            StreamStats.create = function create(properties) {
                                return new StreamStats(properties);
                            };
    
                            /**
                             * Encodes the specified StreamStats message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.StreamStats.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IStreamStats} message StreamStats message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamStats.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.progress != null && Object.hasOwnProperty.call(message, "progress"))
                                    $root.google.cloud.bigquery.storage.v1beta2.StreamStats.Progress.encode(message.progress, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StreamStats message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.StreamStats.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IStreamStats} message StreamStats message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StreamStats.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StreamStats message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.StreamStats} StreamStats
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamStats.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.StreamStats();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.progress = $root.google.cloud.bigquery.storage.v1beta2.StreamStats.Progress.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StreamStats message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.StreamStats} StreamStats
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StreamStats.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StreamStats message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StreamStats.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.progress != null && message.hasOwnProperty("progress")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.StreamStats.Progress.verify(message.progress);
                                    if (error)
                                        return "progress." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a StreamStats message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.StreamStats} StreamStats
                             */
                            StreamStats.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.StreamStats)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.StreamStats();
                                if (object.progress != null) {
                                    if (typeof object.progress !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.StreamStats.progress: object expected");
                                    message.progress = $root.google.cloud.bigquery.storage.v1beta2.StreamStats.Progress.fromObject(object.progress);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StreamStats message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.StreamStats} message StreamStats
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StreamStats.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.progress = null;
                                if (message.progress != null && message.hasOwnProperty("progress"))
                                    object.progress = $root.google.cloud.bigquery.storage.v1beta2.StreamStats.Progress.toObject(message.progress, options);
                                return object;
                            };
    
                            /**
                             * Converts this StreamStats to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StreamStats.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StreamStats
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StreamStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.StreamStats";
                            };
    
                            StreamStats.Progress = (function() {
    
                                /**
                                 * Properties of a Progress.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                                 * @interface IProgress
                                 * @property {number|null} [atResponseStart] Progress atResponseStart
                                 * @property {number|null} [atResponseEnd] Progress atResponseEnd
                                 */
    
                                /**
                                 * Constructs a new Progress.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats
                                 * @classdesc Represents a Progress.
                                 * @implements IProgress
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1beta2.StreamStats.IProgress=} [properties] Properties to set
                                 */
                                function Progress(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Progress atResponseStart.
                                 * @member {number} atResponseStart
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @instance
                                 */
                                Progress.prototype.atResponseStart = 0;
    
                                /**
                                 * Progress atResponseEnd.
                                 * @member {number} atResponseEnd
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @instance
                                 */
                                Progress.prototype.atResponseEnd = 0;
    
                                /**
                                 * Creates a new Progress instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.StreamStats.IProgress=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1beta2.StreamStats.Progress} Progress instance
                                 */
                                Progress.create = function create(properties) {
                                    return new Progress(properties);
                                };
    
                                /**
                                 * Encodes the specified Progress message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.StreamStats.Progress.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.StreamStats.IProgress} message Progress message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Progress.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.atResponseStart != null && Object.hasOwnProperty.call(message, "atResponseStart"))
                                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.atResponseStart);
                                    if (message.atResponseEnd != null && Object.hasOwnProperty.call(message, "atResponseEnd"))
                                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.atResponseEnd);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Progress message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.StreamStats.Progress.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.StreamStats.IProgress} message Progress message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Progress.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Progress message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1beta2.StreamStats.Progress} Progress
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Progress.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.StreamStats.Progress();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.atResponseStart = reader.double();
                                                break;
                                            }
                                        case 2: {
                                                message.atResponseEnd = reader.double();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Progress message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1beta2.StreamStats.Progress} Progress
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Progress.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Progress message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Progress.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.atResponseStart != null && message.hasOwnProperty("atResponseStart"))
                                        if (typeof message.atResponseStart !== "number")
                                            return "atResponseStart: number expected";
                                    if (message.atResponseEnd != null && message.hasOwnProperty("atResponseEnd"))
                                        if (typeof message.atResponseEnd !== "number")
                                            return "atResponseEnd: number expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Progress message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1beta2.StreamStats.Progress} Progress
                                 */
                                Progress.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.StreamStats.Progress)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1beta2.StreamStats.Progress();
                                    if (object.atResponseStart != null)
                                        message.atResponseStart = Number(object.atResponseStart);
                                    if (object.atResponseEnd != null)
                                        message.atResponseEnd = Number(object.atResponseEnd);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Progress message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.StreamStats.Progress} message Progress
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Progress.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.atResponseStart = 0;
                                        object.atResponseEnd = 0;
                                    }
                                    if (message.atResponseStart != null && message.hasOwnProperty("atResponseStart"))
                                        object.atResponseStart = options.json && !isFinite(message.atResponseStart) ? String(message.atResponseStart) : message.atResponseStart;
                                    if (message.atResponseEnd != null && message.hasOwnProperty("atResponseEnd"))
                                        object.atResponseEnd = options.json && !isFinite(message.atResponseEnd) ? String(message.atResponseEnd) : message.atResponseEnd;
                                    return object;
                                };
    
                                /**
                                 * Converts this Progress to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Progress.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Progress
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1beta2.StreamStats.Progress
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Progress.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.StreamStats.Progress";
                                };
    
                                return Progress;
                            })();
    
                            return StreamStats;
                        })();
    
                        v1beta2.ReadRowsResponse = (function() {
    
                            /**
                             * Properties of a ReadRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IReadRowsResponse
                             * @property {google.cloud.bigquery.storage.v1beta2.IAvroRows|null} [avroRows] ReadRowsResponse avroRows
                             * @property {google.cloud.bigquery.storage.v1beta2.IArrowRecordBatch|null} [arrowRecordBatch] ReadRowsResponse arrowRecordBatch
                             * @property {number|Long|null} [rowCount] ReadRowsResponse rowCount
                             * @property {google.cloud.bigquery.storage.v1beta2.IStreamStats|null} [stats] ReadRowsResponse stats
                             * @property {google.cloud.bigquery.storage.v1beta2.IThrottleState|null} [throttleState] ReadRowsResponse throttleState
                             * @property {google.cloud.bigquery.storage.v1beta2.IAvroSchema|null} [avroSchema] ReadRowsResponse avroSchema
                             * @property {google.cloud.bigquery.storage.v1beta2.IArrowSchema|null} [arrowSchema] ReadRowsResponse arrowSchema
                             */
    
                            /**
                             * Constructs a new ReadRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a ReadRowsResponse.
                             * @implements IReadRowsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsResponse=} [properties] Properties to set
                             */
                            function ReadRowsResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadRowsResponse avroRows.
                             * @member {google.cloud.bigquery.storage.v1beta2.IAvroRows|null|undefined} avroRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.avroRows = null;
    
                            /**
                             * ReadRowsResponse arrowRecordBatch.
                             * @member {google.cloud.bigquery.storage.v1beta2.IArrowRecordBatch|null|undefined} arrowRecordBatch
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.arrowRecordBatch = null;
    
                            /**
                             * ReadRowsResponse rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ReadRowsResponse stats.
                             * @member {google.cloud.bigquery.storage.v1beta2.IStreamStats|null|undefined} stats
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.stats = null;
    
                            /**
                             * ReadRowsResponse throttleState.
                             * @member {google.cloud.bigquery.storage.v1beta2.IThrottleState|null|undefined} throttleState
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.throttleState = null;
    
                            /**
                             * ReadRowsResponse avroSchema.
                             * @member {google.cloud.bigquery.storage.v1beta2.IAvroSchema|null|undefined} avroSchema
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.avroSchema = null;
    
                            /**
                             * ReadRowsResponse arrowSchema.
                             * @member {google.cloud.bigquery.storage.v1beta2.IArrowSchema|null|undefined} arrowSchema
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            ReadRowsResponse.prototype.arrowSchema = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * ReadRowsResponse rows.
                             * @member {"avroRows"|"arrowRecordBatch"|undefined} rows
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            Object.defineProperty(ReadRowsResponse.prototype, "rows", {
                                get: $util.oneOfGetter($oneOfFields = ["avroRows", "arrowRecordBatch"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * ReadRowsResponse schema.
                             * @member {"avroSchema"|"arrowSchema"|undefined} schema
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             */
                            Object.defineProperty(ReadRowsResponse.prototype, "schema", {
                                get: $util.oneOfGetter($oneOfFields = ["avroSchema", "arrowSchema"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new ReadRowsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadRowsResponse} ReadRowsResponse instance
                             */
                            ReadRowsResponse.create = function create(properties) {
                                return new ReadRowsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ReadRowsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadRowsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsResponse} message ReadRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.stats != null && Object.hasOwnProperty.call(message, "stats"))
                                    $root.google.cloud.bigquery.storage.v1beta2.StreamStats.encode(message.stats, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.avroRows != null && Object.hasOwnProperty.call(message, "avroRows"))
                                    $root.google.cloud.bigquery.storage.v1beta2.AvroRows.encode(message.avroRows, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.arrowRecordBatch != null && Object.hasOwnProperty.call(message, "arrowRecordBatch"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch.encode(message.arrowRecordBatch, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.throttleState != null && Object.hasOwnProperty.call(message, "throttleState"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ThrottleState.encode(message.throttleState, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int64(message.rowCount);
                                if (message.avroSchema != null && Object.hasOwnProperty.call(message, "avroSchema"))
                                    $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.encode(message.avroSchema, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.arrowSchema != null && Object.hasOwnProperty.call(message, "arrowSchema"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.encode(message.arrowSchema, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadRowsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadRowsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadRowsResponse} message ReadRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadRowsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadRowsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadRowsResponse} ReadRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ReadRowsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 3: {
                                            message.avroRows = $root.google.cloud.bigquery.storage.v1beta2.AvroRows.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    case 2: {
                                            message.stats = $root.google.cloud.bigquery.storage.v1beta2.StreamStats.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.throttleState = $root.google.cloud.bigquery.storage.v1beta2.ThrottleState.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.avroSchema = $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.arrowSchema = $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadRowsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadRowsResponse} ReadRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadRowsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadRowsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadRowsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.avroRows != null && message.hasOwnProperty("avroRows")) {
                                    properties.rows = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.AvroRows.verify(message.avroRows);
                                        if (error)
                                            return "avroRows." + error;
                                    }
                                }
                                if (message.arrowRecordBatch != null && message.hasOwnProperty("arrowRecordBatch")) {
                                    if (properties.rows === 1)
                                        return "rows: multiple values";
                                    properties.rows = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch.verify(message.arrowRecordBatch);
                                        if (error)
                                            return "arrowRecordBatch." + error;
                                    }
                                }
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                if (message.stats != null && message.hasOwnProperty("stats")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.StreamStats.verify(message.stats);
                                    if (error)
                                        return "stats." + error;
                                }
                                if (message.throttleState != null && message.hasOwnProperty("throttleState")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.ThrottleState.verify(message.throttleState);
                                    if (error)
                                        return "throttleState." + error;
                                }
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.verify(message.avroSchema);
                                        if (error)
                                            return "avroSchema." + error;
                                    }
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    if (properties.schema === 1)
                                        return "schema: multiple values";
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.verify(message.arrowSchema);
                                        if (error)
                                            return "arrowSchema." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReadRowsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadRowsResponse} ReadRowsResponse
                             */
                            ReadRowsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ReadRowsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ReadRowsResponse();
                                if (object.avroRows != null) {
                                    if (typeof object.avroRows !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadRowsResponse.avroRows: object expected");
                                    message.avroRows = $root.google.cloud.bigquery.storage.v1beta2.AvroRows.fromObject(object.avroRows);
                                }
                                if (object.arrowRecordBatch != null) {
                                    if (typeof object.arrowRecordBatch !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadRowsResponse.arrowRecordBatch: object expected");
                                    message.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch.fromObject(object.arrowRecordBatch);
                                }
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                if (object.stats != null) {
                                    if (typeof object.stats !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadRowsResponse.stats: object expected");
                                    message.stats = $root.google.cloud.bigquery.storage.v1beta2.StreamStats.fromObject(object.stats);
                                }
                                if (object.throttleState != null) {
                                    if (typeof object.throttleState !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadRowsResponse.throttleState: object expected");
                                    message.throttleState = $root.google.cloud.bigquery.storage.v1beta2.ThrottleState.fromObject(object.throttleState);
                                }
                                if (object.avroSchema != null) {
                                    if (typeof object.avroSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadRowsResponse.avroSchema: object expected");
                                    message.avroSchema = $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.fromObject(object.avroSchema);
                                }
                                if (object.arrowSchema != null) {
                                    if (typeof object.arrowSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadRowsResponse.arrowSchema: object expected");
                                    message.arrowSchema = $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.fromObject(object.arrowSchema);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadRowsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ReadRowsResponse} message ReadRowsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadRowsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.stats = null;
                                    object.throttleState = null;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                }
                                if (message.stats != null && message.hasOwnProperty("stats"))
                                    object.stats = $root.google.cloud.bigquery.storage.v1beta2.StreamStats.toObject(message.stats, options);
                                if (message.avroRows != null && message.hasOwnProperty("avroRows")) {
                                    object.avroRows = $root.google.cloud.bigquery.storage.v1beta2.AvroRows.toObject(message.avroRows, options);
                                    if (options.oneofs)
                                        object.rows = "avroRows";
                                }
                                if (message.arrowRecordBatch != null && message.hasOwnProperty("arrowRecordBatch")) {
                                    object.arrowRecordBatch = $root.google.cloud.bigquery.storage.v1beta2.ArrowRecordBatch.toObject(message.arrowRecordBatch, options);
                                    if (options.oneofs)
                                        object.rows = "arrowRecordBatch";
                                }
                                if (message.throttleState != null && message.hasOwnProperty("throttleState"))
                                    object.throttleState = $root.google.cloud.bigquery.storage.v1beta2.ThrottleState.toObject(message.throttleState, options);
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    object.avroSchema = $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.toObject(message.avroSchema, options);
                                    if (options.oneofs)
                                        object.schema = "avroSchema";
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    object.arrowSchema = $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.toObject(message.arrowSchema, options);
                                    if (options.oneofs)
                                        object.schema = "arrowSchema";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ReadRowsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadRowsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadRowsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadRowsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadRowsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ReadRowsResponse";
                            };
    
                            return ReadRowsResponse;
                        })();
    
                        v1beta2.SplitReadStreamRequest = (function() {
    
                            /**
                             * Properties of a SplitReadStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface ISplitReadStreamRequest
                             * @property {string|null} [name] SplitReadStreamRequest name
                             * @property {number|null} [fraction] SplitReadStreamRequest fraction
                             */
    
                            /**
                             * Constructs a new SplitReadStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a SplitReadStreamRequest.
                             * @implements ISplitReadStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamRequest=} [properties] Properties to set
                             */
                            function SplitReadStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SplitReadStreamRequest name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @instance
                             */
                            SplitReadStreamRequest.prototype.name = "";
    
                            /**
                             * SplitReadStreamRequest fraction.
                             * @member {number} fraction
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @instance
                             */
                            SplitReadStreamRequest.prototype.fraction = 0;
    
                            /**
                             * Creates a new SplitReadStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest} SplitReadStreamRequest instance
                             */
                            SplitReadStreamRequest.create = function create(properties) {
                                return new SplitReadStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamRequest} message SplitReadStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.fraction != null && Object.hasOwnProperty.call(message, "fraction"))
                                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.fraction);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamRequest} message SplitReadStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SplitReadStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest} SplitReadStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.fraction = reader.double();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SplitReadStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest} SplitReadStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SplitReadStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SplitReadStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.fraction != null && message.hasOwnProperty("fraction"))
                                    if (typeof message.fraction !== "number")
                                        return "fraction: number expected";
                                return null;
                            };
    
                            /**
                             * Creates a SplitReadStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest} SplitReadStreamRequest
                             */
                            SplitReadStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.fraction != null)
                                    message.fraction = Number(object.fraction);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SplitReadStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest} message SplitReadStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SplitReadStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.fraction = 0;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.fraction != null && message.hasOwnProperty("fraction"))
                                    object.fraction = options.json && !isFinite(message.fraction) ? String(message.fraction) : message.fraction;
                                return object;
                            };
    
                            /**
                             * Converts this SplitReadStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SplitReadStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SplitReadStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SplitReadStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.SplitReadStreamRequest";
                            };
    
                            return SplitReadStreamRequest;
                        })();
    
                        v1beta2.SplitReadStreamResponse = (function() {
    
                            /**
                             * Properties of a SplitReadStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface ISplitReadStreamResponse
                             * @property {google.cloud.bigquery.storage.v1beta2.IReadStream|null} [primaryStream] SplitReadStreamResponse primaryStream
                             * @property {google.cloud.bigquery.storage.v1beta2.IReadStream|null} [remainderStream] SplitReadStreamResponse remainderStream
                             */
    
                            /**
                             * Constructs a new SplitReadStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a SplitReadStreamResponse.
                             * @implements ISplitReadStreamResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamResponse=} [properties] Properties to set
                             */
                            function SplitReadStreamResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SplitReadStreamResponse primaryStream.
                             * @member {google.cloud.bigquery.storage.v1beta2.IReadStream|null|undefined} primaryStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @instance
                             */
                            SplitReadStreamResponse.prototype.primaryStream = null;
    
                            /**
                             * SplitReadStreamResponse remainderStream.
                             * @member {google.cloud.bigquery.storage.v1beta2.IReadStream|null|undefined} remainderStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @instance
                             */
                            SplitReadStreamResponse.prototype.remainderStream = null;
    
                            /**
                             * Creates a new SplitReadStreamResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse} SplitReadStreamResponse instance
                             */
                            SplitReadStreamResponse.create = function create(properties) {
                                return new SplitReadStreamResponse(properties);
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamResponse} message SplitReadStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.primaryStream != null && Object.hasOwnProperty.call(message, "primaryStream"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ReadStream.encode(message.primaryStream, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.remainderStream != null && Object.hasOwnProperty.call(message, "remainderStream"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ReadStream.encode(message.remainderStream, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SplitReadStreamResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ISplitReadStreamResponse} message SplitReadStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SplitReadStreamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SplitReadStreamResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse} SplitReadStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.primaryStream = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.remainderStream = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SplitReadStreamResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse} SplitReadStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SplitReadStreamResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SplitReadStreamResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SplitReadStreamResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.primaryStream != null && message.hasOwnProperty("primaryStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.verify(message.primaryStream);
                                    if (error)
                                        return "primaryStream." + error;
                                }
                                if (message.remainderStream != null && message.hasOwnProperty("remainderStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.verify(message.remainderStream);
                                    if (error)
                                        return "remainderStream." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SplitReadStreamResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse} SplitReadStreamResponse
                             */
                            SplitReadStreamResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse();
                                if (object.primaryStream != null) {
                                    if (typeof object.primaryStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse.primaryStream: object expected");
                                    message.primaryStream = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.fromObject(object.primaryStream);
                                }
                                if (object.remainderStream != null) {
                                    if (typeof object.remainderStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse.remainderStream: object expected");
                                    message.remainderStream = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.fromObject(object.remainderStream);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SplitReadStreamResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse} message SplitReadStreamResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SplitReadStreamResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.primaryStream = null;
                                    object.remainderStream = null;
                                }
                                if (message.primaryStream != null && message.hasOwnProperty("primaryStream"))
                                    object.primaryStream = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.toObject(message.primaryStream, options);
                                if (message.remainderStream != null && message.hasOwnProperty("remainderStream"))
                                    object.remainderStream = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.toObject(message.remainderStream, options);
                                return object;
                            };
    
                            /**
                             * Converts this SplitReadStreamResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SplitReadStreamResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SplitReadStreamResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SplitReadStreamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.SplitReadStreamResponse";
                            };
    
                            return SplitReadStreamResponse;
                        })();
    
                        v1beta2.CreateWriteStreamRequest = (function() {
    
                            /**
                             * Properties of a CreateWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface ICreateWriteStreamRequest
                             * @property {string|null} [parent] CreateWriteStreamRequest parent
                             * @property {google.cloud.bigquery.storage.v1beta2.IWriteStream|null} [writeStream] CreateWriteStreamRequest writeStream
                             */
    
                            /**
                             * Constructs a new CreateWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a CreateWriteStreamRequest.
                             * @implements ICreateWriteStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateWriteStreamRequest=} [properties] Properties to set
                             */
                            function CreateWriteStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateWriteStreamRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @instance
                             */
                            CreateWriteStreamRequest.prototype.parent = "";
    
                            /**
                             * CreateWriteStreamRequest writeStream.
                             * @member {google.cloud.bigquery.storage.v1beta2.IWriteStream|null|undefined} writeStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @instance
                             */
                            CreateWriteStreamRequest.prototype.writeStream = null;
    
                            /**
                             * Creates a new CreateWriteStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateWriteStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest} CreateWriteStreamRequest instance
                             */
                            CreateWriteStreamRequest.create = function create(properties) {
                                return new CreateWriteStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateWriteStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateWriteStreamRequest} message CreateWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateWriteStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.writeStream != null && Object.hasOwnProperty.call(message, "writeStream"))
                                    $root.google.cloud.bigquery.storage.v1beta2.WriteStream.encode(message.writeStream, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateWriteStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ICreateWriteStreamRequest} message CreateWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateWriteStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateWriteStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest} CreateWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateWriteStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.writeStream = $root.google.cloud.bigquery.storage.v1beta2.WriteStream.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateWriteStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest} CreateWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateWriteStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateWriteStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateWriteStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.writeStream != null && message.hasOwnProperty("writeStream")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.WriteStream.verify(message.writeStream);
                                    if (error)
                                        return "writeStream." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CreateWriteStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest} CreateWriteStreamRequest
                             */
                            CreateWriteStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.writeStream != null) {
                                    if (typeof object.writeStream !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest.writeStream: object expected");
                                    message.writeStream = $root.google.cloud.bigquery.storage.v1beta2.WriteStream.fromObject(object.writeStream);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateWriteStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest} message CreateWriteStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateWriteStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.writeStream = null;
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    object.writeStream = $root.google.cloud.bigquery.storage.v1beta2.WriteStream.toObject(message.writeStream, options);
                                return object;
                            };
    
                            /**
                             * Converts this CreateWriteStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateWriteStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateWriteStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateWriteStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.CreateWriteStreamRequest";
                            };
    
                            return CreateWriteStreamRequest;
                        })();
    
                        v1beta2.AppendRowsRequest = (function() {
    
                            /**
                             * Properties of an AppendRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IAppendRowsRequest
                             * @property {string|null} [writeStream] AppendRowsRequest writeStream
                             * @property {google.protobuf.IInt64Value|null} [offset] AppendRowsRequest offset
                             * @property {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.IProtoData|null} [protoRows] AppendRowsRequest protoRows
                             * @property {string|null} [traceId] AppendRowsRequest traceId
                             */
    
                            /**
                             * Constructs a new AppendRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents an AppendRowsRequest.
                             * @implements IAppendRowsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsRequest=} [properties] Properties to set
                             */
                            function AppendRowsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AppendRowsRequest writeStream.
                             * @member {string} writeStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.writeStream = "";
    
                            /**
                             * AppendRowsRequest offset.
                             * @member {google.protobuf.IInt64Value|null|undefined} offset
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.offset = null;
    
                            /**
                             * AppendRowsRequest protoRows.
                             * @member {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.IProtoData|null|undefined} protoRows
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.protoRows = null;
    
                            /**
                             * AppendRowsRequest traceId.
                             * @member {string} traceId
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @instance
                             */
                            AppendRowsRequest.prototype.traceId = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * AppendRowsRequest rows.
                             * @member {"protoRows"|undefined} rows
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @instance
                             */
                            Object.defineProperty(AppendRowsRequest.prototype, "rows", {
                                get: $util.oneOfGetter($oneOfFields = ["protoRows"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new AppendRowsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest} AppendRowsRequest instance
                             */
                            AppendRowsRequest.create = function create(properties) {
                                return new AppendRowsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified AppendRowsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsRequest} message AppendRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AppendRowsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.writeStream != null && Object.hasOwnProperty.call(message, "writeStream"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.writeStream);
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    $root.google.protobuf.Int64Value.encode(message.offset, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.protoRows != null && Object.hasOwnProperty.call(message, "protoRows"))
                                    $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.encode(message.protoRows, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.traceId != null && Object.hasOwnProperty.call(message, "traceId"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.traceId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AppendRowsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsRequest} message AppendRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AppendRowsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AppendRowsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest} AppendRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AppendRowsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.writeStream = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.offset = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.protoRows = $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.traceId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AppendRowsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest} AppendRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AppendRowsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AppendRowsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AppendRowsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    if (!$util.isString(message.writeStream))
                                        return "writeStream: string expected";
                                if (message.offset != null && message.hasOwnProperty("offset")) {
                                    var error = $root.google.protobuf.Int64Value.verify(message.offset);
                                    if (error)
                                        return "offset." + error;
                                }
                                if (message.protoRows != null && message.hasOwnProperty("protoRows")) {
                                    properties.rows = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.verify(message.protoRows);
                                        if (error)
                                            return "protoRows." + error;
                                    }
                                }
                                if (message.traceId != null && message.hasOwnProperty("traceId"))
                                    if (!$util.isString(message.traceId))
                                        return "traceId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an AppendRowsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest} AppendRowsRequest
                             */
                            AppendRowsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest();
                                if (object.writeStream != null)
                                    message.writeStream = String(object.writeStream);
                                if (object.offset != null) {
                                    if (typeof object.offset !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.offset: object expected");
                                    message.offset = $root.google.protobuf.Int64Value.fromObject(object.offset);
                                }
                                if (object.protoRows != null) {
                                    if (typeof object.protoRows !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.protoRows: object expected");
                                    message.protoRows = $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.fromObject(object.protoRows);
                                }
                                if (object.traceId != null)
                                    message.traceId = String(object.traceId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AppendRowsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest} message AppendRowsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AppendRowsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.writeStream = "";
                                    object.offset = null;
                                    object.traceId = "";
                                }
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    object.writeStream = message.writeStream;
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    object.offset = $root.google.protobuf.Int64Value.toObject(message.offset, options);
                                if (message.protoRows != null && message.hasOwnProperty("protoRows")) {
                                    object.protoRows = $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.toObject(message.protoRows, options);
                                    if (options.oneofs)
                                        object.rows = "protoRows";
                                }
                                if (message.traceId != null && message.hasOwnProperty("traceId"))
                                    object.traceId = message.traceId;
                                return object;
                            };
    
                            /**
                             * Converts this AppendRowsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AppendRowsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AppendRowsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AppendRowsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.AppendRowsRequest";
                            };
    
                            AppendRowsRequest.ProtoData = (function() {
    
                                /**
                                 * Properties of a ProtoData.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                                 * @interface IProtoData
                                 * @property {google.cloud.bigquery.storage.v1beta2.IProtoSchema|null} [writerSchema] ProtoData writerSchema
                                 * @property {google.cloud.bigquery.storage.v1beta2.IProtoRows|null} [rows] ProtoData rows
                                 */
    
                                /**
                                 * Constructs a new ProtoData.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest
                                 * @classdesc Represents a ProtoData.
                                 * @implements IProtoData
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.IProtoData=} [properties] Properties to set
                                 */
                                function ProtoData(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ProtoData writerSchema.
                                 * @member {google.cloud.bigquery.storage.v1beta2.IProtoSchema|null|undefined} writerSchema
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @instance
                                 */
                                ProtoData.prototype.writerSchema = null;
    
                                /**
                                 * ProtoData rows.
                                 * @member {google.cloud.bigquery.storage.v1beta2.IProtoRows|null|undefined} rows
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @instance
                                 */
                                ProtoData.prototype.rows = null;
    
                                /**
                                 * Creates a new ProtoData instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.IProtoData=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData} ProtoData instance
                                 */
                                ProtoData.create = function create(properties) {
                                    return new ProtoData(properties);
                                };
    
                                /**
                                 * Encodes the specified ProtoData message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.IProtoData} message ProtoData message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ProtoData.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.writerSchema != null && Object.hasOwnProperty.call(message, "writerSchema"))
                                        $root.google.cloud.bigquery.storage.v1beta2.ProtoSchema.encode(message.writerSchema, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.rows != null && Object.hasOwnProperty.call(message, "rows"))
                                        $root.google.cloud.bigquery.storage.v1beta2.ProtoRows.encode(message.rows, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ProtoData message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.IProtoData} message ProtoData message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ProtoData.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a ProtoData message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData} ProtoData
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ProtoData.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.writerSchema = $root.google.cloud.bigquery.storage.v1beta2.ProtoSchema.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.rows = $root.google.cloud.bigquery.storage.v1beta2.ProtoRows.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a ProtoData message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData} ProtoData
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ProtoData.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a ProtoData message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ProtoData.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.writerSchema != null && message.hasOwnProperty("writerSchema")) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.ProtoSchema.verify(message.writerSchema);
                                        if (error)
                                            return "writerSchema." + error;
                                    }
                                    if (message.rows != null && message.hasOwnProperty("rows")) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.ProtoRows.verify(message.rows);
                                        if (error)
                                            return "rows." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a ProtoData message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData} ProtoData
                                 */
                                ProtoData.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData();
                                    if (object.writerSchema != null) {
                                        if (typeof object.writerSchema !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.writerSchema: object expected");
                                        message.writerSchema = $root.google.cloud.bigquery.storage.v1beta2.ProtoSchema.fromObject(object.writerSchema);
                                    }
                                    if (object.rows != null) {
                                        if (typeof object.rows !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData.rows: object expected");
                                        message.rows = $root.google.cloud.bigquery.storage.v1beta2.ProtoRows.fromObject(object.rows);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a ProtoData message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData} message ProtoData
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ProtoData.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.writerSchema = null;
                                        object.rows = null;
                                    }
                                    if (message.writerSchema != null && message.hasOwnProperty("writerSchema"))
                                        object.writerSchema = $root.google.cloud.bigquery.storage.v1beta2.ProtoSchema.toObject(message.writerSchema, options);
                                    if (message.rows != null && message.hasOwnProperty("rows"))
                                        object.rows = $root.google.cloud.bigquery.storage.v1beta2.ProtoRows.toObject(message.rows, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this ProtoData to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ProtoData.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ProtoData
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ProtoData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.AppendRowsRequest.ProtoData";
                                };
    
                                return ProtoData;
                            })();
    
                            return AppendRowsRequest;
                        })();
    
                        v1beta2.AppendRowsResponse = (function() {
    
                            /**
                             * Properties of an AppendRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IAppendRowsResponse
                             * @property {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.IAppendResult|null} [appendResult] AppendRowsResponse appendResult
                             * @property {google.rpc.IStatus|null} [error] AppendRowsResponse error
                             * @property {google.cloud.bigquery.storage.v1beta2.ITableSchema|null} [updatedSchema] AppendRowsResponse updatedSchema
                             */
    
                            /**
                             * Constructs a new AppendRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents an AppendRowsResponse.
                             * @implements IAppendRowsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsResponse=} [properties] Properties to set
                             */
                            function AppendRowsResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AppendRowsResponse appendResult.
                             * @member {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.IAppendResult|null|undefined} appendResult
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @instance
                             */
                            AppendRowsResponse.prototype.appendResult = null;
    
                            /**
                             * AppendRowsResponse error.
                             * @member {google.rpc.IStatus|null|undefined} error
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @instance
                             */
                            AppendRowsResponse.prototype.error = null;
    
                            /**
                             * AppendRowsResponse updatedSchema.
                             * @member {google.cloud.bigquery.storage.v1beta2.ITableSchema|null|undefined} updatedSchema
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @instance
                             */
                            AppendRowsResponse.prototype.updatedSchema = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * AppendRowsResponse response.
                             * @member {"appendResult"|"error"|undefined} response
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @instance
                             */
                            Object.defineProperty(AppendRowsResponse.prototype, "response", {
                                get: $util.oneOfGetter($oneOfFields = ["appendResult", "error"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new AppendRowsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse} AppendRowsResponse instance
                             */
                            AppendRowsResponse.create = function create(properties) {
                                return new AppendRowsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified AppendRowsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsResponse} message AppendRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AppendRowsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.appendResult != null && Object.hasOwnProperty.call(message, "appendResult"))
                                    $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult.encode(message.appendResult, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                    $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.updatedSchema != null && Object.hasOwnProperty.call(message, "updatedSchema"))
                                    $root.google.cloud.bigquery.storage.v1beta2.TableSchema.encode(message.updatedSchema, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AppendRowsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IAppendRowsResponse} message AppendRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AppendRowsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AppendRowsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse} AppendRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AppendRowsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.appendResult = $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.updatedSchema = $root.google.cloud.bigquery.storage.v1beta2.TableSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AppendRowsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse} AppendRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AppendRowsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AppendRowsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AppendRowsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.appendResult != null && message.hasOwnProperty("appendResult")) {
                                    properties.response = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult.verify(message.appendResult);
                                        if (error)
                                            return "appendResult." + error;
                                    }
                                }
                                if (message.error != null && message.hasOwnProperty("error")) {
                                    if (properties.response === 1)
                                        return "response: multiple values";
                                    properties.response = 1;
                                    {
                                        var error = $root.google.rpc.Status.verify(message.error);
                                        if (error)
                                            return "error." + error;
                                    }
                                }
                                if (message.updatedSchema != null && message.hasOwnProperty("updatedSchema")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.TableSchema.verify(message.updatedSchema);
                                    if (error)
                                        return "updatedSchema." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates an AppendRowsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse} AppendRowsResponse
                             */
                            AppendRowsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse();
                                if (object.appendResult != null) {
                                    if (typeof object.appendResult !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.appendResult: object expected");
                                    message.appendResult = $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult.fromObject(object.appendResult);
                                }
                                if (object.error != null) {
                                    if (typeof object.error !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.error: object expected");
                                    message.error = $root.google.rpc.Status.fromObject(object.error);
                                }
                                if (object.updatedSchema != null) {
                                    if (typeof object.updatedSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.updatedSchema: object expected");
                                    message.updatedSchema = $root.google.cloud.bigquery.storage.v1beta2.TableSchema.fromObject(object.updatedSchema);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AppendRowsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse} message AppendRowsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AppendRowsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.updatedSchema = null;
                                if (message.appendResult != null && message.hasOwnProperty("appendResult")) {
                                    object.appendResult = $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult.toObject(message.appendResult, options);
                                    if (options.oneofs)
                                        object.response = "appendResult";
                                }
                                if (message.error != null && message.hasOwnProperty("error")) {
                                    object.error = $root.google.rpc.Status.toObject(message.error, options);
                                    if (options.oneofs)
                                        object.response = "error";
                                }
                                if (message.updatedSchema != null && message.hasOwnProperty("updatedSchema"))
                                    object.updatedSchema = $root.google.cloud.bigquery.storage.v1beta2.TableSchema.toObject(message.updatedSchema, options);
                                return object;
                            };
    
                            /**
                             * Converts this AppendRowsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AppendRowsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AppendRowsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AppendRowsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.AppendRowsResponse";
                            };
    
                            AppendRowsResponse.AppendResult = (function() {
    
                                /**
                                 * Properties of an AppendResult.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                                 * @interface IAppendResult
                                 * @property {google.protobuf.IInt64Value|null} [offset] AppendResult offset
                                 */
    
                                /**
                                 * Constructs a new AppendResult.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse
                                 * @classdesc Represents an AppendResult.
                                 * @implements IAppendResult
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.IAppendResult=} [properties] Properties to set
                                 */
                                function AppendResult(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * AppendResult offset.
                                 * @member {google.protobuf.IInt64Value|null|undefined} offset
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @instance
                                 */
                                AppendResult.prototype.offset = null;
    
                                /**
                                 * Creates a new AppendResult instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.IAppendResult=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult} AppendResult instance
                                 */
                                AppendResult.create = function create(properties) {
                                    return new AppendResult(properties);
                                };
    
                                /**
                                 * Encodes the specified AppendResult message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.IAppendResult} message AppendResult message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                AppendResult.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                        $root.google.protobuf.Int64Value.encode(message.offset, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified AppendResult message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.IAppendResult} message AppendResult message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                AppendResult.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an AppendResult message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult} AppendResult
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                AppendResult.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.offset = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an AppendResult message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult} AppendResult
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                AppendResult.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an AppendResult message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                AppendResult.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.offset != null && message.hasOwnProperty("offset")) {
                                        var error = $root.google.protobuf.Int64Value.verify(message.offset);
                                        if (error)
                                            return "offset." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates an AppendResult message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult} AppendResult
                                 */
                                AppendResult.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult();
                                    if (object.offset != null) {
                                        if (typeof object.offset !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult.offset: object expected");
                                        message.offset = $root.google.protobuf.Int64Value.fromObject(object.offset);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an AppendResult message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult} message AppendResult
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                AppendResult.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.offset = null;
                                    if (message.offset != null && message.hasOwnProperty("offset"))
                                        object.offset = $root.google.protobuf.Int64Value.toObject(message.offset, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this AppendResult to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                AppendResult.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for AppendResult
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                AppendResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.AppendRowsResponse.AppendResult";
                                };
    
                                return AppendResult;
                            })();
    
                            return AppendRowsResponse;
                        })();
    
                        v1beta2.GetWriteStreamRequest = (function() {
    
                            /**
                             * Properties of a GetWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IGetWriteStreamRequest
                             * @property {string|null} [name] GetWriteStreamRequest name
                             */
    
                            /**
                             * Constructs a new GetWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a GetWriteStreamRequest.
                             * @implements IGetWriteStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IGetWriteStreamRequest=} [properties] Properties to set
                             */
                            function GetWriteStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetWriteStreamRequest name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @instance
                             */
                            GetWriteStreamRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetWriteStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IGetWriteStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest} GetWriteStreamRequest instance
                             */
                            GetWriteStreamRequest.create = function create(properties) {
                                return new GetWriteStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetWriteStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IGetWriteStreamRequest} message GetWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetWriteStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetWriteStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IGetWriteStreamRequest} message GetWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetWriteStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetWriteStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest} GetWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetWriteStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetWriteStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest} GetWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetWriteStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetWriteStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetWriteStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetWriteStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest} GetWriteStreamRequest
                             */
                            GetWriteStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetWriteStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest} message GetWriteStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetWriteStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetWriteStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetWriteStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetWriteStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetWriteStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.GetWriteStreamRequest";
                            };
    
                            return GetWriteStreamRequest;
                        })();
    
                        v1beta2.BatchCommitWriteStreamsRequest = (function() {
    
                            /**
                             * Properties of a BatchCommitWriteStreamsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IBatchCommitWriteStreamsRequest
                             * @property {string|null} [parent] BatchCommitWriteStreamsRequest parent
                             * @property {Array.<string>|null} [writeStreams] BatchCommitWriteStreamsRequest writeStreams
                             */
    
                            /**
                             * Constructs a new BatchCommitWriteStreamsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a BatchCommitWriteStreamsRequest.
                             * @implements IBatchCommitWriteStreamsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsRequest=} [properties] Properties to set
                             */
                            function BatchCommitWriteStreamsRequest(properties) {
                                this.writeStreams = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BatchCommitWriteStreamsRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @instance
                             */
                            BatchCommitWriteStreamsRequest.prototype.parent = "";
    
                            /**
                             * BatchCommitWriteStreamsRequest writeStreams.
                             * @member {Array.<string>} writeStreams
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @instance
                             */
                            BatchCommitWriteStreamsRequest.prototype.writeStreams = $util.emptyArray;
    
                            /**
                             * Creates a new BatchCommitWriteStreamsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest} BatchCommitWriteStreamsRequest instance
                             */
                            BatchCommitWriteStreamsRequest.create = function create(properties) {
                                return new BatchCommitWriteStreamsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified BatchCommitWriteStreamsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsRequest} message BatchCommitWriteStreamsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCommitWriteStreamsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.writeStreams != null && message.writeStreams.length)
                                    for (var i = 0; i < message.writeStreams.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.writeStreams[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BatchCommitWriteStreamsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsRequest} message BatchCommitWriteStreamsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCommitWriteStreamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BatchCommitWriteStreamsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest} BatchCommitWriteStreamsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCommitWriteStreamsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.writeStreams && message.writeStreams.length))
                                                message.writeStreams = [];
                                            message.writeStreams.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BatchCommitWriteStreamsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest} BatchCommitWriteStreamsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCommitWriteStreamsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BatchCommitWriteStreamsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BatchCommitWriteStreamsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.writeStreams != null && message.hasOwnProperty("writeStreams")) {
                                    if (!Array.isArray(message.writeStreams))
                                        return "writeStreams: array expected";
                                    for (var i = 0; i < message.writeStreams.length; ++i)
                                        if (!$util.isString(message.writeStreams[i]))
                                            return "writeStreams: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BatchCommitWriteStreamsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest} BatchCommitWriteStreamsRequest
                             */
                            BatchCommitWriteStreamsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.writeStreams) {
                                    if (!Array.isArray(object.writeStreams))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest.writeStreams: array expected");
                                    message.writeStreams = [];
                                    for (var i = 0; i < object.writeStreams.length; ++i)
                                        message.writeStreams[i] = String(object.writeStreams[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BatchCommitWriteStreamsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest} message BatchCommitWriteStreamsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BatchCommitWriteStreamsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.writeStreams = [];
                                if (options.defaults)
                                    object.parent = "";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.writeStreams && message.writeStreams.length) {
                                    object.writeStreams = [];
                                    for (var j = 0; j < message.writeStreams.length; ++j)
                                        object.writeStreams[j] = message.writeStreams[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this BatchCommitWriteStreamsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BatchCommitWriteStreamsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BatchCommitWriteStreamsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BatchCommitWriteStreamsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsRequest";
                            };
    
                            return BatchCommitWriteStreamsRequest;
                        })();
    
                        v1beta2.BatchCommitWriteStreamsResponse = (function() {
    
                            /**
                             * Properties of a BatchCommitWriteStreamsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IBatchCommitWriteStreamsResponse
                             * @property {google.protobuf.ITimestamp|null} [commitTime] BatchCommitWriteStreamsResponse commitTime
                             * @property {Array.<google.cloud.bigquery.storage.v1beta2.IStorageError>|null} [streamErrors] BatchCommitWriteStreamsResponse streamErrors
                             */
    
                            /**
                             * Constructs a new BatchCommitWriteStreamsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a BatchCommitWriteStreamsResponse.
                             * @implements IBatchCommitWriteStreamsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsResponse=} [properties] Properties to set
                             */
                            function BatchCommitWriteStreamsResponse(properties) {
                                this.streamErrors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BatchCommitWriteStreamsResponse commitTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} commitTime
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @instance
                             */
                            BatchCommitWriteStreamsResponse.prototype.commitTime = null;
    
                            /**
                             * BatchCommitWriteStreamsResponse streamErrors.
                             * @member {Array.<google.cloud.bigquery.storage.v1beta2.IStorageError>} streamErrors
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @instance
                             */
                            BatchCommitWriteStreamsResponse.prototype.streamErrors = $util.emptyArray;
    
                            /**
                             * Creates a new BatchCommitWriteStreamsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse} BatchCommitWriteStreamsResponse instance
                             */
                            BatchCommitWriteStreamsResponse.create = function create(properties) {
                                return new BatchCommitWriteStreamsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified BatchCommitWriteStreamsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsResponse} message BatchCommitWriteStreamsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCommitWriteStreamsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.commitTime != null && Object.hasOwnProperty.call(message, "commitTime"))
                                    $root.google.protobuf.Timestamp.encode(message.commitTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.streamErrors != null && message.streamErrors.length)
                                    for (var i = 0; i < message.streamErrors.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1beta2.StorageError.encode(message.streamErrors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BatchCommitWriteStreamsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IBatchCommitWriteStreamsResponse} message BatchCommitWriteStreamsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BatchCommitWriteStreamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BatchCommitWriteStreamsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse} BatchCommitWriteStreamsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCommitWriteStreamsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.commitTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.streamErrors && message.streamErrors.length))
                                                message.streamErrors = [];
                                            message.streamErrors.push($root.google.cloud.bigquery.storage.v1beta2.StorageError.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BatchCommitWriteStreamsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse} BatchCommitWriteStreamsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BatchCommitWriteStreamsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BatchCommitWriteStreamsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BatchCommitWriteStreamsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.commitTime != null && message.hasOwnProperty("commitTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.commitTime);
                                    if (error)
                                        return "commitTime." + error;
                                }
                                if (message.streamErrors != null && message.hasOwnProperty("streamErrors")) {
                                    if (!Array.isArray(message.streamErrors))
                                        return "streamErrors: array expected";
                                    for (var i = 0; i < message.streamErrors.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.StorageError.verify(message.streamErrors[i]);
                                        if (error)
                                            return "streamErrors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BatchCommitWriteStreamsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse} BatchCommitWriteStreamsResponse
                             */
                            BatchCommitWriteStreamsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse();
                                if (object.commitTime != null) {
                                    if (typeof object.commitTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse.commitTime: object expected");
                                    message.commitTime = $root.google.protobuf.Timestamp.fromObject(object.commitTime);
                                }
                                if (object.streamErrors) {
                                    if (!Array.isArray(object.streamErrors))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse.streamErrors: array expected");
                                    message.streamErrors = [];
                                    for (var i = 0; i < object.streamErrors.length; ++i) {
                                        if (typeof object.streamErrors[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse.streamErrors: object expected");
                                        message.streamErrors[i] = $root.google.cloud.bigquery.storage.v1beta2.StorageError.fromObject(object.streamErrors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BatchCommitWriteStreamsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse} message BatchCommitWriteStreamsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BatchCommitWriteStreamsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.streamErrors = [];
                                if (options.defaults)
                                    object.commitTime = null;
                                if (message.commitTime != null && message.hasOwnProperty("commitTime"))
                                    object.commitTime = $root.google.protobuf.Timestamp.toObject(message.commitTime, options);
                                if (message.streamErrors && message.streamErrors.length) {
                                    object.streamErrors = [];
                                    for (var j = 0; j < message.streamErrors.length; ++j)
                                        object.streamErrors[j] = $root.google.cloud.bigquery.storage.v1beta2.StorageError.toObject(message.streamErrors[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this BatchCommitWriteStreamsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BatchCommitWriteStreamsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BatchCommitWriteStreamsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BatchCommitWriteStreamsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.BatchCommitWriteStreamsResponse";
                            };
    
                            return BatchCommitWriteStreamsResponse;
                        })();
    
                        v1beta2.FinalizeWriteStreamRequest = (function() {
    
                            /**
                             * Properties of a FinalizeWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IFinalizeWriteStreamRequest
                             * @property {string|null} [name] FinalizeWriteStreamRequest name
                             */
    
                            /**
                             * Constructs a new FinalizeWriteStreamRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a FinalizeWriteStreamRequest.
                             * @implements IFinalizeWriteStreamRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamRequest=} [properties] Properties to set
                             */
                            function FinalizeWriteStreamRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FinalizeWriteStreamRequest name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @instance
                             */
                            FinalizeWriteStreamRequest.prototype.name = "";
    
                            /**
                             * Creates a new FinalizeWriteStreamRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest} FinalizeWriteStreamRequest instance
                             */
                            FinalizeWriteStreamRequest.create = function create(properties) {
                                return new FinalizeWriteStreamRequest(properties);
                            };
    
                            /**
                             * Encodes the specified FinalizeWriteStreamRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamRequest} message FinalizeWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeWriteStreamRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FinalizeWriteStreamRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamRequest} message FinalizeWriteStreamRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeWriteStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FinalizeWriteStreamRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest} FinalizeWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeWriteStreamRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FinalizeWriteStreamRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest} FinalizeWriteStreamRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeWriteStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FinalizeWriteStreamRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FinalizeWriteStreamRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FinalizeWriteStreamRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest} FinalizeWriteStreamRequest
                             */
                            FinalizeWriteStreamRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FinalizeWriteStreamRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest} message FinalizeWriteStreamRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FinalizeWriteStreamRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this FinalizeWriteStreamRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FinalizeWriteStreamRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FinalizeWriteStreamRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FinalizeWriteStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamRequest";
                            };
    
                            return FinalizeWriteStreamRequest;
                        })();
    
                        v1beta2.FinalizeWriteStreamResponse = (function() {
    
                            /**
                             * Properties of a FinalizeWriteStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IFinalizeWriteStreamResponse
                             * @property {number|Long|null} [rowCount] FinalizeWriteStreamResponse rowCount
                             */
    
                            /**
                             * Constructs a new FinalizeWriteStreamResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a FinalizeWriteStreamResponse.
                             * @implements IFinalizeWriteStreamResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamResponse=} [properties] Properties to set
                             */
                            function FinalizeWriteStreamResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FinalizeWriteStreamResponse rowCount.
                             * @member {number|Long} rowCount
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @instance
                             */
                            FinalizeWriteStreamResponse.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new FinalizeWriteStreamResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse} FinalizeWriteStreamResponse instance
                             */
                            FinalizeWriteStreamResponse.create = function create(properties) {
                                return new FinalizeWriteStreamResponse(properties);
                            };
    
                            /**
                             * Encodes the specified FinalizeWriteStreamResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamResponse} message FinalizeWriteStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeWriteStreamResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.rowCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FinalizeWriteStreamResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFinalizeWriteStreamResponse} message FinalizeWriteStreamResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FinalizeWriteStreamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FinalizeWriteStreamResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse} FinalizeWriteStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeWriteStreamResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.rowCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FinalizeWriteStreamResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse} FinalizeWriteStreamResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FinalizeWriteStreamResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FinalizeWriteStreamResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FinalizeWriteStreamResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                        return "rowCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a FinalizeWriteStreamResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse} FinalizeWriteStreamResponse
                             */
                            FinalizeWriteStreamResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse();
                                if (object.rowCount != null)
                                    if ($util.Long)
                                        (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                    else if (typeof object.rowCount === "string")
                                        message.rowCount = parseInt(object.rowCount, 10);
                                    else if (typeof object.rowCount === "number")
                                        message.rowCount = object.rowCount;
                                    else if (typeof object.rowCount === "object")
                                        message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FinalizeWriteStreamResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse} message FinalizeWriteStreamResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FinalizeWriteStreamResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.rowCount = options.longs === String ? "0" : 0;
                                if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                    if (typeof message.rowCount === "number")
                                        object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                    else
                                        object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                                return object;
                            };
    
                            /**
                             * Converts this FinalizeWriteStreamResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FinalizeWriteStreamResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FinalizeWriteStreamResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FinalizeWriteStreamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.FinalizeWriteStreamResponse";
                            };
    
                            return FinalizeWriteStreamResponse;
                        })();
    
                        v1beta2.FlushRowsRequest = (function() {
    
                            /**
                             * Properties of a FlushRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IFlushRowsRequest
                             * @property {string|null} [writeStream] FlushRowsRequest writeStream
                             * @property {google.protobuf.IInt64Value|null} [offset] FlushRowsRequest offset
                             */
    
                            /**
                             * Constructs a new FlushRowsRequest.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a FlushRowsRequest.
                             * @implements IFlushRowsRequest
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsRequest=} [properties] Properties to set
                             */
                            function FlushRowsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FlushRowsRequest writeStream.
                             * @member {string} writeStream
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @instance
                             */
                            FlushRowsRequest.prototype.writeStream = "";
    
                            /**
                             * FlushRowsRequest offset.
                             * @member {google.protobuf.IInt64Value|null|undefined} offset
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @instance
                             */
                            FlushRowsRequest.prototype.offset = null;
    
                            /**
                             * Creates a new FlushRowsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsRequest=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.FlushRowsRequest} FlushRowsRequest instance
                             */
                            FlushRowsRequest.create = function create(properties) {
                                return new FlushRowsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified FlushRowsRequest message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.FlushRowsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsRequest} message FlushRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FlushRowsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.writeStream != null && Object.hasOwnProperty.call(message, "writeStream"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.writeStream);
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    $root.google.protobuf.Int64Value.encode(message.offset, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FlushRowsRequest message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.FlushRowsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsRequest} message FlushRowsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FlushRowsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FlushRowsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.FlushRowsRequest} FlushRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FlushRowsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.FlushRowsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.writeStream = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.offset = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FlushRowsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.FlushRowsRequest} FlushRowsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FlushRowsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FlushRowsRequest message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FlushRowsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    if (!$util.isString(message.writeStream))
                                        return "writeStream: string expected";
                                if (message.offset != null && message.hasOwnProperty("offset")) {
                                    var error = $root.google.protobuf.Int64Value.verify(message.offset);
                                    if (error)
                                        return "offset." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a FlushRowsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.FlushRowsRequest} FlushRowsRequest
                             */
                            FlushRowsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.FlushRowsRequest)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.FlushRowsRequest();
                                if (object.writeStream != null)
                                    message.writeStream = String(object.writeStream);
                                if (object.offset != null) {
                                    if (typeof object.offset !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.FlushRowsRequest.offset: object expected");
                                    message.offset = $root.google.protobuf.Int64Value.fromObject(object.offset);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FlushRowsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.FlushRowsRequest} message FlushRowsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FlushRowsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.writeStream = "";
                                    object.offset = null;
                                }
                                if (message.writeStream != null && message.hasOwnProperty("writeStream"))
                                    object.writeStream = message.writeStream;
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    object.offset = $root.google.protobuf.Int64Value.toObject(message.offset, options);
                                return object;
                            };
    
                            /**
                             * Converts this FlushRowsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FlushRowsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FlushRowsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FlushRowsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.FlushRowsRequest";
                            };
    
                            return FlushRowsRequest;
                        })();
    
                        v1beta2.FlushRowsResponse = (function() {
    
                            /**
                             * Properties of a FlushRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IFlushRowsResponse
                             * @property {number|Long|null} [offset] FlushRowsResponse offset
                             */
    
                            /**
                             * Constructs a new FlushRowsResponse.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a FlushRowsResponse.
                             * @implements IFlushRowsResponse
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsResponse=} [properties] Properties to set
                             */
                            function FlushRowsResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FlushRowsResponse offset.
                             * @member {number|Long} offset
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @instance
                             */
                            FlushRowsResponse.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new FlushRowsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsResponse=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.FlushRowsResponse} FlushRowsResponse instance
                             */
                            FlushRowsResponse.create = function create(properties) {
                                return new FlushRowsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified FlushRowsResponse message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.FlushRowsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsResponse} message FlushRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FlushRowsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.offset);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FlushRowsResponse message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.FlushRowsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IFlushRowsResponse} message FlushRowsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FlushRowsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FlushRowsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.FlushRowsResponse} FlushRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FlushRowsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.FlushRowsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.offset = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FlushRowsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.FlushRowsResponse} FlushRowsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FlushRowsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FlushRowsResponse message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FlushRowsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                        return "offset: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a FlushRowsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.FlushRowsResponse} FlushRowsResponse
                             */
                            FlushRowsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.FlushRowsResponse)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.FlushRowsResponse();
                                if (object.offset != null)
                                    if ($util.Long)
                                        (message.offset = $util.Long.fromValue(object.offset)).unsigned = false;
                                    else if (typeof object.offset === "string")
                                        message.offset = parseInt(object.offset, 10);
                                    else if (typeof object.offset === "number")
                                        message.offset = object.offset;
                                    else if (typeof object.offset === "object")
                                        message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FlushRowsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.FlushRowsResponse} message FlushRowsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FlushRowsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.offset = options.longs === String ? "0" : 0;
                                if (message.offset != null && message.hasOwnProperty("offset"))
                                    if (typeof message.offset === "number")
                                        object.offset = options.longs === String ? String(message.offset) : message.offset;
                                    else
                                        object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber() : message.offset;
                                return object;
                            };
    
                            /**
                             * Converts this FlushRowsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FlushRowsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FlushRowsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.FlushRowsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FlushRowsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.FlushRowsResponse";
                            };
    
                            return FlushRowsResponse;
                        })();
    
                        v1beta2.StorageError = (function() {
    
                            /**
                             * Properties of a StorageError.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IStorageError
                             * @property {google.cloud.bigquery.storage.v1beta2.StorageError.StorageErrorCode|null} [code] StorageError code
                             * @property {string|null} [entity] StorageError entity
                             * @property {string|null} [errorMessage] StorageError errorMessage
                             */
    
                            /**
                             * Constructs a new StorageError.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a StorageError.
                             * @implements IStorageError
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IStorageError=} [properties] Properties to set
                             */
                            function StorageError(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StorageError code.
                             * @member {google.cloud.bigquery.storage.v1beta2.StorageError.StorageErrorCode} code
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @instance
                             */
                            StorageError.prototype.code = 0;
    
                            /**
                             * StorageError entity.
                             * @member {string} entity
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @instance
                             */
                            StorageError.prototype.entity = "";
    
                            /**
                             * StorageError errorMessage.
                             * @member {string} errorMessage
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @instance
                             */
                            StorageError.prototype.errorMessage = "";
    
                            /**
                             * Creates a new StorageError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IStorageError=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.StorageError} StorageError instance
                             */
                            StorageError.create = function create(properties) {
                                return new StorageError(properties);
                            };
    
                            /**
                             * Encodes the specified StorageError message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.StorageError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IStorageError} message StorageError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StorageError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                                if (message.entity != null && Object.hasOwnProperty.call(message, "entity"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.entity);
                                if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.errorMessage);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StorageError message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.StorageError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IStorageError} message StorageError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StorageError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StorageError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.StorageError} StorageError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StorageError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.StorageError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.code = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.entity = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.errorMessage = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StorageError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.StorageError} StorageError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StorageError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StorageError message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StorageError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.code != null && message.hasOwnProperty("code"))
                                    switch (message.code) {
                                    default:
                                        return "code: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.entity != null && message.hasOwnProperty("entity"))
                                    if (!$util.isString(message.entity))
                                        return "entity: string expected";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    if (!$util.isString(message.errorMessage))
                                        return "errorMessage: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a StorageError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.StorageError} StorageError
                             */
                            StorageError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.StorageError)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.StorageError();
                                switch (object.code) {
                                default:
                                    if (typeof object.code === "number") {
                                        message.code = object.code;
                                        break;
                                    }
                                    break;
                                case "STORAGE_ERROR_CODE_UNSPECIFIED":
                                case 0:
                                    message.code = 0;
                                    break;
                                case "TABLE_NOT_FOUND":
                                case 1:
                                    message.code = 1;
                                    break;
                                case "STREAM_ALREADY_COMMITTED":
                                case 2:
                                    message.code = 2;
                                    break;
                                case "STREAM_NOT_FOUND":
                                case 3:
                                    message.code = 3;
                                    break;
                                case "INVALID_STREAM_TYPE":
                                case 4:
                                    message.code = 4;
                                    break;
                                case "INVALID_STREAM_STATE":
                                case 5:
                                    message.code = 5;
                                    break;
                                case "STREAM_FINALIZED":
                                case 6:
                                    message.code = 6;
                                    break;
                                }
                                if (object.entity != null)
                                    message.entity = String(object.entity);
                                if (object.errorMessage != null)
                                    message.errorMessage = String(object.errorMessage);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StorageError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.StorageError} message StorageError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StorageError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.code = options.enums === String ? "STORAGE_ERROR_CODE_UNSPECIFIED" : 0;
                                    object.entity = "";
                                    object.errorMessage = "";
                                }
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta2.StorageError.StorageErrorCode[message.code] === undefined ? message.code : $root.google.cloud.bigquery.storage.v1beta2.StorageError.StorageErrorCode[message.code] : message.code;
                                if (message.entity != null && message.hasOwnProperty("entity"))
                                    object.entity = message.entity;
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    object.errorMessage = message.errorMessage;
                                return object;
                            };
    
                            /**
                             * Converts this StorageError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StorageError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StorageError
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.StorageError
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StorageError.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.StorageError";
                            };
    
                            /**
                             * StorageErrorCode enum.
                             * @name google.cloud.bigquery.storage.v1beta2.StorageError.StorageErrorCode
                             * @enum {number}
                             * @property {number} STORAGE_ERROR_CODE_UNSPECIFIED=0 STORAGE_ERROR_CODE_UNSPECIFIED value
                             * @property {number} TABLE_NOT_FOUND=1 TABLE_NOT_FOUND value
                             * @property {number} STREAM_ALREADY_COMMITTED=2 STREAM_ALREADY_COMMITTED value
                             * @property {number} STREAM_NOT_FOUND=3 STREAM_NOT_FOUND value
                             * @property {number} INVALID_STREAM_TYPE=4 INVALID_STREAM_TYPE value
                             * @property {number} INVALID_STREAM_STATE=5 INVALID_STREAM_STATE value
                             * @property {number} STREAM_FINALIZED=6 STREAM_FINALIZED value
                             */
                            StorageError.StorageErrorCode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "STORAGE_ERROR_CODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "TABLE_NOT_FOUND"] = 1;
                                values[valuesById[2] = "STREAM_ALREADY_COMMITTED"] = 2;
                                values[valuesById[3] = "STREAM_NOT_FOUND"] = 3;
                                values[valuesById[4] = "INVALID_STREAM_TYPE"] = 4;
                                values[valuesById[5] = "INVALID_STREAM_STATE"] = 5;
                                values[valuesById[6] = "STREAM_FINALIZED"] = 6;
                                return values;
                            })();
    
                            return StorageError;
                        })();
    
                        /**
                         * DataFormat enum.
                         * @name google.cloud.bigquery.storage.v1beta2.DataFormat
                         * @enum {number}
                         * @property {number} DATA_FORMAT_UNSPECIFIED=0 DATA_FORMAT_UNSPECIFIED value
                         * @property {number} AVRO=1 AVRO value
                         * @property {number} ARROW=2 ARROW value
                         */
                        v1beta2.DataFormat = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DATA_FORMAT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AVRO"] = 1;
                            values[valuesById[2] = "ARROW"] = 2;
                            return values;
                        })();
    
                        v1beta2.ReadSession = (function() {
    
                            /**
                             * Properties of a ReadSession.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IReadSession
                             * @property {string|null} [name] ReadSession name
                             * @property {google.protobuf.ITimestamp|null} [expireTime] ReadSession expireTime
                             * @property {google.cloud.bigquery.storage.v1beta2.DataFormat|null} [dataFormat] ReadSession dataFormat
                             * @property {google.cloud.bigquery.storage.v1beta2.IAvroSchema|null} [avroSchema] ReadSession avroSchema
                             * @property {google.cloud.bigquery.storage.v1beta2.IArrowSchema|null} [arrowSchema] ReadSession arrowSchema
                             * @property {string|null} [table] ReadSession table
                             * @property {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableModifiers|null} [tableModifiers] ReadSession tableModifiers
                             * @property {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableReadOptions|null} [readOptions] ReadSession readOptions
                             * @property {Array.<google.cloud.bigquery.storage.v1beta2.IReadStream>|null} [streams] ReadSession streams
                             */
    
                            /**
                             * Constructs a new ReadSession.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a ReadSession.
                             * @implements IReadSession
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadSession=} [properties] Properties to set
                             */
                            function ReadSession(properties) {
                                this.streams = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadSession name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.name = "";
    
                            /**
                             * ReadSession expireTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.expireTime = null;
    
                            /**
                             * ReadSession dataFormat.
                             * @member {google.cloud.bigquery.storage.v1beta2.DataFormat} dataFormat
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.dataFormat = 0;
    
                            /**
                             * ReadSession avroSchema.
                             * @member {google.cloud.bigquery.storage.v1beta2.IAvroSchema|null|undefined} avroSchema
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.avroSchema = null;
    
                            /**
                             * ReadSession arrowSchema.
                             * @member {google.cloud.bigquery.storage.v1beta2.IArrowSchema|null|undefined} arrowSchema
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.arrowSchema = null;
    
                            /**
                             * ReadSession table.
                             * @member {string} table
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.table = "";
    
                            /**
                             * ReadSession tableModifiers.
                             * @member {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableModifiers|null|undefined} tableModifiers
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.tableModifiers = null;
    
                            /**
                             * ReadSession readOptions.
                             * @member {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableReadOptions|null|undefined} readOptions
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.readOptions = null;
    
                            /**
                             * ReadSession streams.
                             * @member {Array.<google.cloud.bigquery.storage.v1beta2.IReadStream>} streams
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            ReadSession.prototype.streams = $util.emptyArray;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * ReadSession schema.
                             * @member {"avroSchema"|"arrowSchema"|undefined} schema
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             */
                            Object.defineProperty(ReadSession.prototype, "schema", {
                                get: $util.oneOfGetter($oneOfFields = ["avroSchema", "arrowSchema"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new ReadSession instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadSession=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession} ReadSession instance
                             */
                            ReadSession.create = function create(properties) {
                                return new ReadSession(properties);
                            };
    
                            /**
                             * Encodes the specified ReadSession message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadSession.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadSession} message ReadSession message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadSession.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                    $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.dataFormat != null && Object.hasOwnProperty.call(message, "dataFormat"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.dataFormat);
                                if (message.avroSchema != null && Object.hasOwnProperty.call(message, "avroSchema"))
                                    $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.encode(message.avroSchema, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.arrowSchema != null && Object.hasOwnProperty.call(message, "arrowSchema"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.encode(message.arrowSchema, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.table);
                                if (message.tableModifiers != null && Object.hasOwnProperty.call(message, "tableModifiers"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.encode(message.tableModifiers, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.readOptions != null && Object.hasOwnProperty.call(message, "readOptions"))
                                    $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.encode(message.readOptions, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.streams != null && message.streams.length)
                                    for (var i = 0; i < message.streams.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1beta2.ReadStream.encode(message.streams[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadSession message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadSession.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadSession} message ReadSession message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadSession.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadSession message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession} ReadSession
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadSession.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ReadSession();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.dataFormat = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.avroSchema = $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.arrowSchema = $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.table = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.tableModifiers = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.readOptions = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 10: {
                                            if (!(message.streams && message.streams.length))
                                                message.streams = [];
                                            message.streams.push($root.google.cloud.bigquery.storage.v1beta2.ReadStream.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadSession message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession} ReadSession
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadSession.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadSession message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadSession.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                    if (error)
                                        return "expireTime." + error;
                                }
                                if (message.dataFormat != null && message.hasOwnProperty("dataFormat"))
                                    switch (message.dataFormat) {
                                    default:
                                        return "dataFormat: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.verify(message.avroSchema);
                                        if (error)
                                            return "avroSchema." + error;
                                    }
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    if (properties.schema === 1)
                                        return "schema: multiple values";
                                    properties.schema = 1;
                                    {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.verify(message.arrowSchema);
                                        if (error)
                                            return "arrowSchema." + error;
                                    }
                                }
                                if (message.table != null && message.hasOwnProperty("table"))
                                    if (!$util.isString(message.table))
                                        return "table: string expected";
                                if (message.tableModifiers != null && message.hasOwnProperty("tableModifiers")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.verify(message.tableModifiers);
                                    if (error)
                                        return "tableModifiers." + error;
                                }
                                if (message.readOptions != null && message.hasOwnProperty("readOptions")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.verify(message.readOptions);
                                    if (error)
                                        return "readOptions." + error;
                                }
                                if (message.streams != null && message.hasOwnProperty("streams")) {
                                    if (!Array.isArray(message.streams))
                                        return "streams: array expected";
                                    for (var i = 0; i < message.streams.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.verify(message.streams[i]);
                                        if (error)
                                            return "streams." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReadSession message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession} ReadSession
                             */
                            ReadSession.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ReadSession)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ReadSession();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.expireTime != null) {
                                    if (typeof object.expireTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.expireTime: object expected");
                                    message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                                }
                                switch (object.dataFormat) {
                                default:
                                    if (typeof object.dataFormat === "number") {
                                        message.dataFormat = object.dataFormat;
                                        break;
                                    }
                                    break;
                                case "DATA_FORMAT_UNSPECIFIED":
                                case 0:
                                    message.dataFormat = 0;
                                    break;
                                case "AVRO":
                                case 1:
                                    message.dataFormat = 1;
                                    break;
                                case "ARROW":
                                case 2:
                                    message.dataFormat = 2;
                                    break;
                                }
                                if (object.avroSchema != null) {
                                    if (typeof object.avroSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.avroSchema: object expected");
                                    message.avroSchema = $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.fromObject(object.avroSchema);
                                }
                                if (object.arrowSchema != null) {
                                    if (typeof object.arrowSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.arrowSchema: object expected");
                                    message.arrowSchema = $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.fromObject(object.arrowSchema);
                                }
                                if (object.table != null)
                                    message.table = String(object.table);
                                if (object.tableModifiers != null) {
                                    if (typeof object.tableModifiers !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.tableModifiers: object expected");
                                    message.tableModifiers = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.fromObject(object.tableModifiers);
                                }
                                if (object.readOptions != null) {
                                    if (typeof object.readOptions !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.readOptions: object expected");
                                    message.readOptions = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.fromObject(object.readOptions);
                                }
                                if (object.streams) {
                                    if (!Array.isArray(object.streams))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.streams: array expected");
                                    message.streams = [];
                                    for (var i = 0; i < object.streams.length; ++i) {
                                        if (typeof object.streams[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.streams: object expected");
                                        message.streams[i] = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.fromObject(object.streams[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadSession message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ReadSession} message ReadSession
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadSession.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.streams = [];
                                if (options.defaults) {
                                    object.name = "";
                                    object.expireTime = null;
                                    object.dataFormat = options.enums === String ? "DATA_FORMAT_UNSPECIFIED" : 0;
                                    object.table = "";
                                    object.tableModifiers = null;
                                    object.readOptions = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                    object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                                if (message.dataFormat != null && message.hasOwnProperty("dataFormat"))
                                    object.dataFormat = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta2.DataFormat[message.dataFormat] === undefined ? message.dataFormat : $root.google.cloud.bigquery.storage.v1beta2.DataFormat[message.dataFormat] : message.dataFormat;
                                if (message.avroSchema != null && message.hasOwnProperty("avroSchema")) {
                                    object.avroSchema = $root.google.cloud.bigquery.storage.v1beta2.AvroSchema.toObject(message.avroSchema, options);
                                    if (options.oneofs)
                                        object.schema = "avroSchema";
                                }
                                if (message.arrowSchema != null && message.hasOwnProperty("arrowSchema")) {
                                    object.arrowSchema = $root.google.cloud.bigquery.storage.v1beta2.ArrowSchema.toObject(message.arrowSchema, options);
                                    if (options.oneofs)
                                        object.schema = "arrowSchema";
                                }
                                if (message.table != null && message.hasOwnProperty("table"))
                                    object.table = message.table;
                                if (message.tableModifiers != null && message.hasOwnProperty("tableModifiers"))
                                    object.tableModifiers = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.toObject(message.tableModifiers, options);
                                if (message.readOptions != null && message.hasOwnProperty("readOptions"))
                                    object.readOptions = $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.toObject(message.readOptions, options);
                                if (message.streams && message.streams.length) {
                                    object.streams = [];
                                    for (var j = 0; j < message.streams.length; ++j)
                                        object.streams[j] = $root.google.cloud.bigquery.storage.v1beta2.ReadStream.toObject(message.streams[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ReadSession to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadSession.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadSession
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadSession.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ReadSession";
                            };
    
                            ReadSession.TableModifiers = (function() {
    
                                /**
                                 * Properties of a TableModifiers.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                                 * @interface ITableModifiers
                                 * @property {google.protobuf.ITimestamp|null} [snapshotTime] TableModifiers snapshotTime
                                 */
    
                                /**
                                 * Constructs a new TableModifiers.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                                 * @classdesc Represents a TableModifiers.
                                 * @implements ITableModifiers
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableModifiers=} [properties] Properties to set
                                 */
                                function TableModifiers(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * TableModifiers snapshotTime.
                                 * @member {google.protobuf.ITimestamp|null|undefined} snapshotTime
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @instance
                                 */
                                TableModifiers.prototype.snapshotTime = null;
    
                                /**
                                 * Creates a new TableModifiers instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableModifiers=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers} TableModifiers instance
                                 */
                                TableModifiers.create = function create(properties) {
                                    return new TableModifiers(properties);
                                };
    
                                /**
                                 * Encodes the specified TableModifiers message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableModifiers} message TableModifiers message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TableModifiers.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.snapshotTime != null && Object.hasOwnProperty.call(message, "snapshotTime"))
                                        $root.google.protobuf.Timestamp.encode(message.snapshotTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified TableModifiers message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableModifiers} message TableModifiers message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TableModifiers.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a TableModifiers message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers} TableModifiers
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TableModifiers.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.snapshotTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a TableModifiers message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers} TableModifiers
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TableModifiers.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a TableModifiers message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                TableModifiers.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.snapshotTime != null && message.hasOwnProperty("snapshotTime")) {
                                        var error = $root.google.protobuf.Timestamp.verify(message.snapshotTime);
                                        if (error)
                                            return "snapshotTime." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a TableModifiers message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers} TableModifiers
                                 */
                                TableModifiers.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers();
                                    if (object.snapshotTime != null) {
                                        if (typeof object.snapshotTime !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.snapshotTime: object expected");
                                        message.snapshotTime = $root.google.protobuf.Timestamp.fromObject(object.snapshotTime);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a TableModifiers message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers} message TableModifiers
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                TableModifiers.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.snapshotTime = null;
                                    if (message.snapshotTime != null && message.hasOwnProperty("snapshotTime"))
                                        object.snapshotTime = $root.google.protobuf.Timestamp.toObject(message.snapshotTime, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this TableModifiers to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                TableModifiers.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for TableModifiers
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                TableModifiers.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers";
                                };
    
                                return TableModifiers;
                            })();
    
                            ReadSession.TableReadOptions = (function() {
    
                                /**
                                 * Properties of a TableReadOptions.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                                 * @interface ITableReadOptions
                                 * @property {Array.<string>|null} [selectedFields] TableReadOptions selectedFields
                                 * @property {string|null} [rowRestriction] TableReadOptions rowRestriction
                                 * @property {google.cloud.bigquery.storage.v1beta2.IArrowSerializationOptions|null} [arrowSerializationOptions] TableReadOptions arrowSerializationOptions
                                 */
    
                                /**
                                 * Constructs a new TableReadOptions.
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession
                                 * @classdesc Represents a TableReadOptions.
                                 * @implements ITableReadOptions
                                 * @constructor
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableReadOptions=} [properties] Properties to set
                                 */
                                function TableReadOptions(properties) {
                                    this.selectedFields = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * TableReadOptions selectedFields.
                                 * @member {Array.<string>} selectedFields
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @instance
                                 */
                                TableReadOptions.prototype.selectedFields = $util.emptyArray;
    
                                /**
                                 * TableReadOptions rowRestriction.
                                 * @member {string} rowRestriction
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @instance
                                 */
                                TableReadOptions.prototype.rowRestriction = "";
    
                                /**
                                 * TableReadOptions arrowSerializationOptions.
                                 * @member {google.cloud.bigquery.storage.v1beta2.IArrowSerializationOptions|null|undefined} arrowSerializationOptions
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @instance
                                 */
                                TableReadOptions.prototype.arrowSerializationOptions = null;
    
                                /**
                                 * Creates a new TableReadOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableReadOptions=} [properties] Properties to set
                                 * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions} TableReadOptions instance
                                 */
                                TableReadOptions.create = function create(properties) {
                                    return new TableReadOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified TableReadOptions message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableReadOptions} message TableReadOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TableReadOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.selectedFields != null && message.selectedFields.length)
                                        for (var i = 0; i < message.selectedFields.length; ++i)
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.selectedFields[i]);
                                    if (message.rowRestriction != null && Object.hasOwnProperty.call(message, "rowRestriction"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.rowRestriction);
                                    if (message.arrowSerializationOptions != null && Object.hasOwnProperty.call(message, "arrowSerializationOptions"))
                                        $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.encode(message.arrowSerializationOptions, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified TableReadOptions message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.ITableReadOptions} message TableReadOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TableReadOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a TableReadOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions} TableReadOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TableReadOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                if (!(message.selectedFields && message.selectedFields.length))
                                                    message.selectedFields = [];
                                                message.selectedFields.push(reader.string());
                                                break;
                                            }
                                        case 2: {
                                                message.rowRestriction = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.arrowSerializationOptions = $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a TableReadOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions} TableReadOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TableReadOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a TableReadOptions message.
                                 * @function verify
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                TableReadOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.selectedFields != null && message.hasOwnProperty("selectedFields")) {
                                        if (!Array.isArray(message.selectedFields))
                                            return "selectedFields: array expected";
                                        for (var i = 0; i < message.selectedFields.length; ++i)
                                            if (!$util.isString(message.selectedFields[i]))
                                                return "selectedFields: string[] expected";
                                    }
                                    if (message.rowRestriction != null && message.hasOwnProperty("rowRestriction"))
                                        if (!$util.isString(message.rowRestriction))
                                            return "rowRestriction: string expected";
                                    if (message.arrowSerializationOptions != null && message.hasOwnProperty("arrowSerializationOptions")) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.verify(message.arrowSerializationOptions);
                                        if (error)
                                            return "arrowSerializationOptions." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a TableReadOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions} TableReadOptions
                                 */
                                TableReadOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions)
                                        return object;
                                    var message = new $root.google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions();
                                    if (object.selectedFields) {
                                        if (!Array.isArray(object.selectedFields))
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.selectedFields: array expected");
                                        message.selectedFields = [];
                                        for (var i = 0; i < object.selectedFields.length; ++i)
                                            message.selectedFields[i] = String(object.selectedFields[i]);
                                    }
                                    if (object.rowRestriction != null)
                                        message.rowRestriction = String(object.rowRestriction);
                                    if (object.arrowSerializationOptions != null) {
                                        if (typeof object.arrowSerializationOptions !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.arrowSerializationOptions: object expected");
                                        message.arrowSerializationOptions = $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.fromObject(object.arrowSerializationOptions);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a TableReadOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions} message TableReadOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                TableReadOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.selectedFields = [];
                                    if (options.defaults) {
                                        object.rowRestriction = "";
                                        object.arrowSerializationOptions = null;
                                    }
                                    if (message.selectedFields && message.selectedFields.length) {
                                        object.selectedFields = [];
                                        for (var j = 0; j < message.selectedFields.length; ++j)
                                            object.selectedFields[j] = message.selectedFields[j];
                                    }
                                    if (message.rowRestriction != null && message.hasOwnProperty("rowRestriction"))
                                        object.rowRestriction = message.rowRestriction;
                                    if (message.arrowSerializationOptions != null && message.hasOwnProperty("arrowSerializationOptions"))
                                        object.arrowSerializationOptions = $root.google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions.toObject(message.arrowSerializationOptions, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this TableReadOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                TableReadOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for TableReadOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                TableReadOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions";
                                };
    
                                return TableReadOptions;
                            })();
    
                            return ReadSession;
                        })();
    
                        v1beta2.ReadStream = (function() {
    
                            /**
                             * Properties of a ReadStream.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IReadStream
                             * @property {string|null} [name] ReadStream name
                             */
    
                            /**
                             * Constructs a new ReadStream.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a ReadStream.
                             * @implements IReadStream
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadStream=} [properties] Properties to set
                             */
                            function ReadStream(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReadStream name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @instance
                             */
                            ReadStream.prototype.name = "";
    
                            /**
                             * Creates a new ReadStream instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadStream=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadStream} ReadStream instance
                             */
                            ReadStream.create = function create(properties) {
                                return new ReadStream(properties);
                            };
    
                            /**
                             * Encodes the specified ReadStream message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadStream.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadStream} message ReadStream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadStream.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReadStream message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.ReadStream.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IReadStream} message ReadStream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReadStream.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReadStream message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadStream} ReadStream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadStream.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.ReadStream();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReadStream message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadStream} ReadStream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReadStream.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReadStream message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReadStream.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ReadStream message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.ReadStream} ReadStream
                             */
                            ReadStream.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.ReadStream)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.ReadStream();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReadStream message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ReadStream} message ReadStream
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReadStream.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this ReadStream to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReadStream.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReadStream
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.ReadStream
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReadStream.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.ReadStream";
                            };
    
                            return ReadStream;
                        })();
    
                        v1beta2.WriteStream = (function() {
    
                            /**
                             * Properties of a WriteStream.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface IWriteStream
                             * @property {string|null} [name] WriteStream name
                             * @property {google.cloud.bigquery.storage.v1beta2.WriteStream.Type|null} [type] WriteStream type
                             * @property {google.protobuf.ITimestamp|null} [createTime] WriteStream createTime
                             * @property {google.protobuf.ITimestamp|null} [commitTime] WriteStream commitTime
                             * @property {google.cloud.bigquery.storage.v1beta2.ITableSchema|null} [tableSchema] WriteStream tableSchema
                             */
    
                            /**
                             * Constructs a new WriteStream.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a WriteStream.
                             * @implements IWriteStream
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.IWriteStream=} [properties] Properties to set
                             */
                            function WriteStream(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * WriteStream name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.name = "";
    
                            /**
                             * WriteStream type.
                             * @member {google.cloud.bigquery.storage.v1beta2.WriteStream.Type} type
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.type = 0;
    
                            /**
                             * WriteStream createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.createTime = null;
    
                            /**
                             * WriteStream commitTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} commitTime
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.commitTime = null;
    
                            /**
                             * WriteStream tableSchema.
                             * @member {google.cloud.bigquery.storage.v1beta2.ITableSchema|null|undefined} tableSchema
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @instance
                             */
                            WriteStream.prototype.tableSchema = null;
    
                            /**
                             * Creates a new WriteStream instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IWriteStream=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.WriteStream} WriteStream instance
                             */
                            WriteStream.create = function create(properties) {
                                return new WriteStream(properties);
                            };
    
                            /**
                             * Encodes the specified WriteStream message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.WriteStream.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IWriteStream} message WriteStream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            WriteStream.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.commitTime != null && Object.hasOwnProperty.call(message, "commitTime"))
                                    $root.google.protobuf.Timestamp.encode(message.commitTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.tableSchema != null && Object.hasOwnProperty.call(message, "tableSchema"))
                                    $root.google.cloud.bigquery.storage.v1beta2.TableSchema.encode(message.tableSchema, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified WriteStream message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.WriteStream.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.IWriteStream} message WriteStream message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            WriteStream.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a WriteStream message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.WriteStream} WriteStream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            WriteStream.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.WriteStream();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.commitTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.tableSchema = $root.google.cloud.bigquery.storage.v1beta2.TableSchema.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a WriteStream message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.WriteStream} WriteStream
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            WriteStream.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a WriteStream message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            WriteStream.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.commitTime != null && message.hasOwnProperty("commitTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.commitTime);
                                    if (error)
                                        return "commitTime." + error;
                                }
                                if (message.tableSchema != null && message.hasOwnProperty("tableSchema")) {
                                    var error = $root.google.cloud.bigquery.storage.v1beta2.TableSchema.verify(message.tableSchema);
                                    if (error)
                                        return "tableSchema." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a WriteStream message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.WriteStream} WriteStream
                             */
                            WriteStream.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.WriteStream)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.WriteStream();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "COMMITTED":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "PENDING":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "BUFFERED":
                                case 3:
                                    message.type = 3;
                                    break;
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.WriteStream.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.commitTime != null) {
                                    if (typeof object.commitTime !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.WriteStream.commitTime: object expected");
                                    message.commitTime = $root.google.protobuf.Timestamp.fromObject(object.commitTime);
                                }
                                if (object.tableSchema != null) {
                                    if (typeof object.tableSchema !== "object")
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.WriteStream.tableSchema: object expected");
                                    message.tableSchema = $root.google.cloud.bigquery.storage.v1beta2.TableSchema.fromObject(object.tableSchema);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a WriteStream message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.WriteStream} message WriteStream
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            WriteStream.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                    object.createTime = null;
                                    object.commitTime = null;
                                    object.tableSchema = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta2.WriteStream.Type[message.type] === undefined ? message.type : $root.google.cloud.bigquery.storage.v1beta2.WriteStream.Type[message.type] : message.type;
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.commitTime != null && message.hasOwnProperty("commitTime"))
                                    object.commitTime = $root.google.protobuf.Timestamp.toObject(message.commitTime, options);
                                if (message.tableSchema != null && message.hasOwnProperty("tableSchema"))
                                    object.tableSchema = $root.google.cloud.bigquery.storage.v1beta2.TableSchema.toObject(message.tableSchema, options);
                                return object;
                            };
    
                            /**
                             * Converts this WriteStream to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            WriteStream.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for WriteStream
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.WriteStream
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            WriteStream.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.WriteStream";
                            };
    
                            /**
                             * Type enum.
                             * @name google.cloud.bigquery.storage.v1beta2.WriteStream.Type
                             * @enum {number}
                             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                             * @property {number} COMMITTED=1 COMMITTED value
                             * @property {number} PENDING=2 PENDING value
                             * @property {number} BUFFERED=3 BUFFERED value
                             */
                            WriteStream.Type = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "COMMITTED"] = 1;
                                values[valuesById[2] = "PENDING"] = 2;
                                values[valuesById[3] = "BUFFERED"] = 3;
                                return values;
                            })();
    
                            return WriteStream;
                        })();
    
                        v1beta2.TableSchema = (function() {
    
                            /**
                             * Properties of a TableSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface ITableSchema
                             * @property {Array.<google.cloud.bigquery.storage.v1beta2.ITableFieldSchema>|null} [fields] TableSchema fields
                             */
    
                            /**
                             * Constructs a new TableSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a TableSchema.
                             * @implements ITableSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.ITableSchema=} [properties] Properties to set
                             */
                            function TableSchema(properties) {
                                this.fields = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TableSchema fields.
                             * @member {Array.<google.cloud.bigquery.storage.v1beta2.ITableFieldSchema>} fields
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @instance
                             */
                            TableSchema.prototype.fields = $util.emptyArray;
    
                            /**
                             * Creates a new TableSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ITableSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.TableSchema} TableSchema instance
                             */
                            TableSchema.create = function create(properties) {
                                return new TableSchema(properties);
                            };
    
                            /**
                             * Encodes the specified TableSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.TableSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ITableSchema} message TableSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.fields != null && message.fields.length)
                                    for (var i = 0; i < message.fields.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.encode(message.fields[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TableSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.TableSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ITableSchema} message TableSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TableSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.TableSchema} TableSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.TableSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.fields && message.fields.length))
                                                message.fields = [];
                                            message.fields.push($root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TableSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.TableSchema} TableSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TableSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TableSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.fields != null && message.hasOwnProperty("fields")) {
                                    if (!Array.isArray(message.fields))
                                        return "fields: array expected";
                                    for (var i = 0; i < message.fields.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.verify(message.fields[i]);
                                        if (error)
                                            return "fields." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a TableSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.TableSchema} TableSchema
                             */
                            TableSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.TableSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.TableSchema();
                                if (object.fields) {
                                    if (!Array.isArray(object.fields))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.TableSchema.fields: array expected");
                                    message.fields = [];
                                    for (var i = 0; i < object.fields.length; ++i) {
                                        if (typeof object.fields[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.TableSchema.fields: object expected");
                                        message.fields[i] = $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.fromObject(object.fields[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TableSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.TableSchema} message TableSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TableSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.fields = [];
                                if (message.fields && message.fields.length) {
                                    object.fields = [];
                                    for (var j = 0; j < message.fields.length; ++j)
                                        object.fields[j] = $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.toObject(message.fields[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this TableSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TableSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TableSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TableSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.TableSchema";
                            };
    
                            return TableSchema;
                        })();
    
                        v1beta2.TableFieldSchema = (function() {
    
                            /**
                             * Properties of a TableFieldSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @interface ITableFieldSchema
                             * @property {string|null} [name] TableFieldSchema name
                             * @property {google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Type|null} [type] TableFieldSchema type
                             * @property {google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Mode|null} [mode] TableFieldSchema mode
                             * @property {Array.<google.cloud.bigquery.storage.v1beta2.ITableFieldSchema>|null} [fields] TableFieldSchema fields
                             * @property {string|null} [description] TableFieldSchema description
                             */
    
                            /**
                             * Constructs a new TableFieldSchema.
                             * @memberof google.cloud.bigquery.storage.v1beta2
                             * @classdesc Represents a TableFieldSchema.
                             * @implements ITableFieldSchema
                             * @constructor
                             * @param {google.cloud.bigquery.storage.v1beta2.ITableFieldSchema=} [properties] Properties to set
                             */
                            function TableFieldSchema(properties) {
                                this.fields = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TableFieldSchema name.
                             * @member {string} name
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.name = "";
    
                            /**
                             * TableFieldSchema type.
                             * @member {google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Type} type
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.type = 0;
    
                            /**
                             * TableFieldSchema mode.
                             * @member {google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Mode} mode
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.mode = 0;
    
                            /**
                             * TableFieldSchema fields.
                             * @member {Array.<google.cloud.bigquery.storage.v1beta2.ITableFieldSchema>} fields
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.fields = $util.emptyArray;
    
                            /**
                             * TableFieldSchema description.
                             * @member {string} description
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @instance
                             */
                            TableFieldSchema.prototype.description = "";
    
                            /**
                             * Creates a new TableFieldSchema instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ITableFieldSchema=} [properties] Properties to set
                             * @returns {google.cloud.bigquery.storage.v1beta2.TableFieldSchema} TableFieldSchema instance
                             */
                            TableFieldSchema.create = function create(properties) {
                                return new TableFieldSchema(properties);
                            };
    
                            /**
                             * Encodes the specified TableFieldSchema message. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.TableFieldSchema.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ITableFieldSchema} message TableFieldSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableFieldSchema.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.mode);
                                if (message.fields != null && message.fields.length)
                                    for (var i = 0; i < message.fields.length; ++i)
                                        $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.encode(message.fields[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TableFieldSchema message, length delimited. Does not implicitly {@link google.cloud.bigquery.storage.v1beta2.TableFieldSchema.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.ITableFieldSchema} message TableFieldSchema message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TableFieldSchema.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TableFieldSchema message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.bigquery.storage.v1beta2.TableFieldSchema} TableFieldSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableFieldSchema.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.mode = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.fields && message.fields.length))
                                                message.fields = [];
                                            message.fields.push($root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 6: {
                                            message.description = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TableFieldSchema message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.bigquery.storage.v1beta2.TableFieldSchema} TableFieldSchema
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TableFieldSchema.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TableFieldSchema message.
                             * @function verify
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TableFieldSchema.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 11:
                                    case 12:
                                    case 13:
                                    case 14:
                                    case 15:
                                        break;
                                    }
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    switch (message.mode) {
                                    default:
                                        return "mode: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.fields != null && message.hasOwnProperty("fields")) {
                                    if (!Array.isArray(message.fields))
                                        return "fields: array expected";
                                    for (var i = 0; i < message.fields.length; ++i) {
                                        var error = $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.verify(message.fields[i]);
                                        if (error)
                                            return "fields." + error;
                                    }
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    if (!$util.isString(message.description))
                                        return "description: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a TableFieldSchema message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.bigquery.storage.v1beta2.TableFieldSchema} TableFieldSchema
                             */
                            TableFieldSchema.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema)
                                    return object;
                                var message = new $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "STRING":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "INT64":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "DOUBLE":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "STRUCT":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "BYTES":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "BOOL":
                                case 6:
                                    message.type = 6;
                                    break;
                                case "TIMESTAMP":
                                case 7:
                                    message.type = 7;
                                    break;
                                case "DATE":
                                case 8:
                                    message.type = 8;
                                    break;
                                case "TIME":
                                case 9:
                                    message.type = 9;
                                    break;
                                case "DATETIME":
                                case 10:
                                    message.type = 10;
                                    break;
                                case "GEOGRAPHY":
                                case 11:
                                    message.type = 11;
                                    break;
                                case "NUMERIC":
                                case 12:
                                    message.type = 12;
                                    break;
                                case "BIGNUMERIC":
                                case 13:
                                    message.type = 13;
                                    break;
                                case "INTERVAL":
                                case 14:
                                    message.type = 14;
                                    break;
                                case "JSON":
                                case 15:
                                    message.type = 15;
                                    break;
                                }
                                switch (object.mode) {
                                default:
                                    if (typeof object.mode === "number") {
                                        message.mode = object.mode;
                                        break;
                                    }
                                    break;
                                case "MODE_UNSPECIFIED":
                                case 0:
                                    message.mode = 0;
                                    break;
                                case "NULLABLE":
                                case 1:
                                    message.mode = 1;
                                    break;
                                case "REQUIRED":
                                case 2:
                                    message.mode = 2;
                                    break;
                                case "REPEATED":
                                case 3:
                                    message.mode = 3;
                                    break;
                                }
                                if (object.fields) {
                                    if (!Array.isArray(object.fields))
                                        throw TypeError(".google.cloud.bigquery.storage.v1beta2.TableFieldSchema.fields: array expected");
                                    message.fields = [];
                                    for (var i = 0; i < object.fields.length; ++i) {
                                        if (typeof object.fields[i] !== "object")
                                            throw TypeError(".google.cloud.bigquery.storage.v1beta2.TableFieldSchema.fields: object expected");
                                        message.fields[i] = $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.fromObject(object.fields[i]);
                                    }
                                }
                                if (object.description != null)
                                    message.description = String(object.description);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TableFieldSchema message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {google.cloud.bigquery.storage.v1beta2.TableFieldSchema} message TableFieldSchema
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TableFieldSchema.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.fields = [];
                                if (options.defaults) {
                                    object.name = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                    object.mode = options.enums === String ? "MODE_UNSPECIFIED" : 0;
                                    object.description = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Type[message.type] === undefined ? message.type : $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Type[message.type] : message.type;
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    object.mode = options.enums === String ? $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Mode[message.mode] === undefined ? message.mode : $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Mode[message.mode] : message.mode;
                                if (message.fields && message.fields.length) {
                                    object.fields = [];
                                    for (var j = 0; j < message.fields.length; ++j)
                                        object.fields[j] = $root.google.cloud.bigquery.storage.v1beta2.TableFieldSchema.toObject(message.fields[j], options);
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    object.description = message.description;
                                return object;
                            };
    
                            /**
                             * Converts this TableFieldSchema to JSON.
                             * @function toJSON
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TableFieldSchema.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TableFieldSchema
                             * @function getTypeUrl
                             * @memberof google.cloud.bigquery.storage.v1beta2.TableFieldSchema
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TableFieldSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.bigquery.storage.v1beta2.TableFieldSchema";
                            };
    
                            /**
                             * Type enum.
                             * @name google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Type
                             * @enum {number}
                             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                             * @property {number} STRING=1 STRING value
                             * @property {number} INT64=2 INT64 value
                             * @property {number} DOUBLE=3 DOUBLE value
                             * @property {number} STRUCT=4 STRUCT value
                             * @property {number} BYTES=5 BYTES value
                             * @property {number} BOOL=6 BOOL value
                             * @property {number} TIMESTAMP=7 TIMESTAMP value
                             * @property {number} DATE=8 DATE value
                             * @property {number} TIME=9 TIME value
                             * @property {number} DATETIME=10 DATETIME value
                             * @property {number} GEOGRAPHY=11 GEOGRAPHY value
                             * @property {number} NUMERIC=12 NUMERIC value
                             * @property {number} BIGNUMERIC=13 BIGNUMERIC value
                             * @property {number} INTERVAL=14 INTERVAL value
                             * @property {number} JSON=15 JSON value
                             */
                            TableFieldSchema.Type = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "STRING"] = 1;
                                values[valuesById[2] = "INT64"] = 2;
                                values[valuesById[3] = "DOUBLE"] = 3;
                                values[valuesById[4] = "STRUCT"] = 4;
                                values[valuesById[5] = "BYTES"] = 5;
                                values[valuesById[6] = "BOOL"] = 6;
                                values[valuesById[7] = "TIMESTAMP"] = 7;
                                values[valuesById[8] = "DATE"] = 8;
                                values[valuesById[9] = "TIME"] = 9;
                                values[valuesById[10] = "DATETIME"] = 10;
                                values[valuesById[11] = "GEOGRAPHY"] = 11;
                                values[valuesById[12] = "NUMERIC"] = 12;
                                values[valuesById[13] = "BIGNUMERIC"] = 13;
                                values[valuesById[14] = "INTERVAL"] = 14;
                                values[valuesById[15] = "JSON"] = 15;
                                return values;
                            })();
    
                            /**
                             * Mode enum.
                             * @name google.cloud.bigquery.storage.v1beta2.TableFieldSchema.Mode
                             * @enum {number}
                             * @property {number} MODE_UNSPECIFIED=0 MODE_UNSPECIFIED value
                             * @property {number} NULLABLE=1 NULLABLE value
                             * @property {number} REQUIRED=2 REQUIRED value
                             * @property {number} REPEATED=3 REPEATED value
                             */
                            TableFieldSchema.Mode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "MODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "NULLABLE"] = 1;
                                values[valuesById[2] = "REQUIRED"] = 2;
                                values[valuesById[3] = "REPEATED"] = 3;
                                return values;
                            })();
    
                            return TableFieldSchema;
                        })();
    
                        return v1beta2;
                    })();
    
                    return storage;
                })();
    
                return bigquery;
            })();
    
            return cloud;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {string|null} [".google.cloud.bigquery.storage.v1.columnName"] FieldOptions .google.cloud.bigquery.storage.v1.columnName
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.cloud.bigquery.storage.v1.columnName.
                 * @member {string} .google.cloud.bigquery.storage.v1.columnName
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.cloud.bigquery.storage.v1.columnName"] = null;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    if (message[".google.cloud.bigquery.storage.v1.columnName"] != null && Object.hasOwnProperty.call(message, ".google.cloud.bigquery.storage.v1.columnName"))
                        writer.uint32(/* id 454943157, wireType 2 =*/3639545258).string(message[".google.cloud.bigquery.storage.v1.columnName"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 454943157: {
                                message[".google.cloud.bigquery.storage.v1.columnName"] = reader.string();
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.cloud.bigquery.storage.v1.columnName"] != null && message.hasOwnProperty(".google.cloud.bigquery.storage.v1.columnName"))
                        if (!$util.isString(message[".google.cloud.bigquery.storage.v1.columnName"]))
                            return ".google.cloud.bigquery.storage.v1.columnName: string expected";
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.cloud.bigquery.storage.v1.columnName"] != null)
                        message[".google.cloud.bigquery.storage.v1.columnName"] = String(object[".google.cloud.bigquery.storage.v1.columnName"]);
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                        object[".google.cloud.bigquery.storage.v1.columnName"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    if (message[".google.cloud.bigquery.storage.v1.columnName"] != null && message.hasOwnProperty(".google.cloud.bigquery.storage.v1.columnName"))
                        object[".google.cloud.bigquery.storage.v1.columnName"] = message[".google.cloud.bigquery.storage.v1.columnName"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            return protobuf;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
