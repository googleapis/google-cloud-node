{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "dataqna": {
              "nested": {
                "v1alpha": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.DataQnA.V1Alpha",
                    "go_package": "google.golang.org/genproto/googleapis/cloud/dataqna/v1alpha;dataqna",
                    "java_multiple_files": true,
                    "java_outer_classname": "UserFeedbackProto",
                    "java_package": "com.google.cloud.dataqna.v1alpha",
                    "php_namespace": "Google\\Cloud\\DataQnA\\V1alpha",
                    "ruby_package": "Google::Cloud::DataQnA::V1alpha"
                  },
                  "nested": {
                    "AnnotatedString": {
                      "fields": {
                        "textFormatted": {
                          "type": "string",
                          "id": 1
                        },
                        "htmlFormatted": {
                          "type": "string",
                          "id": 2
                        },
                        "markups": {
                          "rule": "repeated",
                          "type": "SemanticMarkup",
                          "id": 3
                        }
                      },
                      "nested": {
                        "SemanticMarkup": {
                          "fields": {
                            "type": {
                              "type": "SemanticMarkupType",
                              "id": 1
                            },
                            "startCharIndex": {
                              "type": "int32",
                              "id": 2
                            },
                            "length": {
                              "type": "int32",
                              "id": 3
                            }
                          }
                        },
                        "SemanticMarkupType": {
                          "values": {
                            "MARKUP_TYPE_UNSPECIFIED": 0,
                            "METRIC": 1,
                            "DIMENSION": 2,
                            "FILTER": 3,
                            "UNUSED": 4,
                            "BLOCKED": 5,
                            "ROW": 6
                          }
                        }
                      }
                    },
                    "AutoSuggestionService": {
                      "options": {
                        "(google.api.default_host)": "dataqna.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "SuggestQueries": {
                          "requestType": "SuggestQueriesRequest",
                          "responseType": "SuggestQueriesResponse",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=projects/*/locations/*}:suggestQueries",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=projects/*/locations/*}:suggestQueries",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SuggestQueriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "scopes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "query": {
                          "type": "string",
                          "id": 3
                        },
                        "suggestionTypes": {
                          "rule": "repeated",
                          "type": "SuggestionType",
                          "id": 4
                        }
                      }
                    },
                    "Suggestion": {
                      "fields": {
                        "suggestionInfo": {
                          "type": "SuggestionInfo",
                          "id": 1
                        },
                        "rankingScore": {
                          "type": "double",
                          "id": 2
                        },
                        "suggestionType": {
                          "type": "SuggestionType",
                          "id": 3
                        }
                      }
                    },
                    "SuggestionInfo": {
                      "fields": {
                        "annotatedSuggestion": {
                          "type": "AnnotatedString",
                          "id": 1
                        },
                        "queryMatches": {
                          "rule": "repeated",
                          "type": "MatchInfo",
                          "id": 2
                        }
                      },
                      "nested": {
                        "MatchInfo": {
                          "fields": {
                            "startCharIndex": {
                              "type": "int32",
                              "id": 1
                            },
                            "length": {
                              "type": "int32",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "SuggestQueriesResponse": {
                      "fields": {
                        "suggestions": {
                          "rule": "repeated",
                          "type": "Suggestion",
                          "id": 1
                        }
                      }
                    },
                    "SuggestionType": {
                      "values": {
                        "SUGGESTION_TYPE_UNSPECIFIED": 0,
                        "ENTITY": 1,
                        "TEMPLATE": 2
                      }
                    },
                    "Question": {
                      "options": {
                        "(google.api.resource).type": "dataqna.googleapis.com/Question",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/questions/{question}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "scopes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "query": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "dataSourceAnnotations": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "interpretError": {
                          "type": "InterpretError",
                          "id": 5
                        },
                        "interpretations": {
                          "rule": "repeated",
                          "type": "Interpretation",
                          "id": 6
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "userEmail": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "debugFlags": {
                          "type": "DebugFlags",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "debugInfo": {
                          "type": "google.protobuf.Any",
                          "id": 10
                        }
                      }
                    },
                    "InterpretError": {
                      "fields": {
                        "message": {
                          "type": "string",
                          "id": 1
                        },
                        "code": {
                          "type": "InterpretErrorCode",
                          "id": 2
                        },
                        "details": {
                          "type": "InterpretErrorDetails",
                          "id": 3
                        }
                      },
                      "nested": {
                        "InterpretErrorDetails": {
                          "fields": {
                            "unsupportedDetails": {
                              "type": "InterpretUnsupportedDetails",
                              "id": 1
                            },
                            "incompleteQueryDetails": {
                              "type": "InterpretIncompleteQueryDetails",
                              "id": 2
                            },
                            "ambiguityDetails": {
                              "type": "InterpretAmbiguityDetails",
                              "id": 3
                            }
                          }
                        },
                        "InterpretUnsupportedDetails": {
                          "fields": {
                            "operators": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "intent": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "InterpretIncompleteQueryDetails": {
                          "fields": {
                            "entities": {
                              "rule": "repeated",
                              "type": "InterpretEntity",
                              "id": 1
                            }
                          }
                        },
                        "InterpretAmbiguityDetails": {
                          "fields": {}
                        },
                        "InterpretErrorCode": {
                          "values": {
                            "INTERPRET_ERROR_CODE_UNSPECIFIED": 0,
                            "INVALID_QUERY": 1,
                            "FAILED_TO_UNDERSTAND": 2,
                            "FAILED_TO_ANSWER": 3
                          }
                        }
                      }
                    },
                    "ExecutionInfo": {
                      "fields": {
                        "jobCreationStatus": {
                          "type": "google.rpc.Status",
                          "id": 1
                        },
                        "jobExecutionState": {
                          "type": "JobExecutionState",
                          "id": 2
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "bigqueryJob": {
                          "type": "BigQueryJob",
                          "id": 4
                        }
                      },
                      "nested": {
                        "JobExecutionState": {
                          "values": {
                            "JOB_EXECUTION_STATE_UNSPECIFIED": 0,
                            "NOT_EXECUTED": 1,
                            "RUNNING": 2,
                            "SUCCEEDED": 3,
                            "FAILED": 4
                          }
                        }
                      }
                    },
                    "BigQueryJob": {
                      "fields": {
                        "jobId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "location": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Interpretation": {
                      "fields": {
                        "dataSources": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "confidence": {
                          "type": "double",
                          "id": 2
                        },
                        "unusedPhrases": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "humanReadable": {
                          "type": "HumanReadable",
                          "id": 4
                        },
                        "interpretationStructure": {
                          "type": "InterpretationStructure",
                          "id": 5
                        },
                        "dataQuery": {
                          "type": "DataQuery",
                          "id": 6
                        },
                        "executionInfo": {
                          "type": "ExecutionInfo",
                          "id": 7
                        }
                      }
                    },
                    "DataQuery": {
                      "fields": {
                        "sql": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "HumanReadable": {
                      "fields": {
                        "generatedInterpretation": {
                          "type": "AnnotatedString",
                          "id": 1
                        },
                        "originalQuestion": {
                          "type": "AnnotatedString",
                          "id": 2
                        }
                      }
                    },
                    "InterpretationStructure": {
                      "fields": {
                        "visualizationTypes": {
                          "rule": "repeated",
                          "type": "VisualizationType",
                          "id": 1
                        },
                        "columnInfo": {
                          "rule": "repeated",
                          "type": "ColumnInfo",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ColumnInfo": {
                          "fields": {
                            "outputAlias": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "VisualizationType": {
                          "values": {
                            "VISUALIZATION_TYPE_UNSPECIFIED": 0,
                            "TABLE": 1,
                            "BAR_CHART": 2,
                            "COLUMN_CHART": 3,
                            "TIMELINE": 4,
                            "SCATTER_PLOT": 5,
                            "PIE_CHART": 6,
                            "LINE_CHART": 7,
                            "AREA_CHART": 8,
                            "COMBO_CHART": 9,
                            "HISTOGRAM": 10,
                            "GENERIC_CHART": 11,
                            "CHART_NOT_UNDERSTOOD": 12
                          }
                        }
                      }
                    },
                    "DebugFlags": {
                      "fields": {
                        "includeVaQuery": {
                          "type": "bool",
                          "id": 1
                        },
                        "includeNestedVaQuery": {
                          "type": "bool",
                          "id": 2
                        },
                        "includeHumanInterpretation": {
                          "type": "bool",
                          "id": 3
                        },
                        "includeAquaDebugResponse": {
                          "type": "bool",
                          "id": 4
                        },
                        "timeOverride": {
                          "type": "int64",
                          "id": 5
                        },
                        "isInternalGoogleUser": {
                          "type": "bool",
                          "id": 6
                        },
                        "ignoreCache": {
                          "type": "bool",
                          "id": 7
                        },
                        "includeSearchEntitiesRpc": {
                          "type": "bool",
                          "id": 8
                        },
                        "includeListColumnAnnotationsRpc": {
                          "type": "bool",
                          "id": 9
                        },
                        "includeVirtualAnalystEntities": {
                          "type": "bool",
                          "id": 10
                        },
                        "includeTableList": {
                          "type": "bool",
                          "id": 11
                        },
                        "includeDomainList": {
                          "type": "bool",
                          "id": 12
                        }
                      }
                    },
                    "InterpretEntity": {
                      "values": {
                        "INTERPRET_ENTITY_UNSPECIFIED": 0,
                        "DIMENSION": 1,
                        "METRIC": 2
                      }
                    },
                    "QuestionService": {
                      "options": {
                        "(google.api.default_host)": "dataqna.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetQuestion": {
                          "requestType": "GetQuestionRequest",
                          "responseType": "Question",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=projects/*/locations/*/questions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=projects/*/locations/*/questions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateQuestion": {
                          "requestType": "CreateQuestionRequest",
                          "responseType": "Question",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=projects/*/locations/*}/questions",
                            "(google.api.http).body": "question",
                            "(google.api.method_signature)": "parent,question"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=projects/*/locations/*}/questions",
                                "body": "question"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,question"
                            }
                          ]
                        },
                        "ExecuteQuestion": {
                          "requestType": "ExecuteQuestionRequest",
                          "responseType": "Question",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{name=projects/*/locations/*/questions/*}:execute",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,interpretation_index"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{name=projects/*/locations/*/questions/*}:execute",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,interpretation_index"
                            }
                          ]
                        },
                        "GetUserFeedback": {
                          "requestType": "GetUserFeedbackRequest",
                          "responseType": "UserFeedback",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=projects/*/locations/*/questions/*/userFeedback}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=projects/*/locations/*/questions/*/userFeedback}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateUserFeedback": {
                          "requestType": "UpdateUserFeedbackRequest",
                          "responseType": "UserFeedback",
                          "options": {
                            "(google.api.http).patch": "/v1alpha/{user_feedback.name=projects/*/locations/*/questions/*/userFeedback}",
                            "(google.api.http).body": "user_feedback",
                            "(google.api.method_signature)": "user_feedback,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1alpha/{user_feedback.name=projects/*/locations/*/questions/*/userFeedback}",
                                "body": "user_feedback"
                              }
                            },
                            {
                              "(google.api.method_signature)": "user_feedback,update_mask"
                            }
                          ]
                        }
                      }
                    },
                    "GetQuestionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataqna.googleapis.com/Question"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "CreateQuestionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "question": {
                          "type": "Question",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExecuteQuestionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "interpretationIndex": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetUserFeedbackRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataqna.googleapis.com/UserFeedback"
                          }
                        }
                      }
                    },
                    "UpdateUserFeedbackRequest": {
                      "fields": {
                        "userFeedback": {
                          "type": "UserFeedback",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "UserFeedback": {
                      "options": {
                        "(google.api.resource).type": "dataqna.googleapis.com/UserFeedback",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/questions/{question}/userFeedback"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "freeFormFeedback": {
                          "type": "string",
                          "id": 2
                        },
                        "rating": {
                          "type": "UserFeedbackRating",
                          "id": 3
                        }
                      },
                      "nested": {
                        "UserFeedbackRating": {
                          "values": {
                            "USER_FEEDBACK_RATING_UNSPECIFIED": 0,
                            "POSITIVE": 1,
                            "NEGATIVE": 2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ClientProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}