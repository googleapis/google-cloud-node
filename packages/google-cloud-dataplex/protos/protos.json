{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "dataplex": {
              "nested": {
                "v1": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/cloud/dataplex/v1;dataplex",
                    "java_multiple_files": true,
                    "java_outer_classname": "TasksProto",
                    "java_package": "com.google.cloud.dataplex.v1"
                  },
                  "nested": {
                    "Environment": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Environment",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/environments/{environment}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Environment"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "infrastructureSpec": {
                          "type": "InfrastructureSpec",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "sessionSpec": {
                          "type": "SessionSpec",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "sessionStatus": {
                          "type": "SessionStatus",
                          "id": 102,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endpoints": {
                          "type": "Endpoints",
                          "id": 200,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "InfrastructureSpec": {
                          "oneofs": {
                            "resources": {
                              "oneof": [
                                "compute"
                              ]
                            },
                            "runtime": {
                              "oneof": [
                                "osImage"
                              ]
                            }
                          },
                          "fields": {
                            "compute": {
                              "type": "ComputeResources",
                              "id": 50,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "osImage": {
                              "type": "OsImageRuntime",
                              "id": 100,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "ComputeResources": {
                              "fields": {
                                "diskSizeGb": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "nodeCount": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "maxNodeCount": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            },
                            "OsImageRuntime": {
                              "fields": {
                                "imageVersion": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "javaLibraries": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "pythonPackages": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "properties": {
                                  "keyType": "string",
                                  "type": "string",
                                  "id": 4,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "SessionSpec": {
                          "fields": {
                            "maxIdleDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "enableFastStartup": {
                              "type": "bool",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "SessionStatus": {
                          "fields": {
                            "active": {
                              "type": "bool",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "Endpoints": {
                          "fields": {
                            "notebooks": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "sql": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Content": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Content",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/content/{content}"
                      },
                      "oneofs": {
                        "data": {
                          "oneof": [
                            "dataText"
                          ]
                        },
                        "content": {
                          "oneof": [
                            "sqlScript",
                            "notebook"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Content"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "path": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "dataText": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "sqlScript": {
                          "type": "SqlScript",
                          "id": 100
                        },
                        "notebook": {
                          "type": "Notebook",
                          "id": 101
                        }
                      },
                      "nested": {
                        "SqlScript": {
                          "fields": {
                            "engine": {
                              "type": "QueryEngine",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "QueryEngine": {
                              "values": {
                                "QUERY_ENGINE_UNSPECIFIED": 0,
                                "SPARK": 2
                              }
                            }
                          }
                        },
                        "Notebook": {
                          "fields": {
                            "kernelType": {
                              "type": "KernelType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "KernelType": {
                              "values": {
                                "KERNEL_TYPE_UNSPECIFIED": 0,
                                "PYTHON3": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "Session": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Session",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/environments/{environment}/sessions/{session}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Session"
                          }
                        },
                        "userId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Lake": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Lake",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metastore": {
                          "type": "Metastore",
                          "id": 102,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "assetStatus": {
                          "type": "AssetStatus",
                          "id": 103,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metastoreStatus": {
                          "type": "MetastoreStatus",
                          "id": 104,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Metastore": {
                          "fields": {
                            "service": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "MetastoreStatus": {
                          "fields": {
                            "state": {
                              "type": "State",
                              "id": 1
                            },
                            "message": {
                              "type": "string",
                              "id": 2
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "endpoint": {
                              "type": "string",
                              "id": 4
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "NONE": 1,
                                "READY": 2,
                                "UPDATING": 3,
                                "ERROR": 4
                              }
                            }
                          }
                        }
                      }
                    },
                    "AssetStatus": {
                      "fields": {
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "activeAssets": {
                          "type": "int32",
                          "id": 2
                        },
                        "securityPolicyApplyingAssets": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "Zone": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Zone",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "type": {
                          "type": "Type",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "discoverySpec": {
                          "type": "DiscoverySpec",
                          "id": 103,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "resourceSpec": {
                          "type": "ResourceSpec",
                          "id": 104,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "assetStatus": {
                          "type": "AssetStatus",
                          "id": 105,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "RAW": 1,
                            "CURATED": 2
                          }
                        },
                        "ResourceSpec": {
                          "fields": {
                            "locationType": {
                              "type": "LocationType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            }
                          },
                          "nested": {
                            "LocationType": {
                              "values": {
                                "LOCATION_TYPE_UNSPECIFIED": 0,
                                "SINGLE_REGION": 1,
                                "MULTI_REGION": 2
                              }
                            }
                          }
                        },
                        "DiscoverySpec": {
                          "oneofs": {
                            "trigger": {
                              "oneof": [
                                "schedule"
                              ]
                            }
                          },
                          "fields": {
                            "enabled": {
                              "type": "bool",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "includePatterns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "excludePatterns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "csvOptions": {
                              "type": "CsvOptions",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "jsonOptions": {
                              "type": "JsonOptions",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "schedule": {
                              "type": "string",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "CsvOptions": {
                              "fields": {
                                "headerRows": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "delimiter": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "encoding": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "disableTypeInference": {
                                  "type": "bool",
                                  "id": 4,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            },
                            "JsonOptions": {
                              "fields": {
                                "encoding": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "disableTypeInference": {
                                  "type": "bool",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Action": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Action",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}"
                      },
                      "oneofs": {
                        "details": {
                          "oneof": [
                            "invalidDataFormat",
                            "incompatibleDataSchema",
                            "invalidDataPartition",
                            "missingData",
                            "missingResource",
                            "unauthorizedResource",
                            "failedSecurityPolicyApply",
                            "invalidDataOrganization"
                          ]
                        }
                      },
                      "fields": {
                        "category": {
                          "type": "Category",
                          "id": 1
                        },
                        "issue": {
                          "type": "string",
                          "id": 2
                        },
                        "detectTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "name": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Action"
                          }
                        },
                        "lake": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "zone": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        },
                        "asset": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Asset"
                          }
                        },
                        "dataLocations": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 9
                        },
                        "invalidDataFormat": {
                          "type": "InvalidDataFormat",
                          "id": 10
                        },
                        "incompatibleDataSchema": {
                          "type": "IncompatibleDataSchema",
                          "id": 11
                        },
                        "invalidDataPartition": {
                          "type": "InvalidDataPartition",
                          "id": 12
                        },
                        "missingData": {
                          "type": "MissingData",
                          "id": 13
                        },
                        "missingResource": {
                          "type": "MissingResource",
                          "id": 14
                        },
                        "unauthorizedResource": {
                          "type": "UnauthorizedResource",
                          "id": 15
                        },
                        "failedSecurityPolicyApply": {
                          "type": "FailedSecurityPolicyApply",
                          "id": 21
                        },
                        "invalidDataOrganization": {
                          "type": "InvalidDataOrganization",
                          "id": 22
                        }
                      },
                      "nested": {
                        "Category": {
                          "values": {
                            "CATEGORY_UNSPECIFIED": 0,
                            "RESOURCE_MANAGEMENT": 1,
                            "SECURITY_POLICY": 2,
                            "DATA_DISCOVERY": 3
                          }
                        },
                        "MissingResource": {
                          "fields": {}
                        },
                        "UnauthorizedResource": {
                          "fields": {}
                        },
                        "FailedSecurityPolicyApply": {
                          "fields": {
                            "asset": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "InvalidDataFormat": {
                          "fields": {
                            "sampledDataLocations": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "expectedFormat": {
                              "type": "string",
                              "id": 2
                            },
                            "newFormat": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "IncompatibleDataSchema": {
                          "fields": {
                            "table": {
                              "type": "string",
                              "id": 1
                            },
                            "existingSchema": {
                              "type": "string",
                              "id": 2
                            },
                            "newSchema": {
                              "type": "string",
                              "id": 3
                            },
                            "sampledDataLocations": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            },
                            "schemaChange": {
                              "type": "SchemaChange",
                              "id": 5
                            }
                          },
                          "nested": {
                            "SchemaChange": {
                              "values": {
                                "SCHEMA_CHANGE_UNSPECIFIED": 0,
                                "INCOMPATIBLE": 1,
                                "MODIFIED": 2
                              }
                            }
                          }
                        },
                        "InvalidDataPartition": {
                          "fields": {
                            "expectedStructure": {
                              "type": "PartitionStructure",
                              "id": 1
                            }
                          },
                          "nested": {
                            "PartitionStructure": {
                              "values": {
                                "PARTITION_STRUCTURE_UNSPECIFIED": 0,
                                "CONSISTENT_KEYS": 1,
                                "HIVE_STYLE_KEYS": 2
                              }
                            }
                          }
                        },
                        "MissingData": {
                          "fields": {}
                        },
                        "InvalidDataOrganization": {
                          "fields": {}
                        }
                      }
                    },
                    "Asset": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Asset",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Asset"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "resourceSpec": {
                          "type": "ResourceSpec",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "resourceStatus": {
                          "type": "ResourceStatus",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "securityStatus": {
                          "type": "SecurityStatus",
                          "id": 103,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "discoverySpec": {
                          "type": "DiscoverySpec",
                          "id": 106,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "discoveryStatus": {
                          "type": "DiscoveryStatus",
                          "id": 107,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "SecurityStatus": {
                          "fields": {
                            "state": {
                              "type": "State",
                              "id": 1
                            },
                            "message": {
                              "type": "string",
                              "id": 2
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "READY": 1,
                                "APPLYING": 2,
                                "ERROR": 3
                              }
                            }
                          }
                        },
                        "DiscoverySpec": {
                          "oneofs": {
                            "trigger": {
                              "oneof": [
                                "schedule"
                              ]
                            }
                          },
                          "fields": {
                            "enabled": {
                              "type": "bool",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "includePatterns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "excludePatterns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "csvOptions": {
                              "type": "CsvOptions",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "jsonOptions": {
                              "type": "JsonOptions",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "schedule": {
                              "type": "string",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "CsvOptions": {
                              "fields": {
                                "headerRows": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "delimiter": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "encoding": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "disableTypeInference": {
                                  "type": "bool",
                                  "id": 4,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            },
                            "JsonOptions": {
                              "fields": {
                                "encoding": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "disableTypeInference": {
                                  "type": "bool",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ResourceSpec": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "type": {
                              "type": "Type",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "STORAGE_BUCKET": 1,
                                "BIGQUERY_DATASET": 2
                              }
                            }
                          }
                        },
                        "ResourceStatus": {
                          "fields": {
                            "state": {
                              "type": "State",
                              "id": 1
                            },
                            "message": {
                              "type": "string",
                              "id": 2
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "READY": 1,
                                "ERROR": 2
                              }
                            }
                          }
                        },
                        "DiscoveryStatus": {
                          "fields": {
                            "state": {
                              "type": "State",
                              "id": 1
                            },
                            "message": {
                              "type": "string",
                              "id": 2
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "lastRunTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            },
                            "stats": {
                              "type": "Stats",
                              "id": 6
                            },
                            "lastRunDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 7
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "SCHEDULED": 1,
                                "IN_PROGRESS": 2,
                                "PAUSED": 3,
                                "DISABLED": 5
                              }
                            },
                            "Stats": {
                              "fields": {
                                "dataItems": {
                                  "type": "int64",
                                  "id": 1
                                },
                                "dataSize": {
                                  "type": "int64",
                                  "id": 2
                                },
                                "tables": {
                                  "type": "int64",
                                  "id": 3
                                },
                                "filesets": {
                                  "type": "int64",
                                  "id": 4
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "State": {
                      "values": {
                        "STATE_UNSPECIFIED": 0,
                        "ACTIVE": 1,
                        "CREATING": 2,
                        "DELETING": 3,
                        "ACTION_REQUIRED": 4
                      }
                    },
                    "ContentService": {
                      "options": {
                        "(google.api.default_host)": "dataplex.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateContent": {
                          "requestType": "CreateContentRequest",
                          "responseType": "Content",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/lakes/*}/contentitems",
                            "(google.api.http).body": "content",
                            "(google.api.http).additional_bindings.post": "/v1/{parent=projects/*/locations/*/lakes/*}/content",
                            "(google.api.http).additional_bindings.body": "content",
                            "(google.api.method_signature)": "parent,content"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/lakes/*}/contentitems",
                                "body": "content",
                                "additional_bindings": {
                                  "post": "/v1/{parent=projects/*/locations/*/lakes/*}/content",
                                  "body": "content"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,content"
                            }
                          ]
                        },
                        "UpdateContent": {
                          "requestType": "UpdateContentRequest",
                          "responseType": "Content",
                          "options": {
                            "(google.api.http).patch": "/v1/{content.name=projects/*/locations/*/lakes/*/contentitems/**}",
                            "(google.api.http).body": "content",
                            "(google.api.http).additional_bindings.patch": "/v1/{content.name=projects/*/locations/*/lakes/*/content/**}",
                            "(google.api.http).additional_bindings.body": "content",
                            "(google.api.method_signature)": "content,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{content.name=projects/*/locations/*/lakes/*/contentitems/**}",
                                "body": "content",
                                "additional_bindings": {
                                  "patch": "/v1/{content.name=projects/*/locations/*/lakes/*/content/**}",
                                  "body": "content"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "content,update_mask"
                            }
                          ]
                        },
                        "DeleteContent": {
                          "requestType": "DeleteContentRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/lakes/*/contentitems/**}",
                            "(google.api.http).additional_bindings.delete": "/v1/{name=projects/*/locations/*/lakes/*/content/**}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/lakes/*/contentitems/**}",
                                "additional_bindings": {
                                  "delete": "/v1/{name=projects/*/locations/*/lakes/*/content/**}"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetContent": {
                          "requestType": "GetContentRequest",
                          "responseType": "Content",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*/contentitems/**}",
                            "(google.api.http).additional_bindings.get": "/v1/{name=projects/*/locations/*/lakes/*/content/**}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*/contentitems/**}",
                                "additional_bindings": {
                                  "get": "/v1/{name=projects/*/locations/*/lakes/*/content/**}"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).get": "/v1/{resource=projects/*/locations/*/lakes/*/contentitems/**}:getIamPolicy",
                            "(google.api.http).additional_bindings.get": "/v1/{resource=projects/*/locations/*/lakes/*/content/**}:getIamPolicy",
                            "(google.api.method_signature)": "resource"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{resource=projects/*/locations/*/lakes/*/contentitems/**}:getIamPolicy",
                                "additional_bindings": {
                                  "get": "/v1/{resource=projects/*/locations/*/lakes/*/content/**}:getIamPolicy"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource"
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/lakes/*/contentitems/**}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/locations/*/lakes/*/content/**}:setIamPolicy",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/lakes/*/contentitems/**}:setIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{resource=projects/*/locations/*/lakes/*/content/**}:setIamPolicy",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/lakes/*/contentitems/**}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/locations/*/lakes/*/content/**}:testIamPermissions",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/lakes/*/contentitems/**}:testIamPermissions",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{resource=projects/*/locations/*/lakes/*/content/**}:testIamPermissions",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "ListContent": {
                          "requestType": "ListContentRequest",
                          "responseType": "ListContentResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*}/contentitems",
                            "(google.api.http).additional_bindings.get": "/v1/{parent=projects/*/locations/*/lakes/*}/content",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*}/contentitems",
                                "additional_bindings": {
                                  "get": "/v1/{parent=projects/*/locations/*/lakes/*}/content"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateContentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "content": {
                          "type": "Content",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateContentRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "content": {
                          "type": "Content",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteContentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Content"
                          }
                        }
                      }
                    },
                    "ListContentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListContentResponse": {
                      "fields": {
                        "content": {
                          "rule": "repeated",
                          "type": "Content",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetContentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Content"
                          }
                        },
                        "view": {
                          "type": "ContentView",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "ContentView": {
                          "values": {
                            "CONTENT_VIEW_UNSPECIFIED": 0,
                            "BASIC": 1,
                            "FULL": 2
                          }
                        }
                      }
                    },
                    "DataProfileSpec": {
                      "fields": {}
                    },
                    "DataProfileResult": {
                      "fields": {
                        "rowCount": {
                          "type": "int64",
                          "id": 3
                        },
                        "profile": {
                          "type": "Profile",
                          "id": 4
                        },
                        "scannedData": {
                          "type": "ScannedData",
                          "id": 5
                        }
                      },
                      "nested": {
                        "Profile": {
                          "fields": {
                            "fields": {
                              "rule": "repeated",
                              "type": "Field",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Field": {
                              "fields": {
                                "name": {
                                  "type": "string",
                                  "id": 1
                                },
                                "type": {
                                  "type": "string",
                                  "id": 2
                                },
                                "mode": {
                                  "type": "string",
                                  "id": 3
                                },
                                "profile": {
                                  "type": "ProfileInfo",
                                  "id": 4
                                }
                              },
                              "nested": {
                                "ProfileInfo": {
                                  "oneofs": {
                                    "fieldInfo": {
                                      "oneof": [
                                        "stringProfile",
                                        "integerProfile",
                                        "doubleProfile"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "nullRatio": {
                                      "type": "double",
                                      "id": 2
                                    },
                                    "distinctRatio": {
                                      "type": "double",
                                      "id": 3
                                    },
                                    "topNValues": {
                                      "rule": "repeated",
                                      "type": "TopNValue",
                                      "id": 4
                                    },
                                    "stringProfile": {
                                      "type": "StringFieldInfo",
                                      "id": 101
                                    },
                                    "integerProfile": {
                                      "type": "IntegerFieldInfo",
                                      "id": 102
                                    },
                                    "doubleProfile": {
                                      "type": "DoubleFieldInfo",
                                      "id": 103
                                    }
                                  },
                                  "nested": {
                                    "StringFieldInfo": {
                                      "fields": {
                                        "minLength": {
                                          "type": "int64",
                                          "id": 1
                                        },
                                        "maxLength": {
                                          "type": "int64",
                                          "id": 2
                                        },
                                        "averageLength": {
                                          "type": "double",
                                          "id": 3
                                        }
                                      }
                                    },
                                    "IntegerFieldInfo": {
                                      "fields": {
                                        "average": {
                                          "type": "double",
                                          "id": 1
                                        },
                                        "standardDeviation": {
                                          "type": "double",
                                          "id": 3
                                        },
                                        "min": {
                                          "type": "int64",
                                          "id": 4
                                        },
                                        "quartiles": {
                                          "rule": "repeated",
                                          "type": "int64",
                                          "id": 6
                                        },
                                        "max": {
                                          "type": "int64",
                                          "id": 5
                                        }
                                      }
                                    },
                                    "DoubleFieldInfo": {
                                      "fields": {
                                        "average": {
                                          "type": "double",
                                          "id": 1
                                        },
                                        "standardDeviation": {
                                          "type": "double",
                                          "id": 3
                                        },
                                        "min": {
                                          "type": "double",
                                          "id": 4
                                        },
                                        "quartiles": {
                                          "rule": "repeated",
                                          "type": "double",
                                          "id": 6
                                        },
                                        "max": {
                                          "type": "double",
                                          "id": 5
                                        }
                                      }
                                    },
                                    "TopNValue": {
                                      "fields": {
                                        "value": {
                                          "type": "string",
                                          "id": 1
                                        },
                                        "count": {
                                          "type": "int64",
                                          "id": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Trigger": {
                      "oneofs": {
                        "mode": {
                          "oneof": [
                            "onDemand",
                            "schedule"
                          ]
                        }
                      },
                      "fields": {
                        "onDemand": {
                          "type": "OnDemand",
                          "id": 100
                        },
                        "schedule": {
                          "type": "Schedule",
                          "id": 101
                        }
                      },
                      "nested": {
                        "OnDemand": {
                          "fields": {}
                        },
                        "Schedule": {
                          "fields": {
                            "cron": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        }
                      }
                    },
                    "DataSource": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "entity"
                          ]
                        }
                      },
                      "fields": {
                        "entity": {
                          "type": "string",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Entity"
                          }
                        }
                      }
                    },
                    "ScannedData": {
                      "oneofs": {
                        "dataRange": {
                          "oneof": [
                            "incrementalField"
                          ]
                        }
                      },
                      "fields": {
                        "incrementalField": {
                          "type": "IncrementalField",
                          "id": 1
                        }
                      },
                      "nested": {
                        "IncrementalField": {
                          "fields": {
                            "field": {
                              "type": "string",
                              "id": 1
                            },
                            "start": {
                              "type": "string",
                              "id": 2
                            },
                            "end": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "DataQualitySpec": {
                      "fields": {
                        "rules": {
                          "rule": "repeated",
                          "type": "DataQualityRule",
                          "id": 1
                        }
                      }
                    },
                    "DataQualityResult": {
                      "fields": {
                        "passed": {
                          "type": "bool",
                          "id": 5
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "DataQualityDimensionResult",
                          "id": 2
                        },
                        "rules": {
                          "rule": "repeated",
                          "type": "DataQualityRuleResult",
                          "id": 3
                        },
                        "rowCount": {
                          "type": "int64",
                          "id": 4
                        },
                        "scannedData": {
                          "type": "ScannedData",
                          "id": 7
                        }
                      }
                    },
                    "DataQualityRuleResult": {
                      "fields": {
                        "rule": {
                          "type": "DataQualityRule",
                          "id": 1
                        },
                        "passed": {
                          "type": "bool",
                          "id": 7
                        },
                        "evaluatedCount": {
                          "type": "int64",
                          "id": 9
                        },
                        "passedCount": {
                          "type": "int64",
                          "id": 8
                        },
                        "nullCount": {
                          "type": "int64",
                          "id": 5
                        },
                        "passRatio": {
                          "type": "double",
                          "id": 6
                        },
                        "failingRowsQuery": {
                          "type": "string",
                          "id": 10
                        }
                      }
                    },
                    "DataQualityDimensionResult": {
                      "fields": {
                        "passed": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DataQualityRule": {
                      "oneofs": {
                        "ruleType": {
                          "oneof": [
                            "rangeExpectation",
                            "nonNullExpectation",
                            "setExpectation",
                            "regexExpectation",
                            "uniquenessExpectation",
                            "statisticRangeExpectation",
                            "rowConditionExpectation",
                            "tableConditionExpectation"
                          ]
                        }
                      },
                      "fields": {
                        "rangeExpectation": {
                          "type": "RangeExpectation",
                          "id": 1
                        },
                        "nonNullExpectation": {
                          "type": "NonNullExpectation",
                          "id": 2
                        },
                        "setExpectation": {
                          "type": "SetExpectation",
                          "id": 3
                        },
                        "regexExpectation": {
                          "type": "RegexExpectation",
                          "id": 4
                        },
                        "uniquenessExpectation": {
                          "type": "UniquenessExpectation",
                          "id": 100
                        },
                        "statisticRangeExpectation": {
                          "type": "StatisticRangeExpectation",
                          "id": 101
                        },
                        "rowConditionExpectation": {
                          "type": "RowConditionExpectation",
                          "id": 200
                        },
                        "tableConditionExpectation": {
                          "type": "TableConditionExpectation",
                          "id": 201
                        },
                        "column": {
                          "type": "string",
                          "id": 500,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "ignoreNull": {
                          "type": "bool",
                          "id": 501,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "dimension": {
                          "type": "string",
                          "id": 502,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "threshold": {
                          "type": "double",
                          "id": 503,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "RangeExpectation": {
                          "fields": {
                            "minValue": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "maxValue": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "strictMinEnabled": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "strictMaxEnabled": {
                              "type": "bool",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "NonNullExpectation": {
                          "fields": {}
                        },
                        "SetExpectation": {
                          "fields": {
                            "values": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "RegexExpectation": {
                          "fields": {
                            "regex": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "UniquenessExpectation": {
                          "fields": {}
                        },
                        "StatisticRangeExpectation": {
                          "fields": {
                            "statistic": {
                              "type": "ColumnStatistic",
                              "id": 1
                            },
                            "minValue": {
                              "type": "string",
                              "id": 2
                            },
                            "maxValue": {
                              "type": "string",
                              "id": 3
                            },
                            "strictMinEnabled": {
                              "type": "bool",
                              "id": 4
                            },
                            "strictMaxEnabled": {
                              "type": "bool",
                              "id": 5
                            }
                          },
                          "nested": {
                            "ColumnStatistic": {
                              "values": {
                                "STATISTIC_UNDEFINED": 0,
                                "MEAN": 1,
                                "MIN": 2,
                                "MAX": 3
                              }
                            }
                          }
                        },
                        "RowConditionExpectation": {
                          "fields": {
                            "sqlExpression": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "TableConditionExpectation": {
                          "fields": {
                            "sqlExpression": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "DataScanService": {
                      "options": {
                        "(google.api.default_host)": "dataplex.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateDataScan": {
                          "requestType": "CreateDataScanRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/dataScans",
                            "(google.api.http).body": "data_scan",
                            "(google.api.method_signature)": "parent,data_scan,data_scan_id",
                            "(google.longrunning.operation_info).response_type": "DataScan",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/dataScans",
                                "body": "data_scan"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,data_scan,data_scan_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DataScan",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateDataScan": {
                          "requestType": "UpdateDataScanRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{data_scan.name=projects/*/locations/*/dataScans/*}",
                            "(google.api.http).body": "data_scan",
                            "(google.api.method_signature)": "data_scan,update_mask",
                            "(google.longrunning.operation_info).response_type": "DataScan",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{data_scan.name=projects/*/locations/*/dataScans/*}",
                                "body": "data_scan"
                              }
                            },
                            {
                              "(google.api.method_signature)": "data_scan,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DataScan",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteDataScan": {
                          "requestType": "DeleteDataScanRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/dataScans/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/dataScans/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDataScan": {
                          "requestType": "GetDataScanRequest",
                          "responseType": "DataScan",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/dataScans/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/dataScans/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDataScans": {
                          "requestType": "ListDataScansRequest",
                          "responseType": "ListDataScansResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/dataScans",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/dataScans"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "RunDataScan": {
                          "requestType": "RunDataScanRequest",
                          "responseType": "RunDataScanResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/dataScans/*}:run",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/dataScans/*}:run",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetDataScanJob": {
                          "requestType": "GetDataScanJobRequest",
                          "responseType": "DataScanJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/dataScans/*/jobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/dataScans/*/jobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDataScanJobs": {
                          "requestType": "ListDataScanJobsRequest",
                          "responseType": "ListDataScanJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/dataScans/*}/jobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/dataScans/*}/jobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateDataScanRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataScan": {
                          "type": "DataScan",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dataScanId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateDataScanRequest": {
                      "fields": {
                        "dataScan": {
                          "type": "DataScan",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteDataScanRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/DataScan"
                          }
                        }
                      }
                    },
                    "GetDataScanRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/DataScan"
                          }
                        },
                        "view": {
                          "type": "DataScanView",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "DataScanView": {
                          "values": {
                            "DATA_SCAN_VIEW_UNSPECIFIED": 0,
                            "BASIC": 1,
                            "FULL": 10
                          }
                        }
                      }
                    },
                    "ListDataScansRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListDataScansResponse": {
                      "fields": {
                        "dataScans": {
                          "rule": "repeated",
                          "type": "DataScan",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "RunDataScanRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/DataScan"
                          }
                        }
                      }
                    },
                    "RunDataScanResponse": {
                      "fields": {
                        "job": {
                          "type": "DataScanJob",
                          "id": 1
                        }
                      }
                    },
                    "GetDataScanJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/DataScanJob"
                          }
                        },
                        "view": {
                          "type": "DataScanJobView",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "DataScanJobView": {
                          "values": {
                            "DATA_SCAN_JOB_VIEW_UNSPECIFIED": 0,
                            "BASIC": 1,
                            "FULL": 10
                          }
                        }
                      }
                    },
                    "ListDataScanJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/DataScan"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListDataScanJobsResponse": {
                      "fields": {
                        "dataScanJobs": {
                          "rule": "repeated",
                          "type": "DataScanJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DataScan": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/DataScan",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/dataScans/{dataScan}"
                      },
                      "oneofs": {
                        "spec": {
                          "oneof": [
                            "dataQualitySpec",
                            "dataProfileSpec"
                          ]
                        },
                        "result": {
                          "oneof": [
                            "dataQualityResult",
                            "dataProfileResult"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "data": {
                          "type": "DataSource",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "executionSpec": {
                          "type": "ExecutionSpec",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "executionStatus": {
                          "type": "ExecutionStatus",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "type": {
                          "type": "DataScanType",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataQualitySpec": {
                          "type": "DataQualitySpec",
                          "id": 100
                        },
                        "dataProfileSpec": {
                          "type": "DataProfileSpec",
                          "id": 101
                        },
                        "dataQualityResult": {
                          "type": "DataQualityResult",
                          "id": 200,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataProfileResult": {
                          "type": "DataProfileResult",
                          "id": 201,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "ExecutionSpec": {
                          "oneofs": {
                            "incremental": {
                              "oneof": [
                                "field"
                              ]
                            }
                          },
                          "fields": {
                            "trigger": {
                              "type": "Trigger",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "field": {
                              "type": "string",
                              "id": 100,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            }
                          }
                        },
                        "ExecutionStatus": {
                          "fields": {
                            "latestJobStartTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            },
                            "latestJobEndTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            }
                          }
                        }
                      }
                    },
                    "DataScanJob": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/DataScanJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/dataScans/{dataScan}/jobs/{job}"
                      },
                      "oneofs": {
                        "spec": {
                          "oneof": [
                            "dataQualitySpec",
                            "dataProfileSpec"
                          ]
                        },
                        "result": {
                          "oneof": [
                            "dataQualityResult",
                            "dataProfileResult"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "message": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "type": {
                          "type": "DataScanType",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataQualitySpec": {
                          "type": "DataQualitySpec",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataProfileSpec": {
                          "type": "DataProfileSpec",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataQualityResult": {
                          "type": "DataQualityResult",
                          "id": 200,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataProfileResult": {
                          "type": "DataProfileResult",
                          "id": 201,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "CANCELING": 2,
                            "CANCELLED": 3,
                            "SUCCEEDED": 4,
                            "FAILED": 5,
                            "PENDING": 7
                          }
                        }
                      }
                    },
                    "DataScanType": {
                      "values": {
                        "DATA_SCAN_TYPE_UNSPECIFIED": 0,
                        "DATA_QUALITY": 1,
                        "DATA_PROFILE": 2
                      }
                    },
                    "DiscoveryEvent": {
                      "oneofs": {
                        "details": {
                          "oneof": [
                            "config",
                            "entity",
                            "partition",
                            "action"
                          ]
                        }
                      },
                      "fields": {
                        "message": {
                          "type": "string",
                          "id": 1
                        },
                        "lakeId": {
                          "type": "string",
                          "id": 2
                        },
                        "zoneId": {
                          "type": "string",
                          "id": 3
                        },
                        "assetId": {
                          "type": "string",
                          "id": 4
                        },
                        "dataLocation": {
                          "type": "string",
                          "id": 5
                        },
                        "type": {
                          "type": "EventType",
                          "id": 10
                        },
                        "config": {
                          "type": "ConfigDetails",
                          "id": 20
                        },
                        "entity": {
                          "type": "EntityDetails",
                          "id": 21
                        },
                        "partition": {
                          "type": "PartitionDetails",
                          "id": 22
                        },
                        "action": {
                          "type": "ActionDetails",
                          "id": 23
                        }
                      },
                      "nested": {
                        "EventType": {
                          "values": {
                            "EVENT_TYPE_UNSPECIFIED": 0,
                            "CONFIG": 1,
                            "ENTITY_CREATED": 2,
                            "ENTITY_UPDATED": 3,
                            "ENTITY_DELETED": 4,
                            "PARTITION_CREATED": 5,
                            "PARTITION_UPDATED": 6,
                            "PARTITION_DELETED": 7
                          }
                        },
                        "EntityType": {
                          "values": {
                            "ENTITY_TYPE_UNSPECIFIED": 0,
                            "TABLE": 1,
                            "FILESET": 2
                          }
                        },
                        "ConfigDetails": {
                          "fields": {
                            "parameters": {
                              "keyType": "string",
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "EntityDetails": {
                          "fields": {
                            "entity": {
                              "type": "string",
                              "id": 1
                            },
                            "type": {
                              "type": "EntityType",
                              "id": 2
                            }
                          }
                        },
                        "PartitionDetails": {
                          "fields": {
                            "partition": {
                              "type": "string",
                              "id": 1
                            },
                            "entity": {
                              "type": "string",
                              "id": 2
                            },
                            "type": {
                              "type": "EntityType",
                              "id": 3
                            },
                            "sampledDataLocations": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ActionDetails": {
                          "fields": {
                            "type": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "JobEvent": {
                      "fields": {
                        "message": {
                          "type": "string",
                          "id": 1
                        },
                        "jobId": {
                          "type": "string",
                          "id": 2
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "state": {
                          "type": "State",
                          "id": 5
                        },
                        "retries": {
                          "type": "int32",
                          "id": 6
                        },
                        "type": {
                          "type": "Type",
                          "id": 7
                        },
                        "service": {
                          "type": "Service",
                          "id": 8
                        },
                        "serviceJob": {
                          "type": "string",
                          "id": 9
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "SPARK": 1,
                            "NOTEBOOK": 2
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "SUCCEEDED": 1,
                            "FAILED": 2,
                            "CANCELLED": 3,
                            "ABORTED": 4
                          }
                        },
                        "Service": {
                          "values": {
                            "SERVICE_UNSPECIFIED": 0,
                            "DATAPROC": 1
                          }
                        }
                      }
                    },
                    "SessionEvent": {
                      "oneofs": {
                        "detail": {
                          "oneof": [
                            "query"
                          ]
                        }
                      },
                      "fields": {
                        "message": {
                          "type": "string",
                          "id": 1
                        },
                        "userId": {
                          "type": "string",
                          "id": 2
                        },
                        "sessionId": {
                          "type": "string",
                          "id": 3
                        },
                        "type": {
                          "type": "EventType",
                          "id": 4
                        },
                        "query": {
                          "type": "QueryDetail",
                          "id": 5
                        },
                        "eventSucceeded": {
                          "type": "bool",
                          "id": 6
                        },
                        "fastStartupEnabled": {
                          "type": "bool",
                          "id": 7
                        },
                        "unassignedDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 8
                        }
                      },
                      "nested": {
                        "EventType": {
                          "values": {
                            "EVENT_TYPE_UNSPECIFIED": 0,
                            "START": 1,
                            "STOP": 2,
                            "QUERY": 3,
                            "CREATE": 4
                          }
                        },
                        "QueryDetail": {
                          "fields": {
                            "queryId": {
                              "type": "string",
                              "id": 1
                            },
                            "queryText": {
                              "type": "string",
                              "id": 2
                            },
                            "engine": {
                              "type": "Engine",
                              "id": 3
                            },
                            "duration": {
                              "type": "google.protobuf.Duration",
                              "id": 4
                            },
                            "resultSizeBytes": {
                              "type": "int64",
                              "id": 5
                            },
                            "dataProcessedBytes": {
                              "type": "int64",
                              "id": 6
                            }
                          },
                          "nested": {
                            "Engine": {
                              "values": {
                                "ENGINE_UNSPECIFIED": 0,
                                "SPARK_SQL": 1,
                                "BIGQUERY": 2
                              }
                            }
                          }
                        }
                      }
                    },
                    "DataScanEvent": {
                      "oneofs": {
                        "result": {
                          "oneof": [
                            "dataProfile",
                            "dataQuality"
                          ]
                        }
                      },
                      "fields": {
                        "dataSource": {
                          "type": "string",
                          "id": 1
                        },
                        "jobId": {
                          "type": "string",
                          "id": 2
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "type": {
                          "type": "ScanType",
                          "id": 5
                        },
                        "state": {
                          "type": "State",
                          "id": 6
                        },
                        "message": {
                          "type": "string",
                          "id": 7
                        },
                        "specVersion": {
                          "type": "string",
                          "id": 8
                        },
                        "trigger": {
                          "type": "Trigger",
                          "id": 9
                        },
                        "scope": {
                          "type": "Scope",
                          "id": 10
                        },
                        "dataProfile": {
                          "type": "DataProfileResult",
                          "id": 101
                        },
                        "dataQuality": {
                          "type": "DataQualityResult",
                          "id": 102
                        }
                      },
                      "nested": {
                        "ScanType": {
                          "values": {
                            "SCAN_TYPE_UNSPECIFIED": 0,
                            "DATA_PROFILE": 1,
                            "DATA_QUALITY": 2
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "STARTED": 1,
                            "SUCCEEDED": 2,
                            "FAILED": 3,
                            "CANCELLED": 4
                          }
                        },
                        "Trigger": {
                          "values": {
                            "TRIGGER_UNSPECIFIED": 0,
                            "ON_DEMAND": 1,
                            "SCHEDULE": 2
                          }
                        },
                        "Scope": {
                          "values": {
                            "SCOPE_UNSPECIFIED": 0,
                            "FULL": 1,
                            "INCREMENTAL": 2
                          }
                        },
                        "DataProfileResult": {
                          "fields": {
                            "rowCount": {
                              "type": "int64",
                              "id": 1
                            }
                          }
                        },
                        "DataQualityResult": {
                          "fields": {
                            "rowCount": {
                              "type": "int64",
                              "id": 1
                            },
                            "passed": {
                              "type": "bool",
                              "id": 2
                            },
                            "dimensionPassed": {
                              "keyType": "string",
                              "type": "bool",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "MetadataService": {
                      "options": {
                        "(google.api.default_host)": "dataplex.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateEntity": {
                          "requestType": "CreateEntityRequest",
                          "responseType": "Entity",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/entities",
                            "(google.api.http).body": "entity",
                            "(google.api.method_signature)": "parent,entity"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/entities",
                                "body": "entity"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,entity"
                            }
                          ]
                        },
                        "UpdateEntity": {
                          "requestType": "UpdateEntityRequest",
                          "responseType": "Entity",
                          "options": {
                            "(google.api.http).put": "/v1/{entity.name=projects/*/locations/*/lakes/*/zones/*/entities/*}",
                            "(google.api.http).body": "entity"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "put": "/v1/{entity.name=projects/*/locations/*/lakes/*/zones/*/entities/*}",
                                "body": "entity"
                              }
                            }
                          ]
                        },
                        "DeleteEntity": {
                          "requestType": "DeleteEntityRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/entities/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/entities/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetEntity": {
                          "requestType": "GetEntityRequest",
                          "responseType": "Entity",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/entities/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/entities/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEntities": {
                          "requestType": "ListEntitiesRequest",
                          "responseType": "ListEntitiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/entities",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/entities"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreatePartition": {
                          "requestType": "CreatePartitionRequest",
                          "responseType": "Partition",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*/entities/*}/partitions",
                            "(google.api.http).body": "partition",
                            "(google.api.method_signature)": "parent,partition"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*/entities/*}/partitions",
                                "body": "partition"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,partition"
                            }
                          ]
                        },
                        "DeletePartition": {
                          "requestType": "DeletePartitionRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/entities/*/partitions/**}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/entities/*/partitions/**}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetPartition": {
                          "requestType": "GetPartitionRequest",
                          "responseType": "Partition",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/entities/*/partitions/**}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/entities/*/partitions/**}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListPartitions": {
                          "requestType": "ListPartitionsRequest",
                          "responseType": "ListPartitionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*/entities/*}/partitions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*/entities/*}/partitions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateEntityRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        },
                        "entity": {
                          "type": "Entity",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateEntityRequest": {
                      "fields": {
                        "entity": {
                          "type": "Entity",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteEntityRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Entity"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListEntitiesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        },
                        "view": {
                          "type": "EntityView",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "EntityView": {
                          "values": {
                            "ENTITY_VIEW_UNSPECIFIED": 0,
                            "TABLES": 1,
                            "FILESETS": 2
                          }
                        }
                      }
                    },
                    "ListEntitiesResponse": {
                      "fields": {
                        "entities": {
                          "rule": "repeated",
                          "type": "Entity",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetEntityRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Entity"
                          }
                        },
                        "view": {
                          "type": "EntityView",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "EntityView": {
                          "values": {
                            "ENTITY_VIEW_UNSPECIFIED": 0,
                            "BASIC": 1,
                            "SCHEMA": 2,
                            "FULL": 4
                          }
                        }
                      }
                    },
                    "ListPartitionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Entity"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "CreatePartitionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Entity"
                          }
                        },
                        "partition": {
                          "type": "Partition",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeletePartitionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Partition"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "deprecated": true,
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListPartitionsResponse": {
                      "fields": {
                        "partitions": {
                          "rule": "repeated",
                          "type": "Partition",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetPartitionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Partition"
                          }
                        }
                      }
                    },
                    "Entity": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Entity",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/entities/{entity}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Entity"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "type": {
                          "type": "Type",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "asset": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "dataPath": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "dataPathPattern": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "catalogEntry": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "system": {
                          "type": "StorageSystem",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "format": {
                          "type": "StorageFormat",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "compatibility": {
                          "type": "CompatibilityStatus",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "schema": {
                          "type": "Schema",
                          "id": 50,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "TABLE": 1,
                            "FILESET": 2
                          }
                        },
                        "CompatibilityStatus": {
                          "fields": {
                            "hiveMetastore": {
                              "type": "Compatibility",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "bigquery": {
                              "type": "Compatibility",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "Compatibility": {
                              "fields": {
                                "compatible": {
                                  "type": "bool",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                },
                                "reason": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Partition": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Partition",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/entities/{entity}/partitions/{partition}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Partition"
                          }
                        },
                        "values": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "location": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "deprecated": true,
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Schema": {
                      "fields": {
                        "userManaged": {
                          "type": "bool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "fields": {
                          "rule": "repeated",
                          "type": "SchemaField",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "partitionFields": {
                          "rule": "repeated",
                          "type": "PartitionField",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "partitionStyle": {
                          "type": "PartitionStyle",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "BOOLEAN": 1,
                            "BYTE": 2,
                            "INT16": 3,
                            "INT32": 4,
                            "INT64": 5,
                            "FLOAT": 6,
                            "DOUBLE": 7,
                            "DECIMAL": 8,
                            "STRING": 9,
                            "BINARY": 10,
                            "TIMESTAMP": 11,
                            "DATE": 12,
                            "TIME": 13,
                            "RECORD": 14,
                            "NULL": 100
                          }
                        },
                        "Mode": {
                          "values": {
                            "MODE_UNSPECIFIED": 0,
                            "REQUIRED": 1,
                            "NULLABLE": 2,
                            "REPEATED": 3
                          }
                        },
                        "SchemaField": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "type": {
                              "type": "Type",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "mode": {
                              "type": "Mode",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "fields": {
                              "rule": "repeated",
                              "type": "SchemaField",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "PartitionField": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "type": {
                              "type": "Type",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            }
                          }
                        },
                        "PartitionStyle": {
                          "values": {
                            "PARTITION_STYLE_UNSPECIFIED": 0,
                            "HIVE_COMPATIBLE": 1
                          }
                        }
                      }
                    },
                    "StorageFormat": {
                      "oneofs": {
                        "options": {
                          "oneof": [
                            "csv",
                            "json",
                            "iceberg"
                          ]
                        }
                      },
                      "fields": {
                        "format": {
                          "type": "Format",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "compressionFormat": {
                          "type": "CompressionFormat",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "mimeType": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "csv": {
                          "type": "CsvOptions",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "json": {
                          "type": "JsonOptions",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "iceberg": {
                          "type": "IcebergOptions",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "CsvOptions": {
                          "fields": {
                            "encoding": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "headerRows": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "delimiter": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "quote": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "JsonOptions": {
                          "fields": {
                            "encoding": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "IcebergOptions": {
                          "fields": {
                            "metadataLocation": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "Format": {
                          "values": {
                            "FORMAT_UNSPECIFIED": 0,
                            "PARQUET": 1,
                            "AVRO": 2,
                            "ORC": 3,
                            "CSV": 100,
                            "JSON": 101,
                            "IMAGE": 200,
                            "AUDIO": 201,
                            "VIDEO": 202,
                            "TEXT": 203,
                            "TFRECORD": 204,
                            "OTHER": 1000,
                            "UNKNOWN": 1001
                          }
                        },
                        "CompressionFormat": {
                          "values": {
                            "COMPRESSION_FORMAT_UNSPECIFIED": 0,
                            "GZIP": 2,
                            "BZIP2": 3
                          }
                        }
                      }
                    },
                    "StorageSystem": {
                      "values": {
                        "STORAGE_SYSTEM_UNSPECIFIED": 0,
                        "CLOUD_STORAGE": 1,
                        "BIGQUERY": 2
                      }
                    },
                    "DataplexService": {
                      "options": {
                        "(google.api.default_host)": "dataplex.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateLake": {
                          "requestType": "CreateLakeRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/lakes",
                            "(google.api.http).body": "lake",
                            "(google.api.method_signature)": "parent,lake,lake_id",
                            "(google.longrunning.operation_info).response_type": "Lake",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/lakes",
                                "body": "lake"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,lake,lake_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Lake",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateLake": {
                          "requestType": "UpdateLakeRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{lake.name=projects/*/locations/*/lakes/*}",
                            "(google.api.http).body": "lake",
                            "(google.api.method_signature)": "lake,update_mask",
                            "(google.longrunning.operation_info).response_type": "Lake",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{lake.name=projects/*/locations/*/lakes/*}",
                                "body": "lake"
                              }
                            },
                            {
                              "(google.api.method_signature)": "lake,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Lake",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteLake": {
                          "requestType": "DeleteLakeRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/lakes/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/lakes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListLakes": {
                          "requestType": "ListLakesRequest",
                          "responseType": "ListLakesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/lakes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/lakes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetLake": {
                          "requestType": "GetLakeRequest",
                          "responseType": "Lake",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListLakeActions": {
                          "requestType": "ListLakeActionsRequest",
                          "responseType": "ListActionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*}/actions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*}/actions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateZone": {
                          "requestType": "CreateZoneRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/lakes/*}/zones",
                            "(google.api.http).body": "zone",
                            "(google.api.method_signature)": "parent,zone,zone_id",
                            "(google.longrunning.operation_info).response_type": "Zone",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/lakes/*}/zones",
                                "body": "zone"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,zone,zone_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Zone",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateZone": {
                          "requestType": "UpdateZoneRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{zone.name=projects/*/locations/*/lakes/*/zones/*}",
                            "(google.api.http).body": "zone",
                            "(google.api.method_signature)": "zone,update_mask",
                            "(google.longrunning.operation_info).response_type": "Zone",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{zone.name=projects/*/locations/*/lakes/*/zones/*}",
                                "body": "zone"
                              }
                            },
                            {
                              "(google.api.method_signature)": "zone,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Zone",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteZone": {
                          "requestType": "DeleteZoneRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/lakes/*/zones/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/lakes/*/zones/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListZones": {
                          "requestType": "ListZonesRequest",
                          "responseType": "ListZonesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*}/zones",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*}/zones"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetZone": {
                          "requestType": "GetZoneRequest",
                          "responseType": "Zone",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*/zones/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*/zones/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListZoneActions": {
                          "requestType": "ListZoneActionsRequest",
                          "responseType": "ListActionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/actions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/actions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateAsset": {
                          "requestType": "CreateAssetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/assets",
                            "(google.api.http).body": "asset",
                            "(google.api.method_signature)": "parent,asset,asset_id",
                            "(google.longrunning.operation_info).response_type": "Asset",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/assets",
                                "body": "asset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,asset,asset_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Asset",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateAsset": {
                          "requestType": "UpdateAssetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{asset.name=projects/*/locations/*/lakes/*/zones/*/assets/*}",
                            "(google.api.http).body": "asset",
                            "(google.api.method_signature)": "asset,update_mask",
                            "(google.longrunning.operation_info).response_type": "Asset",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{asset.name=projects/*/locations/*/lakes/*/zones/*/assets/*}",
                                "body": "asset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "asset,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Asset",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteAsset": {
                          "requestType": "DeleteAssetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/assets/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/assets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListAssets": {
                          "requestType": "ListAssetsRequest",
                          "responseType": "ListAssetsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/assets",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*}/assets"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetAsset": {
                          "requestType": "GetAssetRequest",
                          "responseType": "Asset",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/assets/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*/zones/*/assets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListAssetActions": {
                          "requestType": "ListAssetActionsRequest",
                          "responseType": "ListActionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*/assets/*}/actions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*/zones/*/assets/*}/actions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateTask": {
                          "requestType": "CreateTaskRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/lakes/*}/tasks",
                            "(google.api.http).body": "task",
                            "(google.api.method_signature)": "parent,task,task_id",
                            "(google.longrunning.operation_info).response_type": "Task",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/lakes/*}/tasks",
                                "body": "task"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,task,task_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Task",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateTask": {
                          "requestType": "UpdateTaskRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{task.name=projects/*/locations/*/lakes/*/tasks/*}",
                            "(google.api.http).body": "task",
                            "(google.api.method_signature)": "task,update_mask",
                            "(google.longrunning.operation_info).response_type": "Task",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{task.name=projects/*/locations/*/lakes/*/tasks/*}",
                                "body": "task"
                              }
                            },
                            {
                              "(google.api.method_signature)": "task,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Task",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteTask": {
                          "requestType": "DeleteTaskRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/lakes/*/tasks/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/lakes/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListTasks": {
                          "requestType": "ListTasksRequest",
                          "responseType": "ListTasksResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*}/tasks",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*}/tasks"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTask": {
                          "requestType": "GetTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListJobs": {
                          "requestType": "ListJobsRequest",
                          "responseType": "ListJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*/tasks/*}/jobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*/tasks/*}/jobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetJob": {
                          "requestType": "GetJobRequest",
                          "responseType": "Job",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*/tasks/*/jobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*/tasks/*/jobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CancelJob": {
                          "requestType": "CancelJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/lakes/*/tasks/*/jobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/lakes/*/tasks/*/jobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateEnvironment": {
                          "requestType": "CreateEnvironmentRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/lakes/*}/environments",
                            "(google.api.http).body": "environment",
                            "(google.api.method_signature)": "parent,environment,environment_id",
                            "(google.longrunning.operation_info).response_type": "Environment",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/lakes/*}/environments",
                                "body": "environment"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,environment,environment_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Environment",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateEnvironment": {
                          "requestType": "UpdateEnvironmentRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{environment.name=projects/*/locations/*/lakes/*/environments/*}",
                            "(google.api.http).body": "environment",
                            "(google.api.method_signature)": "environment,update_mask",
                            "(google.longrunning.operation_info).response_type": "Environment",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{environment.name=projects/*/locations/*/lakes/*/environments/*}",
                                "body": "environment"
                              }
                            },
                            {
                              "(google.api.method_signature)": "environment,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Environment",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteEnvironment": {
                          "requestType": "DeleteEnvironmentRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/lakes/*/environments/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/lakes/*/environments/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListEnvironments": {
                          "requestType": "ListEnvironmentsRequest",
                          "responseType": "ListEnvironmentsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*}/environments",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*}/environments"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetEnvironment": {
                          "requestType": "GetEnvironmentRequest",
                          "responseType": "Environment",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/lakes/*/environments/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/lakes/*/environments/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListSessions": {
                          "requestType": "ListSessionsRequest",
                          "responseType": "ListSessionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/lakes/*/environments/*}/sessions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/lakes/*/environments/*}/sessions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateLakeRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "lakeId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "lake": {
                          "type": "Lake",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateLakeRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "lake": {
                          "type": "Lake",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteLakeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        }
                      }
                    },
                    "ListLakesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListLakesResponse": {
                      "fields": {
                        "lakes": {
                          "rule": "repeated",
                          "type": "Lake",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachableLocations": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListLakeActionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListActionsResponse": {
                      "fields": {
                        "actions": {
                          "rule": "repeated",
                          "type": "Action",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetLakeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        }
                      }
                    },
                    "CreateZoneRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "zoneId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "zone": {
                          "type": "Zone",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateZoneRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "zone": {
                          "type": "Zone",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteZoneRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        }
                      }
                    },
                    "ListZonesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListZonesResponse": {
                      "fields": {
                        "zones": {
                          "rule": "repeated",
                          "type": "Zone",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListZoneActionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetZoneRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        }
                      }
                    },
                    "CreateAssetRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        },
                        "assetId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "asset": {
                          "type": "Asset",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateAssetRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "asset": {
                          "type": "Asset",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteAssetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Asset"
                          }
                        }
                      }
                    },
                    "ListAssetsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Zone"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListAssetsResponse": {
                      "fields": {
                        "assets": {
                          "rule": "repeated",
                          "type": "Asset",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListAssetActionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Asset"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetAssetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Asset"
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "CreateTaskRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "taskId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "task": {
                          "type": "Task",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateTaskRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "task": {
                          "type": "Task",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Task"
                          }
                        }
                      }
                    },
                    "ListTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListTasksResponse": {
                      "fields": {
                        "tasks": {
                          "rule": "repeated",
                          "type": "Task",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachableLocations": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Task"
                          }
                        }
                      }
                    },
                    "GetJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Job"
                          }
                        }
                      }
                    },
                    "ListJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Task"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListJobsResponse": {
                      "fields": {
                        "jobs": {
                          "rule": "repeated",
                          "type": "Job",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CancelJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Job"
                          }
                        }
                      }
                    },
                    "CreateEnvironmentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "environmentId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateEnvironmentRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validateOnly": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteEnvironmentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Environment"
                          }
                        }
                      }
                    },
                    "ListEnvironmentsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListEnvironmentsResponse": {
                      "fields": {
                        "environments": {
                          "rule": "repeated",
                          "type": "Environment",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetEnvironmentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Environment"
                          }
                        }
                      }
                    },
                    "ListSessionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Environment"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListSessionsResponse": {
                      "fields": {
                        "sessions": {
                          "rule": "repeated",
                          "type": "Session",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "Task": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Task",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/tasks/{task}"
                      },
                      "oneofs": {
                        "config": {
                          "oneof": [
                            "spark",
                            "notebook"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Task"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "triggerSpec": {
                          "type": "TriggerSpec",
                          "id": 100,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "executionSpec": {
                          "type": "ExecutionSpec",
                          "id": 101,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "executionStatus": {
                          "type": "ExecutionStatus",
                          "id": 201,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "spark": {
                          "type": "SparkTaskConfig",
                          "id": 300
                        },
                        "notebook": {
                          "type": "NotebookTaskConfig",
                          "id": 302
                        }
                      },
                      "nested": {
                        "InfrastructureSpec": {
                          "oneofs": {
                            "resources": {
                              "oneof": [
                                "batch"
                              ]
                            },
                            "runtime": {
                              "oneof": [
                                "containerImage"
                              ]
                            },
                            "network": {
                              "oneof": [
                                "vpcNetwork"
                              ]
                            }
                          },
                          "fields": {
                            "batch": {
                              "type": "BatchComputeResources",
                              "id": 52
                            },
                            "containerImage": {
                              "type": "ContainerImageRuntime",
                              "id": 101
                            },
                            "vpcNetwork": {
                              "type": "VpcNetwork",
                              "id": 150
                            }
                          },
                          "nested": {
                            "BatchComputeResources": {
                              "fields": {
                                "executorsCount": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "maxExecutorsCount": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            },
                            "ContainerImageRuntime": {
                              "fields": {
                                "image": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "javaJars": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "pythonPackages": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "properties": {
                                  "keyType": "string",
                                  "type": "string",
                                  "id": 4,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            },
                            "VpcNetwork": {
                              "oneofs": {
                                "networkName": {
                                  "oneof": [
                                    "network",
                                    "subNetwork"
                                  ]
                                }
                              },
                              "fields": {
                                "network": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "subNetwork": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "networkTags": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "TriggerSpec": {
                          "oneofs": {
                            "trigger": {
                              "oneof": [
                                "schedule"
                              ]
                            }
                          },
                          "fields": {
                            "type": {
                              "type": "Type",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "disabled": {
                              "type": "bool",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "maxRetries": {
                              "type": "int32",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "schedule": {
                              "type": "string",
                              "id": 100,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "ON_DEMAND": 1,
                                "RECURRING": 2
                              }
                            }
                          }
                        },
                        "ExecutionSpec": {
                          "fields": {
                            "args": {
                              "keyType": "string",
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "serviceAccount": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "project": {
                              "type": "string",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "maxJobExecutionLifetime": {
                              "type": "google.protobuf.Duration",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "kmsKey": {
                              "type": "string",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "SparkTaskConfig": {
                          "oneofs": {
                            "driver": {
                              "oneof": [
                                "mainJarFileUri",
                                "mainClass",
                                "pythonScriptFile",
                                "sqlScriptFile",
                                "sqlScript"
                              ]
                            }
                          },
                          "fields": {
                            "mainJarFileUri": {
                              "type": "string",
                              "id": 100
                            },
                            "mainClass": {
                              "type": "string",
                              "id": 101
                            },
                            "pythonScriptFile": {
                              "type": "string",
                              "id": 102
                            },
                            "sqlScriptFile": {
                              "type": "string",
                              "id": 104
                            },
                            "sqlScript": {
                              "type": "string",
                              "id": 105
                            },
                            "fileUris": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "archiveUris": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "infrastructureSpec": {
                              "type": "InfrastructureSpec",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "NotebookTaskConfig": {
                          "fields": {
                            "notebook": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "infrastructureSpec": {
                              "type": "InfrastructureSpec",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "fileUris": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "archiveUris": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ExecutionStatus": {
                          "fields": {
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "latestJob": {
                              "type": "Job",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Job": {
                      "options": {
                        "(google.api.resource).type": "dataplex.googleapis.com/Job",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lakes/{lake}/tasks/{task}/jobs/{job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Job"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "retryCount": {
                          "type": "uint32",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceJob": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "message": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Service": {
                          "values": {
                            "SERVICE_UNSPECIFIED": 0,
                            "DATAPROC": 1
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "CANCELLING": 2,
                            "CANCELLED": 3,
                            "SUCCEEDED": 4,
                            "FAILED": 5,
                            "ABORTED": 6
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ClientProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            }
          }
        },
        "iam": {
          "nested": {
            "v1": {
              "options": {
                "cc_enable_arenas": true,
                "csharp_namespace": "Google.Cloud.Iam.V1",
                "go_package": "google.golang.org/genproto/googleapis/iam/v1;iam",
                "java_multiple_files": true,
                "java_outer_classname": "PolicyProto",
                "java_package": "com.google.iam.v1",
                "php_namespace": "Google\\Cloud\\Iam\\V1"
              },
              "nested": {
                "IAMPolicy": {
                  "options": {
                    "(google.api.default_host)": "iam-meta-api.googleapis.com"
                  },
                  "methods": {
                    "SetIamPolicy": {
                      "requestType": "SetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:setIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:setIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "GetIamPolicy": {
                      "requestType": "GetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:getIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:getIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "TestIamPermissions": {
                      "requestType": "TestIamPermissionsRequest",
                      "responseType": "TestIamPermissionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:testIamPermissions",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:testIamPermissions",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "SetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "policy": {
                      "type": "Policy",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "updateMask": {
                      "type": "google.protobuf.FieldMask",
                      "id": 3
                    }
                  }
                },
                "GetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "options": {
                      "type": "GetPolicyOptions",
                      "id": 2
                    }
                  }
                },
                "TestIamPermissionsRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "TestIamPermissionsResponse": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "GetPolicyOptions": {
                  "fields": {
                    "requestedPolicyVersion": {
                      "type": "int32",
                      "id": 1
                    }
                  }
                },
                "Policy": {
                  "fields": {
                    "version": {
                      "type": "int32",
                      "id": 1
                    },
                    "bindings": {
                      "rule": "repeated",
                      "type": "Binding",
                      "id": 4
                    },
                    "auditConfigs": {
                      "rule": "repeated",
                      "type": "AuditConfig",
                      "id": 6
                    },
                    "etag": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "Binding": {
                  "fields": {
                    "role": {
                      "type": "string",
                      "id": 1
                    },
                    "members": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 3
                    }
                  }
                },
                "AuditConfig": {
                  "fields": {
                    "service": {
                      "type": "string",
                      "id": 1
                    },
                    "auditLogConfigs": {
                      "rule": "repeated",
                      "type": "AuditLogConfig",
                      "id": 3
                    }
                  }
                },
                "AuditLogConfig": {
                  "fields": {
                    "logType": {
                      "type": "LogType",
                      "id": 1
                    },
                    "exemptedMembers": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    }
                  },
                  "nested": {
                    "LogType": {
                      "values": {
                        "LOG_TYPE_UNSPECIFIED": 0,
                        "ADMIN_READ": 1,
                        "DATA_WRITE": 2,
                        "DATA_READ": 3
                      }
                    }
                  }
                },
                "PolicyDelta": {
                  "fields": {
                    "bindingDeltas": {
                      "rule": "repeated",
                      "type": "BindingDelta",
                      "id": 1
                    },
                    "auditConfigDeltas": {
                      "rule": "repeated",
                      "type": "AuditConfigDelta",
                      "id": 2
                    }
                  }
                },
                "BindingDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "role": {
                      "type": "string",
                      "id": 2
                    },
                    "member": {
                      "type": "string",
                      "id": 3
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                },
                "AuditConfigDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "service": {
                      "type": "string",
                      "id": 2
                    },
                    "exemptedMember": {
                      "type": "string",
                      "id": 3
                    },
                    "logType": {
                      "type": "string",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/expr;expr",
            "java_multiple_files": true,
            "java_outer_classname": "ExprProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Expr": {
              "fields": {
                "expression": {
                  "type": "string",
                  "id": 1
                },
                "title": {
                  "type": "string",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                },
                "location": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}