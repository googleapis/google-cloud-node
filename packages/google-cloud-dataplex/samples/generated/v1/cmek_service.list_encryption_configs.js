// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START dataplex_v1_generated_CmekService_ListEncryptionConfigs_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The location for which the EncryptionConfig is to be listed.
   */
  // const parent = 'abc123'
  /**
   *  Optional. Maximum number of EncryptionConfigs to return. The service may
   *  return fewer than this value. If unspecified, at most 10 EncryptionConfigs
   *  will be returned. The maximum value is 1000; values above 1000 will be
   *  coerced to 1000.
   */
  // const pageSize = 1234
  /**
   *  Optional. Page token received from a previous `ListEncryptionConfigs` call.
   *  Provide this to retrieve the subsequent page. When paginating, the
   *  parameters - filter and order_by provided to `ListEncryptionConfigs` must
   *  match the call that provided the page token.
   */
  // const pageToken = 'abc123'
  /**
   *  Optional. Filter the EncryptionConfigs to be returned.
   *  Using bare literals: (These values will be matched anywhere it may appear
   *  in the object's field values)
   *  * filter=some_value
   *  Using fields: (These values will be matched only in the specified field)
   *  * filter=some_field=some_value
   *  Supported fields:
   *  * name, key, create_time, update_time, encryption_state
   *  Example:
   *  * filter=name=organizations/123/locations/us-central1/encryptionConfigs/test-config
   *  conjunctions: (AND, OR, NOT)
   *  * filter=name=organizations/123/locations/us-central1/encryptionConfigs/test-config
   *  AND mode=CMEK
   *  logical operators: (>, <, >=, <=, !=, =, :),
   *  * filter=create_time>2024-05-01T00:00:00.000Z
   */
  // const filter = 'abc123'
  /**
   *  Optional. Order by fields for the result.
   */
  // const orderBy = 'abc123'

  // Imports the Dataplex library
  const {CmekServiceClient} = require('@google-cloud/dataplex').v1;

  // Instantiates a client
  const dataplexClient = new CmekServiceClient();

  async function callListEncryptionConfigs() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = dataplexClient.listEncryptionConfigsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListEncryptionConfigs();
  // [END dataplex_v1_generated_CmekService_ListEncryptionConfigs_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
