// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main() {
  // [START cloudsupport_v2_generated_CaseService_SearchCases_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  The fully qualified name of parent resource to search cases under.
   */
  // const parent = 'abc123'
  /**
   *  An expression written in filter language.
   *  A query uses the following fields with the operators equals (`=`) and
   *  `AND`:
   *  - `organization`: An organization name in the form
   *  `organizations/<organization_id>`.
   *  - `project`: A project name in the form `projects/<project_id>`.
   *  - `state`: The accepted values are `OPEN` or `CLOSED`.
   *  - `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or `P4`. You
   *  can specify multiple values for priority using the `OR` operator. For
   *  example, `priority=P1 OR priority=P2`.
   *  - `creator.email`: The email address of the case creator.
   *  - `billingAccount`: A billing account in the form
   *  `billingAccounts/<billing_account_id>`
   *  You must specify either `organization` or `project`.
   *  To search across `displayName`, `description`, and comments, use a global
   *  restriction with no keyword or operator. For example, `"my search"`.
   *  To search only cases updated after a certain date, use `update_time`
   *  restricted with that particular date, time, and timezone in ISO datetime
   *  format. For example, `update_time>"2020-01-01T00:00:00-05:00"`.
   *  `update_time` only supports the greater than operator (`>`).
   *  Examples:
   *  - `organization="organizations/123456789"`
   *  - `project="projects/my-project-id"`
   *  - `project="projects/123456789"`
   *  - `billing_account="billingAccounts/123456-A0B0C0-CUZ789"`
   *  - `organization="organizations/123456789" AND state=CLOSED`
   *  - `project="projects/my-project-id" AND creator.email="tester@example.com"`
   *  - `project="projects/my-project-id" AND (priority=P0 OR priority=P1)`
   */
  // const query = 'abc123'
  /**
   *  The maximum number of cases fetched with each request. The default page
   *  size is 10.
   */
  // const pageSize = 1234
  /**
   *  A token identifying the page of results to return. If unspecified, the
   *  first page is retrieved.
   */
  // const pageToken = 'abc123'

  // Imports the Support library
  const {CaseServiceClient} = require('@google-cloud/support').v2;

  // Instantiates a client
  const supportClient = new CaseServiceClient();

  async function callSearchCases() {
    // Construct request
    const request = {
    };

    // Run request
    const iterable = await supportClient.searchCasesAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callSearchCases();
  // [END cloudsupport_v2_generated_CaseService_SearchCases_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
