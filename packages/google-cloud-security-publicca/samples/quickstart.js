// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

'use strict';

function main(parent, externalAccountKey) {
  // [START publicca_quickstart]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The parent resource where this external_account_key will be created.
   *  Format: projects/[project_quickstart].
   *  At present only the "global" location is supported.
   */
  // const parent = 'abc123'
  /**
   *  Required. The external account key to create. This field only exists to future-proof
   *  the API. At present, all fields in ExternalAccountKey are output only and
   *  all values are ignored. For the purpose of the
   *  CreateExternalAccountKeyRequest, set it to a default/empty value.
   */
  // const externalAccountKey = {}

  // Imports the Publicca library
  const {PublicCertificateAuthorityServiceClient} =
    require('@google-cloud/publicca').v1beta1;

  // Instantiates a client
  const publiccaClient = new PublicCertificateAuthorityServiceClient();

  async function callCreateExternalAccountKey() {
    // Construct request
    const request = {
      parent,
      externalAccountKey,
    };

    // Run request
    const response = await publiccaClient.createExternalAccountKey(request);
    console.log(response);
  }

  callCreateExternalAccountKey();
  // [END publicca_quickstart]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
