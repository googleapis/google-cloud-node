// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_dataproc_metastore_protos || ($protobuf.roots._google_cloud_dataproc_metastore_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.metastore = (function() {
    
                /**
                 * Namespace metastore.
                 * @memberof google.cloud
                 * @namespace
                 */
                var metastore = {};
    
                metastore.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.metastore
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.DataprocMetastore = (function() {
    
                        /**
                         * Constructs a new DataprocMetastore service.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a DataprocMetastore
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DataprocMetastore(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DataprocMetastore.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DataprocMetastore;
    
                        /**
                         * Creates new DataprocMetastore service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DataprocMetastore} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DataprocMetastore.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|listServices}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef ListServicesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1.ListServicesResponse} [response] ListServicesResponse
                         */
    
                        /**
                         * Calls ListServices.
                         * @function listServices
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IListServicesRequest} request ListServicesRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.ListServicesCallback} callback Node-style callback called with the error, if any, and ListServicesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listServices = function listServices(request, callback) {
                            return this.rpcCall(listServices, $root.google.cloud.metastore.v1.ListServicesRequest, $root.google.cloud.metastore.v1.ListServicesResponse, request, callback);
                        }, "name", { value: "ListServices" });
    
                        /**
                         * Calls ListServices.
                         * @function listServices
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IListServicesRequest} request ListServicesRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1.ListServicesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|getService}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef GetServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1.Service} [response] Service
                         */
    
                        /**
                         * Calls GetService.
                         * @function getService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IGetServiceRequest} request GetServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.GetServiceCallback} callback Node-style callback called with the error, if any, and Service
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getService = function getService(request, callback) {
                            return this.rpcCall(getService, $root.google.cloud.metastore.v1.GetServiceRequest, $root.google.cloud.metastore.v1.Service, request, callback);
                        }, "name", { value: "GetService" });
    
                        /**
                         * Calls GetService.
                         * @function getService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IGetServiceRequest} request GetServiceRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1.Service>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|createService}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef CreateServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateService.
                         * @function createService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.ICreateServiceRequest} request CreateServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.CreateServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createService = function createService(request, callback) {
                            return this.rpcCall(createService, $root.google.cloud.metastore.v1.CreateServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateService" });
    
                        /**
                         * Calls CreateService.
                         * @function createService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.ICreateServiceRequest} request CreateServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|updateService}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef UpdateServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateService.
                         * @function updateService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.UpdateServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.updateService = function updateService(request, callback) {
                            return this.rpcCall(updateService, $root.google.cloud.metastore.v1.UpdateServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateService" });
    
                        /**
                         * Calls UpdateService.
                         * @function updateService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|deleteService}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef DeleteServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteService.
                         * @function deleteService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.DeleteServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.deleteService = function deleteService(request, callback) {
                            return this.rpcCall(deleteService, $root.google.cloud.metastore.v1.DeleteServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteService" });
    
                        /**
                         * Calls DeleteService.
                         * @function deleteService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|listMetadataImports}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef ListMetadataImportsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1.ListMetadataImportsResponse} [response] ListMetadataImportsResponse
                         */
    
                        /**
                         * Calls ListMetadataImports.
                         * @function listMetadataImports
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IListMetadataImportsRequest} request ListMetadataImportsRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.ListMetadataImportsCallback} callback Node-style callback called with the error, if any, and ListMetadataImportsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listMetadataImports = function listMetadataImports(request, callback) {
                            return this.rpcCall(listMetadataImports, $root.google.cloud.metastore.v1.ListMetadataImportsRequest, $root.google.cloud.metastore.v1.ListMetadataImportsResponse, request, callback);
                        }, "name", { value: "ListMetadataImports" });
    
                        /**
                         * Calls ListMetadataImports.
                         * @function listMetadataImports
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IListMetadataImportsRequest} request ListMetadataImportsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1.ListMetadataImportsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|getMetadataImport}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef GetMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1.MetadataImport} [response] MetadataImport
                         */
    
                        /**
                         * Calls GetMetadataImport.
                         * @function getMetadataImport
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IGetMetadataImportRequest} request GetMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.GetMetadataImportCallback} callback Node-style callback called with the error, if any, and MetadataImport
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getMetadataImport = function getMetadataImport(request, callback) {
                            return this.rpcCall(getMetadataImport, $root.google.cloud.metastore.v1.GetMetadataImportRequest, $root.google.cloud.metastore.v1.MetadataImport, request, callback);
                        }, "name", { value: "GetMetadataImport" });
    
                        /**
                         * Calls GetMetadataImport.
                         * @function getMetadataImport
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IGetMetadataImportRequest} request GetMetadataImportRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1.MetadataImport>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|createMetadataImport}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef CreateMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateMetadataImport.
                         * @function createMetadataImport
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.ICreateMetadataImportRequest} request CreateMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.CreateMetadataImportCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createMetadataImport = function createMetadataImport(request, callback) {
                            return this.rpcCall(createMetadataImport, $root.google.cloud.metastore.v1.CreateMetadataImportRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateMetadataImport" });
    
                        /**
                         * Calls CreateMetadataImport.
                         * @function createMetadataImport
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.ICreateMetadataImportRequest} request CreateMetadataImportRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|updateMetadataImport}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef UpdateMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateMetadataImport.
                         * @function updateMetadataImport
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IUpdateMetadataImportRequest} request UpdateMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.UpdateMetadataImportCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.updateMetadataImport = function updateMetadataImport(request, callback) {
                            return this.rpcCall(updateMetadataImport, $root.google.cloud.metastore.v1.UpdateMetadataImportRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateMetadataImport" });
    
                        /**
                         * Calls UpdateMetadataImport.
                         * @function updateMetadataImport
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IUpdateMetadataImportRequest} request UpdateMetadataImportRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|exportMetadata}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef ExportMetadataCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ExportMetadata.
                         * @function exportMetadata
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IExportMetadataRequest} request ExportMetadataRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.ExportMetadataCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.exportMetadata = function exportMetadata(request, callback) {
                            return this.rpcCall(exportMetadata, $root.google.cloud.metastore.v1.ExportMetadataRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ExportMetadata" });
    
                        /**
                         * Calls ExportMetadata.
                         * @function exportMetadata
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IExportMetadataRequest} request ExportMetadataRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|restoreService}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef RestoreServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RestoreService.
                         * @function restoreService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IRestoreServiceRequest} request RestoreServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.RestoreServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.restoreService = function restoreService(request, callback) {
                            return this.rpcCall(restoreService, $root.google.cloud.metastore.v1.RestoreServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RestoreService" });
    
                        /**
                         * Calls RestoreService.
                         * @function restoreService
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IRestoreServiceRequest} request RestoreServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|listBackups}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef ListBackupsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1.ListBackupsResponse} [response] ListBackupsResponse
                         */
    
                        /**
                         * Calls ListBackups.
                         * @function listBackups
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IListBackupsRequest} request ListBackupsRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.ListBackupsCallback} callback Node-style callback called with the error, if any, and ListBackupsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listBackups = function listBackups(request, callback) {
                            return this.rpcCall(listBackups, $root.google.cloud.metastore.v1.ListBackupsRequest, $root.google.cloud.metastore.v1.ListBackupsResponse, request, callback);
                        }, "name", { value: "ListBackups" });
    
                        /**
                         * Calls ListBackups.
                         * @function listBackups
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IListBackupsRequest} request ListBackupsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1.ListBackupsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|getBackup}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef GetBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1.Backup} [response] Backup
                         */
    
                        /**
                         * Calls GetBackup.
                         * @function getBackup
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IGetBackupRequest} request GetBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.GetBackupCallback} callback Node-style callback called with the error, if any, and Backup
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getBackup = function getBackup(request, callback) {
                            return this.rpcCall(getBackup, $root.google.cloud.metastore.v1.GetBackupRequest, $root.google.cloud.metastore.v1.Backup, request, callback);
                        }, "name", { value: "GetBackup" });
    
                        /**
                         * Calls GetBackup.
                         * @function getBackup
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IGetBackupRequest} request GetBackupRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1.Backup>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|createBackup}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef CreateBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateBackup.
                         * @function createBackup
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.ICreateBackupRequest} request CreateBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.CreateBackupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createBackup = function createBackup(request, callback) {
                            return this.rpcCall(createBackup, $root.google.cloud.metastore.v1.CreateBackupRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateBackup" });
    
                        /**
                         * Calls CreateBackup.
                         * @function createBackup
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.ICreateBackupRequest} request CreateBackupRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastore|deleteBackup}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @typedef DeleteBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteBackup.
                         * @function deleteBackup
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IDeleteBackupRequest} request DeleteBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastore.DeleteBackupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.deleteBackup = function deleteBackup(request, callback) {
                            return this.rpcCall(deleteBackup, $root.google.cloud.metastore.v1.DeleteBackupRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteBackup" });
    
                        /**
                         * Calls DeleteBackup.
                         * @function deleteBackup
                         * @memberof google.cloud.metastore.v1.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1.IDeleteBackupRequest} request DeleteBackupRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return DataprocMetastore;
                    })();
    
                    v1.Service = (function() {
    
                        /**
                         * Properties of a Service.
                         * @memberof google.cloud.metastore.v1
                         * @interface IService
                         * @property {google.cloud.metastore.v1.IHiveMetastoreConfig|null} [hiveMetastoreConfig] Service hiveMetastoreConfig
                         * @property {string|null} [name] Service name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Service createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Service updateTime
                         * @property {Object.<string,string>|null} [labels] Service labels
                         * @property {string|null} [network] Service network
                         * @property {string|null} [endpointUri] Service endpointUri
                         * @property {number|null} [port] Service port
                         * @property {google.cloud.metastore.v1.Service.State|null} [state] Service state
                         * @property {string|null} [stateMessage] Service stateMessage
                         * @property {string|null} [artifactGcsUri] Service artifactGcsUri
                         * @property {google.cloud.metastore.v1.Service.Tier|null} [tier] Service tier
                         * @property {google.cloud.metastore.v1.IMaintenanceWindow|null} [maintenanceWindow] Service maintenanceWindow
                         * @property {string|null} [uid] Service uid
                         * @property {google.cloud.metastore.v1.IMetadataManagementActivity|null} [metadataManagementActivity] Service metadataManagementActivity
                         * @property {google.cloud.metastore.v1.Service.ReleaseChannel|null} [releaseChannel] Service releaseChannel
                         * @property {google.cloud.metastore.v1.IEncryptionConfig|null} [encryptionConfig] Service encryptionConfig
                         * @property {google.cloud.metastore.v1.INetworkConfig|null} [networkConfig] Service networkConfig
                         * @property {google.cloud.metastore.v1.Service.DatabaseType|null} [databaseType] Service databaseType
                         * @property {google.cloud.metastore.v1.ITelemetryConfig|null} [telemetryConfig] Service telemetryConfig
                         */
    
                        /**
                         * Constructs a new Service.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a Service.
                         * @implements IService
                         * @constructor
                         * @param {google.cloud.metastore.v1.IService=} [properties] Properties to set
                         */
                        function Service(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Service hiveMetastoreConfig.
                         * @member {google.cloud.metastore.v1.IHiveMetastoreConfig|null|undefined} hiveMetastoreConfig
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.hiveMetastoreConfig = null;
    
                        /**
                         * Service name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.name = "";
    
                        /**
                         * Service createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.createTime = null;
    
                        /**
                         * Service updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.updateTime = null;
    
                        /**
                         * Service labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.labels = $util.emptyObject;
    
                        /**
                         * Service network.
                         * @member {string} network
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.network = "";
    
                        /**
                         * Service endpointUri.
                         * @member {string} endpointUri
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.endpointUri = "";
    
                        /**
                         * Service port.
                         * @member {number} port
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.port = 0;
    
                        /**
                         * Service state.
                         * @member {google.cloud.metastore.v1.Service.State} state
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.state = 0;
    
                        /**
                         * Service stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.stateMessage = "";
    
                        /**
                         * Service artifactGcsUri.
                         * @member {string} artifactGcsUri
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.artifactGcsUri = "";
    
                        /**
                         * Service tier.
                         * @member {google.cloud.metastore.v1.Service.Tier} tier
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.tier = 0;
    
                        /**
                         * Service maintenanceWindow.
                         * @member {google.cloud.metastore.v1.IMaintenanceWindow|null|undefined} maintenanceWindow
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.maintenanceWindow = null;
    
                        /**
                         * Service uid.
                         * @member {string} uid
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.uid = "";
    
                        /**
                         * Service metadataManagementActivity.
                         * @member {google.cloud.metastore.v1.IMetadataManagementActivity|null|undefined} metadataManagementActivity
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.metadataManagementActivity = null;
    
                        /**
                         * Service releaseChannel.
                         * @member {google.cloud.metastore.v1.Service.ReleaseChannel} releaseChannel
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.releaseChannel = 0;
    
                        /**
                         * Service encryptionConfig.
                         * @member {google.cloud.metastore.v1.IEncryptionConfig|null|undefined} encryptionConfig
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.encryptionConfig = null;
    
                        /**
                         * Service networkConfig.
                         * @member {google.cloud.metastore.v1.INetworkConfig|null|undefined} networkConfig
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.networkConfig = null;
    
                        /**
                         * Service databaseType.
                         * @member {google.cloud.metastore.v1.Service.DatabaseType} databaseType
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.databaseType = 0;
    
                        /**
                         * Service telemetryConfig.
                         * @member {google.cloud.metastore.v1.ITelemetryConfig|null|undefined} telemetryConfig
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Service.prototype.telemetryConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Service metastoreConfig.
                         * @member {"hiveMetastoreConfig"|undefined} metastoreConfig
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         */
                        Object.defineProperty(Service.prototype, "metastoreConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["hiveMetastoreConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Service instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {google.cloud.metastore.v1.IService=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.Service} Service instance
                         */
                        Service.create = function create(properties) {
                            return new Service(properties);
                        };
    
                        /**
                         * Encodes the specified Service message. Does not implicitly {@link google.cloud.metastore.v1.Service.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {google.cloud.metastore.v1.IService} message Service message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Service.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.hiveMetastoreConfig != null && Object.hasOwnProperty.call(message, "hiveMetastoreConfig"))
                                $root.google.cloud.metastore.v1.HiveMetastoreConfig.encode(message.hiveMetastoreConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.network);
                            if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.endpointUri);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.port);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.stateMessage);
                            if (message.artifactGcsUri != null && Object.hasOwnProperty.call(message, "artifactGcsUri"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.artifactGcsUri);
                            if (message.tier != null && Object.hasOwnProperty.call(message, "tier"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.tier);
                            if (message.maintenanceWindow != null && Object.hasOwnProperty.call(message, "maintenanceWindow"))
                                $root.google.cloud.metastore.v1.MaintenanceWindow.encode(message.maintenanceWindow, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.uid);
                            if (message.metadataManagementActivity != null && Object.hasOwnProperty.call(message, "metadataManagementActivity"))
                                $root.google.cloud.metastore.v1.MetadataManagementActivity.encode(message.metadataManagementActivity, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.releaseChannel != null && Object.hasOwnProperty.call(message, "releaseChannel"))
                                writer.uint32(/* id 19, wireType 0 =*/152).int32(message.releaseChannel);
                            if (message.encryptionConfig != null && Object.hasOwnProperty.call(message, "encryptionConfig"))
                                $root.google.cloud.metastore.v1.EncryptionConfig.encode(message.encryptionConfig, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                                $root.google.cloud.metastore.v1.NetworkConfig.encode(message.networkConfig, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.databaseType != null && Object.hasOwnProperty.call(message, "databaseType"))
                                writer.uint32(/* id 22, wireType 0 =*/176).int32(message.databaseType);
                            if (message.telemetryConfig != null && Object.hasOwnProperty.call(message, "telemetryConfig"))
                                $root.google.cloud.metastore.v1.TelemetryConfig.encode(message.telemetryConfig, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Service message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.Service.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {google.cloud.metastore.v1.IService} message Service message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Service.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Service message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.Service} Service
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Service.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.Service(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.hiveMetastoreConfig = $root.google.cloud.metastore.v1.HiveMetastoreConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.network = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.endpointUri = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 10: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.artifactGcsUri = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.tier = reader.int32();
                                        break;
                                    }
                                case 15: {
                                        message.maintenanceWindow = $root.google.cloud.metastore.v1.MaintenanceWindow.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 17: {
                                        message.metadataManagementActivity = $root.google.cloud.metastore.v1.MetadataManagementActivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.releaseChannel = reader.int32();
                                        break;
                                    }
                                case 20: {
                                        message.encryptionConfig = $root.google.cloud.metastore.v1.EncryptionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.networkConfig = $root.google.cloud.metastore.v1.NetworkConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 22: {
                                        message.databaseType = reader.int32();
                                        break;
                                    }
                                case 23: {
                                        message.telemetryConfig = $root.google.cloud.metastore.v1.TelemetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Service message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.Service} Service
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Service.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Service message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Service.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.hiveMetastoreConfig != null && message.hasOwnProperty("hiveMetastoreConfig")) {
                                properties.metastoreConfig = 1;
                                {
                                    var error = $root.google.cloud.metastore.v1.HiveMetastoreConfig.verify(message.hiveMetastoreConfig);
                                    if (error)
                                        return "hiveMetastoreConfig." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                if (!$util.isString(message.network))
                                    return "network: string expected";
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                if (!$util.isString(message.endpointUri))
                                    return "endpointUri: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.artifactGcsUri != null && message.hasOwnProperty("artifactGcsUri"))
                                if (!$util.isString(message.artifactGcsUri))
                                    return "artifactGcsUri: string expected";
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                switch (message.tier) {
                                default:
                                    return "tier: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                    break;
                                }
                            if (message.maintenanceWindow != null && message.hasOwnProperty("maintenanceWindow")) {
                                var error = $root.google.cloud.metastore.v1.MaintenanceWindow.verify(message.maintenanceWindow);
                                if (error)
                                    return "maintenanceWindow." + error;
                            }
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.metadataManagementActivity != null && message.hasOwnProperty("metadataManagementActivity")) {
                                var error = $root.google.cloud.metastore.v1.MetadataManagementActivity.verify(message.metadataManagementActivity);
                                if (error)
                                    return "metadataManagementActivity." + error;
                            }
                            if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel"))
                                switch (message.releaseChannel) {
                                default:
                                    return "releaseChannel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig")) {
                                var error = $root.google.cloud.metastore.v1.EncryptionConfig.verify(message.encryptionConfig);
                                if (error)
                                    return "encryptionConfig." + error;
                            }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                                var error = $root.google.cloud.metastore.v1.NetworkConfig.verify(message.networkConfig);
                                if (error)
                                    return "networkConfig." + error;
                            }
                            if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                switch (message.databaseType) {
                                default:
                                    return "databaseType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.telemetryConfig != null && message.hasOwnProperty("telemetryConfig")) {
                                var error = $root.google.cloud.metastore.v1.TelemetryConfig.verify(message.telemetryConfig);
                                if (error)
                                    return "telemetryConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Service message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.Service} Service
                         */
                        Service.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.Service)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.Service();
                            if (object.hiveMetastoreConfig != null) {
                                if (typeof object.hiveMetastoreConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.hiveMetastoreConfig: object expected");
                                message.hiveMetastoreConfig = $root.google.cloud.metastore.v1.HiveMetastoreConfig.fromObject(object.hiveMetastoreConfig);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.network != null)
                                message.network = String(object.network);
                            if (object.endpointUri != null)
                                message.endpointUri = String(object.endpointUri);
                            if (object.port != null)
                                message.port = object.port | 0;
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "SUSPENDING":
                            case 3:
                                message.state = 3;
                                break;
                            case "SUSPENDED":
                            case 4:
                                message.state = 4;
                                break;
                            case "UPDATING":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETING":
                            case 6:
                                message.state = 6;
                                break;
                            case "ERROR":
                            case 7:
                                message.state = 7;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.artifactGcsUri != null)
                                message.artifactGcsUri = String(object.artifactGcsUri);
                            switch (object.tier) {
                            default:
                                if (typeof object.tier === "number") {
                                    message.tier = object.tier;
                                    break;
                                }
                                break;
                            case "TIER_UNSPECIFIED":
                            case 0:
                                message.tier = 0;
                                break;
                            case "DEVELOPER":
                            case 1:
                                message.tier = 1;
                                break;
                            case "ENTERPRISE":
                            case 3:
                                message.tier = 3;
                                break;
                            }
                            if (object.maintenanceWindow != null) {
                                if (typeof object.maintenanceWindow !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.maintenanceWindow: object expected");
                                message.maintenanceWindow = $root.google.cloud.metastore.v1.MaintenanceWindow.fromObject(object.maintenanceWindow);
                            }
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.metadataManagementActivity != null) {
                                if (typeof object.metadataManagementActivity !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.metadataManagementActivity: object expected");
                                message.metadataManagementActivity = $root.google.cloud.metastore.v1.MetadataManagementActivity.fromObject(object.metadataManagementActivity);
                            }
                            switch (object.releaseChannel) {
                            default:
                                if (typeof object.releaseChannel === "number") {
                                    message.releaseChannel = object.releaseChannel;
                                    break;
                                }
                                break;
                            case "RELEASE_CHANNEL_UNSPECIFIED":
                            case 0:
                                message.releaseChannel = 0;
                                break;
                            case "CANARY":
                            case 1:
                                message.releaseChannel = 1;
                                break;
                            case "STABLE":
                            case 2:
                                message.releaseChannel = 2;
                                break;
                            }
                            if (object.encryptionConfig != null) {
                                if (typeof object.encryptionConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.encryptionConfig: object expected");
                                message.encryptionConfig = $root.google.cloud.metastore.v1.EncryptionConfig.fromObject(object.encryptionConfig);
                            }
                            if (object.networkConfig != null) {
                                if (typeof object.networkConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.networkConfig: object expected");
                                message.networkConfig = $root.google.cloud.metastore.v1.NetworkConfig.fromObject(object.networkConfig);
                            }
                            switch (object.databaseType) {
                            default:
                                if (typeof object.databaseType === "number") {
                                    message.databaseType = object.databaseType;
                                    break;
                                }
                                break;
                            case "DATABASE_TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseType = 1;
                                break;
                            case "SPANNER":
                            case 2:
                                message.databaseType = 2;
                                break;
                            }
                            if (object.telemetryConfig != null) {
                                if (typeof object.telemetryConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Service.telemetryConfig: object expected");
                                message.telemetryConfig = $root.google.cloud.metastore.v1.TelemetryConfig.fromObject(object.telemetryConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Service message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {google.cloud.metastore.v1.Service} message Service
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Service.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.network = "";
                                object.endpointUri = "";
                                object.port = 0;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.artifactGcsUri = "";
                                object.tier = options.enums === String ? "TIER_UNSPECIFIED" : 0;
                                object.maintenanceWindow = null;
                                object.uid = "";
                                object.metadataManagementActivity = null;
                                object.releaseChannel = options.enums === String ? "RELEASE_CHANNEL_UNSPECIFIED" : 0;
                                object.encryptionConfig = null;
                                object.networkConfig = null;
                                object.databaseType = options.enums === String ? "DATABASE_TYPE_UNSPECIFIED" : 0;
                                object.telemetryConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.hiveMetastoreConfig != null && message.hasOwnProperty("hiveMetastoreConfig")) {
                                object.hiveMetastoreConfig = $root.google.cloud.metastore.v1.HiveMetastoreConfig.toObject(message.hiveMetastoreConfig, options);
                                if (options.oneofs)
                                    object.metastoreConfig = "hiveMetastoreConfig";
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                object.network = message.network;
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                object.endpointUri = message.endpointUri;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1.Service.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1.Service.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.artifactGcsUri != null && message.hasOwnProperty("artifactGcsUri"))
                                object.artifactGcsUri = message.artifactGcsUri;
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                object.tier = options.enums === String ? $root.google.cloud.metastore.v1.Service.Tier[message.tier] === undefined ? message.tier : $root.google.cloud.metastore.v1.Service.Tier[message.tier] : message.tier;
                            if (message.maintenanceWindow != null && message.hasOwnProperty("maintenanceWindow"))
                                object.maintenanceWindow = $root.google.cloud.metastore.v1.MaintenanceWindow.toObject(message.maintenanceWindow, options);
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.metadataManagementActivity != null && message.hasOwnProperty("metadataManagementActivity"))
                                object.metadataManagementActivity = $root.google.cloud.metastore.v1.MetadataManagementActivity.toObject(message.metadataManagementActivity, options);
                            if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel"))
                                object.releaseChannel = options.enums === String ? $root.google.cloud.metastore.v1.Service.ReleaseChannel[message.releaseChannel] === undefined ? message.releaseChannel : $root.google.cloud.metastore.v1.Service.ReleaseChannel[message.releaseChannel] : message.releaseChannel;
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig"))
                                object.encryptionConfig = $root.google.cloud.metastore.v1.EncryptionConfig.toObject(message.encryptionConfig, options);
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                                object.networkConfig = $root.google.cloud.metastore.v1.NetworkConfig.toObject(message.networkConfig, options);
                            if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                object.databaseType = options.enums === String ? $root.google.cloud.metastore.v1.Service.DatabaseType[message.databaseType] === undefined ? message.databaseType : $root.google.cloud.metastore.v1.Service.DatabaseType[message.databaseType] : message.databaseType;
                            if (message.telemetryConfig != null && message.hasOwnProperty("telemetryConfig"))
                                object.telemetryConfig = $root.google.cloud.metastore.v1.TelemetryConfig.toObject(message.telemetryConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this Service to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.Service
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Service.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Service
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.Service
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Service.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.Service";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1.Service.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} SUSPENDING=3 SUSPENDING value
                         * @property {number} SUSPENDED=4 SUSPENDED value
                         * @property {number} UPDATING=5 UPDATING value
                         * @property {number} DELETING=6 DELETING value
                         * @property {number} ERROR=7 ERROR value
                         */
                        Service.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "SUSPENDING"] = 3;
                            values[valuesById[4] = "SUSPENDED"] = 4;
                            values[valuesById[5] = "UPDATING"] = 5;
                            values[valuesById[6] = "DELETING"] = 6;
                            values[valuesById[7] = "ERROR"] = 7;
                            return values;
                        })();
    
                        /**
                         * Tier enum.
                         * @name google.cloud.metastore.v1.Service.Tier
                         * @enum {number}
                         * @property {number} TIER_UNSPECIFIED=0 TIER_UNSPECIFIED value
                         * @property {number} DEVELOPER=1 DEVELOPER value
                         * @property {number} ENTERPRISE=3 ENTERPRISE value
                         */
                        Service.Tier = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TIER_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEVELOPER"] = 1;
                            values[valuesById[3] = "ENTERPRISE"] = 3;
                            return values;
                        })();
    
                        /**
                         * ReleaseChannel enum.
                         * @name google.cloud.metastore.v1.Service.ReleaseChannel
                         * @enum {number}
                         * @property {number} RELEASE_CHANNEL_UNSPECIFIED=0 RELEASE_CHANNEL_UNSPECIFIED value
                         * @property {number} CANARY=1 CANARY value
                         * @property {number} STABLE=2 STABLE value
                         */
                        Service.ReleaseChannel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RELEASE_CHANNEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CANARY"] = 1;
                            values[valuesById[2] = "STABLE"] = 2;
                            return values;
                        })();
    
                        /**
                         * DatabaseType enum.
                         * @name google.cloud.metastore.v1.Service.DatabaseType
                         * @enum {number}
                         * @property {number} DATABASE_TYPE_UNSPECIFIED=0 DATABASE_TYPE_UNSPECIFIED value
                         * @property {number} MYSQL=1 MYSQL value
                         * @property {number} SPANNER=2 SPANNER value
                         */
                        Service.DatabaseType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DATABASE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MYSQL"] = 1;
                            values[valuesById[2] = "SPANNER"] = 2;
                            return values;
                        })();
    
                        return Service;
                    })();
    
                    v1.MaintenanceWindow = (function() {
    
                        /**
                         * Properties of a MaintenanceWindow.
                         * @memberof google.cloud.metastore.v1
                         * @interface IMaintenanceWindow
                         * @property {google.protobuf.IInt32Value|null} [hourOfDay] MaintenanceWindow hourOfDay
                         * @property {google.type.DayOfWeek|null} [dayOfWeek] MaintenanceWindow dayOfWeek
                         */
    
                        /**
                         * Constructs a new MaintenanceWindow.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a MaintenanceWindow.
                         * @implements IMaintenanceWindow
                         * @constructor
                         * @param {google.cloud.metastore.v1.IMaintenanceWindow=} [properties] Properties to set
                         */
                        function MaintenanceWindow(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MaintenanceWindow hourOfDay.
                         * @member {google.protobuf.IInt32Value|null|undefined} hourOfDay
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.hourOfDay = null;
    
                        /**
                         * MaintenanceWindow dayOfWeek.
                         * @member {google.type.DayOfWeek} dayOfWeek
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.dayOfWeek = 0;
    
                        /**
                         * Creates a new MaintenanceWindow instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1.IMaintenanceWindow=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.MaintenanceWindow} MaintenanceWindow instance
                         */
                        MaintenanceWindow.create = function create(properties) {
                            return new MaintenanceWindow(properties);
                        };
    
                        /**
                         * Encodes the specified MaintenanceWindow message. Does not implicitly {@link google.cloud.metastore.v1.MaintenanceWindow.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MaintenanceWindow.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hourOfDay != null && Object.hasOwnProperty.call(message, "hourOfDay"))
                                $root.google.protobuf.Int32Value.encode(message.hourOfDay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dayOfWeek != null && Object.hasOwnProperty.call(message, "dayOfWeek"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dayOfWeek);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MaintenanceWindow message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.MaintenanceWindow.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MaintenanceWindow.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MaintenanceWindow message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.MaintenanceWindow} MaintenanceWindow
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MaintenanceWindow.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.MaintenanceWindow();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hourOfDay = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dayOfWeek = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MaintenanceWindow message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.MaintenanceWindow} MaintenanceWindow
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MaintenanceWindow.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MaintenanceWindow message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MaintenanceWindow.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hourOfDay != null && message.hasOwnProperty("hourOfDay")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.hourOfDay);
                                if (error)
                                    return "hourOfDay." + error;
                            }
                            if (message.dayOfWeek != null && message.hasOwnProperty("dayOfWeek"))
                                switch (message.dayOfWeek) {
                                default:
                                    return "dayOfWeek: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MaintenanceWindow message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.MaintenanceWindow} MaintenanceWindow
                         */
                        MaintenanceWindow.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.MaintenanceWindow)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.MaintenanceWindow();
                            if (object.hourOfDay != null) {
                                if (typeof object.hourOfDay !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.MaintenanceWindow.hourOfDay: object expected");
                                message.hourOfDay = $root.google.protobuf.Int32Value.fromObject(object.hourOfDay);
                            }
                            switch (object.dayOfWeek) {
                            default:
                                if (typeof object.dayOfWeek === "number") {
                                    message.dayOfWeek = object.dayOfWeek;
                                    break;
                                }
                                break;
                            case "DAY_OF_WEEK_UNSPECIFIED":
                            case 0:
                                message.dayOfWeek = 0;
                                break;
                            case "MONDAY":
                            case 1:
                                message.dayOfWeek = 1;
                                break;
                            case "TUESDAY":
                            case 2:
                                message.dayOfWeek = 2;
                                break;
                            case "WEDNESDAY":
                            case 3:
                                message.dayOfWeek = 3;
                                break;
                            case "THURSDAY":
                            case 4:
                                message.dayOfWeek = 4;
                                break;
                            case "FRIDAY":
                            case 5:
                                message.dayOfWeek = 5;
                                break;
                            case "SATURDAY":
                            case 6:
                                message.dayOfWeek = 6;
                                break;
                            case "SUNDAY":
                            case 7:
                                message.dayOfWeek = 7;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MaintenanceWindow message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1.MaintenanceWindow} message MaintenanceWindow
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MaintenanceWindow.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hourOfDay = null;
                                object.dayOfWeek = options.enums === String ? "DAY_OF_WEEK_UNSPECIFIED" : 0;
                            }
                            if (message.hourOfDay != null && message.hasOwnProperty("hourOfDay"))
                                object.hourOfDay = $root.google.protobuf.Int32Value.toObject(message.hourOfDay, options);
                            if (message.dayOfWeek != null && message.hasOwnProperty("dayOfWeek"))
                                object.dayOfWeek = options.enums === String ? $root.google.type.DayOfWeek[message.dayOfWeek] === undefined ? message.dayOfWeek : $root.google.type.DayOfWeek[message.dayOfWeek] : message.dayOfWeek;
                            return object;
                        };
    
                        /**
                         * Converts this MaintenanceWindow to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MaintenanceWindow.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MaintenanceWindow
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.MaintenanceWindow
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MaintenanceWindow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.MaintenanceWindow";
                        };
    
                        return MaintenanceWindow;
                    })();
    
                    v1.HiveMetastoreConfig = (function() {
    
                        /**
                         * Properties of a HiveMetastoreConfig.
                         * @memberof google.cloud.metastore.v1
                         * @interface IHiveMetastoreConfig
                         * @property {string|null} [version] HiveMetastoreConfig version
                         * @property {Object.<string,string>|null} [configOverrides] HiveMetastoreConfig configOverrides
                         * @property {google.cloud.metastore.v1.IKerberosConfig|null} [kerberosConfig] HiveMetastoreConfig kerberosConfig
                         */
    
                        /**
                         * Constructs a new HiveMetastoreConfig.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a HiveMetastoreConfig.
                         * @implements IHiveMetastoreConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1.IHiveMetastoreConfig=} [properties] Properties to set
                         */
                        function HiveMetastoreConfig(properties) {
                            this.configOverrides = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HiveMetastoreConfig version.
                         * @member {string} version
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.version = "";
    
                        /**
                         * HiveMetastoreConfig configOverrides.
                         * @member {Object.<string,string>} configOverrides
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.configOverrides = $util.emptyObject;
    
                        /**
                         * HiveMetastoreConfig kerberosConfig.
                         * @member {google.cloud.metastore.v1.IKerberosConfig|null|undefined} kerberosConfig
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.kerberosConfig = null;
    
                        /**
                         * Creates a new HiveMetastoreConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IHiveMetastoreConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.HiveMetastoreConfig} HiveMetastoreConfig instance
                         */
                        HiveMetastoreConfig.create = function create(properties) {
                            return new HiveMetastoreConfig(properties);
                        };
    
                        /**
                         * Encodes the specified HiveMetastoreConfig message. Does not implicitly {@link google.cloud.metastore.v1.HiveMetastoreConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IHiveMetastoreConfig} message HiveMetastoreConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HiveMetastoreConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                            if (message.configOverrides != null && Object.hasOwnProperty.call(message, "configOverrides"))
                                for (var keys = Object.keys(message.configOverrides), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.configOverrides[keys[i]]).ldelim();
                            if (message.kerberosConfig != null && Object.hasOwnProperty.call(message, "kerberosConfig"))
                                $root.google.cloud.metastore.v1.KerberosConfig.encode(message.kerberosConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HiveMetastoreConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.HiveMetastoreConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IHiveMetastoreConfig} message HiveMetastoreConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HiveMetastoreConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HiveMetastoreConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.HiveMetastoreConfig} HiveMetastoreConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HiveMetastoreConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.HiveMetastoreConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.configOverrides === $util.emptyObject)
                                            message.configOverrides = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.configOverrides[key] = value;
                                        break;
                                    }
                                case 3: {
                                        message.kerberosConfig = $root.google.cloud.metastore.v1.KerberosConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HiveMetastoreConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.HiveMetastoreConfig} HiveMetastoreConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HiveMetastoreConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HiveMetastoreConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HiveMetastoreConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.configOverrides != null && message.hasOwnProperty("configOverrides")) {
                                if (!$util.isObject(message.configOverrides))
                                    return "configOverrides: object expected";
                                var key = Object.keys(message.configOverrides);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.configOverrides[key[i]]))
                                        return "configOverrides: string{k:string} expected";
                            }
                            if (message.kerberosConfig != null && message.hasOwnProperty("kerberosConfig")) {
                                var error = $root.google.cloud.metastore.v1.KerberosConfig.verify(message.kerberosConfig);
                                if (error)
                                    return "kerberosConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HiveMetastoreConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.HiveMetastoreConfig} HiveMetastoreConfig
                         */
                        HiveMetastoreConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.HiveMetastoreConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.HiveMetastoreConfig();
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.configOverrides) {
                                if (typeof object.configOverrides !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.HiveMetastoreConfig.configOverrides: object expected");
                                message.configOverrides = {};
                                for (var keys = Object.keys(object.configOverrides), i = 0; i < keys.length; ++i)
                                    message.configOverrides[keys[i]] = String(object.configOverrides[keys[i]]);
                            }
                            if (object.kerberosConfig != null) {
                                if (typeof object.kerberosConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.HiveMetastoreConfig.kerberosConfig: object expected");
                                message.kerberosConfig = $root.google.cloud.metastore.v1.KerberosConfig.fromObject(object.kerberosConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HiveMetastoreConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1.HiveMetastoreConfig} message HiveMetastoreConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HiveMetastoreConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.configOverrides = {};
                            if (options.defaults) {
                                object.version = "";
                                object.kerberosConfig = null;
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            var keys2;
                            if (message.configOverrides && (keys2 = Object.keys(message.configOverrides)).length) {
                                object.configOverrides = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.configOverrides[keys2[j]] = message.configOverrides[keys2[j]];
                            }
                            if (message.kerberosConfig != null && message.hasOwnProperty("kerberosConfig"))
                                object.kerberosConfig = $root.google.cloud.metastore.v1.KerberosConfig.toObject(message.kerberosConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this HiveMetastoreConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HiveMetastoreConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HiveMetastoreConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.HiveMetastoreConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HiveMetastoreConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.HiveMetastoreConfig";
                        };
    
                        return HiveMetastoreConfig;
                    })();
    
                    v1.KerberosConfig = (function() {
    
                        /**
                         * Properties of a KerberosConfig.
                         * @memberof google.cloud.metastore.v1
                         * @interface IKerberosConfig
                         * @property {google.cloud.metastore.v1.ISecret|null} [keytab] KerberosConfig keytab
                         * @property {string|null} [principal] KerberosConfig principal
                         * @property {string|null} [krb5ConfigGcsUri] KerberosConfig krb5ConfigGcsUri
                         */
    
                        /**
                         * Constructs a new KerberosConfig.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a KerberosConfig.
                         * @implements IKerberosConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1.IKerberosConfig=} [properties] Properties to set
                         */
                        function KerberosConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KerberosConfig keytab.
                         * @member {google.cloud.metastore.v1.ISecret|null|undefined} keytab
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.keytab = null;
    
                        /**
                         * KerberosConfig principal.
                         * @member {string} principal
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.principal = "";
    
                        /**
                         * KerberosConfig krb5ConfigGcsUri.
                         * @member {string} krb5ConfigGcsUri
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.krb5ConfigGcsUri = "";
    
                        /**
                         * Creates a new KerberosConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IKerberosConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.KerberosConfig} KerberosConfig instance
                         */
                        KerberosConfig.create = function create(properties) {
                            return new KerberosConfig(properties);
                        };
    
                        /**
                         * Encodes the specified KerberosConfig message. Does not implicitly {@link google.cloud.metastore.v1.KerberosConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IKerberosConfig} message KerberosConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KerberosConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.keytab != null && Object.hasOwnProperty.call(message, "keytab"))
                                $root.google.cloud.metastore.v1.Secret.encode(message.keytab, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.principal != null && Object.hasOwnProperty.call(message, "principal"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.principal);
                            if (message.krb5ConfigGcsUri != null && Object.hasOwnProperty.call(message, "krb5ConfigGcsUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.krb5ConfigGcsUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KerberosConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.KerberosConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IKerberosConfig} message KerberosConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KerberosConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KerberosConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.KerberosConfig} KerberosConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KerberosConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.KerberosConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.keytab = $root.google.cloud.metastore.v1.Secret.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.principal = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.krb5ConfigGcsUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KerberosConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.KerberosConfig} KerberosConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KerberosConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KerberosConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KerberosConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.keytab != null && message.hasOwnProperty("keytab")) {
                                var error = $root.google.cloud.metastore.v1.Secret.verify(message.keytab);
                                if (error)
                                    return "keytab." + error;
                            }
                            if (message.principal != null && message.hasOwnProperty("principal"))
                                if (!$util.isString(message.principal))
                                    return "principal: string expected";
                            if (message.krb5ConfigGcsUri != null && message.hasOwnProperty("krb5ConfigGcsUri"))
                                if (!$util.isString(message.krb5ConfigGcsUri))
                                    return "krb5ConfigGcsUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a KerberosConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.KerberosConfig} KerberosConfig
                         */
                        KerberosConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.KerberosConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.KerberosConfig();
                            if (object.keytab != null) {
                                if (typeof object.keytab !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.KerberosConfig.keytab: object expected");
                                message.keytab = $root.google.cloud.metastore.v1.Secret.fromObject(object.keytab);
                            }
                            if (object.principal != null)
                                message.principal = String(object.principal);
                            if (object.krb5ConfigGcsUri != null)
                                message.krb5ConfigGcsUri = String(object.krb5ConfigGcsUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KerberosConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1.KerberosConfig} message KerberosConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KerberosConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.keytab = null;
                                object.principal = "";
                                object.krb5ConfigGcsUri = "";
                            }
                            if (message.keytab != null && message.hasOwnProperty("keytab"))
                                object.keytab = $root.google.cloud.metastore.v1.Secret.toObject(message.keytab, options);
                            if (message.principal != null && message.hasOwnProperty("principal"))
                                object.principal = message.principal;
                            if (message.krb5ConfigGcsUri != null && message.hasOwnProperty("krb5ConfigGcsUri"))
                                object.krb5ConfigGcsUri = message.krb5ConfigGcsUri;
                            return object;
                        };
    
                        /**
                         * Converts this KerberosConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KerberosConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for KerberosConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.KerberosConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        KerberosConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.KerberosConfig";
                        };
    
                        return KerberosConfig;
                    })();
    
                    v1.Secret = (function() {
    
                        /**
                         * Properties of a Secret.
                         * @memberof google.cloud.metastore.v1
                         * @interface ISecret
                         * @property {string|null} [cloudSecret] Secret cloudSecret
                         */
    
                        /**
                         * Constructs a new Secret.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a Secret.
                         * @implements ISecret
                         * @constructor
                         * @param {google.cloud.metastore.v1.ISecret=} [properties] Properties to set
                         */
                        function Secret(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Secret cloudSecret.
                         * @member {string|null|undefined} cloudSecret
                         * @memberof google.cloud.metastore.v1.Secret
                         * @instance
                         */
                        Secret.prototype.cloudSecret = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Secret value.
                         * @member {"cloudSecret"|undefined} value
                         * @memberof google.cloud.metastore.v1.Secret
                         * @instance
                         */
                        Object.defineProperty(Secret.prototype, "value", {
                            get: $util.oneOfGetter($oneOfFields = ["cloudSecret"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Secret instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {google.cloud.metastore.v1.ISecret=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.Secret} Secret instance
                         */
                        Secret.create = function create(properties) {
                            return new Secret(properties);
                        };
    
                        /**
                         * Encodes the specified Secret message. Does not implicitly {@link google.cloud.metastore.v1.Secret.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {google.cloud.metastore.v1.ISecret} message Secret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secret.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cloudSecret != null && Object.hasOwnProperty.call(message, "cloudSecret"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.cloudSecret);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Secret message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.Secret.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {google.cloud.metastore.v1.ISecret} message Secret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secret.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Secret message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.Secret} Secret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secret.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.Secret();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.cloudSecret = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Secret message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.Secret} Secret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secret.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Secret message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Secret.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.cloudSecret != null && message.hasOwnProperty("cloudSecret")) {
                                properties.value = 1;
                                if (!$util.isString(message.cloudSecret))
                                    return "cloudSecret: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Secret message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.Secret} Secret
                         */
                        Secret.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.Secret)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.Secret();
                            if (object.cloudSecret != null)
                                message.cloudSecret = String(object.cloudSecret);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Secret message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {google.cloud.metastore.v1.Secret} message Secret
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Secret.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.cloudSecret != null && message.hasOwnProperty("cloudSecret")) {
                                object.cloudSecret = message.cloudSecret;
                                if (options.oneofs)
                                    object.value = "cloudSecret";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Secret to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.Secret
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Secret.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Secret
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.Secret
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Secret.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.Secret";
                        };
    
                        return Secret;
                    })();
    
                    v1.EncryptionConfig = (function() {
    
                        /**
                         * Properties of an EncryptionConfig.
                         * @memberof google.cloud.metastore.v1
                         * @interface IEncryptionConfig
                         * @property {string|null} [kmsKey] EncryptionConfig kmsKey
                         */
    
                        /**
                         * Constructs a new EncryptionConfig.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents an EncryptionConfig.
                         * @implements IEncryptionConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1.IEncryptionConfig=} [properties] Properties to set
                         */
                        function EncryptionConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EncryptionConfig kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @instance
                         */
                        EncryptionConfig.prototype.kmsKey = "";
    
                        /**
                         * Creates a new EncryptionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IEncryptionConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.EncryptionConfig} EncryptionConfig instance
                         */
                        EncryptionConfig.create = function create(properties) {
                            return new EncryptionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message. Does not implicitly {@link google.cloud.metastore.v1.EncryptionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kmsKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.EncryptionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.EncryptionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EncryptionConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EncryptionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EncryptionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.EncryptionConfig} EncryptionConfig
                         */
                        EncryptionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.EncryptionConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.EncryptionConfig();
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EncryptionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1.EncryptionConfig} message EncryptionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EncryptionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.kmsKey = "";
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            return object;
                        };
    
                        /**
                         * Converts this EncryptionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EncryptionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EncryptionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.EncryptionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EncryptionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.EncryptionConfig";
                        };
    
                        return EncryptionConfig;
                    })();
    
                    v1.NetworkConfig = (function() {
    
                        /**
                         * Properties of a NetworkConfig.
                         * @memberof google.cloud.metastore.v1
                         * @interface INetworkConfig
                         * @property {Array.<google.cloud.metastore.v1.NetworkConfig.IConsumer>|null} [consumers] NetworkConfig consumers
                         */
    
                        /**
                         * Constructs a new NetworkConfig.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a NetworkConfig.
                         * @implements INetworkConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1.INetworkConfig=} [properties] Properties to set
                         */
                        function NetworkConfig(properties) {
                            this.consumers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NetworkConfig consumers.
                         * @member {Array.<google.cloud.metastore.v1.NetworkConfig.IConsumer>} consumers
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @instance
                         */
                        NetworkConfig.prototype.consumers = $util.emptyArray;
    
                        /**
                         * Creates a new NetworkConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1.INetworkConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.NetworkConfig} NetworkConfig instance
                         */
                        NetworkConfig.create = function create(properties) {
                            return new NetworkConfig(properties);
                        };
    
                        /**
                         * Encodes the specified NetworkConfig message. Does not implicitly {@link google.cloud.metastore.v1.NetworkConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1.INetworkConfig} message NetworkConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.consumers != null && message.consumers.length)
                                for (var i = 0; i < message.consumers.length; ++i)
                                    $root.google.cloud.metastore.v1.NetworkConfig.Consumer.encode(message.consumers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NetworkConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.NetworkConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1.INetworkConfig} message NetworkConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NetworkConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.NetworkConfig} NetworkConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.NetworkConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.consumers && message.consumers.length))
                                            message.consumers = [];
                                        message.consumers.push($root.google.cloud.metastore.v1.NetworkConfig.Consumer.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NetworkConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.NetworkConfig} NetworkConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NetworkConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NetworkConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.consumers != null && message.hasOwnProperty("consumers")) {
                                if (!Array.isArray(message.consumers))
                                    return "consumers: array expected";
                                for (var i = 0; i < message.consumers.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1.NetworkConfig.Consumer.verify(message.consumers[i]);
                                    if (error)
                                        return "consumers." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NetworkConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.NetworkConfig} NetworkConfig
                         */
                        NetworkConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.NetworkConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.NetworkConfig();
                            if (object.consumers) {
                                if (!Array.isArray(object.consumers))
                                    throw TypeError(".google.cloud.metastore.v1.NetworkConfig.consumers: array expected");
                                message.consumers = [];
                                for (var i = 0; i < object.consumers.length; ++i) {
                                    if (typeof object.consumers[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.NetworkConfig.consumers: object expected");
                                    message.consumers[i] = $root.google.cloud.metastore.v1.NetworkConfig.Consumer.fromObject(object.consumers[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NetworkConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1.NetworkConfig} message NetworkConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NetworkConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.consumers = [];
                            if (message.consumers && message.consumers.length) {
                                object.consumers = [];
                                for (var j = 0; j < message.consumers.length; ++j)
                                    object.consumers[j] = $root.google.cloud.metastore.v1.NetworkConfig.Consumer.toObject(message.consumers[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NetworkConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NetworkConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NetworkConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.NetworkConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NetworkConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.NetworkConfig";
                        };
    
                        NetworkConfig.Consumer = (function() {
    
                            /**
                             * Properties of a Consumer.
                             * @memberof google.cloud.metastore.v1.NetworkConfig
                             * @interface IConsumer
                             * @property {string|null} [subnetwork] Consumer subnetwork
                             * @property {string|null} [endpointUri] Consumer endpointUri
                             */
    
                            /**
                             * Constructs a new Consumer.
                             * @memberof google.cloud.metastore.v1.NetworkConfig
                             * @classdesc Represents a Consumer.
                             * @implements IConsumer
                             * @constructor
                             * @param {google.cloud.metastore.v1.NetworkConfig.IConsumer=} [properties] Properties to set
                             */
                            function Consumer(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Consumer subnetwork.
                             * @member {string|null|undefined} subnetwork
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @instance
                             */
                            Consumer.prototype.subnetwork = null;
    
                            /**
                             * Consumer endpointUri.
                             * @member {string} endpointUri
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @instance
                             */
                            Consumer.prototype.endpointUri = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Consumer vpcResource.
                             * @member {"subnetwork"|undefined} vpcResource
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @instance
                             */
                            Object.defineProperty(Consumer.prototype, "vpcResource", {
                                get: $util.oneOfGetter($oneOfFields = ["subnetwork"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Consumer instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1.NetworkConfig.IConsumer=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1.NetworkConfig.Consumer} Consumer instance
                             */
                            Consumer.create = function create(properties) {
                                return new Consumer(properties);
                            };
    
                            /**
                             * Encodes the specified Consumer message. Does not implicitly {@link google.cloud.metastore.v1.NetworkConfig.Consumer.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1.NetworkConfig.IConsumer} message Consumer message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Consumer.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subnetwork != null && Object.hasOwnProperty.call(message, "subnetwork"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.subnetwork);
                                if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.endpointUri);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Consumer message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.NetworkConfig.Consumer.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1.NetworkConfig.IConsumer} message Consumer message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Consumer.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Consumer message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1.NetworkConfig.Consumer} Consumer
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Consumer.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.NetworkConfig.Consumer();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subnetwork = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.endpointUri = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Consumer message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1.NetworkConfig.Consumer} Consumer
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Consumer.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Consumer message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Consumer.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.subnetwork != null && message.hasOwnProperty("subnetwork")) {
                                    properties.vpcResource = 1;
                                    if (!$util.isString(message.subnetwork))
                                        return "subnetwork: string expected";
                                }
                                if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                    if (!$util.isString(message.endpointUri))
                                        return "endpointUri: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Consumer message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1.NetworkConfig.Consumer} Consumer
                             */
                            Consumer.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1.NetworkConfig.Consumer)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1.NetworkConfig.Consumer();
                                if (object.subnetwork != null)
                                    message.subnetwork = String(object.subnetwork);
                                if (object.endpointUri != null)
                                    message.endpointUri = String(object.endpointUri);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Consumer message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1.NetworkConfig.Consumer} message Consumer
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Consumer.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.endpointUri = "";
                                if (message.subnetwork != null && message.hasOwnProperty("subnetwork")) {
                                    object.subnetwork = message.subnetwork;
                                    if (options.oneofs)
                                        object.vpcResource = "subnetwork";
                                }
                                if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                    object.endpointUri = message.endpointUri;
                                return object;
                            };
    
                            /**
                             * Converts this Consumer to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Consumer.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Consumer
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1.NetworkConfig.Consumer
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Consumer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1.NetworkConfig.Consumer";
                            };
    
                            return Consumer;
                        })();
    
                        return NetworkConfig;
                    })();
    
                    v1.TelemetryConfig = (function() {
    
                        /**
                         * Properties of a TelemetryConfig.
                         * @memberof google.cloud.metastore.v1
                         * @interface ITelemetryConfig
                         * @property {google.cloud.metastore.v1.TelemetryConfig.LogFormat|null} [logFormat] TelemetryConfig logFormat
                         */
    
                        /**
                         * Constructs a new TelemetryConfig.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a TelemetryConfig.
                         * @implements ITelemetryConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1.ITelemetryConfig=} [properties] Properties to set
                         */
                        function TelemetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TelemetryConfig logFormat.
                         * @member {google.cloud.metastore.v1.TelemetryConfig.LogFormat} logFormat
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @instance
                         */
                        TelemetryConfig.prototype.logFormat = 0;
    
                        /**
                         * Creates a new TelemetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1.ITelemetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.TelemetryConfig} TelemetryConfig instance
                         */
                        TelemetryConfig.create = function create(properties) {
                            return new TelemetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified TelemetryConfig message. Does not implicitly {@link google.cloud.metastore.v1.TelemetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1.ITelemetryConfig} message TelemetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TelemetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.logFormat != null && Object.hasOwnProperty.call(message, "logFormat"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.logFormat);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TelemetryConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.TelemetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1.ITelemetryConfig} message TelemetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TelemetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TelemetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.TelemetryConfig} TelemetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TelemetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.TelemetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.logFormat = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TelemetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.TelemetryConfig} TelemetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TelemetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TelemetryConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TelemetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.logFormat != null && message.hasOwnProperty("logFormat"))
                                switch (message.logFormat) {
                                default:
                                    return "logFormat: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a TelemetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.TelemetryConfig} TelemetryConfig
                         */
                        TelemetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.TelemetryConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.TelemetryConfig();
                            switch (object.logFormat) {
                            default:
                                if (typeof object.logFormat === "number") {
                                    message.logFormat = object.logFormat;
                                    break;
                                }
                                break;
                            case "LOG_FORMAT_UNSPECIFIED":
                            case 0:
                                message.logFormat = 0;
                                break;
                            case "LEGACY":
                            case 1:
                                message.logFormat = 1;
                                break;
                            case "JSON":
                            case 2:
                                message.logFormat = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TelemetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1.TelemetryConfig} message TelemetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TelemetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.logFormat = options.enums === String ? "LOG_FORMAT_UNSPECIFIED" : 0;
                            if (message.logFormat != null && message.hasOwnProperty("logFormat"))
                                object.logFormat = options.enums === String ? $root.google.cloud.metastore.v1.TelemetryConfig.LogFormat[message.logFormat] === undefined ? message.logFormat : $root.google.cloud.metastore.v1.TelemetryConfig.LogFormat[message.logFormat] : message.logFormat;
                            return object;
                        };
    
                        /**
                         * Converts this TelemetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TelemetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TelemetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.TelemetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TelemetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.TelemetryConfig";
                        };
    
                        /**
                         * LogFormat enum.
                         * @name google.cloud.metastore.v1.TelemetryConfig.LogFormat
                         * @enum {number}
                         * @property {number} LOG_FORMAT_UNSPECIFIED=0 LOG_FORMAT_UNSPECIFIED value
                         * @property {number} LEGACY=1 LEGACY value
                         * @property {number} JSON=2 JSON value
                         */
                        TelemetryConfig.LogFormat = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LOG_FORMAT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LEGACY"] = 1;
                            values[valuesById[2] = "JSON"] = 2;
                            return values;
                        })();
    
                        return TelemetryConfig;
                    })();
    
                    v1.MetadataManagementActivity = (function() {
    
                        /**
                         * Properties of a MetadataManagementActivity.
                         * @memberof google.cloud.metastore.v1
                         * @interface IMetadataManagementActivity
                         * @property {Array.<google.cloud.metastore.v1.IMetadataExport>|null} [metadataExports] MetadataManagementActivity metadataExports
                         * @property {Array.<google.cloud.metastore.v1.IRestore>|null} [restores] MetadataManagementActivity restores
                         */
    
                        /**
                         * Constructs a new MetadataManagementActivity.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a MetadataManagementActivity.
                         * @implements IMetadataManagementActivity
                         * @constructor
                         * @param {google.cloud.metastore.v1.IMetadataManagementActivity=} [properties] Properties to set
                         */
                        function MetadataManagementActivity(properties) {
                            this.metadataExports = [];
                            this.restores = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataManagementActivity metadataExports.
                         * @member {Array.<google.cloud.metastore.v1.IMetadataExport>} metadataExports
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @instance
                         */
                        MetadataManagementActivity.prototype.metadataExports = $util.emptyArray;
    
                        /**
                         * MetadataManagementActivity restores.
                         * @member {Array.<google.cloud.metastore.v1.IRestore>} restores
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @instance
                         */
                        MetadataManagementActivity.prototype.restores = $util.emptyArray;
    
                        /**
                         * Creates a new MetadataManagementActivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataManagementActivity=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.MetadataManagementActivity} MetadataManagementActivity instance
                         */
                        MetadataManagementActivity.create = function create(properties) {
                            return new MetadataManagementActivity(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataManagementActivity message. Does not implicitly {@link google.cloud.metastore.v1.MetadataManagementActivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataManagementActivity} message MetadataManagementActivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataManagementActivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metadataExports != null && message.metadataExports.length)
                                for (var i = 0; i < message.metadataExports.length; ++i)
                                    $root.google.cloud.metastore.v1.MetadataExport.encode(message.metadataExports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.restores != null && message.restores.length)
                                for (var i = 0; i < message.restores.length; ++i)
                                    $root.google.cloud.metastore.v1.Restore.encode(message.restores[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataManagementActivity message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.MetadataManagementActivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataManagementActivity} message MetadataManagementActivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataManagementActivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataManagementActivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.MetadataManagementActivity} MetadataManagementActivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataManagementActivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.MetadataManagementActivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.metadataExports && message.metadataExports.length))
                                            message.metadataExports = [];
                                        message.metadataExports.push($root.google.cloud.metastore.v1.MetadataExport.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.restores && message.restores.length))
                                            message.restores = [];
                                        message.restores.push($root.google.cloud.metastore.v1.Restore.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataManagementActivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.MetadataManagementActivity} MetadataManagementActivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataManagementActivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataManagementActivity message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataManagementActivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metadataExports != null && message.hasOwnProperty("metadataExports")) {
                                if (!Array.isArray(message.metadataExports))
                                    return "metadataExports: array expected";
                                for (var i = 0; i < message.metadataExports.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1.MetadataExport.verify(message.metadataExports[i]);
                                    if (error)
                                        return "metadataExports." + error;
                                }
                            }
                            if (message.restores != null && message.hasOwnProperty("restores")) {
                                if (!Array.isArray(message.restores))
                                    return "restores: array expected";
                                for (var i = 0; i < message.restores.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1.Restore.verify(message.restores[i]);
                                    if (error)
                                        return "restores." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataManagementActivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.MetadataManagementActivity} MetadataManagementActivity
                         */
                        MetadataManagementActivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.MetadataManagementActivity)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.MetadataManagementActivity();
                            if (object.metadataExports) {
                                if (!Array.isArray(object.metadataExports))
                                    throw TypeError(".google.cloud.metastore.v1.MetadataManagementActivity.metadataExports: array expected");
                                message.metadataExports = [];
                                for (var i = 0; i < object.metadataExports.length; ++i) {
                                    if (typeof object.metadataExports[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.MetadataManagementActivity.metadataExports: object expected");
                                    message.metadataExports[i] = $root.google.cloud.metastore.v1.MetadataExport.fromObject(object.metadataExports[i]);
                                }
                            }
                            if (object.restores) {
                                if (!Array.isArray(object.restores))
                                    throw TypeError(".google.cloud.metastore.v1.MetadataManagementActivity.restores: array expected");
                                message.restores = [];
                                for (var i = 0; i < object.restores.length; ++i) {
                                    if (typeof object.restores[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.MetadataManagementActivity.restores: object expected");
                                    message.restores[i] = $root.google.cloud.metastore.v1.Restore.fromObject(object.restores[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataManagementActivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1.MetadataManagementActivity} message MetadataManagementActivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataManagementActivity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.metadataExports = [];
                                object.restores = [];
                            }
                            if (message.metadataExports && message.metadataExports.length) {
                                object.metadataExports = [];
                                for (var j = 0; j < message.metadataExports.length; ++j)
                                    object.metadataExports[j] = $root.google.cloud.metastore.v1.MetadataExport.toObject(message.metadataExports[j], options);
                            }
                            if (message.restores && message.restores.length) {
                                object.restores = [];
                                for (var j = 0; j < message.restores.length; ++j)
                                    object.restores[j] = $root.google.cloud.metastore.v1.Restore.toObject(message.restores[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MetadataManagementActivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataManagementActivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataManagementActivity
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.MetadataManagementActivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataManagementActivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.MetadataManagementActivity";
                        };
    
                        return MetadataManagementActivity;
                    })();
    
                    v1.MetadataImport = (function() {
    
                        /**
                         * Properties of a MetadataImport.
                         * @memberof google.cloud.metastore.v1
                         * @interface IMetadataImport
                         * @property {google.cloud.metastore.v1.MetadataImport.IDatabaseDump|null} [databaseDump] MetadataImport databaseDump
                         * @property {string|null} [name] MetadataImport name
                         * @property {string|null} [description] MetadataImport description
                         * @property {google.protobuf.ITimestamp|null} [createTime] MetadataImport createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] MetadataImport updateTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] MetadataImport endTime
                         * @property {google.cloud.metastore.v1.MetadataImport.State|null} [state] MetadataImport state
                         */
    
                        /**
                         * Constructs a new MetadataImport.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a MetadataImport.
                         * @implements IMetadataImport
                         * @constructor
                         * @param {google.cloud.metastore.v1.IMetadataImport=} [properties] Properties to set
                         */
                        function MetadataImport(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataImport databaseDump.
                         * @member {google.cloud.metastore.v1.MetadataImport.IDatabaseDump|null|undefined} databaseDump
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.databaseDump = null;
    
                        /**
                         * MetadataImport name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.name = "";
    
                        /**
                         * MetadataImport description.
                         * @member {string} description
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.description = "";
    
                        /**
                         * MetadataImport createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.createTime = null;
    
                        /**
                         * MetadataImport updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.updateTime = null;
    
                        /**
                         * MetadataImport endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.endTime = null;
    
                        /**
                         * MetadataImport state.
                         * @member {google.cloud.metastore.v1.MetadataImport.State} state
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.state = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetadataImport metadata.
                         * @member {"databaseDump"|undefined} metadata
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         */
                        Object.defineProperty(MetadataImport.prototype, "metadata", {
                            get: $util.oneOfGetter($oneOfFields = ["databaseDump"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetadataImport instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataImport=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.MetadataImport} MetadataImport instance
                         */
                        MetadataImport.create = function create(properties) {
                            return new MetadataImport(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataImport message. Does not implicitly {@link google.cloud.metastore.v1.MetadataImport.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataImport} message MetadataImport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataImport.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.databaseDump != null && Object.hasOwnProperty.call(message, "databaseDump"))
                                $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump.encode(message.databaseDump, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataImport message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.MetadataImport.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataImport} message MetadataImport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataImport.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataImport message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.MetadataImport} MetadataImport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataImport.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.MetadataImport();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 6: {
                                        message.databaseDump = $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataImport message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.MetadataImport} MetadataImport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataImport.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataImport message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataImport.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.databaseDump != null && message.hasOwnProperty("databaseDump")) {
                                properties.metadata = 1;
                                {
                                    var error = $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump.verify(message.databaseDump);
                                    if (error)
                                        return "databaseDump." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataImport message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.MetadataImport} MetadataImport
                         */
                        MetadataImport.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.MetadataImport)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.MetadataImport();
                            if (object.databaseDump != null) {
                                if (typeof object.databaseDump !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.MetadataImport.databaseDump: object expected");
                                message.databaseDump = $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump.fromObject(object.databaseDump);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.MetadataImport.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.MetadataImport.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.MetadataImport.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataImport message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1.MetadataImport} message MetadataImport
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataImport.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.endTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1.MetadataImport.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1.MetadataImport.State[message.state] : message.state;
                            if (message.databaseDump != null && message.hasOwnProperty("databaseDump")) {
                                object.databaseDump = $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump.toObject(message.databaseDump, options);
                                if (options.oneofs)
                                    object.metadata = "databaseDump";
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this MetadataImport to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataImport.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataImport
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.MetadataImport
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataImport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.MetadataImport";
                        };
    
                        MetadataImport.DatabaseDump = (function() {
    
                            /**
                             * Properties of a DatabaseDump.
                             * @memberof google.cloud.metastore.v1.MetadataImport
                             * @interface IDatabaseDump
                             * @property {google.cloud.metastore.v1.MetadataImport.DatabaseDump.DatabaseType|null} [databaseType] DatabaseDump databaseType
                             * @property {string|null} [gcsUri] DatabaseDump gcsUri
                             * @property {google.cloud.metastore.v1.DatabaseDumpSpec.Type|null} [type] DatabaseDump type
                             */
    
                            /**
                             * Constructs a new DatabaseDump.
                             * @memberof google.cloud.metastore.v1.MetadataImport
                             * @classdesc Represents a DatabaseDump.
                             * @implements IDatabaseDump
                             * @constructor
                             * @param {google.cloud.metastore.v1.MetadataImport.IDatabaseDump=} [properties] Properties to set
                             */
                            function DatabaseDump(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DatabaseDump databaseType.
                             * @member {google.cloud.metastore.v1.MetadataImport.DatabaseDump.DatabaseType} databaseType
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.databaseType = 0;
    
                            /**
                             * DatabaseDump gcsUri.
                             * @member {string} gcsUri
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.gcsUri = "";
    
                            /**
                             * DatabaseDump type.
                             * @member {google.cloud.metastore.v1.DatabaseDumpSpec.Type} type
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.type = 0;
    
                            /**
                             * Creates a new DatabaseDump instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1.MetadataImport.IDatabaseDump=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1.MetadataImport.DatabaseDump} DatabaseDump instance
                             */
                            DatabaseDump.create = function create(properties) {
                                return new DatabaseDump(properties);
                            };
    
                            /**
                             * Encodes the specified DatabaseDump message. Does not implicitly {@link google.cloud.metastore.v1.MetadataImport.DatabaseDump.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1.MetadataImport.IDatabaseDump} message DatabaseDump message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DatabaseDump.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.databaseType != null && Object.hasOwnProperty.call(message, "databaseType"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.databaseType);
                                if (message.gcsUri != null && Object.hasOwnProperty.call(message, "gcsUri"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.gcsUri);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.type);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DatabaseDump message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.MetadataImport.DatabaseDump.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1.MetadataImport.IDatabaseDump} message DatabaseDump message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DatabaseDump.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DatabaseDump message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1.MetadataImport.DatabaseDump} DatabaseDump
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DatabaseDump.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.databaseType = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.gcsUri = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DatabaseDump message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1.MetadataImport.DatabaseDump} DatabaseDump
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DatabaseDump.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DatabaseDump message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DatabaseDump.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                    switch (message.databaseType) {
                                    default:
                                        return "databaseType: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                    if (!$util.isString(message.gcsUri))
                                        return "gcsUri: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a DatabaseDump message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1.MetadataImport.DatabaseDump} DatabaseDump
                             */
                            DatabaseDump.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump();
                                switch (object.databaseType) {
                                default:
                                    if (typeof object.databaseType === "number") {
                                        message.databaseType = object.databaseType;
                                        break;
                                    }
                                    break;
                                case "DATABASE_TYPE_UNSPECIFIED":
                                case 0:
                                    message.databaseType = 0;
                                    break;
                                case "MYSQL":
                                case 1:
                                    message.databaseType = 1;
                                    break;
                                }
                                if (object.gcsUri != null)
                                    message.gcsUri = String(object.gcsUri);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "MYSQL":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "AVRO":
                                case 2:
                                    message.type = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DatabaseDump message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1.MetadataImport.DatabaseDump} message DatabaseDump
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DatabaseDump.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.databaseType = options.enums === String ? "DATABASE_TYPE_UNSPECIFIED" : 0;
                                    object.gcsUri = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                    object.databaseType = options.enums === String ? $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump.DatabaseType[message.databaseType] === undefined ? message.databaseType : $root.google.cloud.metastore.v1.MetadataImport.DatabaseDump.DatabaseType[message.databaseType] : message.databaseType;
                                if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                    object.gcsUri = message.gcsUri;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.metastore.v1.DatabaseDumpSpec.Type[message.type] === undefined ? message.type : $root.google.cloud.metastore.v1.DatabaseDumpSpec.Type[message.type] : message.type;
                                return object;
                            };
    
                            /**
                             * Converts this DatabaseDump to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DatabaseDump.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DatabaseDump
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1.MetadataImport.DatabaseDump
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DatabaseDump.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1.MetadataImport.DatabaseDump";
                            };
    
                            /**
                             * DatabaseType enum.
                             * @name google.cloud.metastore.v1.MetadataImport.DatabaseDump.DatabaseType
                             * @enum {number}
                             * @property {number} DATABASE_TYPE_UNSPECIFIED=0 DATABASE_TYPE_UNSPECIFIED value
                             * @property {number} MYSQL=1 MYSQL value
                             */
                            DatabaseDump.DatabaseType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "DATABASE_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "MYSQL"] = 1;
                                return values;
                            })();
    
                            return DatabaseDump;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1.MetadataImport.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} FAILED=4 FAILED value
                         */
                        MetadataImport.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            return values;
                        })();
    
                        return MetadataImport;
                    })();
    
                    v1.MetadataExport = (function() {
    
                        /**
                         * Properties of a MetadataExport.
                         * @memberof google.cloud.metastore.v1
                         * @interface IMetadataExport
                         * @property {string|null} [destinationGcsUri] MetadataExport destinationGcsUri
                         * @property {google.protobuf.ITimestamp|null} [startTime] MetadataExport startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] MetadataExport endTime
                         * @property {google.cloud.metastore.v1.MetadataExport.State|null} [state] MetadataExport state
                         * @property {google.cloud.metastore.v1.DatabaseDumpSpec.Type|null} [databaseDumpType] MetadataExport databaseDumpType
                         */
    
                        /**
                         * Constructs a new MetadataExport.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a MetadataExport.
                         * @implements IMetadataExport
                         * @constructor
                         * @param {google.cloud.metastore.v1.IMetadataExport=} [properties] Properties to set
                         */
                        function MetadataExport(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataExport destinationGcsUri.
                         * @member {string|null|undefined} destinationGcsUri
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.destinationGcsUri = null;
    
                        /**
                         * MetadataExport startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.startTime = null;
    
                        /**
                         * MetadataExport endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.endTime = null;
    
                        /**
                         * MetadataExport state.
                         * @member {google.cloud.metastore.v1.MetadataExport.State} state
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.state = 0;
    
                        /**
                         * MetadataExport databaseDumpType.
                         * @member {google.cloud.metastore.v1.DatabaseDumpSpec.Type} databaseDumpType
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.databaseDumpType = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetadataExport destination.
                         * @member {"destinationGcsUri"|undefined} destination
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @instance
                         */
                        Object.defineProperty(MetadataExport.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["destinationGcsUri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetadataExport instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataExport=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.MetadataExport} MetadataExport instance
                         */
                        MetadataExport.create = function create(properties) {
                            return new MetadataExport(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataExport message. Does not implicitly {@link google.cloud.metastore.v1.MetadataExport.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataExport} message MetadataExport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataExport.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.destinationGcsUri != null && Object.hasOwnProperty.call(message, "destinationGcsUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.destinationGcsUri);
                            if (message.databaseDumpType != null && Object.hasOwnProperty.call(message, "databaseDumpType"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.databaseDumpType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataExport message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.MetadataExport.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1.IMetadataExport} message MetadataExport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataExport.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataExport message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.MetadataExport} MetadataExport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataExport.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.MetadataExport();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.destinationGcsUri = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.databaseDumpType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataExport message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.MetadataExport} MetadataExport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataExport.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataExport message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataExport.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.destinationGcsUri != null && message.hasOwnProperty("destinationGcsUri")) {
                                properties.destination = 1;
                                if (!$util.isString(message.destinationGcsUri))
                                    return "destinationGcsUri: string expected";
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                switch (message.databaseDumpType) {
                                default:
                                    return "databaseDumpType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataExport message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.MetadataExport} MetadataExport
                         */
                        MetadataExport.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.MetadataExport)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.MetadataExport();
                            if (object.destinationGcsUri != null)
                                message.destinationGcsUri = String(object.destinationGcsUri);
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.MetadataExport.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.MetadataExport.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            switch (object.databaseDumpType) {
                            default:
                                if (typeof object.databaseDumpType === "number") {
                                    message.databaseDumpType = object.databaseDumpType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseDumpType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseDumpType = 1;
                                break;
                            case "AVRO":
                            case 2:
                                message.databaseDumpType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataExport message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1.MetadataExport} message MetadataExport
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataExport.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.databaseDumpType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1.MetadataExport.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1.MetadataExport.State[message.state] : message.state;
                            if (message.destinationGcsUri != null && message.hasOwnProperty("destinationGcsUri")) {
                                object.destinationGcsUri = message.destinationGcsUri;
                                if (options.oneofs)
                                    object.destination = "destinationGcsUri";
                            }
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                object.databaseDumpType = options.enums === String ? $root.google.cloud.metastore.v1.DatabaseDumpSpec.Type[message.databaseDumpType] === undefined ? message.databaseDumpType : $root.google.cloud.metastore.v1.DatabaseDumpSpec.Type[message.databaseDumpType] : message.databaseDumpType;
                            return object;
                        };
    
                        /**
                         * Converts this MetadataExport to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataExport.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataExport
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.MetadataExport
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataExport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.MetadataExport";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1.MetadataExport.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} FAILED=3 FAILED value
                         * @property {number} CANCELLED=4 CANCELLED value
                         */
                        MetadataExport.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            values[valuesById[4] = "CANCELLED"] = 4;
                            return values;
                        })();
    
                        return MetadataExport;
                    })();
    
                    v1.Backup = (function() {
    
                        /**
                         * Properties of a Backup.
                         * @memberof google.cloud.metastore.v1
                         * @interface IBackup
                         * @property {string|null} [name] Backup name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Backup createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] Backup endTime
                         * @property {google.cloud.metastore.v1.Backup.State|null} [state] Backup state
                         * @property {google.cloud.metastore.v1.IService|null} [serviceRevision] Backup serviceRevision
                         * @property {string|null} [description] Backup description
                         * @property {Array.<string>|null} [restoringServices] Backup restoringServices
                         */
    
                        /**
                         * Constructs a new Backup.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a Backup.
                         * @implements IBackup
                         * @constructor
                         * @param {google.cloud.metastore.v1.IBackup=} [properties] Properties to set
                         */
                        function Backup(properties) {
                            this.restoringServices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Backup name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.Backup
                         * @instance
                         */
                        Backup.prototype.name = "";
    
                        /**
                         * Backup createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1.Backup
                         * @instance
                         */
                        Backup.prototype.createTime = null;
    
                        /**
                         * Backup endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1.Backup
                         * @instance
                         */
                        Backup.prototype.endTime = null;
    
                        /**
                         * Backup state.
                         * @member {google.cloud.metastore.v1.Backup.State} state
                         * @memberof google.cloud.metastore.v1.Backup
                         * @instance
                         */
                        Backup.prototype.state = 0;
    
                        /**
                         * Backup serviceRevision.
                         * @member {google.cloud.metastore.v1.IService|null|undefined} serviceRevision
                         * @memberof google.cloud.metastore.v1.Backup
                         * @instance
                         */
                        Backup.prototype.serviceRevision = null;
    
                        /**
                         * Backup description.
                         * @member {string} description
                         * @memberof google.cloud.metastore.v1.Backup
                         * @instance
                         */
                        Backup.prototype.description = "";
    
                        /**
                         * Backup restoringServices.
                         * @member {Array.<string>} restoringServices
                         * @memberof google.cloud.metastore.v1.Backup
                         * @instance
                         */
                        Backup.prototype.restoringServices = $util.emptyArray;
    
                        /**
                         * Creates a new Backup instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {google.cloud.metastore.v1.IBackup=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.Backup} Backup instance
                         */
                        Backup.create = function create(properties) {
                            return new Backup(properties);
                        };
    
                        /**
                         * Encodes the specified Backup message. Does not implicitly {@link google.cloud.metastore.v1.Backup.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {google.cloud.metastore.v1.IBackup} message Backup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Backup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.state);
                            if (message.serviceRevision != null && Object.hasOwnProperty.call(message, "serviceRevision"))
                                $root.google.cloud.metastore.v1.Service.encode(message.serviceRevision, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            if (message.restoringServices != null && message.restoringServices.length)
                                for (var i = 0; i < message.restoringServices.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.restoringServices[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Backup message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.Backup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {google.cloud.metastore.v1.IBackup} message Backup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Backup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Backup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.Backup} Backup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Backup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.Backup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.serviceRevision = $root.google.cloud.metastore.v1.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 7: {
                                        if (!(message.restoringServices && message.restoringServices.length))
                                            message.restoringServices = [];
                                        message.restoringServices.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Backup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.Backup} Backup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Backup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Backup message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Backup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.serviceRevision != null && message.hasOwnProperty("serviceRevision")) {
                                var error = $root.google.cloud.metastore.v1.Service.verify(message.serviceRevision);
                                if (error)
                                    return "serviceRevision." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.restoringServices != null && message.hasOwnProperty("restoringServices")) {
                                if (!Array.isArray(message.restoringServices))
                                    return "restoringServices: array expected";
                                for (var i = 0; i < message.restoringServices.length; ++i)
                                    if (!$util.isString(message.restoringServices[i]))
                                        return "restoringServices: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Backup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.Backup} Backup
                         */
                        Backup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.Backup)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.Backup();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Backup.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Backup.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "DELETING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ACTIVE":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "RESTORING":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.serviceRevision != null) {
                                if (typeof object.serviceRevision !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Backup.serviceRevision: object expected");
                                message.serviceRevision = $root.google.cloud.metastore.v1.Service.fromObject(object.serviceRevision);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.restoringServices) {
                                if (!Array.isArray(object.restoringServices))
                                    throw TypeError(".google.cloud.metastore.v1.Backup.restoringServices: array expected");
                                message.restoringServices = [];
                                for (var i = 0; i < object.restoringServices.length; ++i)
                                    message.restoringServices[i] = String(object.restoringServices[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Backup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {google.cloud.metastore.v1.Backup} message Backup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Backup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.restoringServices = [];
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.serviceRevision = null;
                                object.description = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1.Backup.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1.Backup.State[message.state] : message.state;
                            if (message.serviceRevision != null && message.hasOwnProperty("serviceRevision"))
                                object.serviceRevision = $root.google.cloud.metastore.v1.Service.toObject(message.serviceRevision, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.restoringServices && message.restoringServices.length) {
                                object.restoringServices = [];
                                for (var j = 0; j < message.restoringServices.length; ++j)
                                    object.restoringServices[j] = message.restoringServices[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Backup to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.Backup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Backup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Backup
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.Backup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Backup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.Backup";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1.Backup.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} DELETING=2 DELETING value
                         * @property {number} ACTIVE=3 ACTIVE value
                         * @property {number} FAILED=4 FAILED value
                         * @property {number} RESTORING=5 RESTORING value
                         */
                        Backup.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "DELETING"] = 2;
                            values[valuesById[3] = "ACTIVE"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            values[valuesById[5] = "RESTORING"] = 5;
                            return values;
                        })();
    
                        return Backup;
                    })();
    
                    v1.Restore = (function() {
    
                        /**
                         * Properties of a Restore.
                         * @memberof google.cloud.metastore.v1
                         * @interface IRestore
                         * @property {google.protobuf.ITimestamp|null} [startTime] Restore startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] Restore endTime
                         * @property {google.cloud.metastore.v1.Restore.State|null} [state] Restore state
                         * @property {string|null} [backup] Restore backup
                         * @property {google.cloud.metastore.v1.Restore.RestoreType|null} [type] Restore type
                         * @property {string|null} [details] Restore details
                         */
    
                        /**
                         * Constructs a new Restore.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a Restore.
                         * @implements IRestore
                         * @constructor
                         * @param {google.cloud.metastore.v1.IRestore=} [properties] Properties to set
                         */
                        function Restore(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Restore startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.metastore.v1.Restore
                         * @instance
                         */
                        Restore.prototype.startTime = null;
    
                        /**
                         * Restore endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1.Restore
                         * @instance
                         */
                        Restore.prototype.endTime = null;
    
                        /**
                         * Restore state.
                         * @member {google.cloud.metastore.v1.Restore.State} state
                         * @memberof google.cloud.metastore.v1.Restore
                         * @instance
                         */
                        Restore.prototype.state = 0;
    
                        /**
                         * Restore backup.
                         * @member {string} backup
                         * @memberof google.cloud.metastore.v1.Restore
                         * @instance
                         */
                        Restore.prototype.backup = "";
    
                        /**
                         * Restore type.
                         * @member {google.cloud.metastore.v1.Restore.RestoreType} type
                         * @memberof google.cloud.metastore.v1.Restore
                         * @instance
                         */
                        Restore.prototype.type = 0;
    
                        /**
                         * Restore details.
                         * @member {string} details
                         * @memberof google.cloud.metastore.v1.Restore
                         * @instance
                         */
                        Restore.prototype.details = "";
    
                        /**
                         * Creates a new Restore instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {google.cloud.metastore.v1.IRestore=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.Restore} Restore instance
                         */
                        Restore.create = function create(properties) {
                            return new Restore(properties);
                        };
    
                        /**
                         * Encodes the specified Restore message. Does not implicitly {@link google.cloud.metastore.v1.Restore.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {google.cloud.metastore.v1.IRestore} message Restore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Restore.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.backup);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.details);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Restore message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.Restore.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {google.cloud.metastore.v1.IRestore} message Restore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Restore.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Restore message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.Restore} Restore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Restore.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.Restore();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.backup = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.details = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Restore message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.Restore} Restore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Restore.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Restore message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Restore.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                if (!$util.isString(message.backup))
                                    return "backup: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.details != null && message.hasOwnProperty("details"))
                                if (!$util.isString(message.details))
                                    return "details: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Restore message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.Restore} Restore
                         */
                        Restore.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.Restore)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.Restore();
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Restore.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Restore.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.backup != null)
                                message.backup = String(object.backup);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "RESTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "FULL":
                            case 1:
                                message.type = 1;
                                break;
                            case "METADATA_ONLY":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.details != null)
                                message.details = String(object.details);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Restore message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {google.cloud.metastore.v1.Restore} message Restore
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Restore.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.backup = "";
                                object.type = options.enums === String ? "RESTORE_TYPE_UNSPECIFIED" : 0;
                                object.details = "";
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1.Restore.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1.Restore.State[message.state] : message.state;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = message.backup;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.metastore.v1.Restore.RestoreType[message.type] === undefined ? message.type : $root.google.cloud.metastore.v1.Restore.RestoreType[message.type] : message.type;
                            if (message.details != null && message.hasOwnProperty("details"))
                                object.details = message.details;
                            return object;
                        };
    
                        /**
                         * Converts this Restore to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.Restore
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Restore.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Restore
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.Restore
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Restore.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.Restore";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1.Restore.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} FAILED=3 FAILED value
                         * @property {number} CANCELLED=4 CANCELLED value
                         */
                        Restore.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            values[valuesById[4] = "CANCELLED"] = 4;
                            return values;
                        })();
    
                        /**
                         * RestoreType enum.
                         * @name google.cloud.metastore.v1.Restore.RestoreType
                         * @enum {number}
                         * @property {number} RESTORE_TYPE_UNSPECIFIED=0 RESTORE_TYPE_UNSPECIFIED value
                         * @property {number} FULL=1 FULL value
                         * @property {number} METADATA_ONLY=2 METADATA_ONLY value
                         */
                        Restore.RestoreType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RESTORE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "FULL"] = 1;
                            values[valuesById[2] = "METADATA_ONLY"] = 2;
                            return values;
                        })();
    
                        return Restore;
                    })();
    
                    v1.ListServicesRequest = (function() {
    
                        /**
                         * Properties of a ListServicesRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IListServicesRequest
                         * @property {string|null} [parent] ListServicesRequest parent
                         * @property {number|null} [pageSize] ListServicesRequest pageSize
                         * @property {string|null} [pageToken] ListServicesRequest pageToken
                         * @property {string|null} [filter] ListServicesRequest filter
                         * @property {string|null} [orderBy] ListServicesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListServicesRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a ListServicesRequest.
                         * @implements IListServicesRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IListServicesRequest=} [properties] Properties to set
                         */
                        function ListServicesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListServicesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.parent = "";
    
                        /**
                         * ListServicesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListServicesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.pageToken = "";
    
                        /**
                         * ListServicesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.filter = "";
    
                        /**
                         * ListServicesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListServicesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListServicesRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ListServicesRequest} ListServicesRequest instance
                         */
                        ListServicesRequest.create = function create(properties) {
                            return new ListServicesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListServicesRequest message. Does not implicitly {@link google.cloud.metastore.v1.ListServicesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListServicesRequest} message ListServicesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListServicesRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ListServicesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListServicesRequest} message ListServicesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListServicesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ListServicesRequest} ListServicesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ListServicesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListServicesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ListServicesRequest} ListServicesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListServicesRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListServicesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListServicesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ListServicesRequest} ListServicesRequest
                         */
                        ListServicesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ListServicesRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ListServicesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListServicesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ListServicesRequest} message ListServicesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListServicesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListServicesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListServicesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListServicesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ListServicesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListServicesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ListServicesRequest";
                        };
    
                        return ListServicesRequest;
                    })();
    
                    v1.ListServicesResponse = (function() {
    
                        /**
                         * Properties of a ListServicesResponse.
                         * @memberof google.cloud.metastore.v1
                         * @interface IListServicesResponse
                         * @property {Array.<google.cloud.metastore.v1.IService>|null} [services] ListServicesResponse services
                         * @property {string|null} [nextPageToken] ListServicesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListServicesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListServicesResponse.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a ListServicesResponse.
                         * @implements IListServicesResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1.IListServicesResponse=} [properties] Properties to set
                         */
                        function ListServicesResponse(properties) {
                            this.services = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListServicesResponse services.
                         * @member {Array.<google.cloud.metastore.v1.IService>} services
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.services = $util.emptyArray;
    
                        /**
                         * ListServicesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListServicesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListServicesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListServicesResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ListServicesResponse} ListServicesResponse instance
                         */
                        ListServicesResponse.create = function create(properties) {
                            return new ListServicesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListServicesResponse message. Does not implicitly {@link google.cloud.metastore.v1.ListServicesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListServicesResponse} message ListServicesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.services != null && message.services.length)
                                for (var i = 0; i < message.services.length; ++i)
                                    $root.google.cloud.metastore.v1.Service.encode(message.services[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListServicesResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ListServicesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListServicesResponse} message ListServicesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListServicesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ListServicesResponse} ListServicesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ListServicesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.services && message.services.length))
                                            message.services = [];
                                        message.services.push($root.google.cloud.metastore.v1.Service.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListServicesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ListServicesResponse} ListServicesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListServicesResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListServicesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.services != null && message.hasOwnProperty("services")) {
                                if (!Array.isArray(message.services))
                                    return "services: array expected";
                                for (var i = 0; i < message.services.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1.Service.verify(message.services[i]);
                                    if (error)
                                        return "services." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListServicesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ListServicesResponse} ListServicesResponse
                         */
                        ListServicesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ListServicesResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ListServicesResponse();
                            if (object.services) {
                                if (!Array.isArray(object.services))
                                    throw TypeError(".google.cloud.metastore.v1.ListServicesResponse.services: array expected");
                                message.services = [];
                                for (var i = 0; i < object.services.length; ++i) {
                                    if (typeof object.services[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.ListServicesResponse.services: object expected");
                                    message.services[i] = $root.google.cloud.metastore.v1.Service.fromObject(object.services[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1.ListServicesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListServicesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1.ListServicesResponse} message ListServicesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListServicesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.services = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.services && message.services.length) {
                                object.services = [];
                                for (var j = 0; j < message.services.length; ++j)
                                    object.services[j] = $root.google.cloud.metastore.v1.Service.toObject(message.services[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListServicesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListServicesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListServicesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ListServicesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListServicesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ListServicesResponse";
                        };
    
                        return ListServicesResponse;
                    })();
    
                    v1.GetServiceRequest = (function() {
    
                        /**
                         * Properties of a GetServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IGetServiceRequest
                         * @property {string|null} [name] GetServiceRequest name
                         */
    
                        /**
                         * Constructs a new GetServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a GetServiceRequest.
                         * @implements IGetServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IGetServiceRequest=} [properties] Properties to set
                         */
                        function GetServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @instance
                         */
                        GetServiceRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.GetServiceRequest} GetServiceRequest instance
                         */
                        GetServiceRequest.create = function create(properties) {
                            return new GetServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1.GetServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.GetServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.GetServiceRequest} GetServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.GetServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.GetServiceRequest} GetServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.GetServiceRequest} GetServiceRequest
                         */
                        GetServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.GetServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.GetServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.GetServiceRequest} message GetServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.GetServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.GetServiceRequest";
                        };
    
                        return GetServiceRequest;
                    })();
    
                    v1.CreateServiceRequest = (function() {
    
                        /**
                         * Properties of a CreateServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface ICreateServiceRequest
                         * @property {string|null} [parent] CreateServiceRequest parent
                         * @property {string|null} [serviceId] CreateServiceRequest serviceId
                         * @property {google.cloud.metastore.v1.IService|null} [service] CreateServiceRequest service
                         * @property {string|null} [requestId] CreateServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a CreateServiceRequest.
                         * @implements ICreateServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.ICreateServiceRequest=} [properties] Properties to set
                         */
                        function CreateServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateServiceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.parent = "";
    
                        /**
                         * CreateServiceRequest serviceId.
                         * @member {string} serviceId
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.serviceId = "";
    
                        /**
                         * CreateServiceRequest service.
                         * @member {google.cloud.metastore.v1.IService|null|undefined} service
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.service = null;
    
                        /**
                         * CreateServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.CreateServiceRequest} CreateServiceRequest instance
                         */
                        CreateServiceRequest.create = function create(properties) {
                            return new CreateServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1.CreateServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.serviceId != null && Object.hasOwnProperty.call(message, "serviceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceId);
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                $root.google.cloud.metastore.v1.Service.encode(message.service, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.CreateServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.CreateServiceRequest} CreateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.CreateServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.serviceId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.service = $root.google.cloud.metastore.v1.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.CreateServiceRequest} CreateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                                if (!$util.isString(message.serviceId))
                                    return "serviceId: string expected";
                            if (message.service != null && message.hasOwnProperty("service")) {
                                var error = $root.google.cloud.metastore.v1.Service.verify(message.service);
                                if (error)
                                    return "service." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.CreateServiceRequest} CreateServiceRequest
                         */
                        CreateServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.CreateServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.CreateServiceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.serviceId != null)
                                message.serviceId = String(object.serviceId);
                            if (object.service != null) {
                                if (typeof object.service !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.CreateServiceRequest.service: object expected");
                                message.service = $root.google.cloud.metastore.v1.Service.fromObject(object.service);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.CreateServiceRequest} message CreateServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.serviceId = "";
                                object.service = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                                object.serviceId = message.serviceId;
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = $root.google.cloud.metastore.v1.Service.toObject(message.service, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.CreateServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.CreateServiceRequest";
                        };
    
                        return CreateServiceRequest;
                    })();
    
                    v1.UpdateServiceRequest = (function() {
    
                        /**
                         * Properties of an UpdateServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IUpdateServiceRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateServiceRequest updateMask
                         * @property {google.cloud.metastore.v1.IService|null} [service] UpdateServiceRequest service
                         * @property {string|null} [requestId] UpdateServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents an UpdateServiceRequest.
                         * @implements IUpdateServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IUpdateServiceRequest=} [properties] Properties to set
                         */
                        function UpdateServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateServiceRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateServiceRequest service.
                         * @member {google.cloud.metastore.v1.IService|null|undefined} service
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.service = null;
    
                        /**
                         * UpdateServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.UpdateServiceRequest} UpdateServiceRequest instance
                         */
                        UpdateServiceRequest.create = function create(properties) {
                            return new UpdateServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1.UpdateServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                $root.google.cloud.metastore.v1.Service.encode(message.service, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.UpdateServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.UpdateServiceRequest} UpdateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.UpdateServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.service = $root.google.cloud.metastore.v1.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.UpdateServiceRequest} UpdateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.service != null && message.hasOwnProperty("service")) {
                                var error = $root.google.cloud.metastore.v1.Service.verify(message.service);
                                if (error)
                                    return "service." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.UpdateServiceRequest} UpdateServiceRequest
                         */
                        UpdateServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.UpdateServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.UpdateServiceRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.UpdateServiceRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.service != null) {
                                if (typeof object.service !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.UpdateServiceRequest.service: object expected");
                                message.service = $root.google.cloud.metastore.v1.Service.fromObject(object.service);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.UpdateServiceRequest} message UpdateServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.service = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = $root.google.cloud.metastore.v1.Service.toObject(message.service, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.UpdateServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.UpdateServiceRequest";
                        };
    
                        return UpdateServiceRequest;
                    })();
    
                    v1.DeleteServiceRequest = (function() {
    
                        /**
                         * Properties of a DeleteServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IDeleteServiceRequest
                         * @property {string|null} [name] DeleteServiceRequest name
                         * @property {string|null} [requestId] DeleteServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a DeleteServiceRequest.
                         * @implements IDeleteServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IDeleteServiceRequest=} [properties] Properties to set
                         */
                        function DeleteServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.name = "";
    
                        /**
                         * DeleteServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.DeleteServiceRequest} DeleteServiceRequest instance
                         */
                        DeleteServiceRequest.create = function create(properties) {
                            return new DeleteServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1.DeleteServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.DeleteServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.DeleteServiceRequest} DeleteServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.DeleteServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.DeleteServiceRequest} DeleteServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.DeleteServiceRequest} DeleteServiceRequest
                         */
                        DeleteServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.DeleteServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.DeleteServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.DeleteServiceRequest} message DeleteServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.DeleteServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.DeleteServiceRequest";
                        };
    
                        return DeleteServiceRequest;
                    })();
    
                    v1.ListMetadataImportsRequest = (function() {
    
                        /**
                         * Properties of a ListMetadataImportsRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IListMetadataImportsRequest
                         * @property {string|null} [parent] ListMetadataImportsRequest parent
                         * @property {number|null} [pageSize] ListMetadataImportsRequest pageSize
                         * @property {string|null} [pageToken] ListMetadataImportsRequest pageToken
                         * @property {string|null} [filter] ListMetadataImportsRequest filter
                         * @property {string|null} [orderBy] ListMetadataImportsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListMetadataImportsRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a ListMetadataImportsRequest.
                         * @implements IListMetadataImportsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IListMetadataImportsRequest=} [properties] Properties to set
                         */
                        function ListMetadataImportsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMetadataImportsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.parent = "";
    
                        /**
                         * ListMetadataImportsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListMetadataImportsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.pageToken = "";
    
                        /**
                         * ListMetadataImportsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.filter = "";
    
                        /**
                         * ListMetadataImportsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListMetadataImportsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListMetadataImportsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ListMetadataImportsRequest} ListMetadataImportsRequest instance
                         */
                        ListMetadataImportsRequest.create = function create(properties) {
                            return new ListMetadataImportsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsRequest message. Does not implicitly {@link google.cloud.metastore.v1.ListMetadataImportsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListMetadataImportsRequest} message ListMetadataImportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ListMetadataImportsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListMetadataImportsRequest} message ListMetadataImportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMetadataImportsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ListMetadataImportsRequest} ListMetadataImportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ListMetadataImportsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMetadataImportsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ListMetadataImportsRequest} ListMetadataImportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMetadataImportsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMetadataImportsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListMetadataImportsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ListMetadataImportsRequest} ListMetadataImportsRequest
                         */
                        ListMetadataImportsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ListMetadataImportsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ListMetadataImportsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMetadataImportsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ListMetadataImportsRequest} message ListMetadataImportsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMetadataImportsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListMetadataImportsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMetadataImportsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListMetadataImportsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListMetadataImportsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ListMetadataImportsRequest";
                        };
    
                        return ListMetadataImportsRequest;
                    })();
    
                    v1.ListMetadataImportsResponse = (function() {
    
                        /**
                         * Properties of a ListMetadataImportsResponse.
                         * @memberof google.cloud.metastore.v1
                         * @interface IListMetadataImportsResponse
                         * @property {Array.<google.cloud.metastore.v1.IMetadataImport>|null} [metadataImports] ListMetadataImportsResponse metadataImports
                         * @property {string|null} [nextPageToken] ListMetadataImportsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListMetadataImportsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListMetadataImportsResponse.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a ListMetadataImportsResponse.
                         * @implements IListMetadataImportsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1.IListMetadataImportsResponse=} [properties] Properties to set
                         */
                        function ListMetadataImportsResponse(properties) {
                            this.metadataImports = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMetadataImportsResponse metadataImports.
                         * @member {Array.<google.cloud.metastore.v1.IMetadataImport>} metadataImports
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.metadataImports = $util.emptyArray;
    
                        /**
                         * ListMetadataImportsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListMetadataImportsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListMetadataImportsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListMetadataImportsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ListMetadataImportsResponse} ListMetadataImportsResponse instance
                         */
                        ListMetadataImportsResponse.create = function create(properties) {
                            return new ListMetadataImportsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsResponse message. Does not implicitly {@link google.cloud.metastore.v1.ListMetadataImportsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListMetadataImportsResponse} message ListMetadataImportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metadataImports != null && message.metadataImports.length)
                                for (var i = 0; i < message.metadataImports.length; ++i)
                                    $root.google.cloud.metastore.v1.MetadataImport.encode(message.metadataImports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ListMetadataImportsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListMetadataImportsResponse} message ListMetadataImportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMetadataImportsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ListMetadataImportsResponse} ListMetadataImportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ListMetadataImportsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.metadataImports && message.metadataImports.length))
                                            message.metadataImports = [];
                                        message.metadataImports.push($root.google.cloud.metastore.v1.MetadataImport.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMetadataImportsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ListMetadataImportsResponse} ListMetadataImportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMetadataImportsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMetadataImportsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metadataImports != null && message.hasOwnProperty("metadataImports")) {
                                if (!Array.isArray(message.metadataImports))
                                    return "metadataImports: array expected";
                                for (var i = 0; i < message.metadataImports.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1.MetadataImport.verify(message.metadataImports[i]);
                                    if (error)
                                        return "metadataImports." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListMetadataImportsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ListMetadataImportsResponse} ListMetadataImportsResponse
                         */
                        ListMetadataImportsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ListMetadataImportsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ListMetadataImportsResponse();
                            if (object.metadataImports) {
                                if (!Array.isArray(object.metadataImports))
                                    throw TypeError(".google.cloud.metastore.v1.ListMetadataImportsResponse.metadataImports: array expected");
                                message.metadataImports = [];
                                for (var i = 0; i < object.metadataImports.length; ++i) {
                                    if (typeof object.metadataImports[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.ListMetadataImportsResponse.metadataImports: object expected");
                                    message.metadataImports[i] = $root.google.cloud.metastore.v1.MetadataImport.fromObject(object.metadataImports[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1.ListMetadataImportsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMetadataImportsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.ListMetadataImportsResponse} message ListMetadataImportsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMetadataImportsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.metadataImports = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.metadataImports && message.metadataImports.length) {
                                object.metadataImports = [];
                                for (var j = 0; j < message.metadataImports.length; ++j)
                                    object.metadataImports[j] = $root.google.cloud.metastore.v1.MetadataImport.toObject(message.metadataImports[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListMetadataImportsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMetadataImportsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListMetadataImportsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ListMetadataImportsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListMetadataImportsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ListMetadataImportsResponse";
                        };
    
                        return ListMetadataImportsResponse;
                    })();
    
                    v1.GetMetadataImportRequest = (function() {
    
                        /**
                         * Properties of a GetMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IGetMetadataImportRequest
                         * @property {string|null} [name] GetMetadataImportRequest name
                         */
    
                        /**
                         * Constructs a new GetMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a GetMetadataImportRequest.
                         * @implements IGetMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IGetMetadataImportRequest=} [properties] Properties to set
                         */
                        function GetMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetMetadataImportRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @instance
                         */
                        GetMetadataImportRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.GetMetadataImportRequest} GetMetadataImportRequest instance
                         */
                        GetMetadataImportRequest.create = function create(properties) {
                            return new GetMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1.GetMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetMetadataImportRequest} message GetMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.GetMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetMetadataImportRequest} message GetMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.GetMetadataImportRequest} GetMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.GetMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.GetMetadataImportRequest} GetMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.GetMetadataImportRequest} GetMetadataImportRequest
                         */
                        GetMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.GetMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.GetMetadataImportRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.GetMetadataImportRequest} message GetMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.GetMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.GetMetadataImportRequest";
                        };
    
                        return GetMetadataImportRequest;
                    })();
    
                    v1.CreateMetadataImportRequest = (function() {
    
                        /**
                         * Properties of a CreateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface ICreateMetadataImportRequest
                         * @property {string|null} [parent] CreateMetadataImportRequest parent
                         * @property {string|null} [metadataImportId] CreateMetadataImportRequest metadataImportId
                         * @property {google.cloud.metastore.v1.IMetadataImport|null} [metadataImport] CreateMetadataImportRequest metadataImport
                         * @property {string|null} [requestId] CreateMetadataImportRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a CreateMetadataImportRequest.
                         * @implements ICreateMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.ICreateMetadataImportRequest=} [properties] Properties to set
                         */
                        function CreateMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateMetadataImportRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.parent = "";
    
                        /**
                         * CreateMetadataImportRequest metadataImportId.
                         * @member {string} metadataImportId
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.metadataImportId = "";
    
                        /**
                         * CreateMetadataImportRequest metadataImport.
                         * @member {google.cloud.metastore.v1.IMetadataImport|null|undefined} metadataImport
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.metadataImport = null;
    
                        /**
                         * CreateMetadataImportRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.CreateMetadataImportRequest} CreateMetadataImportRequest instance
                         */
                        CreateMetadataImportRequest.create = function create(properties) {
                            return new CreateMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1.CreateMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateMetadataImportRequest} message CreateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.metadataImportId != null && Object.hasOwnProperty.call(message, "metadataImportId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataImportId);
                            if (message.metadataImport != null && Object.hasOwnProperty.call(message, "metadataImport"))
                                $root.google.cloud.metastore.v1.MetadataImport.encode(message.metadataImport, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.CreateMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateMetadataImportRequest} message CreateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.CreateMetadataImportRequest} CreateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.CreateMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.metadataImportId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.metadataImport = $root.google.cloud.metastore.v1.MetadataImport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.CreateMetadataImportRequest} CreateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.metadataImportId != null && message.hasOwnProperty("metadataImportId"))
                                if (!$util.isString(message.metadataImportId))
                                    return "metadataImportId: string expected";
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport")) {
                                var error = $root.google.cloud.metastore.v1.MetadataImport.verify(message.metadataImport);
                                if (error)
                                    return "metadataImport." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.CreateMetadataImportRequest} CreateMetadataImportRequest
                         */
                        CreateMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.CreateMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.CreateMetadataImportRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.metadataImportId != null)
                                message.metadataImportId = String(object.metadataImportId);
                            if (object.metadataImport != null) {
                                if (typeof object.metadataImport !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.CreateMetadataImportRequest.metadataImport: object expected");
                                message.metadataImport = $root.google.cloud.metastore.v1.MetadataImport.fromObject(object.metadataImport);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.CreateMetadataImportRequest} message CreateMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.metadataImportId = "";
                                object.metadataImport = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.metadataImportId != null && message.hasOwnProperty("metadataImportId"))
                                object.metadataImportId = message.metadataImportId;
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport"))
                                object.metadataImport = $root.google.cloud.metastore.v1.MetadataImport.toObject(message.metadataImport, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.CreateMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.CreateMetadataImportRequest";
                        };
    
                        return CreateMetadataImportRequest;
                    })();
    
                    v1.UpdateMetadataImportRequest = (function() {
    
                        /**
                         * Properties of an UpdateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IUpdateMetadataImportRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateMetadataImportRequest updateMask
                         * @property {google.cloud.metastore.v1.IMetadataImport|null} [metadataImport] UpdateMetadataImportRequest metadataImport
                         * @property {string|null} [requestId] UpdateMetadataImportRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents an UpdateMetadataImportRequest.
                         * @implements IUpdateMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IUpdateMetadataImportRequest=} [properties] Properties to set
                         */
                        function UpdateMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateMetadataImportRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateMetadataImportRequest metadataImport.
                         * @member {google.cloud.metastore.v1.IMetadataImport|null|undefined} metadataImport
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.metadataImport = null;
    
                        /**
                         * UpdateMetadataImportRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.UpdateMetadataImportRequest} UpdateMetadataImportRequest instance
                         */
                        UpdateMetadataImportRequest.create = function create(properties) {
                            return new UpdateMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1.UpdateMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateMetadataImportRequest} message UpdateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metadataImport != null && Object.hasOwnProperty.call(message, "metadataImport"))
                                $root.google.cloud.metastore.v1.MetadataImport.encode(message.metadataImport, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.UpdateMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateMetadataImportRequest} message UpdateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.UpdateMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.metadataImport = $root.google.cloud.metastore.v1.MetadataImport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport")) {
                                var error = $root.google.cloud.metastore.v1.MetadataImport.verify(message.metadataImport);
                                if (error)
                                    return "metadataImport." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         */
                        UpdateMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.UpdateMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.UpdateMetadataImportRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.UpdateMetadataImportRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.metadataImport != null) {
                                if (typeof object.metadataImport !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.UpdateMetadataImportRequest.metadataImport: object expected");
                                message.metadataImport = $root.google.cloud.metastore.v1.MetadataImport.fromObject(object.metadataImport);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1.UpdateMetadataImportRequest} message UpdateMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.metadataImport = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport"))
                                object.metadataImport = $root.google.cloud.metastore.v1.MetadataImport.toObject(message.metadataImport, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.UpdateMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.UpdateMetadataImportRequest";
                        };
    
                        return UpdateMetadataImportRequest;
                    })();
    
                    v1.ListBackupsRequest = (function() {
    
                        /**
                         * Properties of a ListBackupsRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IListBackupsRequest
                         * @property {string|null} [parent] ListBackupsRequest parent
                         * @property {number|null} [pageSize] ListBackupsRequest pageSize
                         * @property {string|null} [pageToken] ListBackupsRequest pageToken
                         * @property {string|null} [filter] ListBackupsRequest filter
                         * @property {string|null} [orderBy] ListBackupsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListBackupsRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a ListBackupsRequest.
                         * @implements IListBackupsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IListBackupsRequest=} [properties] Properties to set
                         */
                        function ListBackupsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBackupsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.parent = "";
    
                        /**
                         * ListBackupsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListBackupsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.pageToken = "";
    
                        /**
                         * ListBackupsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.filter = "";
    
                        /**
                         * ListBackupsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListBackupsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListBackupsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ListBackupsRequest} ListBackupsRequest instance
                         */
                        ListBackupsRequest.create = function create(properties) {
                            return new ListBackupsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListBackupsRequest message. Does not implicitly {@link google.cloud.metastore.v1.ListBackupsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListBackupsRequest} message ListBackupsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBackupsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ListBackupsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListBackupsRequest} message ListBackupsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBackupsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ListBackupsRequest} ListBackupsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ListBackupsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBackupsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ListBackupsRequest} ListBackupsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBackupsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBackupsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBackupsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ListBackupsRequest} ListBackupsRequest
                         */
                        ListBackupsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ListBackupsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ListBackupsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBackupsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ListBackupsRequest} message ListBackupsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBackupsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListBackupsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBackupsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBackupsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ListBackupsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBackupsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ListBackupsRequest";
                        };
    
                        return ListBackupsRequest;
                    })();
    
                    v1.ListBackupsResponse = (function() {
    
                        /**
                         * Properties of a ListBackupsResponse.
                         * @memberof google.cloud.metastore.v1
                         * @interface IListBackupsResponse
                         * @property {Array.<google.cloud.metastore.v1.IBackup>|null} [backups] ListBackupsResponse backups
                         * @property {string|null} [nextPageToken] ListBackupsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListBackupsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListBackupsResponse.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a ListBackupsResponse.
                         * @implements IListBackupsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1.IListBackupsResponse=} [properties] Properties to set
                         */
                        function ListBackupsResponse(properties) {
                            this.backups = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBackupsResponse backups.
                         * @member {Array.<google.cloud.metastore.v1.IBackup>} backups
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.backups = $util.emptyArray;
    
                        /**
                         * ListBackupsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListBackupsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListBackupsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListBackupsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ListBackupsResponse} ListBackupsResponse instance
                         */
                        ListBackupsResponse.create = function create(properties) {
                            return new ListBackupsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListBackupsResponse message. Does not implicitly {@link google.cloud.metastore.v1.ListBackupsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListBackupsResponse} message ListBackupsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.backups != null && message.backups.length)
                                for (var i = 0; i < message.backups.length; ++i)
                                    $root.google.cloud.metastore.v1.Backup.encode(message.backups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBackupsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ListBackupsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListBackupsResponse} message ListBackupsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBackupsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ListBackupsResponse} ListBackupsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ListBackupsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.backups && message.backups.length))
                                            message.backups = [];
                                        message.backups.push($root.google.cloud.metastore.v1.Backup.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBackupsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ListBackupsResponse} ListBackupsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBackupsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBackupsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.backups != null && message.hasOwnProperty("backups")) {
                                if (!Array.isArray(message.backups))
                                    return "backups: array expected";
                                for (var i = 0; i < message.backups.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1.Backup.verify(message.backups[i]);
                                    if (error)
                                        return "backups." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListBackupsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ListBackupsResponse} ListBackupsResponse
                         */
                        ListBackupsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ListBackupsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ListBackupsResponse();
                            if (object.backups) {
                                if (!Array.isArray(object.backups))
                                    throw TypeError(".google.cloud.metastore.v1.ListBackupsResponse.backups: array expected");
                                message.backups = [];
                                for (var i = 0; i < object.backups.length; ++i) {
                                    if (typeof object.backups[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.ListBackupsResponse.backups: object expected");
                                    message.backups[i] = $root.google.cloud.metastore.v1.Backup.fromObject(object.backups[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1.ListBackupsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBackupsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.ListBackupsResponse} message ListBackupsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBackupsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.backups = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.backups && message.backups.length) {
                                object.backups = [];
                                for (var j = 0; j < message.backups.length; ++j)
                                    object.backups[j] = $root.google.cloud.metastore.v1.Backup.toObject(message.backups[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListBackupsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBackupsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBackupsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ListBackupsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBackupsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ListBackupsResponse";
                        };
    
                        return ListBackupsResponse;
                    })();
    
                    v1.GetBackupRequest = (function() {
    
                        /**
                         * Properties of a GetBackupRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IGetBackupRequest
                         * @property {string|null} [name] GetBackupRequest name
                         */
    
                        /**
                         * Constructs a new GetBackupRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a GetBackupRequest.
                         * @implements IGetBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IGetBackupRequest=} [properties] Properties to set
                         */
                        function GetBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetBackupRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @instance
                         */
                        GetBackupRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.GetBackupRequest} GetBackupRequest instance
                         */
                        GetBackupRequest.create = function create(properties) {
                            return new GetBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1.GetBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetBackupRequest} message GetBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.GetBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetBackupRequest} message GetBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.GetBackupRequest} GetBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.GetBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.GetBackupRequest} GetBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.GetBackupRequest} GetBackupRequest
                         */
                        GetBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.GetBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.GetBackupRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.GetBackupRequest} message GetBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.GetBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.GetBackupRequest";
                        };
    
                        return GetBackupRequest;
                    })();
    
                    v1.CreateBackupRequest = (function() {
    
                        /**
                         * Properties of a CreateBackupRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface ICreateBackupRequest
                         * @property {string|null} [parent] CreateBackupRequest parent
                         * @property {string|null} [backupId] CreateBackupRequest backupId
                         * @property {google.cloud.metastore.v1.IBackup|null} [backup] CreateBackupRequest backup
                         * @property {string|null} [requestId] CreateBackupRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateBackupRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a CreateBackupRequest.
                         * @implements ICreateBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.ICreateBackupRequest=} [properties] Properties to set
                         */
                        function CreateBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateBackupRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.parent = "";
    
                        /**
                         * CreateBackupRequest backupId.
                         * @member {string} backupId
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.backupId = "";
    
                        /**
                         * CreateBackupRequest backup.
                         * @member {google.cloud.metastore.v1.IBackup|null|undefined} backup
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.backup = null;
    
                        /**
                         * CreateBackupRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.CreateBackupRequest} CreateBackupRequest instance
                         */
                        CreateBackupRequest.create = function create(properties) {
                            return new CreateBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1.CreateBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateBackupRequest} message CreateBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.backupId != null && Object.hasOwnProperty.call(message, "backupId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.backupId);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                $root.google.cloud.metastore.v1.Backup.encode(message.backup, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.CreateBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateBackupRequest} message CreateBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.CreateBackupRequest} CreateBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.CreateBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.backupId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.backup = $root.google.cloud.metastore.v1.Backup.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.CreateBackupRequest} CreateBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.backupId != null && message.hasOwnProperty("backupId"))
                                if (!$util.isString(message.backupId))
                                    return "backupId: string expected";
                            if (message.backup != null && message.hasOwnProperty("backup")) {
                                var error = $root.google.cloud.metastore.v1.Backup.verify(message.backup);
                                if (error)
                                    return "backup." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.CreateBackupRequest} CreateBackupRequest
                         */
                        CreateBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.CreateBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.CreateBackupRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.backupId != null)
                                message.backupId = String(object.backupId);
                            if (object.backup != null) {
                                if (typeof object.backup !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.CreateBackupRequest.backup: object expected");
                                message.backup = $root.google.cloud.metastore.v1.Backup.fromObject(object.backup);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.CreateBackupRequest} message CreateBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.backupId = "";
                                object.backup = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.backupId != null && message.hasOwnProperty("backupId"))
                                object.backupId = message.backupId;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = $root.google.cloud.metastore.v1.Backup.toObject(message.backup, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.CreateBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.CreateBackupRequest";
                        };
    
                        return CreateBackupRequest;
                    })();
    
                    v1.DeleteBackupRequest = (function() {
    
                        /**
                         * Properties of a DeleteBackupRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IDeleteBackupRequest
                         * @property {string|null} [name] DeleteBackupRequest name
                         * @property {string|null} [requestId] DeleteBackupRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteBackupRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a DeleteBackupRequest.
                         * @implements IDeleteBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IDeleteBackupRequest=} [properties] Properties to set
                         */
                        function DeleteBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteBackupRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @instance
                         */
                        DeleteBackupRequest.prototype.name = "";
    
                        /**
                         * DeleteBackupRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @instance
                         */
                        DeleteBackupRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.DeleteBackupRequest} DeleteBackupRequest instance
                         */
                        DeleteBackupRequest.create = function create(properties) {
                            return new DeleteBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1.DeleteBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteBackupRequest} message DeleteBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.DeleteBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteBackupRequest} message DeleteBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.DeleteBackupRequest} DeleteBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.DeleteBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.DeleteBackupRequest} DeleteBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.DeleteBackupRequest} DeleteBackupRequest
                         */
                        DeleteBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.DeleteBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.DeleteBackupRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1.DeleteBackupRequest} message DeleteBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.DeleteBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.DeleteBackupRequest";
                        };
    
                        return DeleteBackupRequest;
                    })();
    
                    v1.ExportMetadataRequest = (function() {
    
                        /**
                         * Properties of an ExportMetadataRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IExportMetadataRequest
                         * @property {string|null} [destinationGcsFolder] ExportMetadataRequest destinationGcsFolder
                         * @property {string|null} [service] ExportMetadataRequest service
                         * @property {string|null} [requestId] ExportMetadataRequest requestId
                         * @property {google.cloud.metastore.v1.DatabaseDumpSpec.Type|null} [databaseDumpType] ExportMetadataRequest databaseDumpType
                         */
    
                        /**
                         * Constructs a new ExportMetadataRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents an ExportMetadataRequest.
                         * @implements IExportMetadataRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IExportMetadataRequest=} [properties] Properties to set
                         */
                        function ExportMetadataRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExportMetadataRequest destinationGcsFolder.
                         * @member {string|null|undefined} destinationGcsFolder
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.destinationGcsFolder = null;
    
                        /**
                         * ExportMetadataRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.service = "";
    
                        /**
                         * ExportMetadataRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.requestId = "";
    
                        /**
                         * ExportMetadataRequest databaseDumpType.
                         * @member {google.cloud.metastore.v1.DatabaseDumpSpec.Type} databaseDumpType
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.databaseDumpType = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ExportMetadataRequest destination.
                         * @member {"destinationGcsFolder"|undefined} destination
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @instance
                         */
                        Object.defineProperty(ExportMetadataRequest.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["destinationGcsFolder"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ExportMetadataRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IExportMetadataRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ExportMetadataRequest} ExportMetadataRequest instance
                         */
                        ExportMetadataRequest.create = function create(properties) {
                            return new ExportMetadataRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ExportMetadataRequest message. Does not implicitly {@link google.cloud.metastore.v1.ExportMetadataRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IExportMetadataRequest} message ExportMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportMetadataRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.destinationGcsFolder != null && Object.hasOwnProperty.call(message, "destinationGcsFolder"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.destinationGcsFolder);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.databaseDumpType != null && Object.hasOwnProperty.call(message, "databaseDumpType"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.databaseDumpType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExportMetadataRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ExportMetadataRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IExportMetadataRequest} message ExportMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportMetadataRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExportMetadataRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ExportMetadataRequest} ExportMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportMetadataRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ExportMetadataRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.destinationGcsFolder = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.databaseDumpType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExportMetadataRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ExportMetadataRequest} ExportMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportMetadataRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExportMetadataRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExportMetadataRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.destinationGcsFolder != null && message.hasOwnProperty("destinationGcsFolder")) {
                                properties.destination = 1;
                                if (!$util.isString(message.destinationGcsFolder))
                                    return "destinationGcsFolder: string expected";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                switch (message.databaseDumpType) {
                                default:
                                    return "databaseDumpType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an ExportMetadataRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ExportMetadataRequest} ExportMetadataRequest
                         */
                        ExportMetadataRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ExportMetadataRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ExportMetadataRequest();
                            if (object.destinationGcsFolder != null)
                                message.destinationGcsFolder = String(object.destinationGcsFolder);
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            switch (object.databaseDumpType) {
                            default:
                                if (typeof object.databaseDumpType === "number") {
                                    message.databaseDumpType = object.databaseDumpType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseDumpType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseDumpType = 1;
                                break;
                            case "AVRO":
                            case 2:
                                message.databaseDumpType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExportMetadataRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ExportMetadataRequest} message ExportMetadataRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExportMetadataRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.requestId = "";
                                object.databaseDumpType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.destinationGcsFolder != null && message.hasOwnProperty("destinationGcsFolder")) {
                                object.destinationGcsFolder = message.destinationGcsFolder;
                                if (options.oneofs)
                                    object.destination = "destinationGcsFolder";
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                object.databaseDumpType = options.enums === String ? $root.google.cloud.metastore.v1.DatabaseDumpSpec.Type[message.databaseDumpType] === undefined ? message.databaseDumpType : $root.google.cloud.metastore.v1.DatabaseDumpSpec.Type[message.databaseDumpType] : message.databaseDumpType;
                            return object;
                        };
    
                        /**
                         * Converts this ExportMetadataRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExportMetadataRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExportMetadataRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ExportMetadataRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExportMetadataRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ExportMetadataRequest";
                        };
    
                        return ExportMetadataRequest;
                    })();
    
                    v1.RestoreServiceRequest = (function() {
    
                        /**
                         * Properties of a RestoreServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IRestoreServiceRequest
                         * @property {string|null} [service] RestoreServiceRequest service
                         * @property {string|null} [backup] RestoreServiceRequest backup
                         * @property {google.cloud.metastore.v1.Restore.RestoreType|null} [restoreType] RestoreServiceRequest restoreType
                         * @property {string|null} [requestId] RestoreServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new RestoreServiceRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a RestoreServiceRequest.
                         * @implements IRestoreServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IRestoreServiceRequest=} [properties] Properties to set
                         */
                        function RestoreServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RestoreServiceRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.service = "";
    
                        /**
                         * RestoreServiceRequest backup.
                         * @member {string} backup
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.backup = "";
    
                        /**
                         * RestoreServiceRequest restoreType.
                         * @member {google.cloud.metastore.v1.Restore.RestoreType} restoreType
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.restoreType = 0;
    
                        /**
                         * RestoreServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new RestoreServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IRestoreServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.RestoreServiceRequest} RestoreServiceRequest instance
                         */
                        RestoreServiceRequest.create = function create(properties) {
                            return new RestoreServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RestoreServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1.RestoreServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IRestoreServiceRequest} message RestoreServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RestoreServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.backup);
                            if (message.restoreType != null && Object.hasOwnProperty.call(message, "restoreType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.restoreType);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RestoreServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.RestoreServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IRestoreServiceRequest} message RestoreServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RestoreServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RestoreServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.RestoreServiceRequest} RestoreServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RestoreServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.RestoreServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.backup = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.restoreType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RestoreServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.RestoreServiceRequest} RestoreServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RestoreServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RestoreServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RestoreServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                if (!$util.isString(message.backup))
                                    return "backup: string expected";
                            if (message.restoreType != null && message.hasOwnProperty("restoreType"))
                                switch (message.restoreType) {
                                default:
                                    return "restoreType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RestoreServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.RestoreServiceRequest} RestoreServiceRequest
                         */
                        RestoreServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.RestoreServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.RestoreServiceRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.backup != null)
                                message.backup = String(object.backup);
                            switch (object.restoreType) {
                            default:
                                if (typeof object.restoreType === "number") {
                                    message.restoreType = object.restoreType;
                                    break;
                                }
                                break;
                            case "RESTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.restoreType = 0;
                                break;
                            case "FULL":
                            case 1:
                                message.restoreType = 1;
                                break;
                            case "METADATA_ONLY":
                            case 2:
                                message.restoreType = 2;
                                break;
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RestoreServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1.RestoreServiceRequest} message RestoreServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RestoreServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.backup = "";
                                object.restoreType = options.enums === String ? "RESTORE_TYPE_UNSPECIFIED" : 0;
                                object.requestId = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = message.backup;
                            if (message.restoreType != null && message.hasOwnProperty("restoreType"))
                                object.restoreType = options.enums === String ? $root.google.cloud.metastore.v1.Restore.RestoreType[message.restoreType] === undefined ? message.restoreType : $root.google.cloud.metastore.v1.Restore.RestoreType[message.restoreType] : message.restoreType;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this RestoreServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RestoreServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RestoreServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.RestoreServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RestoreServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.RestoreServiceRequest";
                        };
    
                        return RestoreServiceRequest;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.metastore.v1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.metastore.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.metastore.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1.LocationMetadata = (function() {
    
                        /**
                         * Properties of a LocationMetadata.
                         * @memberof google.cloud.metastore.v1
                         * @interface ILocationMetadata
                         * @property {Array.<google.cloud.metastore.v1.LocationMetadata.IHiveMetastoreVersion>|null} [supportedHiveMetastoreVersions] LocationMetadata supportedHiveMetastoreVersions
                         */
    
                        /**
                         * Constructs a new LocationMetadata.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a LocationMetadata.
                         * @implements ILocationMetadata
                         * @constructor
                         * @param {google.cloud.metastore.v1.ILocationMetadata=} [properties] Properties to set
                         */
                        function LocationMetadata(properties) {
                            this.supportedHiveMetastoreVersions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationMetadata supportedHiveMetastoreVersions.
                         * @member {Array.<google.cloud.metastore.v1.LocationMetadata.IHiveMetastoreVersion>} supportedHiveMetastoreVersions
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @instance
                         */
                        LocationMetadata.prototype.supportedHiveMetastoreVersions = $util.emptyArray;
    
                        /**
                         * Creates a new LocationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1.ILocationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.LocationMetadata} LocationMetadata instance
                         */
                        LocationMetadata.create = function create(properties) {
                            return new LocationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message. Does not implicitly {@link google.cloud.metastore.v1.LocationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.supportedHiveMetastoreVersions != null && message.supportedHiveMetastoreVersions.length)
                                for (var i = 0; i < message.supportedHiveMetastoreVersions.length; ++i)
                                    $root.google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion.encode(message.supportedHiveMetastoreVersions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.LocationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.LocationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.supportedHiveMetastoreVersions && message.supportedHiveMetastoreVersions.length))
                                            message.supportedHiveMetastoreVersions = [];
                                        message.supportedHiveMetastoreVersions.push($root.google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationMetadata message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.supportedHiveMetastoreVersions != null && message.hasOwnProperty("supportedHiveMetastoreVersions")) {
                                if (!Array.isArray(message.supportedHiveMetastoreVersions))
                                    return "supportedHiveMetastoreVersions: array expected";
                                for (var i = 0; i < message.supportedHiveMetastoreVersions.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion.verify(message.supportedHiveMetastoreVersions[i]);
                                    if (error)
                                        return "supportedHiveMetastoreVersions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LocationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.LocationMetadata} LocationMetadata
                         */
                        LocationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.LocationMetadata)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.LocationMetadata();
                            if (object.supportedHiveMetastoreVersions) {
                                if (!Array.isArray(object.supportedHiveMetastoreVersions))
                                    throw TypeError(".google.cloud.metastore.v1.LocationMetadata.supportedHiveMetastoreVersions: array expected");
                                message.supportedHiveMetastoreVersions = [];
                                for (var i = 0; i < object.supportedHiveMetastoreVersions.length; ++i) {
                                    if (typeof object.supportedHiveMetastoreVersions[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.LocationMetadata.supportedHiveMetastoreVersions: object expected");
                                    message.supportedHiveMetastoreVersions[i] = $root.google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion.fromObject(object.supportedHiveMetastoreVersions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1.LocationMetadata} message LocationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.supportedHiveMetastoreVersions = [];
                            if (message.supportedHiveMetastoreVersions && message.supportedHiveMetastoreVersions.length) {
                                object.supportedHiveMetastoreVersions = [];
                                for (var j = 0; j < message.supportedHiveMetastoreVersions.length; ++j)
                                    object.supportedHiveMetastoreVersions[j] = $root.google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion.toObject(message.supportedHiveMetastoreVersions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LocationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.LocationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.LocationMetadata";
                        };
    
                        LocationMetadata.HiveMetastoreVersion = (function() {
    
                            /**
                             * Properties of a HiveMetastoreVersion.
                             * @memberof google.cloud.metastore.v1.LocationMetadata
                             * @interface IHiveMetastoreVersion
                             * @property {string|null} [version] HiveMetastoreVersion version
                             * @property {boolean|null} [isDefault] HiveMetastoreVersion isDefault
                             */
    
                            /**
                             * Constructs a new HiveMetastoreVersion.
                             * @memberof google.cloud.metastore.v1.LocationMetadata
                             * @classdesc Represents a HiveMetastoreVersion.
                             * @implements IHiveMetastoreVersion
                             * @constructor
                             * @param {google.cloud.metastore.v1.LocationMetadata.IHiveMetastoreVersion=} [properties] Properties to set
                             */
                            function HiveMetastoreVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HiveMetastoreVersion version.
                             * @member {string} version
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             */
                            HiveMetastoreVersion.prototype.version = "";
    
                            /**
                             * HiveMetastoreVersion isDefault.
                             * @member {boolean} isDefault
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             */
                            HiveMetastoreVersion.prototype.isDefault = false;
    
                            /**
                             * Creates a new HiveMetastoreVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1.LocationMetadata.IHiveMetastoreVersion=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion instance
                             */
                            HiveMetastoreVersion.create = function create(properties) {
                                return new HiveMetastoreVersion(properties);
                            };
    
                            /**
                             * Encodes the specified HiveMetastoreVersion message. Does not implicitly {@link google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1.LocationMetadata.IHiveMetastoreVersion} message HiveMetastoreVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HiveMetastoreVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.isDefault != null && Object.hasOwnProperty.call(message, "isDefault"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isDefault);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HiveMetastoreVersion message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1.LocationMetadata.IHiveMetastoreVersion} message HiveMetastoreVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HiveMetastoreVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HiveMetastoreVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HiveMetastoreVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.isDefault = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HiveMetastoreVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HiveMetastoreVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HiveMetastoreVersion message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HiveMetastoreVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.isDefault != null && message.hasOwnProperty("isDefault"))
                                    if (typeof message.isDefault !== "boolean")
                                        return "isDefault: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a HiveMetastoreVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             */
                            HiveMetastoreVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.isDefault != null)
                                    message.isDefault = Boolean(object.isDefault);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HiveMetastoreVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion} message HiveMetastoreVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HiveMetastoreVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = "";
                                    object.isDefault = false;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.isDefault != null && message.hasOwnProperty("isDefault"))
                                    object.isDefault = message.isDefault;
                                return object;
                            };
    
                            /**
                             * Converts this HiveMetastoreVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HiveMetastoreVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for HiveMetastoreVersion
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            HiveMetastoreVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1.LocationMetadata.HiveMetastoreVersion";
                            };
    
                            return HiveMetastoreVersion;
                        })();
    
                        return LocationMetadata;
                    })();
    
                    v1.DatabaseDumpSpec = (function() {
    
                        /**
                         * Properties of a DatabaseDumpSpec.
                         * @memberof google.cloud.metastore.v1
                         * @interface IDatabaseDumpSpec
                         */
    
                        /**
                         * Constructs a new DatabaseDumpSpec.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a DatabaseDumpSpec.
                         * @implements IDatabaseDumpSpec
                         * @constructor
                         * @param {google.cloud.metastore.v1.IDatabaseDumpSpec=} [properties] Properties to set
                         */
                        function DatabaseDumpSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new DatabaseDumpSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1.IDatabaseDumpSpec=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.DatabaseDumpSpec} DatabaseDumpSpec instance
                         */
                        DatabaseDumpSpec.create = function create(properties) {
                            return new DatabaseDumpSpec(properties);
                        };
    
                        /**
                         * Encodes the specified DatabaseDumpSpec message. Does not implicitly {@link google.cloud.metastore.v1.DatabaseDumpSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1.IDatabaseDumpSpec} message DatabaseDumpSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseDumpSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DatabaseDumpSpec message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.DatabaseDumpSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1.IDatabaseDumpSpec} message DatabaseDumpSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseDumpSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DatabaseDumpSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.DatabaseDumpSpec} DatabaseDumpSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseDumpSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.DatabaseDumpSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DatabaseDumpSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.DatabaseDumpSpec} DatabaseDumpSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseDumpSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DatabaseDumpSpec message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DatabaseDumpSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a DatabaseDumpSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.DatabaseDumpSpec} DatabaseDumpSpec
                         */
                        DatabaseDumpSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.DatabaseDumpSpec)
                                return object;
                            return new $root.google.cloud.metastore.v1.DatabaseDumpSpec();
                        };
    
                        /**
                         * Creates a plain object from a DatabaseDumpSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1.DatabaseDumpSpec} message DatabaseDumpSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DatabaseDumpSpec.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this DatabaseDumpSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DatabaseDumpSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DatabaseDumpSpec
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.DatabaseDumpSpec
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DatabaseDumpSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.DatabaseDumpSpec";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.metastore.v1.DatabaseDumpSpec.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} MYSQL=1 MYSQL value
                         * @property {number} AVRO=2 AVRO value
                         */
                        DatabaseDumpSpec.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MYSQL"] = 1;
                            values[valuesById[2] = "AVRO"] = 2;
                            return values;
                        })();
    
                        return DatabaseDumpSpec;
                    })();
    
                    v1.DataprocMetastoreFederation = (function() {
    
                        /**
                         * Constructs a new DataprocMetastoreFederation service.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a DataprocMetastoreFederation
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DataprocMetastoreFederation(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DataprocMetastoreFederation.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DataprocMetastoreFederation;
    
                        /**
                         * Creates new DataprocMetastoreFederation service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DataprocMetastoreFederation} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DataprocMetastoreFederation.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastoreFederation|listFederations}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @typedef ListFederationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1.ListFederationsResponse} [response] ListFederationsResponse
                         */
    
                        /**
                         * Calls ListFederations.
                         * @function listFederations
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.IListFederationsRequest} request ListFederationsRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastoreFederation.ListFederationsCallback} callback Node-style callback called with the error, if any, and ListFederationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.listFederations = function listFederations(request, callback) {
                            return this.rpcCall(listFederations, $root.google.cloud.metastore.v1.ListFederationsRequest, $root.google.cloud.metastore.v1.ListFederationsResponse, request, callback);
                        }, "name", { value: "ListFederations" });
    
                        /**
                         * Calls ListFederations.
                         * @function listFederations
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.IListFederationsRequest} request ListFederationsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1.ListFederationsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastoreFederation|getFederation}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @typedef GetFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1.Federation} [response] Federation
                         */
    
                        /**
                         * Calls GetFederation.
                         * @function getFederation
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.IGetFederationRequest} request GetFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastoreFederation.GetFederationCallback} callback Node-style callback called with the error, if any, and Federation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.getFederation = function getFederation(request, callback) {
                            return this.rpcCall(getFederation, $root.google.cloud.metastore.v1.GetFederationRequest, $root.google.cloud.metastore.v1.Federation, request, callback);
                        }, "name", { value: "GetFederation" });
    
                        /**
                         * Calls GetFederation.
                         * @function getFederation
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.IGetFederationRequest} request GetFederationRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1.Federation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastoreFederation|createFederation}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @typedef CreateFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFederation.
                         * @function createFederation
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.ICreateFederationRequest} request CreateFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastoreFederation.CreateFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.createFederation = function createFederation(request, callback) {
                            return this.rpcCall(createFederation, $root.google.cloud.metastore.v1.CreateFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFederation" });
    
                        /**
                         * Calls CreateFederation.
                         * @function createFederation
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.ICreateFederationRequest} request CreateFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastoreFederation|updateFederation}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @typedef UpdateFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFederation.
                         * @function updateFederation
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.IUpdateFederationRequest} request UpdateFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastoreFederation.UpdateFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.updateFederation = function updateFederation(request, callback) {
                            return this.rpcCall(updateFederation, $root.google.cloud.metastore.v1.UpdateFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFederation" });
    
                        /**
                         * Calls UpdateFederation.
                         * @function updateFederation
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.IUpdateFederationRequest} request UpdateFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1.DataprocMetastoreFederation|deleteFederation}.
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @typedef DeleteFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFederation.
                         * @function deleteFederation
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.IDeleteFederationRequest} request DeleteFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1.DataprocMetastoreFederation.DeleteFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.deleteFederation = function deleteFederation(request, callback) {
                            return this.rpcCall(deleteFederation, $root.google.cloud.metastore.v1.DeleteFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFederation" });
    
                        /**
                         * Calls DeleteFederation.
                         * @function deleteFederation
                         * @memberof google.cloud.metastore.v1.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1.IDeleteFederationRequest} request DeleteFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return DataprocMetastoreFederation;
                    })();
    
                    v1.Federation = (function() {
    
                        /**
                         * Properties of a Federation.
                         * @memberof google.cloud.metastore.v1
                         * @interface IFederation
                         * @property {string|null} [name] Federation name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Federation createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Federation updateTime
                         * @property {Object.<string,string>|null} [labels] Federation labels
                         * @property {string|null} [version] Federation version
                         * @property {Object.<string,google.cloud.metastore.v1.IBackendMetastore>|null} [backendMetastores] Federation backendMetastores
                         * @property {string|null} [endpointUri] Federation endpointUri
                         * @property {google.cloud.metastore.v1.Federation.State|null} [state] Federation state
                         * @property {string|null} [stateMessage] Federation stateMessage
                         * @property {string|null} [uid] Federation uid
                         */
    
                        /**
                         * Constructs a new Federation.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a Federation.
                         * @implements IFederation
                         * @constructor
                         * @param {google.cloud.metastore.v1.IFederation=} [properties] Properties to set
                         */
                        function Federation(properties) {
                            this.labels = {};
                            this.backendMetastores = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Federation name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.name = "";
    
                        /**
                         * Federation createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.createTime = null;
    
                        /**
                         * Federation updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.updateTime = null;
    
                        /**
                         * Federation labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.labels = $util.emptyObject;
    
                        /**
                         * Federation version.
                         * @member {string} version
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.version = "";
    
                        /**
                         * Federation backendMetastores.
                         * @member {Object.<string,google.cloud.metastore.v1.IBackendMetastore>} backendMetastores
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.backendMetastores = $util.emptyObject;
    
                        /**
                         * Federation endpointUri.
                         * @member {string} endpointUri
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.endpointUri = "";
    
                        /**
                         * Federation state.
                         * @member {google.cloud.metastore.v1.Federation.State} state
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.state = 0;
    
                        /**
                         * Federation stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.stateMessage = "";
    
                        /**
                         * Federation uid.
                         * @member {string} uid
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         */
                        Federation.prototype.uid = "";
    
                        /**
                         * Creates a new Federation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {google.cloud.metastore.v1.IFederation=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.Federation} Federation instance
                         */
                        Federation.create = function create(properties) {
                            return new Federation(properties);
                        };
    
                        /**
                         * Encodes the specified Federation message. Does not implicitly {@link google.cloud.metastore.v1.Federation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {google.cloud.metastore.v1.IFederation} message Federation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Federation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.version);
                            if (message.backendMetastores != null && Object.hasOwnProperty.call(message, "backendMetastores"))
                                for (var keys = Object.keys(message.backendMetastores), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 0 =*/8).int32(keys[i]);
                                    $root.google.cloud.metastore.v1.BackendMetastore.encode(message.backendMetastores[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.endpointUri);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.stateMessage);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.uid);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Federation message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.Federation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {google.cloud.metastore.v1.IFederation} message Federation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Federation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Federation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.Federation} Federation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Federation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.Federation(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.backendMetastores === $util.emptyObject)
                                            message.backendMetastores = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.int32();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.metastore.v1.BackendMetastore.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.backendMetastores[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.endpointUri = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Federation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.Federation} Federation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Federation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Federation message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Federation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.backendMetastores != null && message.hasOwnProperty("backendMetastores")) {
                                if (!$util.isObject(message.backendMetastores))
                                    return "backendMetastores: object expected";
                                var key = Object.keys(message.backendMetastores);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key32Re.test(key[i]))
                                        return "backendMetastores: integer key{k:int32} expected";
                                    {
                                        var error = $root.google.cloud.metastore.v1.BackendMetastore.verify(message.backendMetastores[key[i]]);
                                        if (error)
                                            return "backendMetastores." + error;
                                    }
                                }
                            }
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                if (!$util.isString(message.endpointUri))
                                    return "endpointUri: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Federation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.Federation} Federation
                         */
                        Federation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.Federation)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.Federation();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Federation.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Federation.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Federation.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.backendMetastores) {
                                if (typeof object.backendMetastores !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.Federation.backendMetastores: object expected");
                                message.backendMetastores = {};
                                for (var keys = Object.keys(object.backendMetastores), i = 0; i < keys.length; ++i) {
                                    if (typeof object.backendMetastores[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.Federation.backendMetastores: object expected");
                                    message.backendMetastores[keys[i]] = $root.google.cloud.metastore.v1.BackendMetastore.fromObject(object.backendMetastores[keys[i]]);
                                }
                            }
                            if (object.endpointUri != null)
                                message.endpointUri = String(object.endpointUri);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "ERROR":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Federation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {google.cloud.metastore.v1.Federation} message Federation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Federation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.backendMetastores = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.version = "";
                                object.endpointUri = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.uid = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.backendMetastores && (keys2 = Object.keys(message.backendMetastores)).length) {
                                object.backendMetastores = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.backendMetastores[keys2[j]] = $root.google.cloud.metastore.v1.BackendMetastore.toObject(message.backendMetastores[keys2[j]], options);
                            }
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                object.endpointUri = message.endpointUri;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1.Federation.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1.Federation.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            return object;
                        };
    
                        /**
                         * Converts this Federation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.Federation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Federation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Federation
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.Federation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Federation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.Federation";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1.Federation.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} ERROR=5 ERROR value
                         */
                        Federation.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "ERROR"] = 5;
                            return values;
                        })();
    
                        return Federation;
                    })();
    
                    v1.BackendMetastore = (function() {
    
                        /**
                         * Properties of a BackendMetastore.
                         * @memberof google.cloud.metastore.v1
                         * @interface IBackendMetastore
                         * @property {string|null} [name] BackendMetastore name
                         * @property {google.cloud.metastore.v1.BackendMetastore.MetastoreType|null} [metastoreType] BackendMetastore metastoreType
                         */
    
                        /**
                         * Constructs a new BackendMetastore.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a BackendMetastore.
                         * @implements IBackendMetastore
                         * @constructor
                         * @param {google.cloud.metastore.v1.IBackendMetastore=} [properties] Properties to set
                         */
                        function BackendMetastore(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackendMetastore name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @instance
                         */
                        BackendMetastore.prototype.name = "";
    
                        /**
                         * BackendMetastore metastoreType.
                         * @member {google.cloud.metastore.v1.BackendMetastore.MetastoreType} metastoreType
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @instance
                         */
                        BackendMetastore.prototype.metastoreType = 0;
    
                        /**
                         * Creates a new BackendMetastore instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1.IBackendMetastore=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.BackendMetastore} BackendMetastore instance
                         */
                        BackendMetastore.create = function create(properties) {
                            return new BackendMetastore(properties);
                        };
    
                        /**
                         * Encodes the specified BackendMetastore message. Does not implicitly {@link google.cloud.metastore.v1.BackendMetastore.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1.IBackendMetastore} message BackendMetastore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackendMetastore.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.metastoreType != null && Object.hasOwnProperty.call(message, "metastoreType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.metastoreType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackendMetastore message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.BackendMetastore.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1.IBackendMetastore} message BackendMetastore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackendMetastore.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackendMetastore message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.BackendMetastore} BackendMetastore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackendMetastore.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.BackendMetastore();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.metastoreType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackendMetastore message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.BackendMetastore} BackendMetastore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackendMetastore.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackendMetastore message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackendMetastore.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.metastoreType != null && message.hasOwnProperty("metastoreType"))
                                switch (message.metastoreType) {
                                default:
                                    return "metastoreType: enum value expected";
                                case 0:
                                case 3:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a BackendMetastore message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.BackendMetastore} BackendMetastore
                         */
                        BackendMetastore.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.BackendMetastore)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.BackendMetastore();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.metastoreType) {
                            default:
                                if (typeof object.metastoreType === "number") {
                                    message.metastoreType = object.metastoreType;
                                    break;
                                }
                                break;
                            case "METASTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.metastoreType = 0;
                                break;
                            case "DATAPROC_METASTORE":
                            case 3:
                                message.metastoreType = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackendMetastore message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1.BackendMetastore} message BackendMetastore
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackendMetastore.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.metastoreType = options.enums === String ? "METASTORE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.metastoreType != null && message.hasOwnProperty("metastoreType"))
                                object.metastoreType = options.enums === String ? $root.google.cloud.metastore.v1.BackendMetastore.MetastoreType[message.metastoreType] === undefined ? message.metastoreType : $root.google.cloud.metastore.v1.BackendMetastore.MetastoreType[message.metastoreType] : message.metastoreType;
                            return object;
                        };
    
                        /**
                         * Converts this BackendMetastore to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackendMetastore.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BackendMetastore
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.BackendMetastore
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BackendMetastore.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.BackendMetastore";
                        };
    
                        /**
                         * MetastoreType enum.
                         * @name google.cloud.metastore.v1.BackendMetastore.MetastoreType
                         * @enum {number}
                         * @property {number} METASTORE_TYPE_UNSPECIFIED=0 METASTORE_TYPE_UNSPECIFIED value
                         * @property {number} DATAPROC_METASTORE=3 DATAPROC_METASTORE value
                         */
                        BackendMetastore.MetastoreType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "METASTORE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[3] = "DATAPROC_METASTORE"] = 3;
                            return values;
                        })();
    
                        return BackendMetastore;
                    })();
    
                    v1.ListFederationsRequest = (function() {
    
                        /**
                         * Properties of a ListFederationsRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IListFederationsRequest
                         * @property {string|null} [parent] ListFederationsRequest parent
                         * @property {number|null} [pageSize] ListFederationsRequest pageSize
                         * @property {string|null} [pageToken] ListFederationsRequest pageToken
                         * @property {string|null} [filter] ListFederationsRequest filter
                         * @property {string|null} [orderBy] ListFederationsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFederationsRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a ListFederationsRequest.
                         * @implements IListFederationsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IListFederationsRequest=} [properties] Properties to set
                         */
                        function ListFederationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFederationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.parent = "";
    
                        /**
                         * ListFederationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFederationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.pageToken = "";
    
                        /**
                         * ListFederationsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.filter = "";
    
                        /**
                         * ListFederationsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFederationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListFederationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ListFederationsRequest} ListFederationsRequest instance
                         */
                        ListFederationsRequest.create = function create(properties) {
                            return new ListFederationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFederationsRequest message. Does not implicitly {@link google.cloud.metastore.v1.ListFederationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListFederationsRequest} message ListFederationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFederationsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ListFederationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IListFederationsRequest} message ListFederationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFederationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ListFederationsRequest} ListFederationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ListFederationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFederationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ListFederationsRequest} ListFederationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFederationsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFederationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFederationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ListFederationsRequest} ListFederationsRequest
                         */
                        ListFederationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ListFederationsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ListFederationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFederationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ListFederationsRequest} message ListFederationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFederationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFederationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFederationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFederationsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ListFederationsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFederationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ListFederationsRequest";
                        };
    
                        return ListFederationsRequest;
                    })();
    
                    v1.ListFederationsResponse = (function() {
    
                        /**
                         * Properties of a ListFederationsResponse.
                         * @memberof google.cloud.metastore.v1
                         * @interface IListFederationsResponse
                         * @property {Array.<google.cloud.metastore.v1.IFederation>|null} [federations] ListFederationsResponse federations
                         * @property {string|null} [nextPageToken] ListFederationsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListFederationsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListFederationsResponse.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a ListFederationsResponse.
                         * @implements IListFederationsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1.IListFederationsResponse=} [properties] Properties to set
                         */
                        function ListFederationsResponse(properties) {
                            this.federations = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFederationsResponse federations.
                         * @member {Array.<google.cloud.metastore.v1.IFederation>} federations
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.federations = $util.emptyArray;
    
                        /**
                         * ListFederationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListFederationsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListFederationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListFederationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.ListFederationsResponse} ListFederationsResponse instance
                         */
                        ListFederationsResponse.create = function create(properties) {
                            return new ListFederationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFederationsResponse message. Does not implicitly {@link google.cloud.metastore.v1.ListFederationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListFederationsResponse} message ListFederationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.federations != null && message.federations.length)
                                for (var i = 0; i < message.federations.length; ++i)
                                    $root.google.cloud.metastore.v1.Federation.encode(message.federations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFederationsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.ListFederationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.IListFederationsResponse} message ListFederationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFederationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.ListFederationsResponse} ListFederationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.ListFederationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.federations && message.federations.length))
                                            message.federations = [];
                                        message.federations.push($root.google.cloud.metastore.v1.Federation.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFederationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.ListFederationsResponse} ListFederationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFederationsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFederationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.federations != null && message.hasOwnProperty("federations")) {
                                if (!Array.isArray(message.federations))
                                    return "federations: array expected";
                                for (var i = 0; i < message.federations.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1.Federation.verify(message.federations[i]);
                                    if (error)
                                        return "federations." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListFederationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.ListFederationsResponse} ListFederationsResponse
                         */
                        ListFederationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.ListFederationsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.ListFederationsResponse();
                            if (object.federations) {
                                if (!Array.isArray(object.federations))
                                    throw TypeError(".google.cloud.metastore.v1.ListFederationsResponse.federations: array expected");
                                message.federations = [];
                                for (var i = 0; i < object.federations.length; ++i) {
                                    if (typeof object.federations[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1.ListFederationsResponse.federations: object expected");
                                    message.federations[i] = $root.google.cloud.metastore.v1.Federation.fromObject(object.federations[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1.ListFederationsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFederationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1.ListFederationsResponse} message ListFederationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFederationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.federations = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.federations && message.federations.length) {
                                object.federations = [];
                                for (var j = 0; j < message.federations.length; ++j)
                                    object.federations[j] = $root.google.cloud.metastore.v1.Federation.toObject(message.federations[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListFederationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFederationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFederationsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.ListFederationsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFederationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.ListFederationsResponse";
                        };
    
                        return ListFederationsResponse;
                    })();
    
                    v1.GetFederationRequest = (function() {
    
                        /**
                         * Properties of a GetFederationRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IGetFederationRequest
                         * @property {string|null} [name] GetFederationRequest name
                         */
    
                        /**
                         * Constructs a new GetFederationRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a GetFederationRequest.
                         * @implements IGetFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IGetFederationRequest=} [properties] Properties to set
                         */
                        function GetFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFederationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @instance
                         */
                        GetFederationRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.GetFederationRequest} GetFederationRequest instance
                         */
                        GetFederationRequest.create = function create(properties) {
                            return new GetFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1.GetFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetFederationRequest} message GetFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.GetFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IGetFederationRequest} message GetFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.GetFederationRequest} GetFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.GetFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.GetFederationRequest} GetFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.GetFederationRequest} GetFederationRequest
                         */
                        GetFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.GetFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.GetFederationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.GetFederationRequest} message GetFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.GetFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.GetFederationRequest";
                        };
    
                        return GetFederationRequest;
                    })();
    
                    v1.CreateFederationRequest = (function() {
    
                        /**
                         * Properties of a CreateFederationRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface ICreateFederationRequest
                         * @property {string|null} [parent] CreateFederationRequest parent
                         * @property {string|null} [federationId] CreateFederationRequest federationId
                         * @property {google.cloud.metastore.v1.IFederation|null} [federation] CreateFederationRequest federation
                         * @property {string|null} [requestId] CreateFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateFederationRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a CreateFederationRequest.
                         * @implements ICreateFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.ICreateFederationRequest=} [properties] Properties to set
                         */
                        function CreateFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFederationRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.parent = "";
    
                        /**
                         * CreateFederationRequest federationId.
                         * @member {string} federationId
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.federationId = "";
    
                        /**
                         * CreateFederationRequest federation.
                         * @member {google.cloud.metastore.v1.IFederation|null|undefined} federation
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.federation = null;
    
                        /**
                         * CreateFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.CreateFederationRequest} CreateFederationRequest instance
                         */
                        CreateFederationRequest.create = function create(properties) {
                            return new CreateFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1.CreateFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateFederationRequest} message CreateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.federationId != null && Object.hasOwnProperty.call(message, "federationId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.federationId);
                            if (message.federation != null && Object.hasOwnProperty.call(message, "federation"))
                                $root.google.cloud.metastore.v1.Federation.encode(message.federation, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.CreateFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.ICreateFederationRequest} message CreateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.CreateFederationRequest} CreateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.CreateFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.federationId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.federation = $root.google.cloud.metastore.v1.Federation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.CreateFederationRequest} CreateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.federationId != null && message.hasOwnProperty("federationId"))
                                if (!$util.isString(message.federationId))
                                    return "federationId: string expected";
                            if (message.federation != null && message.hasOwnProperty("federation")) {
                                var error = $root.google.cloud.metastore.v1.Federation.verify(message.federation);
                                if (error)
                                    return "federation." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.CreateFederationRequest} CreateFederationRequest
                         */
                        CreateFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.CreateFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.CreateFederationRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.federationId != null)
                                message.federationId = String(object.federationId);
                            if (object.federation != null) {
                                if (typeof object.federation !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.CreateFederationRequest.federation: object expected");
                                message.federation = $root.google.cloud.metastore.v1.Federation.fromObject(object.federation);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.CreateFederationRequest} message CreateFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.federationId = "";
                                object.federation = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.federationId != null && message.hasOwnProperty("federationId"))
                                object.federationId = message.federationId;
                            if (message.federation != null && message.hasOwnProperty("federation"))
                                object.federation = $root.google.cloud.metastore.v1.Federation.toObject(message.federation, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.CreateFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.CreateFederationRequest";
                        };
    
                        return CreateFederationRequest;
                    })();
    
                    v1.UpdateFederationRequest = (function() {
    
                        /**
                         * Properties of an UpdateFederationRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IUpdateFederationRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFederationRequest updateMask
                         * @property {google.cloud.metastore.v1.IFederation|null} [federation] UpdateFederationRequest federation
                         * @property {string|null} [requestId] UpdateFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateFederationRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents an UpdateFederationRequest.
                         * @implements IUpdateFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IUpdateFederationRequest=} [properties] Properties to set
                         */
                        function UpdateFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFederationRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateFederationRequest federation.
                         * @member {google.cloud.metastore.v1.IFederation|null|undefined} federation
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.federation = null;
    
                        /**
                         * UpdateFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.UpdateFederationRequest} UpdateFederationRequest instance
                         */
                        UpdateFederationRequest.create = function create(properties) {
                            return new UpdateFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1.UpdateFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateFederationRequest} message UpdateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.federation != null && Object.hasOwnProperty.call(message, "federation"))
                                $root.google.cloud.metastore.v1.Federation.encode(message.federation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.UpdateFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IUpdateFederationRequest} message UpdateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.UpdateFederationRequest} UpdateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.UpdateFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.federation = $root.google.cloud.metastore.v1.Federation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.UpdateFederationRequest} UpdateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.federation != null && message.hasOwnProperty("federation")) {
                                var error = $root.google.cloud.metastore.v1.Federation.verify(message.federation);
                                if (error)
                                    return "federation." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.UpdateFederationRequest} UpdateFederationRequest
                         */
                        UpdateFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.UpdateFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.UpdateFederationRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.UpdateFederationRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.federation != null) {
                                if (typeof object.federation !== "object")
                                    throw TypeError(".google.cloud.metastore.v1.UpdateFederationRequest.federation: object expected");
                                message.federation = $root.google.cloud.metastore.v1.Federation.fromObject(object.federation);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.UpdateFederationRequest} message UpdateFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.federation = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.federation != null && message.hasOwnProperty("federation"))
                                object.federation = $root.google.cloud.metastore.v1.Federation.toObject(message.federation, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.UpdateFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.UpdateFederationRequest";
                        };
    
                        return UpdateFederationRequest;
                    })();
    
                    v1.DeleteFederationRequest = (function() {
    
                        /**
                         * Properties of a DeleteFederationRequest.
                         * @memberof google.cloud.metastore.v1
                         * @interface IDeleteFederationRequest
                         * @property {string|null} [name] DeleteFederationRequest name
                         * @property {string|null} [requestId] DeleteFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteFederationRequest.
                         * @memberof google.cloud.metastore.v1
                         * @classdesc Represents a DeleteFederationRequest.
                         * @implements IDeleteFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1.IDeleteFederationRequest=} [properties] Properties to set
                         */
                        function DeleteFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFederationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @instance
                         */
                        DeleteFederationRequest.prototype.name = "";
    
                        /**
                         * DeleteFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @instance
                         */
                        DeleteFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1.DeleteFederationRequest} DeleteFederationRequest instance
                         */
                        DeleteFederationRequest.create = function create(properties) {
                            return new DeleteFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1.DeleteFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteFederationRequest} message DeleteFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1.DeleteFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.IDeleteFederationRequest} message DeleteFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1.DeleteFederationRequest} DeleteFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1.DeleteFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1.DeleteFederationRequest} DeleteFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1.DeleteFederationRequest} DeleteFederationRequest
                         */
                        DeleteFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1.DeleteFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1.DeleteFederationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1.DeleteFederationRequest} message DeleteFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1.DeleteFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1.DeleteFederationRequest";
                        };
    
                        return DeleteFederationRequest;
                    })();
    
                    return v1;
                })();
    
                metastore.v1alpha = (function() {
    
                    /**
                     * Namespace v1alpha.
                     * @memberof google.cloud.metastore
                     * @namespace
                     */
                    var v1alpha = {};
    
                    v1alpha.DataprocMetastore = (function() {
    
                        /**
                         * Constructs a new DataprocMetastore service.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a DataprocMetastore
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DataprocMetastore(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DataprocMetastore.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DataprocMetastore;
    
                        /**
                         * Creates new DataprocMetastore service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DataprocMetastore} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DataprocMetastore.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|listServices}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef ListServicesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.ListServicesResponse} [response] ListServicesResponse
                         */
    
                        /**
                         * Calls ListServices.
                         * @function listServices
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IListServicesRequest} request ListServicesRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.ListServicesCallback} callback Node-style callback called with the error, if any, and ListServicesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listServices = function listServices(request, callback) {
                            return this.rpcCall(listServices, $root.google.cloud.metastore.v1alpha.ListServicesRequest, $root.google.cloud.metastore.v1alpha.ListServicesResponse, request, callback);
                        }, "name", { value: "ListServices" });
    
                        /**
                         * Calls ListServices.
                         * @function listServices
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IListServicesRequest} request ListServicesRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.ListServicesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|getService}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef GetServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.Service} [response] Service
                         */
    
                        /**
                         * Calls GetService.
                         * @function getService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IGetServiceRequest} request GetServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.GetServiceCallback} callback Node-style callback called with the error, if any, and Service
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getService = function getService(request, callback) {
                            return this.rpcCall(getService, $root.google.cloud.metastore.v1alpha.GetServiceRequest, $root.google.cloud.metastore.v1alpha.Service, request, callback);
                        }, "name", { value: "GetService" });
    
                        /**
                         * Calls GetService.
                         * @function getService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IGetServiceRequest} request GetServiceRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.Service>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|createService}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef CreateServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateService.
                         * @function createService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.ICreateServiceRequest} request CreateServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.CreateServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createService = function createService(request, callback) {
                            return this.rpcCall(createService, $root.google.cloud.metastore.v1alpha.CreateServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateService" });
    
                        /**
                         * Calls CreateService.
                         * @function createService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.ICreateServiceRequest} request CreateServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|updateService}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef UpdateServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateService.
                         * @function updateService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.UpdateServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.updateService = function updateService(request, callback) {
                            return this.rpcCall(updateService, $root.google.cloud.metastore.v1alpha.UpdateServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateService" });
    
                        /**
                         * Calls UpdateService.
                         * @function updateService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|deleteService}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef DeleteServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteService.
                         * @function deleteService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.DeleteServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.deleteService = function deleteService(request, callback) {
                            return this.rpcCall(deleteService, $root.google.cloud.metastore.v1alpha.DeleteServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteService" });
    
                        /**
                         * Calls DeleteService.
                         * @function deleteService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|listMetadataImports}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef ListMetadataImportsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.ListMetadataImportsResponse} [response] ListMetadataImportsResponse
                         */
    
                        /**
                         * Calls ListMetadataImports.
                         * @function listMetadataImports
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsRequest} request ListMetadataImportsRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.ListMetadataImportsCallback} callback Node-style callback called with the error, if any, and ListMetadataImportsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listMetadataImports = function listMetadataImports(request, callback) {
                            return this.rpcCall(listMetadataImports, $root.google.cloud.metastore.v1alpha.ListMetadataImportsRequest, $root.google.cloud.metastore.v1alpha.ListMetadataImportsResponse, request, callback);
                        }, "name", { value: "ListMetadataImports" });
    
                        /**
                         * Calls ListMetadataImports.
                         * @function listMetadataImports
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsRequest} request ListMetadataImportsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.ListMetadataImportsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|getMetadataImport}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef GetMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.MetadataImport} [response] MetadataImport
                         */
    
                        /**
                         * Calls GetMetadataImport.
                         * @function getMetadataImport
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IGetMetadataImportRequest} request GetMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.GetMetadataImportCallback} callback Node-style callback called with the error, if any, and MetadataImport
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getMetadataImport = function getMetadataImport(request, callback) {
                            return this.rpcCall(getMetadataImport, $root.google.cloud.metastore.v1alpha.GetMetadataImportRequest, $root.google.cloud.metastore.v1alpha.MetadataImport, request, callback);
                        }, "name", { value: "GetMetadataImport" });
    
                        /**
                         * Calls GetMetadataImport.
                         * @function getMetadataImport
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IGetMetadataImportRequest} request GetMetadataImportRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.MetadataImport>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|createMetadataImport}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef CreateMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateMetadataImport.
                         * @function createMetadataImport
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.ICreateMetadataImportRequest} request CreateMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.CreateMetadataImportCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createMetadataImport = function createMetadataImport(request, callback) {
                            return this.rpcCall(createMetadataImport, $root.google.cloud.metastore.v1alpha.CreateMetadataImportRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateMetadataImport" });
    
                        /**
                         * Calls CreateMetadataImport.
                         * @function createMetadataImport
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.ICreateMetadataImportRequest} request CreateMetadataImportRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|updateMetadataImport}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef UpdateMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateMetadataImport.
                         * @function updateMetadataImport
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IUpdateMetadataImportRequest} request UpdateMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.UpdateMetadataImportCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.updateMetadataImport = function updateMetadataImport(request, callback) {
                            return this.rpcCall(updateMetadataImport, $root.google.cloud.metastore.v1alpha.UpdateMetadataImportRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateMetadataImport" });
    
                        /**
                         * Calls UpdateMetadataImport.
                         * @function updateMetadataImport
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IUpdateMetadataImportRequest} request UpdateMetadataImportRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|exportMetadata}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef ExportMetadataCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ExportMetadata.
                         * @function exportMetadata
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IExportMetadataRequest} request ExportMetadataRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.ExportMetadataCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.exportMetadata = function exportMetadata(request, callback) {
                            return this.rpcCall(exportMetadata, $root.google.cloud.metastore.v1alpha.ExportMetadataRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ExportMetadata" });
    
                        /**
                         * Calls ExportMetadata.
                         * @function exportMetadata
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IExportMetadataRequest} request ExportMetadataRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|restoreService}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef RestoreServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RestoreService.
                         * @function restoreService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IRestoreServiceRequest} request RestoreServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.RestoreServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.restoreService = function restoreService(request, callback) {
                            return this.rpcCall(restoreService, $root.google.cloud.metastore.v1alpha.RestoreServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RestoreService" });
    
                        /**
                         * Calls RestoreService.
                         * @function restoreService
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IRestoreServiceRequest} request RestoreServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|listBackups}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef ListBackupsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.ListBackupsResponse} [response] ListBackupsResponse
                         */
    
                        /**
                         * Calls ListBackups.
                         * @function listBackups
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IListBackupsRequest} request ListBackupsRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.ListBackupsCallback} callback Node-style callback called with the error, if any, and ListBackupsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listBackups = function listBackups(request, callback) {
                            return this.rpcCall(listBackups, $root.google.cloud.metastore.v1alpha.ListBackupsRequest, $root.google.cloud.metastore.v1alpha.ListBackupsResponse, request, callback);
                        }, "name", { value: "ListBackups" });
    
                        /**
                         * Calls ListBackups.
                         * @function listBackups
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IListBackupsRequest} request ListBackupsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.ListBackupsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|getBackup}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef GetBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.Backup} [response] Backup
                         */
    
                        /**
                         * Calls GetBackup.
                         * @function getBackup
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IGetBackupRequest} request GetBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.GetBackupCallback} callback Node-style callback called with the error, if any, and Backup
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getBackup = function getBackup(request, callback) {
                            return this.rpcCall(getBackup, $root.google.cloud.metastore.v1alpha.GetBackupRequest, $root.google.cloud.metastore.v1alpha.Backup, request, callback);
                        }, "name", { value: "GetBackup" });
    
                        /**
                         * Calls GetBackup.
                         * @function getBackup
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IGetBackupRequest} request GetBackupRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.Backup>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|createBackup}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef CreateBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateBackup.
                         * @function createBackup
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.ICreateBackupRequest} request CreateBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.CreateBackupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createBackup = function createBackup(request, callback) {
                            return this.rpcCall(createBackup, $root.google.cloud.metastore.v1alpha.CreateBackupRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateBackup" });
    
                        /**
                         * Calls CreateBackup.
                         * @function createBackup
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.ICreateBackupRequest} request CreateBackupRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|deleteBackup}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef DeleteBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteBackup.
                         * @function deleteBackup
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IDeleteBackupRequest} request DeleteBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.DeleteBackupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.deleteBackup = function deleteBackup(request, callback) {
                            return this.rpcCall(deleteBackup, $root.google.cloud.metastore.v1alpha.DeleteBackupRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteBackup" });
    
                        /**
                         * Calls DeleteBackup.
                         * @function deleteBackup
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IDeleteBackupRequest} request DeleteBackupRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|removeIamPolicy}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef RemoveIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.RemoveIamPolicyResponse} [response] RemoveIamPolicyResponse
                         */
    
                        /**
                         * Calls RemoveIamPolicy.
                         * @function removeIamPolicy
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyRequest} request RemoveIamPolicyRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.RemoveIamPolicyCallback} callback Node-style callback called with the error, if any, and RemoveIamPolicyResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.removeIamPolicy = function removeIamPolicy(request, callback) {
                            return this.rpcCall(removeIamPolicy, $root.google.cloud.metastore.v1alpha.RemoveIamPolicyRequest, $root.google.cloud.metastore.v1alpha.RemoveIamPolicyResponse, request, callback);
                        }, "name", { value: "RemoveIamPolicy" });
    
                        /**
                         * Calls RemoveIamPolicy.
                         * @function removeIamPolicy
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyRequest} request RemoveIamPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.RemoveIamPolicyResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|queryMetadata}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef QueryMetadataCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls QueryMetadata.
                         * @function queryMetadata
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataRequest} request QueryMetadataRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.QueryMetadataCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.queryMetadata = function queryMetadata(request, callback) {
                            return this.rpcCall(queryMetadata, $root.google.cloud.metastore.v1alpha.QueryMetadataRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "QueryMetadata" });
    
                        /**
                         * Calls QueryMetadata.
                         * @function queryMetadata
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataRequest} request QueryMetadataRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|moveTableToDatabase}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef MoveTableToDatabaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls MoveTableToDatabase.
                         * @function moveTableToDatabase
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseRequest} request MoveTableToDatabaseRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.MoveTableToDatabaseCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.moveTableToDatabase = function moveTableToDatabase(request, callback) {
                            return this.rpcCall(moveTableToDatabase, $root.google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "MoveTableToDatabase" });
    
                        /**
                         * Calls MoveTableToDatabase.
                         * @function moveTableToDatabase
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseRequest} request MoveTableToDatabaseRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastore|alterMetadataResourceLocation}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @typedef AlterMetadataResourceLocationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls AlterMetadataResourceLocation.
                         * @function alterMetadataResourceLocation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationRequest} request AlterMetadataResourceLocationRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastore.AlterMetadataResourceLocationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.alterMetadataResourceLocation = function alterMetadataResourceLocation(request, callback) {
                            return this.rpcCall(alterMetadataResourceLocation, $root.google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "AlterMetadataResourceLocation" });
    
                        /**
                         * Calls AlterMetadataResourceLocation.
                         * @function alterMetadataResourceLocation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationRequest} request AlterMetadataResourceLocationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return DataprocMetastore;
                    })();
    
                    v1alpha.Service = (function() {
    
                        /**
                         * Properties of a Service.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IService
                         * @property {google.cloud.metastore.v1alpha.IHiveMetastoreConfig|null} [hiveMetastoreConfig] Service hiveMetastoreConfig
                         * @property {string|null} [name] Service name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Service createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Service updateTime
                         * @property {Object.<string,string>|null} [labels] Service labels
                         * @property {string|null} [network] Service network
                         * @property {string|null} [endpointUri] Service endpointUri
                         * @property {number|null} [port] Service port
                         * @property {google.cloud.metastore.v1alpha.Service.State|null} [state] Service state
                         * @property {string|null} [stateMessage] Service stateMessage
                         * @property {string|null} [artifactGcsUri] Service artifactGcsUri
                         * @property {google.cloud.metastore.v1alpha.Service.Tier|null} [tier] Service tier
                         * @property {google.cloud.metastore.v1alpha.IMetadataIntegration|null} [metadataIntegration] Service metadataIntegration
                         * @property {google.cloud.metastore.v1alpha.IMaintenanceWindow|null} [maintenanceWindow] Service maintenanceWindow
                         * @property {string|null} [uid] Service uid
                         * @property {google.cloud.metastore.v1alpha.IMetadataManagementActivity|null} [metadataManagementActivity] Service metadataManagementActivity
                         * @property {google.cloud.metastore.v1alpha.Service.ReleaseChannel|null} [releaseChannel] Service releaseChannel
                         * @property {google.cloud.metastore.v1alpha.IEncryptionConfig|null} [encryptionConfig] Service encryptionConfig
                         * @property {google.cloud.metastore.v1alpha.INetworkConfig|null} [networkConfig] Service networkConfig
                         * @property {google.cloud.metastore.v1alpha.Service.DatabaseType|null} [databaseType] Service databaseType
                         * @property {google.cloud.metastore.v1alpha.ITelemetryConfig|null} [telemetryConfig] Service telemetryConfig
                         */
    
                        /**
                         * Constructs a new Service.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a Service.
                         * @implements IService
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IService=} [properties] Properties to set
                         */
                        function Service(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Service hiveMetastoreConfig.
                         * @member {google.cloud.metastore.v1alpha.IHiveMetastoreConfig|null|undefined} hiveMetastoreConfig
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.hiveMetastoreConfig = null;
    
                        /**
                         * Service name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.name = "";
    
                        /**
                         * Service createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.createTime = null;
    
                        /**
                         * Service updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.updateTime = null;
    
                        /**
                         * Service labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.labels = $util.emptyObject;
    
                        /**
                         * Service network.
                         * @member {string} network
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.network = "";
    
                        /**
                         * Service endpointUri.
                         * @member {string} endpointUri
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.endpointUri = "";
    
                        /**
                         * Service port.
                         * @member {number} port
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.port = 0;
    
                        /**
                         * Service state.
                         * @member {google.cloud.metastore.v1alpha.Service.State} state
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.state = 0;
    
                        /**
                         * Service stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.stateMessage = "";
    
                        /**
                         * Service artifactGcsUri.
                         * @member {string} artifactGcsUri
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.artifactGcsUri = "";
    
                        /**
                         * Service tier.
                         * @member {google.cloud.metastore.v1alpha.Service.Tier} tier
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.tier = 0;
    
                        /**
                         * Service metadataIntegration.
                         * @member {google.cloud.metastore.v1alpha.IMetadataIntegration|null|undefined} metadataIntegration
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.metadataIntegration = null;
    
                        /**
                         * Service maintenanceWindow.
                         * @member {google.cloud.metastore.v1alpha.IMaintenanceWindow|null|undefined} maintenanceWindow
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.maintenanceWindow = null;
    
                        /**
                         * Service uid.
                         * @member {string} uid
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.uid = "";
    
                        /**
                         * Service metadataManagementActivity.
                         * @member {google.cloud.metastore.v1alpha.IMetadataManagementActivity|null|undefined} metadataManagementActivity
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.metadataManagementActivity = null;
    
                        /**
                         * Service releaseChannel.
                         * @member {google.cloud.metastore.v1alpha.Service.ReleaseChannel} releaseChannel
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.releaseChannel = 0;
    
                        /**
                         * Service encryptionConfig.
                         * @member {google.cloud.metastore.v1alpha.IEncryptionConfig|null|undefined} encryptionConfig
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.encryptionConfig = null;
    
                        /**
                         * Service networkConfig.
                         * @member {google.cloud.metastore.v1alpha.INetworkConfig|null|undefined} networkConfig
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.networkConfig = null;
    
                        /**
                         * Service databaseType.
                         * @member {google.cloud.metastore.v1alpha.Service.DatabaseType} databaseType
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.databaseType = 0;
    
                        /**
                         * Service telemetryConfig.
                         * @member {google.cloud.metastore.v1alpha.ITelemetryConfig|null|undefined} telemetryConfig
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Service.prototype.telemetryConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Service metastoreConfig.
                         * @member {"hiveMetastoreConfig"|undefined} metastoreConfig
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         */
                        Object.defineProperty(Service.prototype, "metastoreConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["hiveMetastoreConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Service instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IService=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.Service} Service instance
                         */
                        Service.create = function create(properties) {
                            return new Service(properties);
                        };
    
                        /**
                         * Encodes the specified Service message. Does not implicitly {@link google.cloud.metastore.v1alpha.Service.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IService} message Service message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Service.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.hiveMetastoreConfig != null && Object.hasOwnProperty.call(message, "hiveMetastoreConfig"))
                                $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig.encode(message.hiveMetastoreConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.network);
                            if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.endpointUri);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.port);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.stateMessage);
                            if (message.artifactGcsUri != null && Object.hasOwnProperty.call(message, "artifactGcsUri"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.artifactGcsUri);
                            if (message.tier != null && Object.hasOwnProperty.call(message, "tier"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.tier);
                            if (message.metadataIntegration != null && Object.hasOwnProperty.call(message, "metadataIntegration"))
                                $root.google.cloud.metastore.v1alpha.MetadataIntegration.encode(message.metadataIntegration, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.maintenanceWindow != null && Object.hasOwnProperty.call(message, "maintenanceWindow"))
                                $root.google.cloud.metastore.v1alpha.MaintenanceWindow.encode(message.maintenanceWindow, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.uid);
                            if (message.metadataManagementActivity != null && Object.hasOwnProperty.call(message, "metadataManagementActivity"))
                                $root.google.cloud.metastore.v1alpha.MetadataManagementActivity.encode(message.metadataManagementActivity, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.releaseChannel != null && Object.hasOwnProperty.call(message, "releaseChannel"))
                                writer.uint32(/* id 19, wireType 0 =*/152).int32(message.releaseChannel);
                            if (message.encryptionConfig != null && Object.hasOwnProperty.call(message, "encryptionConfig"))
                                $root.google.cloud.metastore.v1alpha.EncryptionConfig.encode(message.encryptionConfig, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                                $root.google.cloud.metastore.v1alpha.NetworkConfig.encode(message.networkConfig, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.databaseType != null && Object.hasOwnProperty.call(message, "databaseType"))
                                writer.uint32(/* id 22, wireType 0 =*/176).int32(message.databaseType);
                            if (message.telemetryConfig != null && Object.hasOwnProperty.call(message, "telemetryConfig"))
                                $root.google.cloud.metastore.v1alpha.TelemetryConfig.encode(message.telemetryConfig, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Service message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.Service.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IService} message Service message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Service.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Service message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.Service} Service
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Service.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.Service(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.hiveMetastoreConfig = $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.network = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.endpointUri = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 10: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.artifactGcsUri = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.tier = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.metadataIntegration = $root.google.cloud.metastore.v1alpha.MetadataIntegration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.maintenanceWindow = $root.google.cloud.metastore.v1alpha.MaintenanceWindow.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 17: {
                                        message.metadataManagementActivity = $root.google.cloud.metastore.v1alpha.MetadataManagementActivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.releaseChannel = reader.int32();
                                        break;
                                    }
                                case 20: {
                                        message.encryptionConfig = $root.google.cloud.metastore.v1alpha.EncryptionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.networkConfig = $root.google.cloud.metastore.v1alpha.NetworkConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 22: {
                                        message.databaseType = reader.int32();
                                        break;
                                    }
                                case 23: {
                                        message.telemetryConfig = $root.google.cloud.metastore.v1alpha.TelemetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Service message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.Service} Service
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Service.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Service message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Service.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.hiveMetastoreConfig != null && message.hasOwnProperty("hiveMetastoreConfig")) {
                                properties.metastoreConfig = 1;
                                {
                                    var error = $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig.verify(message.hiveMetastoreConfig);
                                    if (error)
                                        return "hiveMetastoreConfig." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                if (!$util.isString(message.network))
                                    return "network: string expected";
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                if (!$util.isString(message.endpointUri))
                                    return "endpointUri: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.artifactGcsUri != null && message.hasOwnProperty("artifactGcsUri"))
                                if (!$util.isString(message.artifactGcsUri))
                                    return "artifactGcsUri: string expected";
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                switch (message.tier) {
                                default:
                                    return "tier: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                    break;
                                }
                            if (message.metadataIntegration != null && message.hasOwnProperty("metadataIntegration")) {
                                var error = $root.google.cloud.metastore.v1alpha.MetadataIntegration.verify(message.metadataIntegration);
                                if (error)
                                    return "metadataIntegration." + error;
                            }
                            if (message.maintenanceWindow != null && message.hasOwnProperty("maintenanceWindow")) {
                                var error = $root.google.cloud.metastore.v1alpha.MaintenanceWindow.verify(message.maintenanceWindow);
                                if (error)
                                    return "maintenanceWindow." + error;
                            }
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.metadataManagementActivity != null && message.hasOwnProperty("metadataManagementActivity")) {
                                var error = $root.google.cloud.metastore.v1alpha.MetadataManagementActivity.verify(message.metadataManagementActivity);
                                if (error)
                                    return "metadataManagementActivity." + error;
                            }
                            if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel"))
                                switch (message.releaseChannel) {
                                default:
                                    return "releaseChannel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig")) {
                                var error = $root.google.cloud.metastore.v1alpha.EncryptionConfig.verify(message.encryptionConfig);
                                if (error)
                                    return "encryptionConfig." + error;
                            }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                                var error = $root.google.cloud.metastore.v1alpha.NetworkConfig.verify(message.networkConfig);
                                if (error)
                                    return "networkConfig." + error;
                            }
                            if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                switch (message.databaseType) {
                                default:
                                    return "databaseType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.telemetryConfig != null && message.hasOwnProperty("telemetryConfig")) {
                                var error = $root.google.cloud.metastore.v1alpha.TelemetryConfig.verify(message.telemetryConfig);
                                if (error)
                                    return "telemetryConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Service message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.Service} Service
                         */
                        Service.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.Service)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.Service();
                            if (object.hiveMetastoreConfig != null) {
                                if (typeof object.hiveMetastoreConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.hiveMetastoreConfig: object expected");
                                message.hiveMetastoreConfig = $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig.fromObject(object.hiveMetastoreConfig);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.network != null)
                                message.network = String(object.network);
                            if (object.endpointUri != null)
                                message.endpointUri = String(object.endpointUri);
                            if (object.port != null)
                                message.port = object.port | 0;
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "SUSPENDING":
                            case 3:
                                message.state = 3;
                                break;
                            case "SUSPENDED":
                            case 4:
                                message.state = 4;
                                break;
                            case "UPDATING":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETING":
                            case 6:
                                message.state = 6;
                                break;
                            case "ERROR":
                            case 7:
                                message.state = 7;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.artifactGcsUri != null)
                                message.artifactGcsUri = String(object.artifactGcsUri);
                            switch (object.tier) {
                            default:
                                if (typeof object.tier === "number") {
                                    message.tier = object.tier;
                                    break;
                                }
                                break;
                            case "TIER_UNSPECIFIED":
                            case 0:
                                message.tier = 0;
                                break;
                            case "DEVELOPER":
                            case 1:
                                message.tier = 1;
                                break;
                            case "ENTERPRISE":
                            case 3:
                                message.tier = 3;
                                break;
                            }
                            if (object.metadataIntegration != null) {
                                if (typeof object.metadataIntegration !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.metadataIntegration: object expected");
                                message.metadataIntegration = $root.google.cloud.metastore.v1alpha.MetadataIntegration.fromObject(object.metadataIntegration);
                            }
                            if (object.maintenanceWindow != null) {
                                if (typeof object.maintenanceWindow !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.maintenanceWindow: object expected");
                                message.maintenanceWindow = $root.google.cloud.metastore.v1alpha.MaintenanceWindow.fromObject(object.maintenanceWindow);
                            }
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.metadataManagementActivity != null) {
                                if (typeof object.metadataManagementActivity !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.metadataManagementActivity: object expected");
                                message.metadataManagementActivity = $root.google.cloud.metastore.v1alpha.MetadataManagementActivity.fromObject(object.metadataManagementActivity);
                            }
                            switch (object.releaseChannel) {
                            default:
                                if (typeof object.releaseChannel === "number") {
                                    message.releaseChannel = object.releaseChannel;
                                    break;
                                }
                                break;
                            case "RELEASE_CHANNEL_UNSPECIFIED":
                            case 0:
                                message.releaseChannel = 0;
                                break;
                            case "CANARY":
                            case 1:
                                message.releaseChannel = 1;
                                break;
                            case "STABLE":
                            case 2:
                                message.releaseChannel = 2;
                                break;
                            }
                            if (object.encryptionConfig != null) {
                                if (typeof object.encryptionConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.encryptionConfig: object expected");
                                message.encryptionConfig = $root.google.cloud.metastore.v1alpha.EncryptionConfig.fromObject(object.encryptionConfig);
                            }
                            if (object.networkConfig != null) {
                                if (typeof object.networkConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.networkConfig: object expected");
                                message.networkConfig = $root.google.cloud.metastore.v1alpha.NetworkConfig.fromObject(object.networkConfig);
                            }
                            switch (object.databaseType) {
                            default:
                                if (typeof object.databaseType === "number") {
                                    message.databaseType = object.databaseType;
                                    break;
                                }
                                break;
                            case "DATABASE_TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseType = 1;
                                break;
                            case "SPANNER":
                            case 2:
                                message.databaseType = 2;
                                break;
                            }
                            if (object.telemetryConfig != null) {
                                if (typeof object.telemetryConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Service.telemetryConfig: object expected");
                                message.telemetryConfig = $root.google.cloud.metastore.v1alpha.TelemetryConfig.fromObject(object.telemetryConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Service message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {google.cloud.metastore.v1alpha.Service} message Service
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Service.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.network = "";
                                object.endpointUri = "";
                                object.port = 0;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.artifactGcsUri = "";
                                object.tier = options.enums === String ? "TIER_UNSPECIFIED" : 0;
                                object.metadataIntegration = null;
                                object.maintenanceWindow = null;
                                object.uid = "";
                                object.metadataManagementActivity = null;
                                object.releaseChannel = options.enums === String ? "RELEASE_CHANNEL_UNSPECIFIED" : 0;
                                object.encryptionConfig = null;
                                object.networkConfig = null;
                                object.databaseType = options.enums === String ? "DATABASE_TYPE_UNSPECIFIED" : 0;
                                object.telemetryConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.hiveMetastoreConfig != null && message.hasOwnProperty("hiveMetastoreConfig")) {
                                object.hiveMetastoreConfig = $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig.toObject(message.hiveMetastoreConfig, options);
                                if (options.oneofs)
                                    object.metastoreConfig = "hiveMetastoreConfig";
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                object.network = message.network;
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                object.endpointUri = message.endpointUri;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1alpha.Service.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1alpha.Service.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.artifactGcsUri != null && message.hasOwnProperty("artifactGcsUri"))
                                object.artifactGcsUri = message.artifactGcsUri;
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                object.tier = options.enums === String ? $root.google.cloud.metastore.v1alpha.Service.Tier[message.tier] === undefined ? message.tier : $root.google.cloud.metastore.v1alpha.Service.Tier[message.tier] : message.tier;
                            if (message.metadataIntegration != null && message.hasOwnProperty("metadataIntegration"))
                                object.metadataIntegration = $root.google.cloud.metastore.v1alpha.MetadataIntegration.toObject(message.metadataIntegration, options);
                            if (message.maintenanceWindow != null && message.hasOwnProperty("maintenanceWindow"))
                                object.maintenanceWindow = $root.google.cloud.metastore.v1alpha.MaintenanceWindow.toObject(message.maintenanceWindow, options);
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.metadataManagementActivity != null && message.hasOwnProperty("metadataManagementActivity"))
                                object.metadataManagementActivity = $root.google.cloud.metastore.v1alpha.MetadataManagementActivity.toObject(message.metadataManagementActivity, options);
                            if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel"))
                                object.releaseChannel = options.enums === String ? $root.google.cloud.metastore.v1alpha.Service.ReleaseChannel[message.releaseChannel] === undefined ? message.releaseChannel : $root.google.cloud.metastore.v1alpha.Service.ReleaseChannel[message.releaseChannel] : message.releaseChannel;
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig"))
                                object.encryptionConfig = $root.google.cloud.metastore.v1alpha.EncryptionConfig.toObject(message.encryptionConfig, options);
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                                object.networkConfig = $root.google.cloud.metastore.v1alpha.NetworkConfig.toObject(message.networkConfig, options);
                            if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                object.databaseType = options.enums === String ? $root.google.cloud.metastore.v1alpha.Service.DatabaseType[message.databaseType] === undefined ? message.databaseType : $root.google.cloud.metastore.v1alpha.Service.DatabaseType[message.databaseType] : message.databaseType;
                            if (message.telemetryConfig != null && message.hasOwnProperty("telemetryConfig"))
                                object.telemetryConfig = $root.google.cloud.metastore.v1alpha.TelemetryConfig.toObject(message.telemetryConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this Service to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Service.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Service
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.Service
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Service.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.Service";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1alpha.Service.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} SUSPENDING=3 SUSPENDING value
                         * @property {number} SUSPENDED=4 SUSPENDED value
                         * @property {number} UPDATING=5 UPDATING value
                         * @property {number} DELETING=6 DELETING value
                         * @property {number} ERROR=7 ERROR value
                         */
                        Service.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "SUSPENDING"] = 3;
                            values[valuesById[4] = "SUSPENDED"] = 4;
                            values[valuesById[5] = "UPDATING"] = 5;
                            values[valuesById[6] = "DELETING"] = 6;
                            values[valuesById[7] = "ERROR"] = 7;
                            return values;
                        })();
    
                        /**
                         * Tier enum.
                         * @name google.cloud.metastore.v1alpha.Service.Tier
                         * @enum {number}
                         * @property {number} TIER_UNSPECIFIED=0 TIER_UNSPECIFIED value
                         * @property {number} DEVELOPER=1 DEVELOPER value
                         * @property {number} ENTERPRISE=3 ENTERPRISE value
                         */
                        Service.Tier = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TIER_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEVELOPER"] = 1;
                            values[valuesById[3] = "ENTERPRISE"] = 3;
                            return values;
                        })();
    
                        /**
                         * ReleaseChannel enum.
                         * @name google.cloud.metastore.v1alpha.Service.ReleaseChannel
                         * @enum {number}
                         * @property {number} RELEASE_CHANNEL_UNSPECIFIED=0 RELEASE_CHANNEL_UNSPECIFIED value
                         * @property {number} CANARY=1 CANARY value
                         * @property {number} STABLE=2 STABLE value
                         */
                        Service.ReleaseChannel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RELEASE_CHANNEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CANARY"] = 1;
                            values[valuesById[2] = "STABLE"] = 2;
                            return values;
                        })();
    
                        /**
                         * DatabaseType enum.
                         * @name google.cloud.metastore.v1alpha.Service.DatabaseType
                         * @enum {number}
                         * @property {number} DATABASE_TYPE_UNSPECIFIED=0 DATABASE_TYPE_UNSPECIFIED value
                         * @property {number} MYSQL=1 MYSQL value
                         * @property {number} SPANNER=2 SPANNER value
                         */
                        Service.DatabaseType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DATABASE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MYSQL"] = 1;
                            values[valuesById[2] = "SPANNER"] = 2;
                            return values;
                        })();
    
                        return Service;
                    })();
    
                    v1alpha.MetadataIntegration = (function() {
    
                        /**
                         * Properties of a MetadataIntegration.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IMetadataIntegration
                         * @property {google.cloud.metastore.v1alpha.IDataCatalogConfig|null} [dataCatalogConfig] MetadataIntegration dataCatalogConfig
                         * @property {google.cloud.metastore.v1alpha.IDataplexConfig|null} [dataplexConfig] MetadataIntegration dataplexConfig
                         */
    
                        /**
                         * Constructs a new MetadataIntegration.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a MetadataIntegration.
                         * @implements IMetadataIntegration
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IMetadataIntegration=} [properties] Properties to set
                         */
                        function MetadataIntegration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataIntegration dataCatalogConfig.
                         * @member {google.cloud.metastore.v1alpha.IDataCatalogConfig|null|undefined} dataCatalogConfig
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @instance
                         */
                        MetadataIntegration.prototype.dataCatalogConfig = null;
    
                        /**
                         * MetadataIntegration dataplexConfig.
                         * @member {google.cloud.metastore.v1alpha.IDataplexConfig|null|undefined} dataplexConfig
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @instance
                         */
                        MetadataIntegration.prototype.dataplexConfig = null;
    
                        /**
                         * Creates a new MetadataIntegration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataIntegration=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.MetadataIntegration} MetadataIntegration instance
                         */
                        MetadataIntegration.create = function create(properties) {
                            return new MetadataIntegration(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataIntegration message. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataIntegration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataIntegration} message MetadataIntegration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataIntegration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dataCatalogConfig != null && Object.hasOwnProperty.call(message, "dataCatalogConfig"))
                                $root.google.cloud.metastore.v1alpha.DataCatalogConfig.encode(message.dataCatalogConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dataplexConfig != null && Object.hasOwnProperty.call(message, "dataplexConfig"))
                                $root.google.cloud.metastore.v1alpha.DataplexConfig.encode(message.dataplexConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataIntegration message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataIntegration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataIntegration} message MetadataIntegration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataIntegration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataIntegration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.MetadataIntegration} MetadataIntegration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataIntegration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.MetadataIntegration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dataCatalogConfig = $root.google.cloud.metastore.v1alpha.DataCatalogConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dataplexConfig = $root.google.cloud.metastore.v1alpha.DataplexConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataIntegration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.MetadataIntegration} MetadataIntegration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataIntegration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataIntegration message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataIntegration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dataCatalogConfig != null && message.hasOwnProperty("dataCatalogConfig")) {
                                var error = $root.google.cloud.metastore.v1alpha.DataCatalogConfig.verify(message.dataCatalogConfig);
                                if (error)
                                    return "dataCatalogConfig." + error;
                            }
                            if (message.dataplexConfig != null && message.hasOwnProperty("dataplexConfig")) {
                                var error = $root.google.cloud.metastore.v1alpha.DataplexConfig.verify(message.dataplexConfig);
                                if (error)
                                    return "dataplexConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataIntegration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.MetadataIntegration} MetadataIntegration
                         */
                        MetadataIntegration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.MetadataIntegration)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.MetadataIntegration();
                            if (object.dataCatalogConfig != null) {
                                if (typeof object.dataCatalogConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataIntegration.dataCatalogConfig: object expected");
                                message.dataCatalogConfig = $root.google.cloud.metastore.v1alpha.DataCatalogConfig.fromObject(object.dataCatalogConfig);
                            }
                            if (object.dataplexConfig != null) {
                                if (typeof object.dataplexConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataIntegration.dataplexConfig: object expected");
                                message.dataplexConfig = $root.google.cloud.metastore.v1alpha.DataplexConfig.fromObject(object.dataplexConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataIntegration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {google.cloud.metastore.v1alpha.MetadataIntegration} message MetadataIntegration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataIntegration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.dataCatalogConfig = null;
                                object.dataplexConfig = null;
                            }
                            if (message.dataCatalogConfig != null && message.hasOwnProperty("dataCatalogConfig"))
                                object.dataCatalogConfig = $root.google.cloud.metastore.v1alpha.DataCatalogConfig.toObject(message.dataCatalogConfig, options);
                            if (message.dataplexConfig != null && message.hasOwnProperty("dataplexConfig"))
                                object.dataplexConfig = $root.google.cloud.metastore.v1alpha.DataplexConfig.toObject(message.dataplexConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this MetadataIntegration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataIntegration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataIntegration
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.MetadataIntegration
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataIntegration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.MetadataIntegration";
                        };
    
                        return MetadataIntegration;
                    })();
    
                    v1alpha.DataCatalogConfig = (function() {
    
                        /**
                         * Properties of a DataCatalogConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IDataCatalogConfig
                         * @property {boolean|null} [enabled] DataCatalogConfig enabled
                         */
    
                        /**
                         * Constructs a new DataCatalogConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a DataCatalogConfig.
                         * @implements IDataCatalogConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IDataCatalogConfig=} [properties] Properties to set
                         */
                        function DataCatalogConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DataCatalogConfig enabled.
                         * @member {boolean} enabled
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @instance
                         */
                        DataCatalogConfig.prototype.enabled = false;
    
                        /**
                         * Creates a new DataCatalogConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDataCatalogConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.DataCatalogConfig} DataCatalogConfig instance
                         */
                        DataCatalogConfig.create = function create(properties) {
                            return new DataCatalogConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DataCatalogConfig message. Does not implicitly {@link google.cloud.metastore.v1alpha.DataCatalogConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDataCatalogConfig} message DataCatalogConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataCatalogConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enabled);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DataCatalogConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.DataCatalogConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDataCatalogConfig} message DataCatalogConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataCatalogConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DataCatalogConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.DataCatalogConfig} DataCatalogConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataCatalogConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.DataCatalogConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.enabled = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DataCatalogConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.DataCatalogConfig} DataCatalogConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataCatalogConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DataCatalogConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DataCatalogConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                if (typeof message.enabled !== "boolean")
                                    return "enabled: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DataCatalogConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.DataCatalogConfig} DataCatalogConfig
                         */
                        DataCatalogConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.DataCatalogConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.DataCatalogConfig();
                            if (object.enabled != null)
                                message.enabled = Boolean(object.enabled);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DataCatalogConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.DataCatalogConfig} message DataCatalogConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DataCatalogConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.enabled = false;
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                object.enabled = message.enabled;
                            return object;
                        };
    
                        /**
                         * Converts this DataCatalogConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DataCatalogConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DataCatalogConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.DataCatalogConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DataCatalogConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.DataCatalogConfig";
                        };
    
                        return DataCatalogConfig;
                    })();
    
                    v1alpha.DataplexConfig = (function() {
    
                        /**
                         * Properties of a DataplexConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IDataplexConfig
                         * @property {Object.<string,google.cloud.metastore.v1alpha.ILake>|null} [lakeResources] DataplexConfig lakeResources
                         */
    
                        /**
                         * Constructs a new DataplexConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a DataplexConfig.
                         * @implements IDataplexConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IDataplexConfig=} [properties] Properties to set
                         */
                        function DataplexConfig(properties) {
                            this.lakeResources = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DataplexConfig lakeResources.
                         * @member {Object.<string,google.cloud.metastore.v1alpha.ILake>} lakeResources
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @instance
                         */
                        DataplexConfig.prototype.lakeResources = $util.emptyObject;
    
                        /**
                         * Creates a new DataplexConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDataplexConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.DataplexConfig} DataplexConfig instance
                         */
                        DataplexConfig.create = function create(properties) {
                            return new DataplexConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DataplexConfig message. Does not implicitly {@link google.cloud.metastore.v1alpha.DataplexConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDataplexConfig} message DataplexConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataplexConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.lakeResources != null && Object.hasOwnProperty.call(message, "lakeResources"))
                                for (var keys = Object.keys(message.lakeResources), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.metastore.v1alpha.Lake.encode(message.lakeResources[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DataplexConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.DataplexConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDataplexConfig} message DataplexConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataplexConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DataplexConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.DataplexConfig} DataplexConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataplexConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.DataplexConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.lakeResources === $util.emptyObject)
                                            message.lakeResources = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.metastore.v1alpha.Lake.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.lakeResources[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DataplexConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.DataplexConfig} DataplexConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataplexConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DataplexConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DataplexConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.lakeResources != null && message.hasOwnProperty("lakeResources")) {
                                if (!$util.isObject(message.lakeResources))
                                    return "lakeResources: object expected";
                                var key = Object.keys(message.lakeResources);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.Lake.verify(message.lakeResources[key[i]]);
                                    if (error)
                                        return "lakeResources." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DataplexConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.DataplexConfig} DataplexConfig
                         */
                        DataplexConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.DataplexConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.DataplexConfig();
                            if (object.lakeResources) {
                                if (typeof object.lakeResources !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.DataplexConfig.lakeResources: object expected");
                                message.lakeResources = {};
                                for (var keys = Object.keys(object.lakeResources), i = 0; i < keys.length; ++i) {
                                    if (typeof object.lakeResources[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.DataplexConfig.lakeResources: object expected");
                                    message.lakeResources[keys[i]] = $root.google.cloud.metastore.v1alpha.Lake.fromObject(object.lakeResources[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DataplexConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.DataplexConfig} message DataplexConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DataplexConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.lakeResources = {};
                            var keys2;
                            if (message.lakeResources && (keys2 = Object.keys(message.lakeResources)).length) {
                                object.lakeResources = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.lakeResources[keys2[j]] = $root.google.cloud.metastore.v1alpha.Lake.toObject(message.lakeResources[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DataplexConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DataplexConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DataplexConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.DataplexConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DataplexConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.DataplexConfig";
                        };
    
                        return DataplexConfig;
                    })();
    
                    v1alpha.Lake = (function() {
    
                        /**
                         * Properties of a Lake.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface ILake
                         * @property {string|null} [name] Lake name
                         */
    
                        /**
                         * Constructs a new Lake.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a Lake.
                         * @implements ILake
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.ILake=} [properties] Properties to set
                         */
                        function Lake(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Lake name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @instance
                         */
                        Lake.prototype.name = "";
    
                        /**
                         * Creates a new Lake instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ILake=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.Lake} Lake instance
                         */
                        Lake.create = function create(properties) {
                            return new Lake(properties);
                        };
    
                        /**
                         * Encodes the specified Lake message. Does not implicitly {@link google.cloud.metastore.v1alpha.Lake.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ILake} message Lake message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Lake.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Lake message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.Lake.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ILake} message Lake message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Lake.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Lake message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.Lake} Lake
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Lake.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.Lake();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Lake message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.Lake} Lake
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Lake.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Lake message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Lake.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Lake message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.Lake} Lake
                         */
                        Lake.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.Lake)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.Lake();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Lake message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {google.cloud.metastore.v1alpha.Lake} message Lake
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Lake.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this Lake to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Lake.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Lake
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.Lake
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Lake.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.Lake";
                        };
    
                        return Lake;
                    })();
    
                    v1alpha.MaintenanceWindow = (function() {
    
                        /**
                         * Properties of a MaintenanceWindow.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IMaintenanceWindow
                         * @property {google.protobuf.IInt32Value|null} [hourOfDay] MaintenanceWindow hourOfDay
                         * @property {google.type.DayOfWeek|null} [dayOfWeek] MaintenanceWindow dayOfWeek
                         */
    
                        /**
                         * Constructs a new MaintenanceWindow.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a MaintenanceWindow.
                         * @implements IMaintenanceWindow
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IMaintenanceWindow=} [properties] Properties to set
                         */
                        function MaintenanceWindow(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MaintenanceWindow hourOfDay.
                         * @member {google.protobuf.IInt32Value|null|undefined} hourOfDay
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.hourOfDay = null;
    
                        /**
                         * MaintenanceWindow dayOfWeek.
                         * @member {google.type.DayOfWeek} dayOfWeek
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.dayOfWeek = 0;
    
                        /**
                         * Creates a new MaintenanceWindow instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMaintenanceWindow=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.MaintenanceWindow} MaintenanceWindow instance
                         */
                        MaintenanceWindow.create = function create(properties) {
                            return new MaintenanceWindow(properties);
                        };
    
                        /**
                         * Encodes the specified MaintenanceWindow message. Does not implicitly {@link google.cloud.metastore.v1alpha.MaintenanceWindow.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MaintenanceWindow.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hourOfDay != null && Object.hasOwnProperty.call(message, "hourOfDay"))
                                $root.google.protobuf.Int32Value.encode(message.hourOfDay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dayOfWeek != null && Object.hasOwnProperty.call(message, "dayOfWeek"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dayOfWeek);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MaintenanceWindow message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.MaintenanceWindow.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MaintenanceWindow.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MaintenanceWindow message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.MaintenanceWindow} MaintenanceWindow
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MaintenanceWindow.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.MaintenanceWindow();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hourOfDay = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dayOfWeek = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MaintenanceWindow message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.MaintenanceWindow} MaintenanceWindow
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MaintenanceWindow.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MaintenanceWindow message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MaintenanceWindow.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hourOfDay != null && message.hasOwnProperty("hourOfDay")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.hourOfDay);
                                if (error)
                                    return "hourOfDay." + error;
                            }
                            if (message.dayOfWeek != null && message.hasOwnProperty("dayOfWeek"))
                                switch (message.dayOfWeek) {
                                default:
                                    return "dayOfWeek: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MaintenanceWindow message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.MaintenanceWindow} MaintenanceWindow
                         */
                        MaintenanceWindow.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.MaintenanceWindow)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.MaintenanceWindow();
                            if (object.hourOfDay != null) {
                                if (typeof object.hourOfDay !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MaintenanceWindow.hourOfDay: object expected");
                                message.hourOfDay = $root.google.protobuf.Int32Value.fromObject(object.hourOfDay);
                            }
                            switch (object.dayOfWeek) {
                            default:
                                if (typeof object.dayOfWeek === "number") {
                                    message.dayOfWeek = object.dayOfWeek;
                                    break;
                                }
                                break;
                            case "DAY_OF_WEEK_UNSPECIFIED":
                            case 0:
                                message.dayOfWeek = 0;
                                break;
                            case "MONDAY":
                            case 1:
                                message.dayOfWeek = 1;
                                break;
                            case "TUESDAY":
                            case 2:
                                message.dayOfWeek = 2;
                                break;
                            case "WEDNESDAY":
                            case 3:
                                message.dayOfWeek = 3;
                                break;
                            case "THURSDAY":
                            case 4:
                                message.dayOfWeek = 4;
                                break;
                            case "FRIDAY":
                            case 5:
                                message.dayOfWeek = 5;
                                break;
                            case "SATURDAY":
                            case 6:
                                message.dayOfWeek = 6;
                                break;
                            case "SUNDAY":
                            case 7:
                                message.dayOfWeek = 7;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MaintenanceWindow message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1alpha.MaintenanceWindow} message MaintenanceWindow
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MaintenanceWindow.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hourOfDay = null;
                                object.dayOfWeek = options.enums === String ? "DAY_OF_WEEK_UNSPECIFIED" : 0;
                            }
                            if (message.hourOfDay != null && message.hasOwnProperty("hourOfDay"))
                                object.hourOfDay = $root.google.protobuf.Int32Value.toObject(message.hourOfDay, options);
                            if (message.dayOfWeek != null && message.hasOwnProperty("dayOfWeek"))
                                object.dayOfWeek = options.enums === String ? $root.google.type.DayOfWeek[message.dayOfWeek] === undefined ? message.dayOfWeek : $root.google.type.DayOfWeek[message.dayOfWeek] : message.dayOfWeek;
                            return object;
                        };
    
                        /**
                         * Converts this MaintenanceWindow to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MaintenanceWindow.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MaintenanceWindow
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.MaintenanceWindow
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MaintenanceWindow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.MaintenanceWindow";
                        };
    
                        return MaintenanceWindow;
                    })();
    
                    v1alpha.HiveMetastoreConfig = (function() {
    
                        /**
                         * Properties of a HiveMetastoreConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IHiveMetastoreConfig
                         * @property {string|null} [version] HiveMetastoreConfig version
                         * @property {Object.<string,string>|null} [configOverrides] HiveMetastoreConfig configOverrides
                         * @property {google.cloud.metastore.v1alpha.IKerberosConfig|null} [kerberosConfig] HiveMetastoreConfig kerberosConfig
                         * @property {google.cloud.metastore.v1alpha.HiveMetastoreConfig.EndpointProtocol|null} [endpointProtocol] HiveMetastoreConfig endpointProtocol
                         * @property {Object.<string,google.cloud.metastore.v1alpha.IAuxiliaryVersionConfig>|null} [auxiliaryVersions] HiveMetastoreConfig auxiliaryVersions
                         */
    
                        /**
                         * Constructs a new HiveMetastoreConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a HiveMetastoreConfig.
                         * @implements IHiveMetastoreConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IHiveMetastoreConfig=} [properties] Properties to set
                         */
                        function HiveMetastoreConfig(properties) {
                            this.configOverrides = {};
                            this.auxiliaryVersions = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HiveMetastoreConfig version.
                         * @member {string} version
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.version = "";
    
                        /**
                         * HiveMetastoreConfig configOverrides.
                         * @member {Object.<string,string>} configOverrides
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.configOverrides = $util.emptyObject;
    
                        /**
                         * HiveMetastoreConfig kerberosConfig.
                         * @member {google.cloud.metastore.v1alpha.IKerberosConfig|null|undefined} kerberosConfig
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.kerberosConfig = null;
    
                        /**
                         * HiveMetastoreConfig endpointProtocol.
                         * @member {google.cloud.metastore.v1alpha.HiveMetastoreConfig.EndpointProtocol} endpointProtocol
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.endpointProtocol = 0;
    
                        /**
                         * HiveMetastoreConfig auxiliaryVersions.
                         * @member {Object.<string,google.cloud.metastore.v1alpha.IAuxiliaryVersionConfig>} auxiliaryVersions
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.auxiliaryVersions = $util.emptyObject;
    
                        /**
                         * Creates a new HiveMetastoreConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IHiveMetastoreConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.HiveMetastoreConfig} HiveMetastoreConfig instance
                         */
                        HiveMetastoreConfig.create = function create(properties) {
                            return new HiveMetastoreConfig(properties);
                        };
    
                        /**
                         * Encodes the specified HiveMetastoreConfig message. Does not implicitly {@link google.cloud.metastore.v1alpha.HiveMetastoreConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IHiveMetastoreConfig} message HiveMetastoreConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HiveMetastoreConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                            if (message.configOverrides != null && Object.hasOwnProperty.call(message, "configOverrides"))
                                for (var keys = Object.keys(message.configOverrides), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.configOverrides[keys[i]]).ldelim();
                            if (message.kerberosConfig != null && Object.hasOwnProperty.call(message, "kerberosConfig"))
                                $root.google.cloud.metastore.v1alpha.KerberosConfig.encode(message.kerberosConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.endpointProtocol != null && Object.hasOwnProperty.call(message, "endpointProtocol"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.endpointProtocol);
                            if (message.auxiliaryVersions != null && Object.hasOwnProperty.call(message, "auxiliaryVersions"))
                                for (var keys = Object.keys(message.auxiliaryVersions), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.encode(message.auxiliaryVersions[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HiveMetastoreConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.HiveMetastoreConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IHiveMetastoreConfig} message HiveMetastoreConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HiveMetastoreConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HiveMetastoreConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.HiveMetastoreConfig} HiveMetastoreConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HiveMetastoreConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.configOverrides === $util.emptyObject)
                                            message.configOverrides = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.configOverrides[key] = value;
                                        break;
                                    }
                                case 3: {
                                        message.kerberosConfig = $root.google.cloud.metastore.v1alpha.KerberosConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.endpointProtocol = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        if (message.auxiliaryVersions === $util.emptyObject)
                                            message.auxiliaryVersions = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.auxiliaryVersions[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HiveMetastoreConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.HiveMetastoreConfig} HiveMetastoreConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HiveMetastoreConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HiveMetastoreConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HiveMetastoreConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.configOverrides != null && message.hasOwnProperty("configOverrides")) {
                                if (!$util.isObject(message.configOverrides))
                                    return "configOverrides: object expected";
                                var key = Object.keys(message.configOverrides);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.configOverrides[key[i]]))
                                        return "configOverrides: string{k:string} expected";
                            }
                            if (message.kerberosConfig != null && message.hasOwnProperty("kerberosConfig")) {
                                var error = $root.google.cloud.metastore.v1alpha.KerberosConfig.verify(message.kerberosConfig);
                                if (error)
                                    return "kerberosConfig." + error;
                            }
                            if (message.endpointProtocol != null && message.hasOwnProperty("endpointProtocol"))
                                switch (message.endpointProtocol) {
                                default:
                                    return "endpointProtocol: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.auxiliaryVersions != null && message.hasOwnProperty("auxiliaryVersions")) {
                                if (!$util.isObject(message.auxiliaryVersions))
                                    return "auxiliaryVersions: object expected";
                                var key = Object.keys(message.auxiliaryVersions);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.verify(message.auxiliaryVersions[key[i]]);
                                    if (error)
                                        return "auxiliaryVersions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HiveMetastoreConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.HiveMetastoreConfig} HiveMetastoreConfig
                         */
                        HiveMetastoreConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig();
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.configOverrides) {
                                if (typeof object.configOverrides !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.HiveMetastoreConfig.configOverrides: object expected");
                                message.configOverrides = {};
                                for (var keys = Object.keys(object.configOverrides), i = 0; i < keys.length; ++i)
                                    message.configOverrides[keys[i]] = String(object.configOverrides[keys[i]]);
                            }
                            if (object.kerberosConfig != null) {
                                if (typeof object.kerberosConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.HiveMetastoreConfig.kerberosConfig: object expected");
                                message.kerberosConfig = $root.google.cloud.metastore.v1alpha.KerberosConfig.fromObject(object.kerberosConfig);
                            }
                            switch (object.endpointProtocol) {
                            default:
                                if (typeof object.endpointProtocol === "number") {
                                    message.endpointProtocol = object.endpointProtocol;
                                    break;
                                }
                                break;
                            case "ENDPOINT_PROTOCOL_UNSPECIFIED":
                            case 0:
                                message.endpointProtocol = 0;
                                break;
                            case "THRIFT":
                            case 1:
                                message.endpointProtocol = 1;
                                break;
                            case "GRPC":
                            case 2:
                                message.endpointProtocol = 2;
                                break;
                            }
                            if (object.auxiliaryVersions) {
                                if (typeof object.auxiliaryVersions !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.HiveMetastoreConfig.auxiliaryVersions: object expected");
                                message.auxiliaryVersions = {};
                                for (var keys = Object.keys(object.auxiliaryVersions), i = 0; i < keys.length; ++i) {
                                    if (typeof object.auxiliaryVersions[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.HiveMetastoreConfig.auxiliaryVersions: object expected");
                                    message.auxiliaryVersions[keys[i]] = $root.google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.fromObject(object.auxiliaryVersions[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HiveMetastoreConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.HiveMetastoreConfig} message HiveMetastoreConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HiveMetastoreConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.configOverrides = {};
                                object.auxiliaryVersions = {};
                            }
                            if (options.defaults) {
                                object.version = "";
                                object.kerberosConfig = null;
                                object.endpointProtocol = options.enums === String ? "ENDPOINT_PROTOCOL_UNSPECIFIED" : 0;
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            var keys2;
                            if (message.configOverrides && (keys2 = Object.keys(message.configOverrides)).length) {
                                object.configOverrides = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.configOverrides[keys2[j]] = message.configOverrides[keys2[j]];
                            }
                            if (message.kerberosConfig != null && message.hasOwnProperty("kerberosConfig"))
                                object.kerberosConfig = $root.google.cloud.metastore.v1alpha.KerberosConfig.toObject(message.kerberosConfig, options);
                            if (message.endpointProtocol != null && message.hasOwnProperty("endpointProtocol"))
                                object.endpointProtocol = options.enums === String ? $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig.EndpointProtocol[message.endpointProtocol] === undefined ? message.endpointProtocol : $root.google.cloud.metastore.v1alpha.HiveMetastoreConfig.EndpointProtocol[message.endpointProtocol] : message.endpointProtocol;
                            if (message.auxiliaryVersions && (keys2 = Object.keys(message.auxiliaryVersions)).length) {
                                object.auxiliaryVersions = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.auxiliaryVersions[keys2[j]] = $root.google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.toObject(message.auxiliaryVersions[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HiveMetastoreConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HiveMetastoreConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HiveMetastoreConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.HiveMetastoreConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HiveMetastoreConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.HiveMetastoreConfig";
                        };
    
                        /**
                         * EndpointProtocol enum.
                         * @name google.cloud.metastore.v1alpha.HiveMetastoreConfig.EndpointProtocol
                         * @enum {number}
                         * @property {number} ENDPOINT_PROTOCOL_UNSPECIFIED=0 ENDPOINT_PROTOCOL_UNSPECIFIED value
                         * @property {number} THRIFT=1 THRIFT value
                         * @property {number} GRPC=2 GRPC value
                         */
                        HiveMetastoreConfig.EndpointProtocol = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ENDPOINT_PROTOCOL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "THRIFT"] = 1;
                            values[valuesById[2] = "GRPC"] = 2;
                            return values;
                        })();
    
                        return HiveMetastoreConfig;
                    })();
    
                    v1alpha.KerberosConfig = (function() {
    
                        /**
                         * Properties of a KerberosConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IKerberosConfig
                         * @property {google.cloud.metastore.v1alpha.ISecret|null} [keytab] KerberosConfig keytab
                         * @property {string|null} [principal] KerberosConfig principal
                         * @property {string|null} [krb5ConfigGcsUri] KerberosConfig krb5ConfigGcsUri
                         */
    
                        /**
                         * Constructs a new KerberosConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a KerberosConfig.
                         * @implements IKerberosConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IKerberosConfig=} [properties] Properties to set
                         */
                        function KerberosConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KerberosConfig keytab.
                         * @member {google.cloud.metastore.v1alpha.ISecret|null|undefined} keytab
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.keytab = null;
    
                        /**
                         * KerberosConfig principal.
                         * @member {string} principal
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.principal = "";
    
                        /**
                         * KerberosConfig krb5ConfigGcsUri.
                         * @member {string} krb5ConfigGcsUri
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.krb5ConfigGcsUri = "";
    
                        /**
                         * Creates a new KerberosConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IKerberosConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.KerberosConfig} KerberosConfig instance
                         */
                        KerberosConfig.create = function create(properties) {
                            return new KerberosConfig(properties);
                        };
    
                        /**
                         * Encodes the specified KerberosConfig message. Does not implicitly {@link google.cloud.metastore.v1alpha.KerberosConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IKerberosConfig} message KerberosConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KerberosConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.keytab != null && Object.hasOwnProperty.call(message, "keytab"))
                                $root.google.cloud.metastore.v1alpha.Secret.encode(message.keytab, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.principal != null && Object.hasOwnProperty.call(message, "principal"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.principal);
                            if (message.krb5ConfigGcsUri != null && Object.hasOwnProperty.call(message, "krb5ConfigGcsUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.krb5ConfigGcsUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KerberosConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.KerberosConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IKerberosConfig} message KerberosConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KerberosConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KerberosConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.KerberosConfig} KerberosConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KerberosConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.KerberosConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.keytab = $root.google.cloud.metastore.v1alpha.Secret.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.principal = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.krb5ConfigGcsUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KerberosConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.KerberosConfig} KerberosConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KerberosConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KerberosConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KerberosConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.keytab != null && message.hasOwnProperty("keytab")) {
                                var error = $root.google.cloud.metastore.v1alpha.Secret.verify(message.keytab);
                                if (error)
                                    return "keytab." + error;
                            }
                            if (message.principal != null && message.hasOwnProperty("principal"))
                                if (!$util.isString(message.principal))
                                    return "principal: string expected";
                            if (message.krb5ConfigGcsUri != null && message.hasOwnProperty("krb5ConfigGcsUri"))
                                if (!$util.isString(message.krb5ConfigGcsUri))
                                    return "krb5ConfigGcsUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a KerberosConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.KerberosConfig} KerberosConfig
                         */
                        KerberosConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.KerberosConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.KerberosConfig();
                            if (object.keytab != null) {
                                if (typeof object.keytab !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.KerberosConfig.keytab: object expected");
                                message.keytab = $root.google.cloud.metastore.v1alpha.Secret.fromObject(object.keytab);
                            }
                            if (object.principal != null)
                                message.principal = String(object.principal);
                            if (object.krb5ConfigGcsUri != null)
                                message.krb5ConfigGcsUri = String(object.krb5ConfigGcsUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KerberosConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.KerberosConfig} message KerberosConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KerberosConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.keytab = null;
                                object.principal = "";
                                object.krb5ConfigGcsUri = "";
                            }
                            if (message.keytab != null && message.hasOwnProperty("keytab"))
                                object.keytab = $root.google.cloud.metastore.v1alpha.Secret.toObject(message.keytab, options);
                            if (message.principal != null && message.hasOwnProperty("principal"))
                                object.principal = message.principal;
                            if (message.krb5ConfigGcsUri != null && message.hasOwnProperty("krb5ConfigGcsUri"))
                                object.krb5ConfigGcsUri = message.krb5ConfigGcsUri;
                            return object;
                        };
    
                        /**
                         * Converts this KerberosConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KerberosConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for KerberosConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.KerberosConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        KerberosConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.KerberosConfig";
                        };
    
                        return KerberosConfig;
                    })();
    
                    v1alpha.Secret = (function() {
    
                        /**
                         * Properties of a Secret.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface ISecret
                         * @property {string|null} [cloudSecret] Secret cloudSecret
                         */
    
                        /**
                         * Constructs a new Secret.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a Secret.
                         * @implements ISecret
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.ISecret=} [properties] Properties to set
                         */
                        function Secret(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Secret cloudSecret.
                         * @member {string|null|undefined} cloudSecret
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @instance
                         */
                        Secret.prototype.cloudSecret = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Secret value.
                         * @member {"cloudSecret"|undefined} value
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @instance
                         */
                        Object.defineProperty(Secret.prototype, "value", {
                            get: $util.oneOfGetter($oneOfFields = ["cloudSecret"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Secret instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ISecret=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.Secret} Secret instance
                         */
                        Secret.create = function create(properties) {
                            return new Secret(properties);
                        };
    
                        /**
                         * Encodes the specified Secret message. Does not implicitly {@link google.cloud.metastore.v1alpha.Secret.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ISecret} message Secret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secret.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cloudSecret != null && Object.hasOwnProperty.call(message, "cloudSecret"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.cloudSecret);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Secret message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.Secret.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ISecret} message Secret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secret.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Secret message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.Secret} Secret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secret.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.Secret();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.cloudSecret = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Secret message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.Secret} Secret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secret.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Secret message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Secret.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.cloudSecret != null && message.hasOwnProperty("cloudSecret")) {
                                properties.value = 1;
                                if (!$util.isString(message.cloudSecret))
                                    return "cloudSecret: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Secret message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.Secret} Secret
                         */
                        Secret.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.Secret)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.Secret();
                            if (object.cloudSecret != null)
                                message.cloudSecret = String(object.cloudSecret);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Secret message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {google.cloud.metastore.v1alpha.Secret} message Secret
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Secret.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.cloudSecret != null && message.hasOwnProperty("cloudSecret")) {
                                object.cloudSecret = message.cloudSecret;
                                if (options.oneofs)
                                    object.value = "cloudSecret";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Secret to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Secret.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Secret
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.Secret
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Secret.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.Secret";
                        };
    
                        return Secret;
                    })();
    
                    v1alpha.EncryptionConfig = (function() {
    
                        /**
                         * Properties of an EncryptionConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IEncryptionConfig
                         * @property {string|null} [kmsKey] EncryptionConfig kmsKey
                         */
    
                        /**
                         * Constructs a new EncryptionConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an EncryptionConfig.
                         * @implements IEncryptionConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IEncryptionConfig=} [properties] Properties to set
                         */
                        function EncryptionConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EncryptionConfig kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @instance
                         */
                        EncryptionConfig.prototype.kmsKey = "";
    
                        /**
                         * Creates a new EncryptionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IEncryptionConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.EncryptionConfig} EncryptionConfig instance
                         */
                        EncryptionConfig.create = function create(properties) {
                            return new EncryptionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message. Does not implicitly {@link google.cloud.metastore.v1alpha.EncryptionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kmsKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.EncryptionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.EncryptionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EncryptionConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EncryptionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EncryptionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.EncryptionConfig} EncryptionConfig
                         */
                        EncryptionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.EncryptionConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.EncryptionConfig();
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EncryptionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.EncryptionConfig} message EncryptionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EncryptionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.kmsKey = "";
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            return object;
                        };
    
                        /**
                         * Converts this EncryptionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EncryptionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EncryptionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.EncryptionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EncryptionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.EncryptionConfig";
                        };
    
                        return EncryptionConfig;
                    })();
    
                    v1alpha.AuxiliaryVersionConfig = (function() {
    
                        /**
                         * Properties of an AuxiliaryVersionConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IAuxiliaryVersionConfig
                         * @property {string|null} [version] AuxiliaryVersionConfig version
                         * @property {Object.<string,string>|null} [configOverrides] AuxiliaryVersionConfig configOverrides
                         * @property {google.cloud.metastore.v1alpha.INetworkConfig|null} [networkConfig] AuxiliaryVersionConfig networkConfig
                         */
    
                        /**
                         * Constructs a new AuxiliaryVersionConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an AuxiliaryVersionConfig.
                         * @implements IAuxiliaryVersionConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IAuxiliaryVersionConfig=} [properties] Properties to set
                         */
                        function AuxiliaryVersionConfig(properties) {
                            this.configOverrides = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AuxiliaryVersionConfig version.
                         * @member {string} version
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @instance
                         */
                        AuxiliaryVersionConfig.prototype.version = "";
    
                        /**
                         * AuxiliaryVersionConfig configOverrides.
                         * @member {Object.<string,string>} configOverrides
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @instance
                         */
                        AuxiliaryVersionConfig.prototype.configOverrides = $util.emptyObject;
    
                        /**
                         * AuxiliaryVersionConfig networkConfig.
                         * @member {google.cloud.metastore.v1alpha.INetworkConfig|null|undefined} networkConfig
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @instance
                         */
                        AuxiliaryVersionConfig.prototype.networkConfig = null;
    
                        /**
                         * Creates a new AuxiliaryVersionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAuxiliaryVersionConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.AuxiliaryVersionConfig} AuxiliaryVersionConfig instance
                         */
                        AuxiliaryVersionConfig.create = function create(properties) {
                            return new AuxiliaryVersionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified AuxiliaryVersionConfig message. Does not implicitly {@link google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAuxiliaryVersionConfig} message AuxiliaryVersionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuxiliaryVersionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                            if (message.configOverrides != null && Object.hasOwnProperty.call(message, "configOverrides"))
                                for (var keys = Object.keys(message.configOverrides), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.configOverrides[keys[i]]).ldelim();
                            if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                                $root.google.cloud.metastore.v1alpha.NetworkConfig.encode(message.networkConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AuxiliaryVersionConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAuxiliaryVersionConfig} message AuxiliaryVersionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuxiliaryVersionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AuxiliaryVersionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.AuxiliaryVersionConfig} AuxiliaryVersionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuxiliaryVersionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.AuxiliaryVersionConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.configOverrides === $util.emptyObject)
                                            message.configOverrides = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.configOverrides[key] = value;
                                        break;
                                    }
                                case 3: {
                                        message.networkConfig = $root.google.cloud.metastore.v1alpha.NetworkConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AuxiliaryVersionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.AuxiliaryVersionConfig} AuxiliaryVersionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuxiliaryVersionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AuxiliaryVersionConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AuxiliaryVersionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.configOverrides != null && message.hasOwnProperty("configOverrides")) {
                                if (!$util.isObject(message.configOverrides))
                                    return "configOverrides: object expected";
                                var key = Object.keys(message.configOverrides);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.configOverrides[key[i]]))
                                        return "configOverrides: string{k:string} expected";
                            }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                                var error = $root.google.cloud.metastore.v1alpha.NetworkConfig.verify(message.networkConfig);
                                if (error)
                                    return "networkConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AuxiliaryVersionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.AuxiliaryVersionConfig} AuxiliaryVersionConfig
                         */
                        AuxiliaryVersionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.AuxiliaryVersionConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.AuxiliaryVersionConfig();
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.configOverrides) {
                                if (typeof object.configOverrides !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.configOverrides: object expected");
                                message.configOverrides = {};
                                for (var keys = Object.keys(object.configOverrides), i = 0; i < keys.length; ++i)
                                    message.configOverrides[keys[i]] = String(object.configOverrides[keys[i]]);
                            }
                            if (object.networkConfig != null) {
                                if (typeof object.networkConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.networkConfig: object expected");
                                message.networkConfig = $root.google.cloud.metastore.v1alpha.NetworkConfig.fromObject(object.networkConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AuxiliaryVersionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.AuxiliaryVersionConfig} message AuxiliaryVersionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AuxiliaryVersionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.configOverrides = {};
                            if (options.defaults) {
                                object.version = "";
                                object.networkConfig = null;
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            var keys2;
                            if (message.configOverrides && (keys2 = Object.keys(message.configOverrides)).length) {
                                object.configOverrides = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.configOverrides[keys2[j]] = message.configOverrides[keys2[j]];
                            }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                                object.networkConfig = $root.google.cloud.metastore.v1alpha.NetworkConfig.toObject(message.networkConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this AuxiliaryVersionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AuxiliaryVersionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AuxiliaryVersionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AuxiliaryVersionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.AuxiliaryVersionConfig";
                        };
    
                        return AuxiliaryVersionConfig;
                    })();
    
                    v1alpha.NetworkConfig = (function() {
    
                        /**
                         * Properties of a NetworkConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface INetworkConfig
                         * @property {Array.<google.cloud.metastore.v1alpha.NetworkConfig.IConsumer>|null} [consumers] NetworkConfig consumers
                         */
    
                        /**
                         * Constructs a new NetworkConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a NetworkConfig.
                         * @implements INetworkConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.INetworkConfig=} [properties] Properties to set
                         */
                        function NetworkConfig(properties) {
                            this.consumers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NetworkConfig consumers.
                         * @member {Array.<google.cloud.metastore.v1alpha.NetworkConfig.IConsumer>} consumers
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @instance
                         */
                        NetworkConfig.prototype.consumers = $util.emptyArray;
    
                        /**
                         * Creates a new NetworkConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.INetworkConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.NetworkConfig} NetworkConfig instance
                         */
                        NetworkConfig.create = function create(properties) {
                            return new NetworkConfig(properties);
                        };
    
                        /**
                         * Encodes the specified NetworkConfig message. Does not implicitly {@link google.cloud.metastore.v1alpha.NetworkConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.INetworkConfig} message NetworkConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.consumers != null && message.consumers.length)
                                for (var i = 0; i < message.consumers.length; ++i)
                                    $root.google.cloud.metastore.v1alpha.NetworkConfig.Consumer.encode(message.consumers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NetworkConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.NetworkConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.INetworkConfig} message NetworkConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NetworkConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.NetworkConfig} NetworkConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.NetworkConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.consumers && message.consumers.length))
                                            message.consumers = [];
                                        message.consumers.push($root.google.cloud.metastore.v1alpha.NetworkConfig.Consumer.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NetworkConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.NetworkConfig} NetworkConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NetworkConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NetworkConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.consumers != null && message.hasOwnProperty("consumers")) {
                                if (!Array.isArray(message.consumers))
                                    return "consumers: array expected";
                                for (var i = 0; i < message.consumers.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.NetworkConfig.Consumer.verify(message.consumers[i]);
                                    if (error)
                                        return "consumers." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NetworkConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.NetworkConfig} NetworkConfig
                         */
                        NetworkConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.NetworkConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.NetworkConfig();
                            if (object.consumers) {
                                if (!Array.isArray(object.consumers))
                                    throw TypeError(".google.cloud.metastore.v1alpha.NetworkConfig.consumers: array expected");
                                message.consumers = [];
                                for (var i = 0; i < object.consumers.length; ++i) {
                                    if (typeof object.consumers[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.NetworkConfig.consumers: object expected");
                                    message.consumers[i] = $root.google.cloud.metastore.v1alpha.NetworkConfig.Consumer.fromObject(object.consumers[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NetworkConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.NetworkConfig} message NetworkConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NetworkConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.consumers = [];
                            if (message.consumers && message.consumers.length) {
                                object.consumers = [];
                                for (var j = 0; j < message.consumers.length; ++j)
                                    object.consumers[j] = $root.google.cloud.metastore.v1alpha.NetworkConfig.Consumer.toObject(message.consumers[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NetworkConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NetworkConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NetworkConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NetworkConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.NetworkConfig";
                        };
    
                        NetworkConfig.Consumer = (function() {
    
                            /**
                             * Properties of a Consumer.
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                             * @interface IConsumer
                             * @property {string|null} [subnetwork] Consumer subnetwork
                             * @property {string|null} [endpointUri] Consumer endpointUri
                             */
    
                            /**
                             * Constructs a new Consumer.
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig
                             * @classdesc Represents a Consumer.
                             * @implements IConsumer
                             * @constructor
                             * @param {google.cloud.metastore.v1alpha.NetworkConfig.IConsumer=} [properties] Properties to set
                             */
                            function Consumer(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Consumer subnetwork.
                             * @member {string|null|undefined} subnetwork
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @instance
                             */
                            Consumer.prototype.subnetwork = null;
    
                            /**
                             * Consumer endpointUri.
                             * @member {string} endpointUri
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @instance
                             */
                            Consumer.prototype.endpointUri = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Consumer vpcResource.
                             * @member {"subnetwork"|undefined} vpcResource
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @instance
                             */
                            Object.defineProperty(Consumer.prototype, "vpcResource", {
                                get: $util.oneOfGetter($oneOfFields = ["subnetwork"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Consumer instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1alpha.NetworkConfig.IConsumer=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1alpha.NetworkConfig.Consumer} Consumer instance
                             */
                            Consumer.create = function create(properties) {
                                return new Consumer(properties);
                            };
    
                            /**
                             * Encodes the specified Consumer message. Does not implicitly {@link google.cloud.metastore.v1alpha.NetworkConfig.Consumer.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1alpha.NetworkConfig.IConsumer} message Consumer message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Consumer.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subnetwork != null && Object.hasOwnProperty.call(message, "subnetwork"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.subnetwork);
                                if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.endpointUri);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Consumer message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.NetworkConfig.Consumer.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1alpha.NetworkConfig.IConsumer} message Consumer message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Consumer.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Consumer message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1alpha.NetworkConfig.Consumer} Consumer
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Consumer.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.NetworkConfig.Consumer();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subnetwork = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.endpointUri = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Consumer message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1alpha.NetworkConfig.Consumer} Consumer
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Consumer.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Consumer message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Consumer.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.subnetwork != null && message.hasOwnProperty("subnetwork")) {
                                    properties.vpcResource = 1;
                                    if (!$util.isString(message.subnetwork))
                                        return "subnetwork: string expected";
                                }
                                if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                    if (!$util.isString(message.endpointUri))
                                        return "endpointUri: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Consumer message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1alpha.NetworkConfig.Consumer} Consumer
                             */
                            Consumer.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1alpha.NetworkConfig.Consumer)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1alpha.NetworkConfig.Consumer();
                                if (object.subnetwork != null)
                                    message.subnetwork = String(object.subnetwork);
                                if (object.endpointUri != null)
                                    message.endpointUri = String(object.endpointUri);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Consumer message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1alpha.NetworkConfig.Consumer} message Consumer
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Consumer.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.endpointUri = "";
                                if (message.subnetwork != null && message.hasOwnProperty("subnetwork")) {
                                    object.subnetwork = message.subnetwork;
                                    if (options.oneofs)
                                        object.vpcResource = "subnetwork";
                                }
                                if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                    object.endpointUri = message.endpointUri;
                                return object;
                            };
    
                            /**
                             * Converts this Consumer to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Consumer.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Consumer
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1alpha.NetworkConfig.Consumer
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Consumer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1alpha.NetworkConfig.Consumer";
                            };
    
                            return Consumer;
                        })();
    
                        return NetworkConfig;
                    })();
    
                    v1alpha.TelemetryConfig = (function() {
    
                        /**
                         * Properties of a TelemetryConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface ITelemetryConfig
                         * @property {google.cloud.metastore.v1alpha.TelemetryConfig.LogFormat|null} [logFormat] TelemetryConfig logFormat
                         */
    
                        /**
                         * Constructs a new TelemetryConfig.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a TelemetryConfig.
                         * @implements ITelemetryConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.ITelemetryConfig=} [properties] Properties to set
                         */
                        function TelemetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TelemetryConfig logFormat.
                         * @member {google.cloud.metastore.v1alpha.TelemetryConfig.LogFormat} logFormat
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @instance
                         */
                        TelemetryConfig.prototype.logFormat = 0;
    
                        /**
                         * Creates a new TelemetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ITelemetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.TelemetryConfig} TelemetryConfig instance
                         */
                        TelemetryConfig.create = function create(properties) {
                            return new TelemetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified TelemetryConfig message. Does not implicitly {@link google.cloud.metastore.v1alpha.TelemetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ITelemetryConfig} message TelemetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TelemetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.logFormat != null && Object.hasOwnProperty.call(message, "logFormat"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.logFormat);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TelemetryConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.TelemetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ITelemetryConfig} message TelemetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TelemetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TelemetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.TelemetryConfig} TelemetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TelemetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.TelemetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.logFormat = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TelemetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.TelemetryConfig} TelemetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TelemetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TelemetryConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TelemetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.logFormat != null && message.hasOwnProperty("logFormat"))
                                switch (message.logFormat) {
                                default:
                                    return "logFormat: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a TelemetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.TelemetryConfig} TelemetryConfig
                         */
                        TelemetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.TelemetryConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.TelemetryConfig();
                            switch (object.logFormat) {
                            default:
                                if (typeof object.logFormat === "number") {
                                    message.logFormat = object.logFormat;
                                    break;
                                }
                                break;
                            case "LOG_FORMAT_UNSPECIFIED":
                            case 0:
                                message.logFormat = 0;
                                break;
                            case "LEGACY":
                            case 1:
                                message.logFormat = 1;
                                break;
                            case "JSON":
                            case 2:
                                message.logFormat = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TelemetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1alpha.TelemetryConfig} message TelemetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TelemetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.logFormat = options.enums === String ? "LOG_FORMAT_UNSPECIFIED" : 0;
                            if (message.logFormat != null && message.hasOwnProperty("logFormat"))
                                object.logFormat = options.enums === String ? $root.google.cloud.metastore.v1alpha.TelemetryConfig.LogFormat[message.logFormat] === undefined ? message.logFormat : $root.google.cloud.metastore.v1alpha.TelemetryConfig.LogFormat[message.logFormat] : message.logFormat;
                            return object;
                        };
    
                        /**
                         * Converts this TelemetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TelemetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TelemetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.TelemetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TelemetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.TelemetryConfig";
                        };
    
                        /**
                         * LogFormat enum.
                         * @name google.cloud.metastore.v1alpha.TelemetryConfig.LogFormat
                         * @enum {number}
                         * @property {number} LOG_FORMAT_UNSPECIFIED=0 LOG_FORMAT_UNSPECIFIED value
                         * @property {number} LEGACY=1 LEGACY value
                         * @property {number} JSON=2 JSON value
                         */
                        TelemetryConfig.LogFormat = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LOG_FORMAT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LEGACY"] = 1;
                            values[valuesById[2] = "JSON"] = 2;
                            return values;
                        })();
    
                        return TelemetryConfig;
                    })();
    
                    v1alpha.MetadataManagementActivity = (function() {
    
                        /**
                         * Properties of a MetadataManagementActivity.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IMetadataManagementActivity
                         * @property {Array.<google.cloud.metastore.v1alpha.IMetadataExport>|null} [metadataExports] MetadataManagementActivity metadataExports
                         * @property {Array.<google.cloud.metastore.v1alpha.IRestore>|null} [restores] MetadataManagementActivity restores
                         */
    
                        /**
                         * Constructs a new MetadataManagementActivity.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a MetadataManagementActivity.
                         * @implements IMetadataManagementActivity
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IMetadataManagementActivity=} [properties] Properties to set
                         */
                        function MetadataManagementActivity(properties) {
                            this.metadataExports = [];
                            this.restores = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataManagementActivity metadataExports.
                         * @member {Array.<google.cloud.metastore.v1alpha.IMetadataExport>} metadataExports
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @instance
                         */
                        MetadataManagementActivity.prototype.metadataExports = $util.emptyArray;
    
                        /**
                         * MetadataManagementActivity restores.
                         * @member {Array.<google.cloud.metastore.v1alpha.IRestore>} restores
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @instance
                         */
                        MetadataManagementActivity.prototype.restores = $util.emptyArray;
    
                        /**
                         * Creates a new MetadataManagementActivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataManagementActivity=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.MetadataManagementActivity} MetadataManagementActivity instance
                         */
                        MetadataManagementActivity.create = function create(properties) {
                            return new MetadataManagementActivity(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataManagementActivity message. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataManagementActivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataManagementActivity} message MetadataManagementActivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataManagementActivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metadataExports != null && message.metadataExports.length)
                                for (var i = 0; i < message.metadataExports.length; ++i)
                                    $root.google.cloud.metastore.v1alpha.MetadataExport.encode(message.metadataExports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.restores != null && message.restores.length)
                                for (var i = 0; i < message.restores.length; ++i)
                                    $root.google.cloud.metastore.v1alpha.Restore.encode(message.restores[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataManagementActivity message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataManagementActivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataManagementActivity} message MetadataManagementActivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataManagementActivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataManagementActivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.MetadataManagementActivity} MetadataManagementActivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataManagementActivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.MetadataManagementActivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.metadataExports && message.metadataExports.length))
                                            message.metadataExports = [];
                                        message.metadataExports.push($root.google.cloud.metastore.v1alpha.MetadataExport.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.restores && message.restores.length))
                                            message.restores = [];
                                        message.restores.push($root.google.cloud.metastore.v1alpha.Restore.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataManagementActivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.MetadataManagementActivity} MetadataManagementActivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataManagementActivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataManagementActivity message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataManagementActivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metadataExports != null && message.hasOwnProperty("metadataExports")) {
                                if (!Array.isArray(message.metadataExports))
                                    return "metadataExports: array expected";
                                for (var i = 0; i < message.metadataExports.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.MetadataExport.verify(message.metadataExports[i]);
                                    if (error)
                                        return "metadataExports." + error;
                                }
                            }
                            if (message.restores != null && message.hasOwnProperty("restores")) {
                                if (!Array.isArray(message.restores))
                                    return "restores: array expected";
                                for (var i = 0; i < message.restores.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.Restore.verify(message.restores[i]);
                                    if (error)
                                        return "restores." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataManagementActivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.MetadataManagementActivity} MetadataManagementActivity
                         */
                        MetadataManagementActivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.MetadataManagementActivity)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.MetadataManagementActivity();
                            if (object.metadataExports) {
                                if (!Array.isArray(object.metadataExports))
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataManagementActivity.metadataExports: array expected");
                                message.metadataExports = [];
                                for (var i = 0; i < object.metadataExports.length; ++i) {
                                    if (typeof object.metadataExports[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.MetadataManagementActivity.metadataExports: object expected");
                                    message.metadataExports[i] = $root.google.cloud.metastore.v1alpha.MetadataExport.fromObject(object.metadataExports[i]);
                                }
                            }
                            if (object.restores) {
                                if (!Array.isArray(object.restores))
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataManagementActivity.restores: array expected");
                                message.restores = [];
                                for (var i = 0; i < object.restores.length; ++i) {
                                    if (typeof object.restores[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.MetadataManagementActivity.restores: object expected");
                                    message.restores[i] = $root.google.cloud.metastore.v1alpha.Restore.fromObject(object.restores[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataManagementActivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1alpha.MetadataManagementActivity} message MetadataManagementActivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataManagementActivity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.metadataExports = [];
                                object.restores = [];
                            }
                            if (message.metadataExports && message.metadataExports.length) {
                                object.metadataExports = [];
                                for (var j = 0; j < message.metadataExports.length; ++j)
                                    object.metadataExports[j] = $root.google.cloud.metastore.v1alpha.MetadataExport.toObject(message.metadataExports[j], options);
                            }
                            if (message.restores && message.restores.length) {
                                object.restores = [];
                                for (var j = 0; j < message.restores.length; ++j)
                                    object.restores[j] = $root.google.cloud.metastore.v1alpha.Restore.toObject(message.restores[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MetadataManagementActivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataManagementActivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataManagementActivity
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.MetadataManagementActivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataManagementActivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.MetadataManagementActivity";
                        };
    
                        return MetadataManagementActivity;
                    })();
    
                    v1alpha.MetadataImport = (function() {
    
                        /**
                         * Properties of a MetadataImport.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IMetadataImport
                         * @property {google.cloud.metastore.v1alpha.MetadataImport.IDatabaseDump|null} [databaseDump] MetadataImport databaseDump
                         * @property {string|null} [name] MetadataImport name
                         * @property {string|null} [description] MetadataImport description
                         * @property {google.protobuf.ITimestamp|null} [createTime] MetadataImport createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] MetadataImport updateTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] MetadataImport endTime
                         * @property {google.cloud.metastore.v1alpha.MetadataImport.State|null} [state] MetadataImport state
                         */
    
                        /**
                         * Constructs a new MetadataImport.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a MetadataImport.
                         * @implements IMetadataImport
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IMetadataImport=} [properties] Properties to set
                         */
                        function MetadataImport(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataImport databaseDump.
                         * @member {google.cloud.metastore.v1alpha.MetadataImport.IDatabaseDump|null|undefined} databaseDump
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.databaseDump = null;
    
                        /**
                         * MetadataImport name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.name = "";
    
                        /**
                         * MetadataImport description.
                         * @member {string} description
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.description = "";
    
                        /**
                         * MetadataImport createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.createTime = null;
    
                        /**
                         * MetadataImport updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.updateTime = null;
    
                        /**
                         * MetadataImport endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.endTime = null;
    
                        /**
                         * MetadataImport state.
                         * @member {google.cloud.metastore.v1alpha.MetadataImport.State} state
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.state = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetadataImport metadata.
                         * @member {"databaseDump"|undefined} metadata
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         */
                        Object.defineProperty(MetadataImport.prototype, "metadata", {
                            get: $util.oneOfGetter($oneOfFields = ["databaseDump"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetadataImport instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataImport=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.MetadataImport} MetadataImport instance
                         */
                        MetadataImport.create = function create(properties) {
                            return new MetadataImport(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataImport message. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataImport.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataImport} message MetadataImport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataImport.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.databaseDump != null && Object.hasOwnProperty.call(message, "databaseDump"))
                                $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.encode(message.databaseDump, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataImport message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataImport.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataImport} message MetadataImport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataImport.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataImport message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.MetadataImport} MetadataImport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataImport.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.MetadataImport();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 6: {
                                        message.databaseDump = $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataImport message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.MetadataImport} MetadataImport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataImport.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataImport message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataImport.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.databaseDump != null && message.hasOwnProperty("databaseDump")) {
                                properties.metadata = 1;
                                {
                                    var error = $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.verify(message.databaseDump);
                                    if (error)
                                        return "databaseDump." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataImport message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.MetadataImport} MetadataImport
                         */
                        MetadataImport.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.MetadataImport)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.MetadataImport();
                            if (object.databaseDump != null) {
                                if (typeof object.databaseDump !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataImport.databaseDump: object expected");
                                message.databaseDump = $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.fromObject(object.databaseDump);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataImport.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataImport.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataImport.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataImport message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1alpha.MetadataImport} message MetadataImport
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataImport.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.endTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1alpha.MetadataImport.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1alpha.MetadataImport.State[message.state] : message.state;
                            if (message.databaseDump != null && message.hasOwnProperty("databaseDump")) {
                                object.databaseDump = $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.toObject(message.databaseDump, options);
                                if (options.oneofs)
                                    object.metadata = "databaseDump";
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this MetadataImport to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataImport.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataImport
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.MetadataImport
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataImport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.MetadataImport";
                        };
    
                        MetadataImport.DatabaseDump = (function() {
    
                            /**
                             * Properties of a DatabaseDump.
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport
                             * @interface IDatabaseDump
                             * @property {google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.DatabaseType|null} [databaseType] DatabaseDump databaseType
                             * @property {string|null} [gcsUri] DatabaseDump gcsUri
                             * @property {string|null} [sourceDatabase] DatabaseDump sourceDatabase
                             * @property {google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type|null} [type] DatabaseDump type
                             */
    
                            /**
                             * Constructs a new DatabaseDump.
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport
                             * @classdesc Represents a DatabaseDump.
                             * @implements IDatabaseDump
                             * @constructor
                             * @param {google.cloud.metastore.v1alpha.MetadataImport.IDatabaseDump=} [properties] Properties to set
                             */
                            function DatabaseDump(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DatabaseDump databaseType.
                             * @member {google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.DatabaseType} databaseType
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.databaseType = 0;
    
                            /**
                             * DatabaseDump gcsUri.
                             * @member {string} gcsUri
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.gcsUri = "";
    
                            /**
                             * DatabaseDump sourceDatabase.
                             * @member {string} sourceDatabase
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.sourceDatabase = "";
    
                            /**
                             * DatabaseDump type.
                             * @member {google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type} type
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.type = 0;
    
                            /**
                             * Creates a new DatabaseDump instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1alpha.MetadataImport.IDatabaseDump=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump} DatabaseDump instance
                             */
                            DatabaseDump.create = function create(properties) {
                                return new DatabaseDump(properties);
                            };
    
                            /**
                             * Encodes the specified DatabaseDump message. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1alpha.MetadataImport.IDatabaseDump} message DatabaseDump message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DatabaseDump.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.databaseType != null && Object.hasOwnProperty.call(message, "databaseType"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.databaseType);
                                if (message.gcsUri != null && Object.hasOwnProperty.call(message, "gcsUri"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.gcsUri);
                                if (message.sourceDatabase != null && Object.hasOwnProperty.call(message, "sourceDatabase"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.sourceDatabase);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.type);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DatabaseDump message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1alpha.MetadataImport.IDatabaseDump} message DatabaseDump message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DatabaseDump.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DatabaseDump message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump} DatabaseDump
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DatabaseDump.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.databaseType = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.gcsUri = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.sourceDatabase = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DatabaseDump message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump} DatabaseDump
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DatabaseDump.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DatabaseDump message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DatabaseDump.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                    switch (message.databaseType) {
                                    default:
                                        return "databaseType: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                    if (!$util.isString(message.gcsUri))
                                        return "gcsUri: string expected";
                                if (message.sourceDatabase != null && message.hasOwnProperty("sourceDatabase"))
                                    if (!$util.isString(message.sourceDatabase))
                                        return "sourceDatabase: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a DatabaseDump message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump} DatabaseDump
                             */
                            DatabaseDump.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump();
                                switch (object.databaseType) {
                                default:
                                    if (typeof object.databaseType === "number") {
                                        message.databaseType = object.databaseType;
                                        break;
                                    }
                                    break;
                                case "DATABASE_TYPE_UNSPECIFIED":
                                case 0:
                                    message.databaseType = 0;
                                    break;
                                case "MYSQL":
                                case 1:
                                    message.databaseType = 1;
                                    break;
                                }
                                if (object.gcsUri != null)
                                    message.gcsUri = String(object.gcsUri);
                                if (object.sourceDatabase != null)
                                    message.sourceDatabase = String(object.sourceDatabase);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "MYSQL":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "AVRO":
                                case 2:
                                    message.type = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DatabaseDump message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump} message DatabaseDump
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DatabaseDump.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.databaseType = options.enums === String ? "DATABASE_TYPE_UNSPECIFIED" : 0;
                                    object.gcsUri = "";
                                    object.sourceDatabase = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                    object.databaseType = options.enums === String ? $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.DatabaseType[message.databaseType] === undefined ? message.databaseType : $root.google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.DatabaseType[message.databaseType] : message.databaseType;
                                if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                    object.gcsUri = message.gcsUri;
                                if (message.sourceDatabase != null && message.hasOwnProperty("sourceDatabase"))
                                    object.sourceDatabase = message.sourceDatabase;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type[message.type] === undefined ? message.type : $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type[message.type] : message.type;
                                return object;
                            };
    
                            /**
                             * Converts this DatabaseDump to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DatabaseDump.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DatabaseDump
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DatabaseDump.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump";
                            };
    
                            /**
                             * DatabaseType enum.
                             * @name google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.DatabaseType
                             * @enum {number}
                             * @property {number} DATABASE_TYPE_UNSPECIFIED=0 DATABASE_TYPE_UNSPECIFIED value
                             * @property {number} MYSQL=1 MYSQL value
                             */
                            DatabaseDump.DatabaseType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "DATABASE_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "MYSQL"] = 1;
                                return values;
                            })();
    
                            return DatabaseDump;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1alpha.MetadataImport.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} FAILED=4 FAILED value
                         */
                        MetadataImport.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            return values;
                        })();
    
                        return MetadataImport;
                    })();
    
                    v1alpha.MetadataExport = (function() {
    
                        /**
                         * Properties of a MetadataExport.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IMetadataExport
                         * @property {string|null} [destinationGcsUri] MetadataExport destinationGcsUri
                         * @property {google.protobuf.ITimestamp|null} [startTime] MetadataExport startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] MetadataExport endTime
                         * @property {google.cloud.metastore.v1alpha.MetadataExport.State|null} [state] MetadataExport state
                         * @property {google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type|null} [databaseDumpType] MetadataExport databaseDumpType
                         */
    
                        /**
                         * Constructs a new MetadataExport.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a MetadataExport.
                         * @implements IMetadataExport
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IMetadataExport=} [properties] Properties to set
                         */
                        function MetadataExport(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataExport destinationGcsUri.
                         * @member {string|null|undefined} destinationGcsUri
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.destinationGcsUri = null;
    
                        /**
                         * MetadataExport startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.startTime = null;
    
                        /**
                         * MetadataExport endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.endTime = null;
    
                        /**
                         * MetadataExport state.
                         * @member {google.cloud.metastore.v1alpha.MetadataExport.State} state
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.state = 0;
    
                        /**
                         * MetadataExport databaseDumpType.
                         * @member {google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type} databaseDumpType
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.databaseDumpType = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetadataExport destination.
                         * @member {"destinationGcsUri"|undefined} destination
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @instance
                         */
                        Object.defineProperty(MetadataExport.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["destinationGcsUri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetadataExport instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataExport=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.MetadataExport} MetadataExport instance
                         */
                        MetadataExport.create = function create(properties) {
                            return new MetadataExport(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataExport message. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataExport.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataExport} message MetadataExport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataExport.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.destinationGcsUri != null && Object.hasOwnProperty.call(message, "destinationGcsUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.destinationGcsUri);
                            if (message.databaseDumpType != null && Object.hasOwnProperty.call(message, "databaseDumpType"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.databaseDumpType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataExport message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.MetadataExport.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMetadataExport} message MetadataExport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataExport.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataExport message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.MetadataExport} MetadataExport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataExport.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.MetadataExport();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.destinationGcsUri = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.databaseDumpType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataExport message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.MetadataExport} MetadataExport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataExport.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataExport message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataExport.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.destinationGcsUri != null && message.hasOwnProperty("destinationGcsUri")) {
                                properties.destination = 1;
                                if (!$util.isString(message.destinationGcsUri))
                                    return "destinationGcsUri: string expected";
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                switch (message.databaseDumpType) {
                                default:
                                    return "databaseDumpType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataExport message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.MetadataExport} MetadataExport
                         */
                        MetadataExport.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.MetadataExport)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.MetadataExport();
                            if (object.destinationGcsUri != null)
                                message.destinationGcsUri = String(object.destinationGcsUri);
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataExport.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.MetadataExport.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            switch (object.databaseDumpType) {
                            default:
                                if (typeof object.databaseDumpType === "number") {
                                    message.databaseDumpType = object.databaseDumpType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseDumpType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseDumpType = 1;
                                break;
                            case "AVRO":
                            case 2:
                                message.databaseDumpType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataExport message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1alpha.MetadataExport} message MetadataExport
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataExport.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.databaseDumpType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1alpha.MetadataExport.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1alpha.MetadataExport.State[message.state] : message.state;
                            if (message.destinationGcsUri != null && message.hasOwnProperty("destinationGcsUri")) {
                                object.destinationGcsUri = message.destinationGcsUri;
                                if (options.oneofs)
                                    object.destination = "destinationGcsUri";
                            }
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                object.databaseDumpType = options.enums === String ? $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type[message.databaseDumpType] === undefined ? message.databaseDumpType : $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type[message.databaseDumpType] : message.databaseDumpType;
                            return object;
                        };
    
                        /**
                         * Converts this MetadataExport to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataExport.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataExport
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.MetadataExport
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataExport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.MetadataExport";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1alpha.MetadataExport.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} FAILED=3 FAILED value
                         * @property {number} CANCELLED=4 CANCELLED value
                         */
                        MetadataExport.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            values[valuesById[4] = "CANCELLED"] = 4;
                            return values;
                        })();
    
                        return MetadataExport;
                    })();
    
                    v1alpha.Backup = (function() {
    
                        /**
                         * Properties of a Backup.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IBackup
                         * @property {string|null} [name] Backup name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Backup createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] Backup endTime
                         * @property {google.cloud.metastore.v1alpha.Backup.State|null} [state] Backup state
                         * @property {google.cloud.metastore.v1alpha.IService|null} [serviceRevision] Backup serviceRevision
                         * @property {string|null} [description] Backup description
                         * @property {Array.<string>|null} [restoringServices] Backup restoringServices
                         */
    
                        /**
                         * Constructs a new Backup.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a Backup.
                         * @implements IBackup
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IBackup=} [properties] Properties to set
                         */
                        function Backup(properties) {
                            this.restoringServices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Backup name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @instance
                         */
                        Backup.prototype.name = "";
    
                        /**
                         * Backup createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @instance
                         */
                        Backup.prototype.createTime = null;
    
                        /**
                         * Backup endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @instance
                         */
                        Backup.prototype.endTime = null;
    
                        /**
                         * Backup state.
                         * @member {google.cloud.metastore.v1alpha.Backup.State} state
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @instance
                         */
                        Backup.prototype.state = 0;
    
                        /**
                         * Backup serviceRevision.
                         * @member {google.cloud.metastore.v1alpha.IService|null|undefined} serviceRevision
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @instance
                         */
                        Backup.prototype.serviceRevision = null;
    
                        /**
                         * Backup description.
                         * @member {string} description
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @instance
                         */
                        Backup.prototype.description = "";
    
                        /**
                         * Backup restoringServices.
                         * @member {Array.<string>} restoringServices
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @instance
                         */
                        Backup.prototype.restoringServices = $util.emptyArray;
    
                        /**
                         * Creates a new Backup instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IBackup=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.Backup} Backup instance
                         */
                        Backup.create = function create(properties) {
                            return new Backup(properties);
                        };
    
                        /**
                         * Encodes the specified Backup message. Does not implicitly {@link google.cloud.metastore.v1alpha.Backup.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IBackup} message Backup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Backup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.state);
                            if (message.serviceRevision != null && Object.hasOwnProperty.call(message, "serviceRevision"))
                                $root.google.cloud.metastore.v1alpha.Service.encode(message.serviceRevision, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            if (message.restoringServices != null && message.restoringServices.length)
                                for (var i = 0; i < message.restoringServices.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.restoringServices[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Backup message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.Backup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IBackup} message Backup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Backup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Backup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.Backup} Backup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Backup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.Backup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.serviceRevision = $root.google.cloud.metastore.v1alpha.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 7: {
                                        if (!(message.restoringServices && message.restoringServices.length))
                                            message.restoringServices = [];
                                        message.restoringServices.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Backup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.Backup} Backup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Backup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Backup message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Backup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.serviceRevision != null && message.hasOwnProperty("serviceRevision")) {
                                var error = $root.google.cloud.metastore.v1alpha.Service.verify(message.serviceRevision);
                                if (error)
                                    return "serviceRevision." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.restoringServices != null && message.hasOwnProperty("restoringServices")) {
                                if (!Array.isArray(message.restoringServices))
                                    return "restoringServices: array expected";
                                for (var i = 0; i < message.restoringServices.length; ++i)
                                    if (!$util.isString(message.restoringServices[i]))
                                        return "restoringServices: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Backup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.Backup} Backup
                         */
                        Backup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.Backup)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.Backup();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Backup.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Backup.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "DELETING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ACTIVE":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "RESTORING":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.serviceRevision != null) {
                                if (typeof object.serviceRevision !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Backup.serviceRevision: object expected");
                                message.serviceRevision = $root.google.cloud.metastore.v1alpha.Service.fromObject(object.serviceRevision);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.restoringServices) {
                                if (!Array.isArray(object.restoringServices))
                                    throw TypeError(".google.cloud.metastore.v1alpha.Backup.restoringServices: array expected");
                                message.restoringServices = [];
                                for (var i = 0; i < object.restoringServices.length; ++i)
                                    message.restoringServices[i] = String(object.restoringServices[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Backup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {google.cloud.metastore.v1alpha.Backup} message Backup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Backup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.restoringServices = [];
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.serviceRevision = null;
                                object.description = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1alpha.Backup.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1alpha.Backup.State[message.state] : message.state;
                            if (message.serviceRevision != null && message.hasOwnProperty("serviceRevision"))
                                object.serviceRevision = $root.google.cloud.metastore.v1alpha.Service.toObject(message.serviceRevision, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.restoringServices && message.restoringServices.length) {
                                object.restoringServices = [];
                                for (var j = 0; j < message.restoringServices.length; ++j)
                                    object.restoringServices[j] = message.restoringServices[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Backup to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Backup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Backup
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.Backup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Backup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.Backup";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1alpha.Backup.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} DELETING=2 DELETING value
                         * @property {number} ACTIVE=3 ACTIVE value
                         * @property {number} FAILED=4 FAILED value
                         * @property {number} RESTORING=5 RESTORING value
                         */
                        Backup.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "DELETING"] = 2;
                            values[valuesById[3] = "ACTIVE"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            values[valuesById[5] = "RESTORING"] = 5;
                            return values;
                        })();
    
                        return Backup;
                    })();
    
                    v1alpha.Restore = (function() {
    
                        /**
                         * Properties of a Restore.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IRestore
                         * @property {google.protobuf.ITimestamp|null} [startTime] Restore startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] Restore endTime
                         * @property {google.cloud.metastore.v1alpha.Restore.State|null} [state] Restore state
                         * @property {string|null} [backup] Restore backup
                         * @property {google.cloud.metastore.v1alpha.Restore.RestoreType|null} [type] Restore type
                         * @property {string|null} [details] Restore details
                         */
    
                        /**
                         * Constructs a new Restore.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a Restore.
                         * @implements IRestore
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IRestore=} [properties] Properties to set
                         */
                        function Restore(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Restore startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @instance
                         */
                        Restore.prototype.startTime = null;
    
                        /**
                         * Restore endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @instance
                         */
                        Restore.prototype.endTime = null;
    
                        /**
                         * Restore state.
                         * @member {google.cloud.metastore.v1alpha.Restore.State} state
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @instance
                         */
                        Restore.prototype.state = 0;
    
                        /**
                         * Restore backup.
                         * @member {string} backup
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @instance
                         */
                        Restore.prototype.backup = "";
    
                        /**
                         * Restore type.
                         * @member {google.cloud.metastore.v1alpha.Restore.RestoreType} type
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @instance
                         */
                        Restore.prototype.type = 0;
    
                        /**
                         * Restore details.
                         * @member {string} details
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @instance
                         */
                        Restore.prototype.details = "";
    
                        /**
                         * Creates a new Restore instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRestore=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.Restore} Restore instance
                         */
                        Restore.create = function create(properties) {
                            return new Restore(properties);
                        };
    
                        /**
                         * Encodes the specified Restore message. Does not implicitly {@link google.cloud.metastore.v1alpha.Restore.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRestore} message Restore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Restore.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.backup);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.details);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Restore message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.Restore.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRestore} message Restore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Restore.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Restore message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.Restore} Restore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Restore.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.Restore();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.backup = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.details = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Restore message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.Restore} Restore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Restore.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Restore message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Restore.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                if (!$util.isString(message.backup))
                                    return "backup: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.details != null && message.hasOwnProperty("details"))
                                if (!$util.isString(message.details))
                                    return "details: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Restore message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.Restore} Restore
                         */
                        Restore.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.Restore)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.Restore();
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Restore.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Restore.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.backup != null)
                                message.backup = String(object.backup);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "RESTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "FULL":
                            case 1:
                                message.type = 1;
                                break;
                            case "METADATA_ONLY":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.details != null)
                                message.details = String(object.details);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Restore message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {google.cloud.metastore.v1alpha.Restore} message Restore
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Restore.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.backup = "";
                                object.type = options.enums === String ? "RESTORE_TYPE_UNSPECIFIED" : 0;
                                object.details = "";
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1alpha.Restore.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1alpha.Restore.State[message.state] : message.state;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = message.backup;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.metastore.v1alpha.Restore.RestoreType[message.type] === undefined ? message.type : $root.google.cloud.metastore.v1alpha.Restore.RestoreType[message.type] : message.type;
                            if (message.details != null && message.hasOwnProperty("details"))
                                object.details = message.details;
                            return object;
                        };
    
                        /**
                         * Converts this Restore to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Restore.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Restore
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.Restore
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Restore.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.Restore";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1alpha.Restore.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} FAILED=3 FAILED value
                         * @property {number} CANCELLED=4 CANCELLED value
                         */
                        Restore.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            values[valuesById[4] = "CANCELLED"] = 4;
                            return values;
                        })();
    
                        /**
                         * RestoreType enum.
                         * @name google.cloud.metastore.v1alpha.Restore.RestoreType
                         * @enum {number}
                         * @property {number} RESTORE_TYPE_UNSPECIFIED=0 RESTORE_TYPE_UNSPECIFIED value
                         * @property {number} FULL=1 FULL value
                         * @property {number} METADATA_ONLY=2 METADATA_ONLY value
                         */
                        Restore.RestoreType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RESTORE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "FULL"] = 1;
                            values[valuesById[2] = "METADATA_ONLY"] = 2;
                            return values;
                        })();
    
                        return Restore;
                    })();
    
                    v1alpha.ListServicesRequest = (function() {
    
                        /**
                         * Properties of a ListServicesRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IListServicesRequest
                         * @property {string|null} [parent] ListServicesRequest parent
                         * @property {number|null} [pageSize] ListServicesRequest pageSize
                         * @property {string|null} [pageToken] ListServicesRequest pageToken
                         * @property {string|null} [filter] ListServicesRequest filter
                         * @property {string|null} [orderBy] ListServicesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListServicesRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a ListServicesRequest.
                         * @implements IListServicesRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IListServicesRequest=} [properties] Properties to set
                         */
                        function ListServicesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListServicesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.parent = "";
    
                        /**
                         * ListServicesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListServicesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.pageToken = "";
    
                        /**
                         * ListServicesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.filter = "";
    
                        /**
                         * ListServicesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListServicesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListServicesRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ListServicesRequest} ListServicesRequest instance
                         */
                        ListServicesRequest.create = function create(properties) {
                            return new ListServicesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListServicesRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.ListServicesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListServicesRequest} message ListServicesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListServicesRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ListServicesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListServicesRequest} message ListServicesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListServicesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ListServicesRequest} ListServicesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ListServicesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListServicesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ListServicesRequest} ListServicesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListServicesRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListServicesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListServicesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ListServicesRequest} ListServicesRequest
                         */
                        ListServicesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ListServicesRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ListServicesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListServicesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ListServicesRequest} message ListServicesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListServicesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListServicesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListServicesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListServicesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ListServicesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListServicesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ListServicesRequest";
                        };
    
                        return ListServicesRequest;
                    })();
    
                    v1alpha.ListServicesResponse = (function() {
    
                        /**
                         * Properties of a ListServicesResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IListServicesResponse
                         * @property {Array.<google.cloud.metastore.v1alpha.IService>|null} [services] ListServicesResponse services
                         * @property {string|null} [nextPageToken] ListServicesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListServicesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListServicesResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a ListServicesResponse.
                         * @implements IListServicesResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IListServicesResponse=} [properties] Properties to set
                         */
                        function ListServicesResponse(properties) {
                            this.services = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListServicesResponse services.
                         * @member {Array.<google.cloud.metastore.v1alpha.IService>} services
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.services = $util.emptyArray;
    
                        /**
                         * ListServicesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListServicesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListServicesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListServicesResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ListServicesResponse} ListServicesResponse instance
                         */
                        ListServicesResponse.create = function create(properties) {
                            return new ListServicesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListServicesResponse message. Does not implicitly {@link google.cloud.metastore.v1alpha.ListServicesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListServicesResponse} message ListServicesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.services != null && message.services.length)
                                for (var i = 0; i < message.services.length; ++i)
                                    $root.google.cloud.metastore.v1alpha.Service.encode(message.services[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListServicesResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ListServicesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListServicesResponse} message ListServicesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListServicesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ListServicesResponse} ListServicesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ListServicesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.services && message.services.length))
                                            message.services = [];
                                        message.services.push($root.google.cloud.metastore.v1alpha.Service.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListServicesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ListServicesResponse} ListServicesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListServicesResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListServicesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.services != null && message.hasOwnProperty("services")) {
                                if (!Array.isArray(message.services))
                                    return "services: array expected";
                                for (var i = 0; i < message.services.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.Service.verify(message.services[i]);
                                    if (error)
                                        return "services." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListServicesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ListServicesResponse} ListServicesResponse
                         */
                        ListServicesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ListServicesResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ListServicesResponse();
                            if (object.services) {
                                if (!Array.isArray(object.services))
                                    throw TypeError(".google.cloud.metastore.v1alpha.ListServicesResponse.services: array expected");
                                message.services = [];
                                for (var i = 0; i < object.services.length; ++i) {
                                    if (typeof object.services[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.ListServicesResponse.services: object expected");
                                    message.services[i] = $root.google.cloud.metastore.v1alpha.Service.fromObject(object.services[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1alpha.ListServicesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListServicesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ListServicesResponse} message ListServicesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListServicesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.services = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.services && message.services.length) {
                                object.services = [];
                                for (var j = 0; j < message.services.length; ++j)
                                    object.services[j] = $root.google.cloud.metastore.v1alpha.Service.toObject(message.services[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListServicesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListServicesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListServicesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ListServicesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListServicesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ListServicesResponse";
                        };
    
                        return ListServicesResponse;
                    })();
    
                    v1alpha.GetServiceRequest = (function() {
    
                        /**
                         * Properties of a GetServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IGetServiceRequest
                         * @property {string|null} [name] GetServiceRequest name
                         */
    
                        /**
                         * Constructs a new GetServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a GetServiceRequest.
                         * @implements IGetServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IGetServiceRequest=} [properties] Properties to set
                         */
                        function GetServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @instance
                         */
                        GetServiceRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.GetServiceRequest} GetServiceRequest instance
                         */
                        GetServiceRequest.create = function create(properties) {
                            return new GetServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.GetServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.GetServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.GetServiceRequest} GetServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.GetServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.GetServiceRequest} GetServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.GetServiceRequest} GetServiceRequest
                         */
                        GetServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.GetServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.GetServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.GetServiceRequest} message GetServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.GetServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.GetServiceRequest";
                        };
    
                        return GetServiceRequest;
                    })();
    
                    v1alpha.CreateServiceRequest = (function() {
    
                        /**
                         * Properties of a CreateServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface ICreateServiceRequest
                         * @property {string|null} [parent] CreateServiceRequest parent
                         * @property {string|null} [serviceId] CreateServiceRequest serviceId
                         * @property {google.cloud.metastore.v1alpha.IService|null} [service] CreateServiceRequest service
                         * @property {string|null} [requestId] CreateServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a CreateServiceRequest.
                         * @implements ICreateServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.ICreateServiceRequest=} [properties] Properties to set
                         */
                        function CreateServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateServiceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.parent = "";
    
                        /**
                         * CreateServiceRequest serviceId.
                         * @member {string} serviceId
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.serviceId = "";
    
                        /**
                         * CreateServiceRequest service.
                         * @member {google.cloud.metastore.v1alpha.IService|null|undefined} service
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.service = null;
    
                        /**
                         * CreateServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.CreateServiceRequest} CreateServiceRequest instance
                         */
                        CreateServiceRequest.create = function create(properties) {
                            return new CreateServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.CreateServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.serviceId != null && Object.hasOwnProperty.call(message, "serviceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceId);
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                $root.google.cloud.metastore.v1alpha.Service.encode(message.service, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.CreateServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.CreateServiceRequest} CreateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.CreateServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.serviceId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.service = $root.google.cloud.metastore.v1alpha.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.CreateServiceRequest} CreateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                                if (!$util.isString(message.serviceId))
                                    return "serviceId: string expected";
                            if (message.service != null && message.hasOwnProperty("service")) {
                                var error = $root.google.cloud.metastore.v1alpha.Service.verify(message.service);
                                if (error)
                                    return "service." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.CreateServiceRequest} CreateServiceRequest
                         */
                        CreateServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.CreateServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.CreateServiceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.serviceId != null)
                                message.serviceId = String(object.serviceId);
                            if (object.service != null) {
                                if (typeof object.service !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.CreateServiceRequest.service: object expected");
                                message.service = $root.google.cloud.metastore.v1alpha.Service.fromObject(object.service);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.CreateServiceRequest} message CreateServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.serviceId = "";
                                object.service = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                                object.serviceId = message.serviceId;
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = $root.google.cloud.metastore.v1alpha.Service.toObject(message.service, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.CreateServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.CreateServiceRequest";
                        };
    
                        return CreateServiceRequest;
                    })();
    
                    v1alpha.UpdateServiceRequest = (function() {
    
                        /**
                         * Properties of an UpdateServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IUpdateServiceRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateServiceRequest updateMask
                         * @property {google.cloud.metastore.v1alpha.IService|null} [service] UpdateServiceRequest service
                         * @property {string|null} [requestId] UpdateServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an UpdateServiceRequest.
                         * @implements IUpdateServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IUpdateServiceRequest=} [properties] Properties to set
                         */
                        function UpdateServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateServiceRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateServiceRequest service.
                         * @member {google.cloud.metastore.v1alpha.IService|null|undefined} service
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.service = null;
    
                        /**
                         * UpdateServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.UpdateServiceRequest} UpdateServiceRequest instance
                         */
                        UpdateServiceRequest.create = function create(properties) {
                            return new UpdateServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.UpdateServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                $root.google.cloud.metastore.v1alpha.Service.encode(message.service, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.UpdateServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.UpdateServiceRequest} UpdateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.UpdateServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.service = $root.google.cloud.metastore.v1alpha.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.UpdateServiceRequest} UpdateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.service != null && message.hasOwnProperty("service")) {
                                var error = $root.google.cloud.metastore.v1alpha.Service.verify(message.service);
                                if (error)
                                    return "service." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.UpdateServiceRequest} UpdateServiceRequest
                         */
                        UpdateServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.UpdateServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.UpdateServiceRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.UpdateServiceRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.service != null) {
                                if (typeof object.service !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.UpdateServiceRequest.service: object expected");
                                message.service = $root.google.cloud.metastore.v1alpha.Service.fromObject(object.service);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.UpdateServiceRequest} message UpdateServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.service = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = $root.google.cloud.metastore.v1alpha.Service.toObject(message.service, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.UpdateServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.UpdateServiceRequest";
                        };
    
                        return UpdateServiceRequest;
                    })();
    
                    v1alpha.DeleteServiceRequest = (function() {
    
                        /**
                         * Properties of a DeleteServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IDeleteServiceRequest
                         * @property {string|null} [name] DeleteServiceRequest name
                         * @property {string|null} [requestId] DeleteServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a DeleteServiceRequest.
                         * @implements IDeleteServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IDeleteServiceRequest=} [properties] Properties to set
                         */
                        function DeleteServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.name = "";
    
                        /**
                         * DeleteServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.DeleteServiceRequest} DeleteServiceRequest instance
                         */
                        DeleteServiceRequest.create = function create(properties) {
                            return new DeleteServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.DeleteServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.DeleteServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.DeleteServiceRequest} DeleteServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.DeleteServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.DeleteServiceRequest} DeleteServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.DeleteServiceRequest} DeleteServiceRequest
                         */
                        DeleteServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.DeleteServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.DeleteServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.DeleteServiceRequest} message DeleteServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.DeleteServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.DeleteServiceRequest";
                        };
    
                        return DeleteServiceRequest;
                    })();
    
                    v1alpha.ListMetadataImportsRequest = (function() {
    
                        /**
                         * Properties of a ListMetadataImportsRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IListMetadataImportsRequest
                         * @property {string|null} [parent] ListMetadataImportsRequest parent
                         * @property {number|null} [pageSize] ListMetadataImportsRequest pageSize
                         * @property {string|null} [pageToken] ListMetadataImportsRequest pageToken
                         * @property {string|null} [filter] ListMetadataImportsRequest filter
                         * @property {string|null} [orderBy] ListMetadataImportsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListMetadataImportsRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a ListMetadataImportsRequest.
                         * @implements IListMetadataImportsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsRequest=} [properties] Properties to set
                         */
                        function ListMetadataImportsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMetadataImportsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.parent = "";
    
                        /**
                         * ListMetadataImportsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListMetadataImportsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.pageToken = "";
    
                        /**
                         * ListMetadataImportsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.filter = "";
    
                        /**
                         * ListMetadataImportsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListMetadataImportsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ListMetadataImportsRequest} ListMetadataImportsRequest instance
                         */
                        ListMetadataImportsRequest.create = function create(properties) {
                            return new ListMetadataImportsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.ListMetadataImportsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsRequest} message ListMetadataImportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ListMetadataImportsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsRequest} message ListMetadataImportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMetadataImportsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ListMetadataImportsRequest} ListMetadataImportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ListMetadataImportsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMetadataImportsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ListMetadataImportsRequest} ListMetadataImportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMetadataImportsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMetadataImportsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListMetadataImportsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ListMetadataImportsRequest} ListMetadataImportsRequest
                         */
                        ListMetadataImportsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ListMetadataImportsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ListMetadataImportsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMetadataImportsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ListMetadataImportsRequest} message ListMetadataImportsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMetadataImportsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListMetadataImportsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMetadataImportsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListMetadataImportsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListMetadataImportsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ListMetadataImportsRequest";
                        };
    
                        return ListMetadataImportsRequest;
                    })();
    
                    v1alpha.ListMetadataImportsResponse = (function() {
    
                        /**
                         * Properties of a ListMetadataImportsResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IListMetadataImportsResponse
                         * @property {Array.<google.cloud.metastore.v1alpha.IMetadataImport>|null} [metadataImports] ListMetadataImportsResponse metadataImports
                         * @property {string|null} [nextPageToken] ListMetadataImportsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListMetadataImportsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListMetadataImportsResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a ListMetadataImportsResponse.
                         * @implements IListMetadataImportsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsResponse=} [properties] Properties to set
                         */
                        function ListMetadataImportsResponse(properties) {
                            this.metadataImports = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMetadataImportsResponse metadataImports.
                         * @member {Array.<google.cloud.metastore.v1alpha.IMetadataImport>} metadataImports
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.metadataImports = $util.emptyArray;
    
                        /**
                         * ListMetadataImportsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListMetadataImportsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListMetadataImportsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ListMetadataImportsResponse} ListMetadataImportsResponse instance
                         */
                        ListMetadataImportsResponse.create = function create(properties) {
                            return new ListMetadataImportsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsResponse message. Does not implicitly {@link google.cloud.metastore.v1alpha.ListMetadataImportsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsResponse} message ListMetadataImportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metadataImports != null && message.metadataImports.length)
                                for (var i = 0; i < message.metadataImports.length; ++i)
                                    $root.google.cloud.metastore.v1alpha.MetadataImport.encode(message.metadataImports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ListMetadataImportsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListMetadataImportsResponse} message ListMetadataImportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMetadataImportsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ListMetadataImportsResponse} ListMetadataImportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ListMetadataImportsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.metadataImports && message.metadataImports.length))
                                            message.metadataImports = [];
                                        message.metadataImports.push($root.google.cloud.metastore.v1alpha.MetadataImport.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMetadataImportsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ListMetadataImportsResponse} ListMetadataImportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMetadataImportsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMetadataImportsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metadataImports != null && message.hasOwnProperty("metadataImports")) {
                                if (!Array.isArray(message.metadataImports))
                                    return "metadataImports: array expected";
                                for (var i = 0; i < message.metadataImports.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.MetadataImport.verify(message.metadataImports[i]);
                                    if (error)
                                        return "metadataImports." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListMetadataImportsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ListMetadataImportsResponse} ListMetadataImportsResponse
                         */
                        ListMetadataImportsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ListMetadataImportsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ListMetadataImportsResponse();
                            if (object.metadataImports) {
                                if (!Array.isArray(object.metadataImports))
                                    throw TypeError(".google.cloud.metastore.v1alpha.ListMetadataImportsResponse.metadataImports: array expected");
                                message.metadataImports = [];
                                for (var i = 0; i < object.metadataImports.length; ++i) {
                                    if (typeof object.metadataImports[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.ListMetadataImportsResponse.metadataImports: object expected");
                                    message.metadataImports[i] = $root.google.cloud.metastore.v1alpha.MetadataImport.fromObject(object.metadataImports[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1alpha.ListMetadataImportsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMetadataImportsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ListMetadataImportsResponse} message ListMetadataImportsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMetadataImportsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.metadataImports = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.metadataImports && message.metadataImports.length) {
                                object.metadataImports = [];
                                for (var j = 0; j < message.metadataImports.length; ++j)
                                    object.metadataImports[j] = $root.google.cloud.metastore.v1alpha.MetadataImport.toObject(message.metadataImports[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListMetadataImportsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMetadataImportsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListMetadataImportsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ListMetadataImportsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListMetadataImportsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ListMetadataImportsResponse";
                        };
    
                        return ListMetadataImportsResponse;
                    })();
    
                    v1alpha.GetMetadataImportRequest = (function() {
    
                        /**
                         * Properties of a GetMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IGetMetadataImportRequest
                         * @property {string|null} [name] GetMetadataImportRequest name
                         */
    
                        /**
                         * Constructs a new GetMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a GetMetadataImportRequest.
                         * @implements IGetMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IGetMetadataImportRequest=} [properties] Properties to set
                         */
                        function GetMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetMetadataImportRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @instance
                         */
                        GetMetadataImportRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.GetMetadataImportRequest} GetMetadataImportRequest instance
                         */
                        GetMetadataImportRequest.create = function create(properties) {
                            return new GetMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.GetMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetMetadataImportRequest} message GetMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.GetMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetMetadataImportRequest} message GetMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.GetMetadataImportRequest} GetMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.GetMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.GetMetadataImportRequest} GetMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.GetMetadataImportRequest} GetMetadataImportRequest
                         */
                        GetMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.GetMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.GetMetadataImportRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.GetMetadataImportRequest} message GetMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.GetMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.GetMetadataImportRequest";
                        };
    
                        return GetMetadataImportRequest;
                    })();
    
                    v1alpha.CreateMetadataImportRequest = (function() {
    
                        /**
                         * Properties of a CreateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface ICreateMetadataImportRequest
                         * @property {string|null} [parent] CreateMetadataImportRequest parent
                         * @property {string|null} [metadataImportId] CreateMetadataImportRequest metadataImportId
                         * @property {google.cloud.metastore.v1alpha.IMetadataImport|null} [metadataImport] CreateMetadataImportRequest metadataImport
                         * @property {string|null} [requestId] CreateMetadataImportRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a CreateMetadataImportRequest.
                         * @implements ICreateMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.ICreateMetadataImportRequest=} [properties] Properties to set
                         */
                        function CreateMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateMetadataImportRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.parent = "";
    
                        /**
                         * CreateMetadataImportRequest metadataImportId.
                         * @member {string} metadataImportId
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.metadataImportId = "";
    
                        /**
                         * CreateMetadataImportRequest metadataImport.
                         * @member {google.cloud.metastore.v1alpha.IMetadataImport|null|undefined} metadataImport
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.metadataImport = null;
    
                        /**
                         * CreateMetadataImportRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.CreateMetadataImportRequest} CreateMetadataImportRequest instance
                         */
                        CreateMetadataImportRequest.create = function create(properties) {
                            return new CreateMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.CreateMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateMetadataImportRequest} message CreateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.metadataImportId != null && Object.hasOwnProperty.call(message, "metadataImportId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataImportId);
                            if (message.metadataImport != null && Object.hasOwnProperty.call(message, "metadataImport"))
                                $root.google.cloud.metastore.v1alpha.MetadataImport.encode(message.metadataImport, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.CreateMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateMetadataImportRequest} message CreateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.CreateMetadataImportRequest} CreateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.CreateMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.metadataImportId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.metadataImport = $root.google.cloud.metastore.v1alpha.MetadataImport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.CreateMetadataImportRequest} CreateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.metadataImportId != null && message.hasOwnProperty("metadataImportId"))
                                if (!$util.isString(message.metadataImportId))
                                    return "metadataImportId: string expected";
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport")) {
                                var error = $root.google.cloud.metastore.v1alpha.MetadataImport.verify(message.metadataImport);
                                if (error)
                                    return "metadataImport." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.CreateMetadataImportRequest} CreateMetadataImportRequest
                         */
                        CreateMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.CreateMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.CreateMetadataImportRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.metadataImportId != null)
                                message.metadataImportId = String(object.metadataImportId);
                            if (object.metadataImport != null) {
                                if (typeof object.metadataImport !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.CreateMetadataImportRequest.metadataImport: object expected");
                                message.metadataImport = $root.google.cloud.metastore.v1alpha.MetadataImport.fromObject(object.metadataImport);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.CreateMetadataImportRequest} message CreateMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.metadataImportId = "";
                                object.metadataImport = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.metadataImportId != null && message.hasOwnProperty("metadataImportId"))
                                object.metadataImportId = message.metadataImportId;
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport"))
                                object.metadataImport = $root.google.cloud.metastore.v1alpha.MetadataImport.toObject(message.metadataImport, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.CreateMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.CreateMetadataImportRequest";
                        };
    
                        return CreateMetadataImportRequest;
                    })();
    
                    v1alpha.UpdateMetadataImportRequest = (function() {
    
                        /**
                         * Properties of an UpdateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IUpdateMetadataImportRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateMetadataImportRequest updateMask
                         * @property {google.cloud.metastore.v1alpha.IMetadataImport|null} [metadataImport] UpdateMetadataImportRequest metadataImport
                         * @property {string|null} [requestId] UpdateMetadataImportRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an UpdateMetadataImportRequest.
                         * @implements IUpdateMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IUpdateMetadataImportRequest=} [properties] Properties to set
                         */
                        function UpdateMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateMetadataImportRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateMetadataImportRequest metadataImport.
                         * @member {google.cloud.metastore.v1alpha.IMetadataImport|null|undefined} metadataImport
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.metadataImport = null;
    
                        /**
                         * UpdateMetadataImportRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.UpdateMetadataImportRequest} UpdateMetadataImportRequest instance
                         */
                        UpdateMetadataImportRequest.create = function create(properties) {
                            return new UpdateMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.UpdateMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateMetadataImportRequest} message UpdateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metadataImport != null && Object.hasOwnProperty.call(message, "metadataImport"))
                                $root.google.cloud.metastore.v1alpha.MetadataImport.encode(message.metadataImport, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.UpdateMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateMetadataImportRequest} message UpdateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.UpdateMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.metadataImport = $root.google.cloud.metastore.v1alpha.MetadataImport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport")) {
                                var error = $root.google.cloud.metastore.v1alpha.MetadataImport.verify(message.metadataImport);
                                if (error)
                                    return "metadataImport." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         */
                        UpdateMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.UpdateMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.UpdateMetadataImportRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.UpdateMetadataImportRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.metadataImport != null) {
                                if (typeof object.metadataImport !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.UpdateMetadataImportRequest.metadataImport: object expected");
                                message.metadataImport = $root.google.cloud.metastore.v1alpha.MetadataImport.fromObject(object.metadataImport);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.UpdateMetadataImportRequest} message UpdateMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.metadataImport = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport"))
                                object.metadataImport = $root.google.cloud.metastore.v1alpha.MetadataImport.toObject(message.metadataImport, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.UpdateMetadataImportRequest";
                        };
    
                        return UpdateMetadataImportRequest;
                    })();
    
                    v1alpha.ListBackupsRequest = (function() {
    
                        /**
                         * Properties of a ListBackupsRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IListBackupsRequest
                         * @property {string|null} [parent] ListBackupsRequest parent
                         * @property {number|null} [pageSize] ListBackupsRequest pageSize
                         * @property {string|null} [pageToken] ListBackupsRequest pageToken
                         * @property {string|null} [filter] ListBackupsRequest filter
                         * @property {string|null} [orderBy] ListBackupsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListBackupsRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a ListBackupsRequest.
                         * @implements IListBackupsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IListBackupsRequest=} [properties] Properties to set
                         */
                        function ListBackupsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBackupsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.parent = "";
    
                        /**
                         * ListBackupsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListBackupsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.pageToken = "";
    
                        /**
                         * ListBackupsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.filter = "";
    
                        /**
                         * ListBackupsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListBackupsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListBackupsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ListBackupsRequest} ListBackupsRequest instance
                         */
                        ListBackupsRequest.create = function create(properties) {
                            return new ListBackupsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListBackupsRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.ListBackupsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListBackupsRequest} message ListBackupsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBackupsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ListBackupsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListBackupsRequest} message ListBackupsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBackupsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ListBackupsRequest} ListBackupsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ListBackupsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBackupsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ListBackupsRequest} ListBackupsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBackupsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBackupsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBackupsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ListBackupsRequest} ListBackupsRequest
                         */
                        ListBackupsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ListBackupsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ListBackupsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBackupsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ListBackupsRequest} message ListBackupsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBackupsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListBackupsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBackupsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBackupsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBackupsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ListBackupsRequest";
                        };
    
                        return ListBackupsRequest;
                    })();
    
                    v1alpha.ListBackupsResponse = (function() {
    
                        /**
                         * Properties of a ListBackupsResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IListBackupsResponse
                         * @property {Array.<google.cloud.metastore.v1alpha.IBackup>|null} [backups] ListBackupsResponse backups
                         * @property {string|null} [nextPageToken] ListBackupsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListBackupsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListBackupsResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a ListBackupsResponse.
                         * @implements IListBackupsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IListBackupsResponse=} [properties] Properties to set
                         */
                        function ListBackupsResponse(properties) {
                            this.backups = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBackupsResponse backups.
                         * @member {Array.<google.cloud.metastore.v1alpha.IBackup>} backups
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.backups = $util.emptyArray;
    
                        /**
                         * ListBackupsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListBackupsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListBackupsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListBackupsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ListBackupsResponse} ListBackupsResponse instance
                         */
                        ListBackupsResponse.create = function create(properties) {
                            return new ListBackupsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListBackupsResponse message. Does not implicitly {@link google.cloud.metastore.v1alpha.ListBackupsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListBackupsResponse} message ListBackupsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.backups != null && message.backups.length)
                                for (var i = 0; i < message.backups.length; ++i)
                                    $root.google.cloud.metastore.v1alpha.Backup.encode(message.backups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBackupsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ListBackupsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListBackupsResponse} message ListBackupsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBackupsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ListBackupsResponse} ListBackupsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ListBackupsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.backups && message.backups.length))
                                            message.backups = [];
                                        message.backups.push($root.google.cloud.metastore.v1alpha.Backup.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBackupsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ListBackupsResponse} ListBackupsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBackupsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBackupsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.backups != null && message.hasOwnProperty("backups")) {
                                if (!Array.isArray(message.backups))
                                    return "backups: array expected";
                                for (var i = 0; i < message.backups.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.Backup.verify(message.backups[i]);
                                    if (error)
                                        return "backups." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListBackupsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ListBackupsResponse} ListBackupsResponse
                         */
                        ListBackupsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ListBackupsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ListBackupsResponse();
                            if (object.backups) {
                                if (!Array.isArray(object.backups))
                                    throw TypeError(".google.cloud.metastore.v1alpha.ListBackupsResponse.backups: array expected");
                                message.backups = [];
                                for (var i = 0; i < object.backups.length; ++i) {
                                    if (typeof object.backups[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.ListBackupsResponse.backups: object expected");
                                    message.backups[i] = $root.google.cloud.metastore.v1alpha.Backup.fromObject(object.backups[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1alpha.ListBackupsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBackupsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ListBackupsResponse} message ListBackupsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBackupsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.backups = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.backups && message.backups.length) {
                                object.backups = [];
                                for (var j = 0; j < message.backups.length; ++j)
                                    object.backups[j] = $root.google.cloud.metastore.v1alpha.Backup.toObject(message.backups[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListBackupsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBackupsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBackupsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ListBackupsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBackupsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ListBackupsResponse";
                        };
    
                        return ListBackupsResponse;
                    })();
    
                    v1alpha.GetBackupRequest = (function() {
    
                        /**
                         * Properties of a GetBackupRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IGetBackupRequest
                         * @property {string|null} [name] GetBackupRequest name
                         */
    
                        /**
                         * Constructs a new GetBackupRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a GetBackupRequest.
                         * @implements IGetBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IGetBackupRequest=} [properties] Properties to set
                         */
                        function GetBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetBackupRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @instance
                         */
                        GetBackupRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.GetBackupRequest} GetBackupRequest instance
                         */
                        GetBackupRequest.create = function create(properties) {
                            return new GetBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.GetBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetBackupRequest} message GetBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.GetBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetBackupRequest} message GetBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.GetBackupRequest} GetBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.GetBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.GetBackupRequest} GetBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.GetBackupRequest} GetBackupRequest
                         */
                        GetBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.GetBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.GetBackupRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.GetBackupRequest} message GetBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.GetBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.GetBackupRequest";
                        };
    
                        return GetBackupRequest;
                    })();
    
                    v1alpha.CreateBackupRequest = (function() {
    
                        /**
                         * Properties of a CreateBackupRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface ICreateBackupRequest
                         * @property {string|null} [parent] CreateBackupRequest parent
                         * @property {string|null} [backupId] CreateBackupRequest backupId
                         * @property {google.cloud.metastore.v1alpha.IBackup|null} [backup] CreateBackupRequest backup
                         * @property {string|null} [requestId] CreateBackupRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateBackupRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a CreateBackupRequest.
                         * @implements ICreateBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.ICreateBackupRequest=} [properties] Properties to set
                         */
                        function CreateBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateBackupRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.parent = "";
    
                        /**
                         * CreateBackupRequest backupId.
                         * @member {string} backupId
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.backupId = "";
    
                        /**
                         * CreateBackupRequest backup.
                         * @member {google.cloud.metastore.v1alpha.IBackup|null|undefined} backup
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.backup = null;
    
                        /**
                         * CreateBackupRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.CreateBackupRequest} CreateBackupRequest instance
                         */
                        CreateBackupRequest.create = function create(properties) {
                            return new CreateBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.CreateBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateBackupRequest} message CreateBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.backupId != null && Object.hasOwnProperty.call(message, "backupId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.backupId);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                $root.google.cloud.metastore.v1alpha.Backup.encode(message.backup, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.CreateBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateBackupRequest} message CreateBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.CreateBackupRequest} CreateBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.CreateBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.backupId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.backup = $root.google.cloud.metastore.v1alpha.Backup.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.CreateBackupRequest} CreateBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.backupId != null && message.hasOwnProperty("backupId"))
                                if (!$util.isString(message.backupId))
                                    return "backupId: string expected";
                            if (message.backup != null && message.hasOwnProperty("backup")) {
                                var error = $root.google.cloud.metastore.v1alpha.Backup.verify(message.backup);
                                if (error)
                                    return "backup." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.CreateBackupRequest} CreateBackupRequest
                         */
                        CreateBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.CreateBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.CreateBackupRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.backupId != null)
                                message.backupId = String(object.backupId);
                            if (object.backup != null) {
                                if (typeof object.backup !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.CreateBackupRequest.backup: object expected");
                                message.backup = $root.google.cloud.metastore.v1alpha.Backup.fromObject(object.backup);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.CreateBackupRequest} message CreateBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.backupId = "";
                                object.backup = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.backupId != null && message.hasOwnProperty("backupId"))
                                object.backupId = message.backupId;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = $root.google.cloud.metastore.v1alpha.Backup.toObject(message.backup, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.CreateBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.CreateBackupRequest";
                        };
    
                        return CreateBackupRequest;
                    })();
    
                    v1alpha.DeleteBackupRequest = (function() {
    
                        /**
                         * Properties of a DeleteBackupRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IDeleteBackupRequest
                         * @property {string|null} [name] DeleteBackupRequest name
                         * @property {string|null} [requestId] DeleteBackupRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteBackupRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a DeleteBackupRequest.
                         * @implements IDeleteBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IDeleteBackupRequest=} [properties] Properties to set
                         */
                        function DeleteBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteBackupRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @instance
                         */
                        DeleteBackupRequest.prototype.name = "";
    
                        /**
                         * DeleteBackupRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @instance
                         */
                        DeleteBackupRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.DeleteBackupRequest} DeleteBackupRequest instance
                         */
                        DeleteBackupRequest.create = function create(properties) {
                            return new DeleteBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.DeleteBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteBackupRequest} message DeleteBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.DeleteBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteBackupRequest} message DeleteBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.DeleteBackupRequest} DeleteBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.DeleteBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.DeleteBackupRequest} DeleteBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.DeleteBackupRequest} DeleteBackupRequest
                         */
                        DeleteBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.DeleteBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.DeleteBackupRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.DeleteBackupRequest} message DeleteBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.DeleteBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.DeleteBackupRequest";
                        };
    
                        return DeleteBackupRequest;
                    })();
    
                    v1alpha.ExportMetadataRequest = (function() {
    
                        /**
                         * Properties of an ExportMetadataRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IExportMetadataRequest
                         * @property {string|null} [destinationGcsFolder] ExportMetadataRequest destinationGcsFolder
                         * @property {string|null} [service] ExportMetadataRequest service
                         * @property {string|null} [requestId] ExportMetadataRequest requestId
                         * @property {google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type|null} [databaseDumpType] ExportMetadataRequest databaseDumpType
                         */
    
                        /**
                         * Constructs a new ExportMetadataRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an ExportMetadataRequest.
                         * @implements IExportMetadataRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IExportMetadataRequest=} [properties] Properties to set
                         */
                        function ExportMetadataRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExportMetadataRequest destinationGcsFolder.
                         * @member {string|null|undefined} destinationGcsFolder
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.destinationGcsFolder = null;
    
                        /**
                         * ExportMetadataRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.service = "";
    
                        /**
                         * ExportMetadataRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.requestId = "";
    
                        /**
                         * ExportMetadataRequest databaseDumpType.
                         * @member {google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type} databaseDumpType
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.databaseDumpType = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ExportMetadataRequest destination.
                         * @member {"destinationGcsFolder"|undefined} destination
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @instance
                         */
                        Object.defineProperty(ExportMetadataRequest.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["destinationGcsFolder"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ExportMetadataRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IExportMetadataRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ExportMetadataRequest} ExportMetadataRequest instance
                         */
                        ExportMetadataRequest.create = function create(properties) {
                            return new ExportMetadataRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ExportMetadataRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.ExportMetadataRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IExportMetadataRequest} message ExportMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportMetadataRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.destinationGcsFolder != null && Object.hasOwnProperty.call(message, "destinationGcsFolder"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.destinationGcsFolder);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.databaseDumpType != null && Object.hasOwnProperty.call(message, "databaseDumpType"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.databaseDumpType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExportMetadataRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ExportMetadataRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IExportMetadataRequest} message ExportMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportMetadataRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExportMetadataRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ExportMetadataRequest} ExportMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportMetadataRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ExportMetadataRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.destinationGcsFolder = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.databaseDumpType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExportMetadataRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ExportMetadataRequest} ExportMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportMetadataRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExportMetadataRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExportMetadataRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.destinationGcsFolder != null && message.hasOwnProperty("destinationGcsFolder")) {
                                properties.destination = 1;
                                if (!$util.isString(message.destinationGcsFolder))
                                    return "destinationGcsFolder: string expected";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                switch (message.databaseDumpType) {
                                default:
                                    return "databaseDumpType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an ExportMetadataRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ExportMetadataRequest} ExportMetadataRequest
                         */
                        ExportMetadataRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ExportMetadataRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ExportMetadataRequest();
                            if (object.destinationGcsFolder != null)
                                message.destinationGcsFolder = String(object.destinationGcsFolder);
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            switch (object.databaseDumpType) {
                            default:
                                if (typeof object.databaseDumpType === "number") {
                                    message.databaseDumpType = object.databaseDumpType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseDumpType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseDumpType = 1;
                                break;
                            case "AVRO":
                            case 2:
                                message.databaseDumpType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExportMetadataRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ExportMetadataRequest} message ExportMetadataRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExportMetadataRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.requestId = "";
                                object.databaseDumpType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.destinationGcsFolder != null && message.hasOwnProperty("destinationGcsFolder")) {
                                object.destinationGcsFolder = message.destinationGcsFolder;
                                if (options.oneofs)
                                    object.destination = "destinationGcsFolder";
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                object.databaseDumpType = options.enums === String ? $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type[message.databaseDumpType] === undefined ? message.databaseDumpType : $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type[message.databaseDumpType] : message.databaseDumpType;
                            return object;
                        };
    
                        /**
                         * Converts this ExportMetadataRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExportMetadataRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExportMetadataRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ExportMetadataRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExportMetadataRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ExportMetadataRequest";
                        };
    
                        return ExportMetadataRequest;
                    })();
    
                    v1alpha.RestoreServiceRequest = (function() {
    
                        /**
                         * Properties of a RestoreServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IRestoreServiceRequest
                         * @property {string|null} [service] RestoreServiceRequest service
                         * @property {string|null} [backup] RestoreServiceRequest backup
                         * @property {google.cloud.metastore.v1alpha.Restore.RestoreType|null} [restoreType] RestoreServiceRequest restoreType
                         * @property {string|null} [requestId] RestoreServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new RestoreServiceRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a RestoreServiceRequest.
                         * @implements IRestoreServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IRestoreServiceRequest=} [properties] Properties to set
                         */
                        function RestoreServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RestoreServiceRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.service = "";
    
                        /**
                         * RestoreServiceRequest backup.
                         * @member {string} backup
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.backup = "";
    
                        /**
                         * RestoreServiceRequest restoreType.
                         * @member {google.cloud.metastore.v1alpha.Restore.RestoreType} restoreType
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.restoreType = 0;
    
                        /**
                         * RestoreServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new RestoreServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRestoreServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.RestoreServiceRequest} RestoreServiceRequest instance
                         */
                        RestoreServiceRequest.create = function create(properties) {
                            return new RestoreServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RestoreServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.RestoreServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRestoreServiceRequest} message RestoreServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RestoreServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.backup);
                            if (message.restoreType != null && Object.hasOwnProperty.call(message, "restoreType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.restoreType);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RestoreServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.RestoreServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRestoreServiceRequest} message RestoreServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RestoreServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RestoreServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.RestoreServiceRequest} RestoreServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RestoreServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.RestoreServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.backup = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.restoreType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RestoreServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.RestoreServiceRequest} RestoreServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RestoreServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RestoreServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RestoreServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                if (!$util.isString(message.backup))
                                    return "backup: string expected";
                            if (message.restoreType != null && message.hasOwnProperty("restoreType"))
                                switch (message.restoreType) {
                                default:
                                    return "restoreType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RestoreServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.RestoreServiceRequest} RestoreServiceRequest
                         */
                        RestoreServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.RestoreServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.RestoreServiceRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.backup != null)
                                message.backup = String(object.backup);
                            switch (object.restoreType) {
                            default:
                                if (typeof object.restoreType === "number") {
                                    message.restoreType = object.restoreType;
                                    break;
                                }
                                break;
                            case "RESTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.restoreType = 0;
                                break;
                            case "FULL":
                            case 1:
                                message.restoreType = 1;
                                break;
                            case "METADATA_ONLY":
                            case 2:
                                message.restoreType = 2;
                                break;
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RestoreServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.RestoreServiceRequest} message RestoreServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RestoreServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.backup = "";
                                object.restoreType = options.enums === String ? "RESTORE_TYPE_UNSPECIFIED" : 0;
                                object.requestId = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = message.backup;
                            if (message.restoreType != null && message.hasOwnProperty("restoreType"))
                                object.restoreType = options.enums === String ? $root.google.cloud.metastore.v1alpha.Restore.RestoreType[message.restoreType] === undefined ? message.restoreType : $root.google.cloud.metastore.v1alpha.Restore.RestoreType[message.restoreType] : message.restoreType;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this RestoreServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RestoreServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RestoreServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.RestoreServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RestoreServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.RestoreServiceRequest";
                        };
    
                        return RestoreServiceRequest;
                    })();
    
                    v1alpha.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.metastore.v1alpha.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1alpha.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1alpha.LocationMetadata = (function() {
    
                        /**
                         * Properties of a LocationMetadata.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface ILocationMetadata
                         * @property {Array.<google.cloud.metastore.v1alpha.LocationMetadata.IHiveMetastoreVersion>|null} [supportedHiveMetastoreVersions] LocationMetadata supportedHiveMetastoreVersions
                         */
    
                        /**
                         * Constructs a new LocationMetadata.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a LocationMetadata.
                         * @implements ILocationMetadata
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.ILocationMetadata=} [properties] Properties to set
                         */
                        function LocationMetadata(properties) {
                            this.supportedHiveMetastoreVersions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationMetadata supportedHiveMetastoreVersions.
                         * @member {Array.<google.cloud.metastore.v1alpha.LocationMetadata.IHiveMetastoreVersion>} supportedHiveMetastoreVersions
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @instance
                         */
                        LocationMetadata.prototype.supportedHiveMetastoreVersions = $util.emptyArray;
    
                        /**
                         * Creates a new LocationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ILocationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.LocationMetadata} LocationMetadata instance
                         */
                        LocationMetadata.create = function create(properties) {
                            return new LocationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message. Does not implicitly {@link google.cloud.metastore.v1alpha.LocationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.supportedHiveMetastoreVersions != null && message.supportedHiveMetastoreVersions.length)
                                for (var i = 0; i < message.supportedHiveMetastoreVersions.length; ++i)
                                    $root.google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion.encode(message.supportedHiveMetastoreVersions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.LocationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.LocationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.supportedHiveMetastoreVersions && message.supportedHiveMetastoreVersions.length))
                                            message.supportedHiveMetastoreVersions = [];
                                        message.supportedHiveMetastoreVersions.push($root.google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationMetadata message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.supportedHiveMetastoreVersions != null && message.hasOwnProperty("supportedHiveMetastoreVersions")) {
                                if (!Array.isArray(message.supportedHiveMetastoreVersions))
                                    return "supportedHiveMetastoreVersions: array expected";
                                for (var i = 0; i < message.supportedHiveMetastoreVersions.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion.verify(message.supportedHiveMetastoreVersions[i]);
                                    if (error)
                                        return "supportedHiveMetastoreVersions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LocationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.LocationMetadata} LocationMetadata
                         */
                        LocationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.LocationMetadata)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.LocationMetadata();
                            if (object.supportedHiveMetastoreVersions) {
                                if (!Array.isArray(object.supportedHiveMetastoreVersions))
                                    throw TypeError(".google.cloud.metastore.v1alpha.LocationMetadata.supportedHiveMetastoreVersions: array expected");
                                message.supportedHiveMetastoreVersions = [];
                                for (var i = 0; i < object.supportedHiveMetastoreVersions.length; ++i) {
                                    if (typeof object.supportedHiveMetastoreVersions[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.LocationMetadata.supportedHiveMetastoreVersions: object expected");
                                    message.supportedHiveMetastoreVersions[i] = $root.google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion.fromObject(object.supportedHiveMetastoreVersions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1alpha.LocationMetadata} message LocationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.supportedHiveMetastoreVersions = [];
                            if (message.supportedHiveMetastoreVersions && message.supportedHiveMetastoreVersions.length) {
                                object.supportedHiveMetastoreVersions = [];
                                for (var j = 0; j < message.supportedHiveMetastoreVersions.length; ++j)
                                    object.supportedHiveMetastoreVersions[j] = $root.google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion.toObject(message.supportedHiveMetastoreVersions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LocationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.LocationMetadata";
                        };
    
                        LocationMetadata.HiveMetastoreVersion = (function() {
    
                            /**
                             * Properties of a HiveMetastoreVersion.
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                             * @interface IHiveMetastoreVersion
                             * @property {string|null} [version] HiveMetastoreVersion version
                             * @property {boolean|null} [isDefault] HiveMetastoreVersion isDefault
                             */
    
                            /**
                             * Constructs a new HiveMetastoreVersion.
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata
                             * @classdesc Represents a HiveMetastoreVersion.
                             * @implements IHiveMetastoreVersion
                             * @constructor
                             * @param {google.cloud.metastore.v1alpha.LocationMetadata.IHiveMetastoreVersion=} [properties] Properties to set
                             */
                            function HiveMetastoreVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HiveMetastoreVersion version.
                             * @member {string} version
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             */
                            HiveMetastoreVersion.prototype.version = "";
    
                            /**
                             * HiveMetastoreVersion isDefault.
                             * @member {boolean} isDefault
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             */
                            HiveMetastoreVersion.prototype.isDefault = false;
    
                            /**
                             * Creates a new HiveMetastoreVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1alpha.LocationMetadata.IHiveMetastoreVersion=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion instance
                             */
                            HiveMetastoreVersion.create = function create(properties) {
                                return new HiveMetastoreVersion(properties);
                            };
    
                            /**
                             * Encodes the specified HiveMetastoreVersion message. Does not implicitly {@link google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1alpha.LocationMetadata.IHiveMetastoreVersion} message HiveMetastoreVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HiveMetastoreVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.isDefault != null && Object.hasOwnProperty.call(message, "isDefault"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isDefault);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HiveMetastoreVersion message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1alpha.LocationMetadata.IHiveMetastoreVersion} message HiveMetastoreVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HiveMetastoreVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HiveMetastoreVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HiveMetastoreVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.isDefault = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HiveMetastoreVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HiveMetastoreVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HiveMetastoreVersion message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HiveMetastoreVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.isDefault != null && message.hasOwnProperty("isDefault"))
                                    if (typeof message.isDefault !== "boolean")
                                        return "isDefault: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a HiveMetastoreVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             */
                            HiveMetastoreVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.isDefault != null)
                                    message.isDefault = Boolean(object.isDefault);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HiveMetastoreVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion} message HiveMetastoreVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HiveMetastoreVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = "";
                                    object.isDefault = false;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.isDefault != null && message.hasOwnProperty("isDefault"))
                                    object.isDefault = message.isDefault;
                                return object;
                            };
    
                            /**
                             * Converts this HiveMetastoreVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HiveMetastoreVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for HiveMetastoreVersion
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            HiveMetastoreVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion";
                            };
    
                            return HiveMetastoreVersion;
                        })();
    
                        return LocationMetadata;
                    })();
    
                    v1alpha.DatabaseDumpSpec = (function() {
    
                        /**
                         * Properties of a DatabaseDumpSpec.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IDatabaseDumpSpec
                         */
    
                        /**
                         * Constructs a new DatabaseDumpSpec.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a DatabaseDumpSpec.
                         * @implements IDatabaseDumpSpec
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IDatabaseDumpSpec=} [properties] Properties to set
                         */
                        function DatabaseDumpSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new DatabaseDumpSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDatabaseDumpSpec=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.DatabaseDumpSpec} DatabaseDumpSpec instance
                         */
                        DatabaseDumpSpec.create = function create(properties) {
                            return new DatabaseDumpSpec(properties);
                        };
    
                        /**
                         * Encodes the specified DatabaseDumpSpec message. Does not implicitly {@link google.cloud.metastore.v1alpha.DatabaseDumpSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDatabaseDumpSpec} message DatabaseDumpSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseDumpSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DatabaseDumpSpec message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.DatabaseDumpSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDatabaseDumpSpec} message DatabaseDumpSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseDumpSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DatabaseDumpSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.DatabaseDumpSpec} DatabaseDumpSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseDumpSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DatabaseDumpSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.DatabaseDumpSpec} DatabaseDumpSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseDumpSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DatabaseDumpSpec message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DatabaseDumpSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a DatabaseDumpSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.DatabaseDumpSpec} DatabaseDumpSpec
                         */
                        DatabaseDumpSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec)
                                return object;
                            return new $root.google.cloud.metastore.v1alpha.DatabaseDumpSpec();
                        };
    
                        /**
                         * Creates a plain object from a DatabaseDumpSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1alpha.DatabaseDumpSpec} message DatabaseDumpSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DatabaseDumpSpec.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this DatabaseDumpSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DatabaseDumpSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DatabaseDumpSpec
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.DatabaseDumpSpec
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DatabaseDumpSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.DatabaseDumpSpec";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} MYSQL=1 MYSQL value
                         * @property {number} AVRO=2 AVRO value
                         */
                        DatabaseDumpSpec.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MYSQL"] = 1;
                            values[valuesById[2] = "AVRO"] = 2;
                            return values;
                        })();
    
                        return DatabaseDumpSpec;
                    })();
    
                    v1alpha.RemoveIamPolicyRequest = (function() {
    
                        /**
                         * Properties of a RemoveIamPolicyRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IRemoveIamPolicyRequest
                         * @property {string|null} [resource] RemoveIamPolicyRequest resource
                         * @property {boolean|null} [asynchronous] RemoveIamPolicyRequest asynchronous
                         */
    
                        /**
                         * Constructs a new RemoveIamPolicyRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a RemoveIamPolicyRequest.
                         * @implements IRemoveIamPolicyRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyRequest=} [properties] Properties to set
                         */
                        function RemoveIamPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RemoveIamPolicyRequest resource.
                         * @member {string} resource
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @instance
                         */
                        RemoveIamPolicyRequest.prototype.resource = "";
    
                        /**
                         * RemoveIamPolicyRequest asynchronous.
                         * @member {boolean} asynchronous
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @instance
                         */
                        RemoveIamPolicyRequest.prototype.asynchronous = false;
    
                        /**
                         * Creates a new RemoveIamPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.RemoveIamPolicyRequest} RemoveIamPolicyRequest instance
                         */
                        RemoveIamPolicyRequest.create = function create(properties) {
                            return new RemoveIamPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RemoveIamPolicyRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.RemoveIamPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyRequest} message RemoveIamPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveIamPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                            if (message.asynchronous != null && Object.hasOwnProperty.call(message, "asynchronous"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.asynchronous);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RemoveIamPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.RemoveIamPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyRequest} message RemoveIamPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveIamPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RemoveIamPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.RemoveIamPolicyRequest} RemoveIamPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveIamPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.RemoveIamPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.asynchronous = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RemoveIamPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.RemoveIamPolicyRequest} RemoveIamPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveIamPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RemoveIamPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RemoveIamPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.asynchronous != null && message.hasOwnProperty("asynchronous"))
                                if (typeof message.asynchronous !== "boolean")
                                    return "asynchronous: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RemoveIamPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.RemoveIamPolicyRequest} RemoveIamPolicyRequest
                         */
                        RemoveIamPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.RemoveIamPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.RemoveIamPolicyRequest();
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.asynchronous != null)
                                message.asynchronous = Boolean(object.asynchronous);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RemoveIamPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.RemoveIamPolicyRequest} message RemoveIamPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RemoveIamPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resource = "";
                                object.asynchronous = false;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.asynchronous != null && message.hasOwnProperty("asynchronous"))
                                object.asynchronous = message.asynchronous;
                            return object;
                        };
    
                        /**
                         * Converts this RemoveIamPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RemoveIamPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RemoveIamPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RemoveIamPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.RemoveIamPolicyRequest";
                        };
    
                        return RemoveIamPolicyRequest;
                    })();
    
                    v1alpha.RemoveIamPolicyResponse = (function() {
    
                        /**
                         * Properties of a RemoveIamPolicyResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IRemoveIamPolicyResponse
                         * @property {boolean|null} [success] RemoveIamPolicyResponse success
                         */
    
                        /**
                         * Constructs a new RemoveIamPolicyResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a RemoveIamPolicyResponse.
                         * @implements IRemoveIamPolicyResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyResponse=} [properties] Properties to set
                         */
                        function RemoveIamPolicyResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RemoveIamPolicyResponse success.
                         * @member {boolean} success
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @instance
                         */
                        RemoveIamPolicyResponse.prototype.success = false;
    
                        /**
                         * Creates a new RemoveIamPolicyResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.RemoveIamPolicyResponse} RemoveIamPolicyResponse instance
                         */
                        RemoveIamPolicyResponse.create = function create(properties) {
                            return new RemoveIamPolicyResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RemoveIamPolicyResponse message. Does not implicitly {@link google.cloud.metastore.v1alpha.RemoveIamPolicyResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyResponse} message RemoveIamPolicyResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveIamPolicyResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.success != null && Object.hasOwnProperty.call(message, "success"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.success);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RemoveIamPolicyResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.RemoveIamPolicyResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IRemoveIamPolicyResponse} message RemoveIamPolicyResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveIamPolicyResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RemoveIamPolicyResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.RemoveIamPolicyResponse} RemoveIamPolicyResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveIamPolicyResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.RemoveIamPolicyResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.success = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RemoveIamPolicyResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.RemoveIamPolicyResponse} RemoveIamPolicyResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveIamPolicyResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RemoveIamPolicyResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RemoveIamPolicyResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.success != null && message.hasOwnProperty("success"))
                                if (typeof message.success !== "boolean")
                                    return "success: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RemoveIamPolicyResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.RemoveIamPolicyResponse} RemoveIamPolicyResponse
                         */
                        RemoveIamPolicyResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.RemoveIamPolicyResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.RemoveIamPolicyResponse();
                            if (object.success != null)
                                message.success = Boolean(object.success);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RemoveIamPolicyResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.RemoveIamPolicyResponse} message RemoveIamPolicyResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RemoveIamPolicyResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.success = false;
                            if (message.success != null && message.hasOwnProperty("success"))
                                object.success = message.success;
                            return object;
                        };
    
                        /**
                         * Converts this RemoveIamPolicyResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RemoveIamPolicyResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RemoveIamPolicyResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RemoveIamPolicyResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.RemoveIamPolicyResponse";
                        };
    
                        return RemoveIamPolicyResponse;
                    })();
    
                    v1alpha.QueryMetadataRequest = (function() {
    
                        /**
                         * Properties of a QueryMetadataRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IQueryMetadataRequest
                         * @property {string|null} [service] QueryMetadataRequest service
                         * @property {string|null} [query] QueryMetadataRequest query
                         */
    
                        /**
                         * Constructs a new QueryMetadataRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a QueryMetadataRequest.
                         * @implements IQueryMetadataRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataRequest=} [properties] Properties to set
                         */
                        function QueryMetadataRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryMetadataRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @instance
                         */
                        QueryMetadataRequest.prototype.service = "";
    
                        /**
                         * QueryMetadataRequest query.
                         * @member {string} query
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @instance
                         */
                        QueryMetadataRequest.prototype.query = "";
    
                        /**
                         * Creates a new QueryMetadataRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.QueryMetadataRequest} QueryMetadataRequest instance
                         */
                        QueryMetadataRequest.create = function create(properties) {
                            return new QueryMetadataRequest(properties);
                        };
    
                        /**
                         * Encodes the specified QueryMetadataRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.QueryMetadataRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataRequest} message QueryMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryMetadataRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.query);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryMetadataRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.QueryMetadataRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataRequest} message QueryMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryMetadataRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryMetadataRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.QueryMetadataRequest} QueryMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryMetadataRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.QueryMetadataRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.query = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryMetadataRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.QueryMetadataRequest} QueryMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryMetadataRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryMetadataRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryMetadataRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueryMetadataRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.QueryMetadataRequest} QueryMetadataRequest
                         */
                        QueryMetadataRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.QueryMetadataRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.QueryMetadataRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.query != null)
                                message.query = String(object.query);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryMetadataRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.QueryMetadataRequest} message QueryMetadataRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryMetadataRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.query = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            return object;
                        };
    
                        /**
                         * Converts this QueryMetadataRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryMetadataRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryMetadataRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryMetadataRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.QueryMetadataRequest";
                        };
    
                        return QueryMetadataRequest;
                    })();
    
                    v1alpha.QueryMetadataResponse = (function() {
    
                        /**
                         * Properties of a QueryMetadataResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IQueryMetadataResponse
                         * @property {string|null} [resultManifestUri] QueryMetadataResponse resultManifestUri
                         */
    
                        /**
                         * Constructs a new QueryMetadataResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a QueryMetadataResponse.
                         * @implements IQueryMetadataResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataResponse=} [properties] Properties to set
                         */
                        function QueryMetadataResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryMetadataResponse resultManifestUri.
                         * @member {string} resultManifestUri
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @instance
                         */
                        QueryMetadataResponse.prototype.resultManifestUri = "";
    
                        /**
                         * Creates a new QueryMetadataResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.QueryMetadataResponse} QueryMetadataResponse instance
                         */
                        QueryMetadataResponse.create = function create(properties) {
                            return new QueryMetadataResponse(properties);
                        };
    
                        /**
                         * Encodes the specified QueryMetadataResponse message. Does not implicitly {@link google.cloud.metastore.v1alpha.QueryMetadataResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataResponse} message QueryMetadataResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryMetadataResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resultManifestUri != null && Object.hasOwnProperty.call(message, "resultManifestUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resultManifestUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryMetadataResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.QueryMetadataResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IQueryMetadataResponse} message QueryMetadataResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryMetadataResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryMetadataResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.QueryMetadataResponse} QueryMetadataResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryMetadataResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.QueryMetadataResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resultManifestUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryMetadataResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.QueryMetadataResponse} QueryMetadataResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryMetadataResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryMetadataResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryMetadataResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resultManifestUri != null && message.hasOwnProperty("resultManifestUri"))
                                if (!$util.isString(message.resultManifestUri))
                                    return "resultManifestUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueryMetadataResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.QueryMetadataResponse} QueryMetadataResponse
                         */
                        QueryMetadataResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.QueryMetadataResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.QueryMetadataResponse();
                            if (object.resultManifestUri != null)
                                message.resultManifestUri = String(object.resultManifestUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryMetadataResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.QueryMetadataResponse} message QueryMetadataResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryMetadataResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.resultManifestUri = "";
                            if (message.resultManifestUri != null && message.hasOwnProperty("resultManifestUri"))
                                object.resultManifestUri = message.resultManifestUri;
                            return object;
                        };
    
                        /**
                         * Converts this QueryMetadataResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryMetadataResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryMetadataResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.QueryMetadataResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryMetadataResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.QueryMetadataResponse";
                        };
    
                        return QueryMetadataResponse;
                    })();
    
                    v1alpha.MoveTableToDatabaseRequest = (function() {
    
                        /**
                         * Properties of a MoveTableToDatabaseRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IMoveTableToDatabaseRequest
                         * @property {string|null} [service] MoveTableToDatabaseRequest service
                         * @property {string|null} [tableName] MoveTableToDatabaseRequest tableName
                         * @property {string|null} [dbName] MoveTableToDatabaseRequest dbName
                         * @property {string|null} [destinationDbName] MoveTableToDatabaseRequest destinationDbName
                         */
    
                        /**
                         * Constructs a new MoveTableToDatabaseRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a MoveTableToDatabaseRequest.
                         * @implements IMoveTableToDatabaseRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseRequest=} [properties] Properties to set
                         */
                        function MoveTableToDatabaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MoveTableToDatabaseRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @instance
                         */
                        MoveTableToDatabaseRequest.prototype.service = "";
    
                        /**
                         * MoveTableToDatabaseRequest tableName.
                         * @member {string} tableName
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @instance
                         */
                        MoveTableToDatabaseRequest.prototype.tableName = "";
    
                        /**
                         * MoveTableToDatabaseRequest dbName.
                         * @member {string} dbName
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @instance
                         */
                        MoveTableToDatabaseRequest.prototype.dbName = "";
    
                        /**
                         * MoveTableToDatabaseRequest destinationDbName.
                         * @member {string} destinationDbName
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @instance
                         */
                        MoveTableToDatabaseRequest.prototype.destinationDbName = "";
    
                        /**
                         * Creates a new MoveTableToDatabaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest} MoveTableToDatabaseRequest instance
                         */
                        MoveTableToDatabaseRequest.create = function create(properties) {
                            return new MoveTableToDatabaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified MoveTableToDatabaseRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseRequest} message MoveTableToDatabaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MoveTableToDatabaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.tableName != null && Object.hasOwnProperty.call(message, "tableName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tableName);
                            if (message.dbName != null && Object.hasOwnProperty.call(message, "dbName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.dbName);
                            if (message.destinationDbName != null && Object.hasOwnProperty.call(message, "destinationDbName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.destinationDbName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MoveTableToDatabaseRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseRequest} message MoveTableToDatabaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MoveTableToDatabaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MoveTableToDatabaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest} MoveTableToDatabaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MoveTableToDatabaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.tableName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.dbName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.destinationDbName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MoveTableToDatabaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest} MoveTableToDatabaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MoveTableToDatabaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MoveTableToDatabaseRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MoveTableToDatabaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.tableName != null && message.hasOwnProperty("tableName"))
                                if (!$util.isString(message.tableName))
                                    return "tableName: string expected";
                            if (message.dbName != null && message.hasOwnProperty("dbName"))
                                if (!$util.isString(message.dbName))
                                    return "dbName: string expected";
                            if (message.destinationDbName != null && message.hasOwnProperty("destinationDbName"))
                                if (!$util.isString(message.destinationDbName))
                                    return "destinationDbName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a MoveTableToDatabaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest} MoveTableToDatabaseRequest
                         */
                        MoveTableToDatabaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.tableName != null)
                                message.tableName = String(object.tableName);
                            if (object.dbName != null)
                                message.dbName = String(object.dbName);
                            if (object.destinationDbName != null)
                                message.destinationDbName = String(object.destinationDbName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MoveTableToDatabaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest} message MoveTableToDatabaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MoveTableToDatabaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.tableName = "";
                                object.dbName = "";
                                object.destinationDbName = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.tableName != null && message.hasOwnProperty("tableName"))
                                object.tableName = message.tableName;
                            if (message.dbName != null && message.hasOwnProperty("dbName"))
                                object.dbName = message.dbName;
                            if (message.destinationDbName != null && message.hasOwnProperty("destinationDbName"))
                                object.destinationDbName = message.destinationDbName;
                            return object;
                        };
    
                        /**
                         * Converts this MoveTableToDatabaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MoveTableToDatabaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MoveTableToDatabaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MoveTableToDatabaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest";
                        };
    
                        return MoveTableToDatabaseRequest;
                    })();
    
                    v1alpha.MoveTableToDatabaseResponse = (function() {
    
                        /**
                         * Properties of a MoveTableToDatabaseResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IMoveTableToDatabaseResponse
                         */
    
                        /**
                         * Constructs a new MoveTableToDatabaseResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a MoveTableToDatabaseResponse.
                         * @implements IMoveTableToDatabaseResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseResponse=} [properties] Properties to set
                         */
                        function MoveTableToDatabaseResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new MoveTableToDatabaseResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse} MoveTableToDatabaseResponse instance
                         */
                        MoveTableToDatabaseResponse.create = function create(properties) {
                            return new MoveTableToDatabaseResponse(properties);
                        };
    
                        /**
                         * Encodes the specified MoveTableToDatabaseResponse message. Does not implicitly {@link google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseResponse} message MoveTableToDatabaseResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MoveTableToDatabaseResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MoveTableToDatabaseResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IMoveTableToDatabaseResponse} message MoveTableToDatabaseResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MoveTableToDatabaseResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MoveTableToDatabaseResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse} MoveTableToDatabaseResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MoveTableToDatabaseResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MoveTableToDatabaseResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse} MoveTableToDatabaseResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MoveTableToDatabaseResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MoveTableToDatabaseResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MoveTableToDatabaseResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a MoveTableToDatabaseResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse} MoveTableToDatabaseResponse
                         */
                        MoveTableToDatabaseResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse)
                                return object;
                            return new $root.google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse();
                        };
    
                        /**
                         * Creates a plain object from a MoveTableToDatabaseResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse} message MoveTableToDatabaseResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MoveTableToDatabaseResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this MoveTableToDatabaseResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MoveTableToDatabaseResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MoveTableToDatabaseResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MoveTableToDatabaseResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse";
                        };
    
                        return MoveTableToDatabaseResponse;
                    })();
    
                    v1alpha.AlterMetadataResourceLocationRequest = (function() {
    
                        /**
                         * Properties of an AlterMetadataResourceLocationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IAlterMetadataResourceLocationRequest
                         * @property {string|null} [service] AlterMetadataResourceLocationRequest service
                         * @property {string|null} [resourceName] AlterMetadataResourceLocationRequest resourceName
                         * @property {string|null} [locationUri] AlterMetadataResourceLocationRequest locationUri
                         */
    
                        /**
                         * Constructs a new AlterMetadataResourceLocationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an AlterMetadataResourceLocationRequest.
                         * @implements IAlterMetadataResourceLocationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationRequest=} [properties] Properties to set
                         */
                        function AlterMetadataResourceLocationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AlterMetadataResourceLocationRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @instance
                         */
                        AlterMetadataResourceLocationRequest.prototype.service = "";
    
                        /**
                         * AlterMetadataResourceLocationRequest resourceName.
                         * @member {string} resourceName
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @instance
                         */
                        AlterMetadataResourceLocationRequest.prototype.resourceName = "";
    
                        /**
                         * AlterMetadataResourceLocationRequest locationUri.
                         * @member {string} locationUri
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @instance
                         */
                        AlterMetadataResourceLocationRequest.prototype.locationUri = "";
    
                        /**
                         * Creates a new AlterMetadataResourceLocationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest} AlterMetadataResourceLocationRequest instance
                         */
                        AlterMetadataResourceLocationRequest.create = function create(properties) {
                            return new AlterMetadataResourceLocationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AlterMetadataResourceLocationRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationRequest} message AlterMetadataResourceLocationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AlterMetadataResourceLocationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.resourceName != null && Object.hasOwnProperty.call(message, "resourceName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceName);
                            if (message.locationUri != null && Object.hasOwnProperty.call(message, "locationUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.locationUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AlterMetadataResourceLocationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationRequest} message AlterMetadataResourceLocationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AlterMetadataResourceLocationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AlterMetadataResourceLocationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest} AlterMetadataResourceLocationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AlterMetadataResourceLocationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.resourceName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.locationUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AlterMetadataResourceLocationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest} AlterMetadataResourceLocationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AlterMetadataResourceLocationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AlterMetadataResourceLocationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AlterMetadataResourceLocationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                if (!$util.isString(message.resourceName))
                                    return "resourceName: string expected";
                            if (message.locationUri != null && message.hasOwnProperty("locationUri"))
                                if (!$util.isString(message.locationUri))
                                    return "locationUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AlterMetadataResourceLocationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest} AlterMetadataResourceLocationRequest
                         */
                        AlterMetadataResourceLocationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.resourceName != null)
                                message.resourceName = String(object.resourceName);
                            if (object.locationUri != null)
                                message.locationUri = String(object.locationUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AlterMetadataResourceLocationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest} message AlterMetadataResourceLocationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AlterMetadataResourceLocationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.resourceName = "";
                                object.locationUri = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                object.resourceName = message.resourceName;
                            if (message.locationUri != null && message.hasOwnProperty("locationUri"))
                                object.locationUri = message.locationUri;
                            return object;
                        };
    
                        /**
                         * Converts this AlterMetadataResourceLocationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AlterMetadataResourceLocationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AlterMetadataResourceLocationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AlterMetadataResourceLocationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest";
                        };
    
                        return AlterMetadataResourceLocationRequest;
                    })();
    
                    v1alpha.AlterMetadataResourceLocationResponse = (function() {
    
                        /**
                         * Properties of an AlterMetadataResourceLocationResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IAlterMetadataResourceLocationResponse
                         */
    
                        /**
                         * Constructs a new AlterMetadataResourceLocationResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an AlterMetadataResourceLocationResponse.
                         * @implements IAlterMetadataResourceLocationResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationResponse=} [properties] Properties to set
                         */
                        function AlterMetadataResourceLocationResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AlterMetadataResourceLocationResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse} AlterMetadataResourceLocationResponse instance
                         */
                        AlterMetadataResourceLocationResponse.create = function create(properties) {
                            return new AlterMetadataResourceLocationResponse(properties);
                        };
    
                        /**
                         * Encodes the specified AlterMetadataResourceLocationResponse message. Does not implicitly {@link google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationResponse} message AlterMetadataResourceLocationResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AlterMetadataResourceLocationResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AlterMetadataResourceLocationResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IAlterMetadataResourceLocationResponse} message AlterMetadataResourceLocationResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AlterMetadataResourceLocationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AlterMetadataResourceLocationResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse} AlterMetadataResourceLocationResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AlterMetadataResourceLocationResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AlterMetadataResourceLocationResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse} AlterMetadataResourceLocationResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AlterMetadataResourceLocationResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AlterMetadataResourceLocationResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AlterMetadataResourceLocationResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AlterMetadataResourceLocationResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse} AlterMetadataResourceLocationResponse
                         */
                        AlterMetadataResourceLocationResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse)
                                return object;
                            return new $root.google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse();
                        };
    
                        /**
                         * Creates a plain object from an AlterMetadataResourceLocationResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse} message AlterMetadataResourceLocationResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AlterMetadataResourceLocationResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AlterMetadataResourceLocationResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AlterMetadataResourceLocationResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AlterMetadataResourceLocationResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AlterMetadataResourceLocationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse";
                        };
    
                        return AlterMetadataResourceLocationResponse;
                    })();
    
                    v1alpha.DataprocMetastoreFederation = (function() {
    
                        /**
                         * Constructs a new DataprocMetastoreFederation service.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a DataprocMetastoreFederation
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DataprocMetastoreFederation(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DataprocMetastoreFederation.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DataprocMetastoreFederation;
    
                        /**
                         * Creates new DataprocMetastoreFederation service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DataprocMetastoreFederation} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DataprocMetastoreFederation.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastoreFederation|listFederations}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @typedef ListFederationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.ListFederationsResponse} [response] ListFederationsResponse
                         */
    
                        /**
                         * Calls ListFederations.
                         * @function listFederations
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IListFederationsRequest} request ListFederationsRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastoreFederation.ListFederationsCallback} callback Node-style callback called with the error, if any, and ListFederationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.listFederations = function listFederations(request, callback) {
                            return this.rpcCall(listFederations, $root.google.cloud.metastore.v1alpha.ListFederationsRequest, $root.google.cloud.metastore.v1alpha.ListFederationsResponse, request, callback);
                        }, "name", { value: "ListFederations" });
    
                        /**
                         * Calls ListFederations.
                         * @function listFederations
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IListFederationsRequest} request ListFederationsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.ListFederationsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastoreFederation|getFederation}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @typedef GetFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1alpha.Federation} [response] Federation
                         */
    
                        /**
                         * Calls GetFederation.
                         * @function getFederation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IGetFederationRequest} request GetFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastoreFederation.GetFederationCallback} callback Node-style callback called with the error, if any, and Federation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.getFederation = function getFederation(request, callback) {
                            return this.rpcCall(getFederation, $root.google.cloud.metastore.v1alpha.GetFederationRequest, $root.google.cloud.metastore.v1alpha.Federation, request, callback);
                        }, "name", { value: "GetFederation" });
    
                        /**
                         * Calls GetFederation.
                         * @function getFederation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IGetFederationRequest} request GetFederationRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1alpha.Federation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastoreFederation|createFederation}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @typedef CreateFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFederation.
                         * @function createFederation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.ICreateFederationRequest} request CreateFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastoreFederation.CreateFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.createFederation = function createFederation(request, callback) {
                            return this.rpcCall(createFederation, $root.google.cloud.metastore.v1alpha.CreateFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFederation" });
    
                        /**
                         * Calls CreateFederation.
                         * @function createFederation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.ICreateFederationRequest} request CreateFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastoreFederation|updateFederation}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @typedef UpdateFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFederation.
                         * @function updateFederation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IUpdateFederationRequest} request UpdateFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastoreFederation.UpdateFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.updateFederation = function updateFederation(request, callback) {
                            return this.rpcCall(updateFederation, $root.google.cloud.metastore.v1alpha.UpdateFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFederation" });
    
                        /**
                         * Calls UpdateFederation.
                         * @function updateFederation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IUpdateFederationRequest} request UpdateFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1alpha.DataprocMetastoreFederation|deleteFederation}.
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @typedef DeleteFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFederation.
                         * @function deleteFederation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IDeleteFederationRequest} request DeleteFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1alpha.DataprocMetastoreFederation.DeleteFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.deleteFederation = function deleteFederation(request, callback) {
                            return this.rpcCall(deleteFederation, $root.google.cloud.metastore.v1alpha.DeleteFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFederation" });
    
                        /**
                         * Calls DeleteFederation.
                         * @function deleteFederation
                         * @memberof google.cloud.metastore.v1alpha.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1alpha.IDeleteFederationRequest} request DeleteFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return DataprocMetastoreFederation;
                    })();
    
                    v1alpha.Federation = (function() {
    
                        /**
                         * Properties of a Federation.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IFederation
                         * @property {string|null} [name] Federation name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Federation createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Federation updateTime
                         * @property {Object.<string,string>|null} [labels] Federation labels
                         * @property {string|null} [version] Federation version
                         * @property {Object.<string,google.cloud.metastore.v1alpha.IBackendMetastore>|null} [backendMetastores] Federation backendMetastores
                         * @property {string|null} [endpointUri] Federation endpointUri
                         * @property {google.cloud.metastore.v1alpha.Federation.State|null} [state] Federation state
                         * @property {string|null} [stateMessage] Federation stateMessage
                         * @property {string|null} [uid] Federation uid
                         */
    
                        /**
                         * Constructs a new Federation.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a Federation.
                         * @implements IFederation
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IFederation=} [properties] Properties to set
                         */
                        function Federation(properties) {
                            this.labels = {};
                            this.backendMetastores = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Federation name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.name = "";
    
                        /**
                         * Federation createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.createTime = null;
    
                        /**
                         * Federation updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.updateTime = null;
    
                        /**
                         * Federation labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.labels = $util.emptyObject;
    
                        /**
                         * Federation version.
                         * @member {string} version
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.version = "";
    
                        /**
                         * Federation backendMetastores.
                         * @member {Object.<string,google.cloud.metastore.v1alpha.IBackendMetastore>} backendMetastores
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.backendMetastores = $util.emptyObject;
    
                        /**
                         * Federation endpointUri.
                         * @member {string} endpointUri
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.endpointUri = "";
    
                        /**
                         * Federation state.
                         * @member {google.cloud.metastore.v1alpha.Federation.State} state
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.state = 0;
    
                        /**
                         * Federation stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.stateMessage = "";
    
                        /**
                         * Federation uid.
                         * @member {string} uid
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         */
                        Federation.prototype.uid = "";
    
                        /**
                         * Creates a new Federation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IFederation=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.Federation} Federation instance
                         */
                        Federation.create = function create(properties) {
                            return new Federation(properties);
                        };
    
                        /**
                         * Encodes the specified Federation message. Does not implicitly {@link google.cloud.metastore.v1alpha.Federation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IFederation} message Federation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Federation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.version);
                            if (message.backendMetastores != null && Object.hasOwnProperty.call(message, "backendMetastores"))
                                for (var keys = Object.keys(message.backendMetastores), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 0 =*/8).int32(keys[i]);
                                    $root.google.cloud.metastore.v1alpha.BackendMetastore.encode(message.backendMetastores[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.endpointUri);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.stateMessage);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.uid);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Federation message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.Federation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IFederation} message Federation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Federation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Federation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.Federation} Federation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Federation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.Federation(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.backendMetastores === $util.emptyObject)
                                            message.backendMetastores = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.int32();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.metastore.v1alpha.BackendMetastore.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.backendMetastores[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.endpointUri = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Federation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.Federation} Federation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Federation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Federation message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Federation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.backendMetastores != null && message.hasOwnProperty("backendMetastores")) {
                                if (!$util.isObject(message.backendMetastores))
                                    return "backendMetastores: object expected";
                                var key = Object.keys(message.backendMetastores);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key32Re.test(key[i]))
                                        return "backendMetastores: integer key{k:int32} expected";
                                    {
                                        var error = $root.google.cloud.metastore.v1alpha.BackendMetastore.verify(message.backendMetastores[key[i]]);
                                        if (error)
                                            return "backendMetastores." + error;
                                    }
                                }
                            }
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                if (!$util.isString(message.endpointUri))
                                    return "endpointUri: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Federation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.Federation} Federation
                         */
                        Federation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.Federation)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.Federation();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Federation.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Federation.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Federation.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.backendMetastores) {
                                if (typeof object.backendMetastores !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.Federation.backendMetastores: object expected");
                                message.backendMetastores = {};
                                for (var keys = Object.keys(object.backendMetastores), i = 0; i < keys.length; ++i) {
                                    if (typeof object.backendMetastores[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.Federation.backendMetastores: object expected");
                                    message.backendMetastores[keys[i]] = $root.google.cloud.metastore.v1alpha.BackendMetastore.fromObject(object.backendMetastores[keys[i]]);
                                }
                            }
                            if (object.endpointUri != null)
                                message.endpointUri = String(object.endpointUri);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "ERROR":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Federation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {google.cloud.metastore.v1alpha.Federation} message Federation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Federation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.backendMetastores = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.version = "";
                                object.endpointUri = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.uid = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.backendMetastores && (keys2 = Object.keys(message.backendMetastores)).length) {
                                object.backendMetastores = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.backendMetastores[keys2[j]] = $root.google.cloud.metastore.v1alpha.BackendMetastore.toObject(message.backendMetastores[keys2[j]], options);
                            }
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                object.endpointUri = message.endpointUri;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1alpha.Federation.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1alpha.Federation.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            return object;
                        };
    
                        /**
                         * Converts this Federation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Federation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Federation
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.Federation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Federation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.Federation";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1alpha.Federation.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} ERROR=5 ERROR value
                         */
                        Federation.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "ERROR"] = 5;
                            return values;
                        })();
    
                        return Federation;
                    })();
    
                    v1alpha.BackendMetastore = (function() {
    
                        /**
                         * Properties of a BackendMetastore.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IBackendMetastore
                         * @property {string|null} [name] BackendMetastore name
                         * @property {google.cloud.metastore.v1alpha.BackendMetastore.MetastoreType|null} [metastoreType] BackendMetastore metastoreType
                         */
    
                        /**
                         * Constructs a new BackendMetastore.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a BackendMetastore.
                         * @implements IBackendMetastore
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IBackendMetastore=} [properties] Properties to set
                         */
                        function BackendMetastore(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackendMetastore name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @instance
                         */
                        BackendMetastore.prototype.name = "";
    
                        /**
                         * BackendMetastore metastoreType.
                         * @member {google.cloud.metastore.v1alpha.BackendMetastore.MetastoreType} metastoreType
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @instance
                         */
                        BackendMetastore.prototype.metastoreType = 0;
    
                        /**
                         * Creates a new BackendMetastore instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IBackendMetastore=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.BackendMetastore} BackendMetastore instance
                         */
                        BackendMetastore.create = function create(properties) {
                            return new BackendMetastore(properties);
                        };
    
                        /**
                         * Encodes the specified BackendMetastore message. Does not implicitly {@link google.cloud.metastore.v1alpha.BackendMetastore.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IBackendMetastore} message BackendMetastore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackendMetastore.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.metastoreType != null && Object.hasOwnProperty.call(message, "metastoreType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.metastoreType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackendMetastore message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.BackendMetastore.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IBackendMetastore} message BackendMetastore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackendMetastore.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackendMetastore message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.BackendMetastore} BackendMetastore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackendMetastore.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.BackendMetastore();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.metastoreType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackendMetastore message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.BackendMetastore} BackendMetastore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackendMetastore.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackendMetastore message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackendMetastore.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.metastoreType != null && message.hasOwnProperty("metastoreType"))
                                switch (message.metastoreType) {
                                default:
                                    return "metastoreType: enum value expected";
                                case 0:
                                case 2:
                                case 3:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a BackendMetastore message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.BackendMetastore} BackendMetastore
                         */
                        BackendMetastore.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.BackendMetastore)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.BackendMetastore();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.metastoreType) {
                            default:
                                if (typeof object.metastoreType === "number") {
                                    message.metastoreType = object.metastoreType;
                                    break;
                                }
                                break;
                            case "METASTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.metastoreType = 0;
                                break;
                            case "BIGQUERY":
                            case 2:
                                message.metastoreType = 2;
                                break;
                            case "DATAPROC_METASTORE":
                            case 3:
                                message.metastoreType = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackendMetastore message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1alpha.BackendMetastore} message BackendMetastore
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackendMetastore.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.metastoreType = options.enums === String ? "METASTORE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.metastoreType != null && message.hasOwnProperty("metastoreType"))
                                object.metastoreType = options.enums === String ? $root.google.cloud.metastore.v1alpha.BackendMetastore.MetastoreType[message.metastoreType] === undefined ? message.metastoreType : $root.google.cloud.metastore.v1alpha.BackendMetastore.MetastoreType[message.metastoreType] : message.metastoreType;
                            return object;
                        };
    
                        /**
                         * Converts this BackendMetastore to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackendMetastore.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BackendMetastore
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.BackendMetastore
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BackendMetastore.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.BackendMetastore";
                        };
    
                        /**
                         * MetastoreType enum.
                         * @name google.cloud.metastore.v1alpha.BackendMetastore.MetastoreType
                         * @enum {number}
                         * @property {number} METASTORE_TYPE_UNSPECIFIED=0 METASTORE_TYPE_UNSPECIFIED value
                         * @property {number} BIGQUERY=2 BIGQUERY value
                         * @property {number} DATAPROC_METASTORE=3 DATAPROC_METASTORE value
                         */
                        BackendMetastore.MetastoreType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "METASTORE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[2] = "BIGQUERY"] = 2;
                            values[valuesById[3] = "DATAPROC_METASTORE"] = 3;
                            return values;
                        })();
    
                        return BackendMetastore;
                    })();
    
                    v1alpha.ListFederationsRequest = (function() {
    
                        /**
                         * Properties of a ListFederationsRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IListFederationsRequest
                         * @property {string|null} [parent] ListFederationsRequest parent
                         * @property {number|null} [pageSize] ListFederationsRequest pageSize
                         * @property {string|null} [pageToken] ListFederationsRequest pageToken
                         * @property {string|null} [filter] ListFederationsRequest filter
                         * @property {string|null} [orderBy] ListFederationsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFederationsRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a ListFederationsRequest.
                         * @implements IListFederationsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IListFederationsRequest=} [properties] Properties to set
                         */
                        function ListFederationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFederationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.parent = "";
    
                        /**
                         * ListFederationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFederationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.pageToken = "";
    
                        /**
                         * ListFederationsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.filter = "";
    
                        /**
                         * ListFederationsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFederationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListFederationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ListFederationsRequest} ListFederationsRequest instance
                         */
                        ListFederationsRequest.create = function create(properties) {
                            return new ListFederationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFederationsRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.ListFederationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListFederationsRequest} message ListFederationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFederationsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ListFederationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListFederationsRequest} message ListFederationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFederationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ListFederationsRequest} ListFederationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ListFederationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFederationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ListFederationsRequest} ListFederationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFederationsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFederationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFederationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ListFederationsRequest} ListFederationsRequest
                         */
                        ListFederationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ListFederationsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ListFederationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFederationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ListFederationsRequest} message ListFederationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFederationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFederationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFederationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFederationsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFederationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ListFederationsRequest";
                        };
    
                        return ListFederationsRequest;
                    })();
    
                    v1alpha.ListFederationsResponse = (function() {
    
                        /**
                         * Properties of a ListFederationsResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IListFederationsResponse
                         * @property {Array.<google.cloud.metastore.v1alpha.IFederation>|null} [federations] ListFederationsResponse federations
                         * @property {string|null} [nextPageToken] ListFederationsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListFederationsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListFederationsResponse.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a ListFederationsResponse.
                         * @implements IListFederationsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IListFederationsResponse=} [properties] Properties to set
                         */
                        function ListFederationsResponse(properties) {
                            this.federations = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFederationsResponse federations.
                         * @member {Array.<google.cloud.metastore.v1alpha.IFederation>} federations
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.federations = $util.emptyArray;
    
                        /**
                         * ListFederationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListFederationsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListFederationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListFederationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.ListFederationsResponse} ListFederationsResponse instance
                         */
                        ListFederationsResponse.create = function create(properties) {
                            return new ListFederationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFederationsResponse message. Does not implicitly {@link google.cloud.metastore.v1alpha.ListFederationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListFederationsResponse} message ListFederationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.federations != null && message.federations.length)
                                for (var i = 0; i < message.federations.length; ++i)
                                    $root.google.cloud.metastore.v1alpha.Federation.encode(message.federations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFederationsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.ListFederationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IListFederationsResponse} message ListFederationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFederationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.ListFederationsResponse} ListFederationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.ListFederationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.federations && message.federations.length))
                                            message.federations = [];
                                        message.federations.push($root.google.cloud.metastore.v1alpha.Federation.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFederationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.ListFederationsResponse} ListFederationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFederationsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFederationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.federations != null && message.hasOwnProperty("federations")) {
                                if (!Array.isArray(message.federations))
                                    return "federations: array expected";
                                for (var i = 0; i < message.federations.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1alpha.Federation.verify(message.federations[i]);
                                    if (error)
                                        return "federations." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListFederationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.ListFederationsResponse} ListFederationsResponse
                         */
                        ListFederationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.ListFederationsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.ListFederationsResponse();
                            if (object.federations) {
                                if (!Array.isArray(object.federations))
                                    throw TypeError(".google.cloud.metastore.v1alpha.ListFederationsResponse.federations: array expected");
                                message.federations = [];
                                for (var i = 0; i < object.federations.length; ++i) {
                                    if (typeof object.federations[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1alpha.ListFederationsResponse.federations: object expected");
                                    message.federations[i] = $root.google.cloud.metastore.v1alpha.Federation.fromObject(object.federations[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1alpha.ListFederationsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFederationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ListFederationsResponse} message ListFederationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFederationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.federations = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.federations && message.federations.length) {
                                object.federations = [];
                                for (var j = 0; j < message.federations.length; ++j)
                                    object.federations[j] = $root.google.cloud.metastore.v1alpha.Federation.toObject(message.federations[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListFederationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFederationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFederationsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.ListFederationsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFederationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.ListFederationsResponse";
                        };
    
                        return ListFederationsResponse;
                    })();
    
                    v1alpha.GetFederationRequest = (function() {
    
                        /**
                         * Properties of a GetFederationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IGetFederationRequest
                         * @property {string|null} [name] GetFederationRequest name
                         */
    
                        /**
                         * Constructs a new GetFederationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a GetFederationRequest.
                         * @implements IGetFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IGetFederationRequest=} [properties] Properties to set
                         */
                        function GetFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFederationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @instance
                         */
                        GetFederationRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.GetFederationRequest} GetFederationRequest instance
                         */
                        GetFederationRequest.create = function create(properties) {
                            return new GetFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.GetFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetFederationRequest} message GetFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.GetFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IGetFederationRequest} message GetFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.GetFederationRequest} GetFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.GetFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.GetFederationRequest} GetFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.GetFederationRequest} GetFederationRequest
                         */
                        GetFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.GetFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.GetFederationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.GetFederationRequest} message GetFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.GetFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.GetFederationRequest";
                        };
    
                        return GetFederationRequest;
                    })();
    
                    v1alpha.CreateFederationRequest = (function() {
    
                        /**
                         * Properties of a CreateFederationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface ICreateFederationRequest
                         * @property {string|null} [parent] CreateFederationRequest parent
                         * @property {string|null} [federationId] CreateFederationRequest federationId
                         * @property {google.cloud.metastore.v1alpha.IFederation|null} [federation] CreateFederationRequest federation
                         * @property {string|null} [requestId] CreateFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateFederationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a CreateFederationRequest.
                         * @implements ICreateFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.ICreateFederationRequest=} [properties] Properties to set
                         */
                        function CreateFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFederationRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.parent = "";
    
                        /**
                         * CreateFederationRequest federationId.
                         * @member {string} federationId
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.federationId = "";
    
                        /**
                         * CreateFederationRequest federation.
                         * @member {google.cloud.metastore.v1alpha.IFederation|null|undefined} federation
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.federation = null;
    
                        /**
                         * CreateFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.CreateFederationRequest} CreateFederationRequest instance
                         */
                        CreateFederationRequest.create = function create(properties) {
                            return new CreateFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.CreateFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateFederationRequest} message CreateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.federationId != null && Object.hasOwnProperty.call(message, "federationId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.federationId);
                            if (message.federation != null && Object.hasOwnProperty.call(message, "federation"))
                                $root.google.cloud.metastore.v1alpha.Federation.encode(message.federation, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.CreateFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.ICreateFederationRequest} message CreateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.CreateFederationRequest} CreateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.CreateFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.federationId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.federation = $root.google.cloud.metastore.v1alpha.Federation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.CreateFederationRequest} CreateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.federationId != null && message.hasOwnProperty("federationId"))
                                if (!$util.isString(message.federationId))
                                    return "federationId: string expected";
                            if (message.federation != null && message.hasOwnProperty("federation")) {
                                var error = $root.google.cloud.metastore.v1alpha.Federation.verify(message.federation);
                                if (error)
                                    return "federation." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.CreateFederationRequest} CreateFederationRequest
                         */
                        CreateFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.CreateFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.CreateFederationRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.federationId != null)
                                message.federationId = String(object.federationId);
                            if (object.federation != null) {
                                if (typeof object.federation !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.CreateFederationRequest.federation: object expected");
                                message.federation = $root.google.cloud.metastore.v1alpha.Federation.fromObject(object.federation);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.CreateFederationRequest} message CreateFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.federationId = "";
                                object.federation = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.federationId != null && message.hasOwnProperty("federationId"))
                                object.federationId = message.federationId;
                            if (message.federation != null && message.hasOwnProperty("federation"))
                                object.federation = $root.google.cloud.metastore.v1alpha.Federation.toObject(message.federation, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.CreateFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.CreateFederationRequest";
                        };
    
                        return CreateFederationRequest;
                    })();
    
                    v1alpha.UpdateFederationRequest = (function() {
    
                        /**
                         * Properties of an UpdateFederationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IUpdateFederationRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFederationRequest updateMask
                         * @property {google.cloud.metastore.v1alpha.IFederation|null} [federation] UpdateFederationRequest federation
                         * @property {string|null} [requestId] UpdateFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateFederationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents an UpdateFederationRequest.
                         * @implements IUpdateFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IUpdateFederationRequest=} [properties] Properties to set
                         */
                        function UpdateFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFederationRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateFederationRequest federation.
                         * @member {google.cloud.metastore.v1alpha.IFederation|null|undefined} federation
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.federation = null;
    
                        /**
                         * UpdateFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.UpdateFederationRequest} UpdateFederationRequest instance
                         */
                        UpdateFederationRequest.create = function create(properties) {
                            return new UpdateFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.UpdateFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateFederationRequest} message UpdateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.federation != null && Object.hasOwnProperty.call(message, "federation"))
                                $root.google.cloud.metastore.v1alpha.Federation.encode(message.federation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.UpdateFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IUpdateFederationRequest} message UpdateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.UpdateFederationRequest} UpdateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.UpdateFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.federation = $root.google.cloud.metastore.v1alpha.Federation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.UpdateFederationRequest} UpdateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.federation != null && message.hasOwnProperty("federation")) {
                                var error = $root.google.cloud.metastore.v1alpha.Federation.verify(message.federation);
                                if (error)
                                    return "federation." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.UpdateFederationRequest} UpdateFederationRequest
                         */
                        UpdateFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.UpdateFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.UpdateFederationRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.UpdateFederationRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.federation != null) {
                                if (typeof object.federation !== "object")
                                    throw TypeError(".google.cloud.metastore.v1alpha.UpdateFederationRequest.federation: object expected");
                                message.federation = $root.google.cloud.metastore.v1alpha.Federation.fromObject(object.federation);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.UpdateFederationRequest} message UpdateFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.federation = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.federation != null && message.hasOwnProperty("federation"))
                                object.federation = $root.google.cloud.metastore.v1alpha.Federation.toObject(message.federation, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.UpdateFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.UpdateFederationRequest";
                        };
    
                        return UpdateFederationRequest;
                    })();
    
                    v1alpha.DeleteFederationRequest = (function() {
    
                        /**
                         * Properties of a DeleteFederationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @interface IDeleteFederationRequest
                         * @property {string|null} [name] DeleteFederationRequest name
                         * @property {string|null} [requestId] DeleteFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteFederationRequest.
                         * @memberof google.cloud.metastore.v1alpha
                         * @classdesc Represents a DeleteFederationRequest.
                         * @implements IDeleteFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1alpha.IDeleteFederationRequest=} [properties] Properties to set
                         */
                        function DeleteFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFederationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @instance
                         */
                        DeleteFederationRequest.prototype.name = "";
    
                        /**
                         * DeleteFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @instance
                         */
                        DeleteFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1alpha.DeleteFederationRequest} DeleteFederationRequest instance
                         */
                        DeleteFederationRequest.create = function create(properties) {
                            return new DeleteFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1alpha.DeleteFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteFederationRequest} message DeleteFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1alpha.DeleteFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.IDeleteFederationRequest} message DeleteFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1alpha.DeleteFederationRequest} DeleteFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1alpha.DeleteFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1alpha.DeleteFederationRequest} DeleteFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1alpha.DeleteFederationRequest} DeleteFederationRequest
                         */
                        DeleteFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1alpha.DeleteFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1alpha.DeleteFederationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1alpha.DeleteFederationRequest} message DeleteFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1alpha.DeleteFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1alpha.DeleteFederationRequest";
                        };
    
                        return DeleteFederationRequest;
                    })();
    
                    return v1alpha;
                })();
    
                metastore.v1beta = (function() {
    
                    /**
                     * Namespace v1beta.
                     * @memberof google.cloud.metastore
                     * @namespace
                     */
                    var v1beta = {};
    
                    v1beta.DataprocMetastore = (function() {
    
                        /**
                         * Constructs a new DataprocMetastore service.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a DataprocMetastore
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DataprocMetastore(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DataprocMetastore.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DataprocMetastore;
    
                        /**
                         * Creates new DataprocMetastore service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DataprocMetastore} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DataprocMetastore.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|listServices}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef ListServicesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.ListServicesResponse} [response] ListServicesResponse
                         */
    
                        /**
                         * Calls ListServices.
                         * @function listServices
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IListServicesRequest} request ListServicesRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.ListServicesCallback} callback Node-style callback called with the error, if any, and ListServicesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listServices = function listServices(request, callback) {
                            return this.rpcCall(listServices, $root.google.cloud.metastore.v1beta.ListServicesRequest, $root.google.cloud.metastore.v1beta.ListServicesResponse, request, callback);
                        }, "name", { value: "ListServices" });
    
                        /**
                         * Calls ListServices.
                         * @function listServices
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IListServicesRequest} request ListServicesRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.ListServicesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|getService}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef GetServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.Service} [response] Service
                         */
    
                        /**
                         * Calls GetService.
                         * @function getService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IGetServiceRequest} request GetServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.GetServiceCallback} callback Node-style callback called with the error, if any, and Service
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getService = function getService(request, callback) {
                            return this.rpcCall(getService, $root.google.cloud.metastore.v1beta.GetServiceRequest, $root.google.cloud.metastore.v1beta.Service, request, callback);
                        }, "name", { value: "GetService" });
    
                        /**
                         * Calls GetService.
                         * @function getService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IGetServiceRequest} request GetServiceRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.Service>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|createService}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef CreateServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateService.
                         * @function createService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.ICreateServiceRequest} request CreateServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.CreateServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createService = function createService(request, callback) {
                            return this.rpcCall(createService, $root.google.cloud.metastore.v1beta.CreateServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateService" });
    
                        /**
                         * Calls CreateService.
                         * @function createService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.ICreateServiceRequest} request CreateServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|updateService}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef UpdateServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateService.
                         * @function updateService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.UpdateServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.updateService = function updateService(request, callback) {
                            return this.rpcCall(updateService, $root.google.cloud.metastore.v1beta.UpdateServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateService" });
    
                        /**
                         * Calls UpdateService.
                         * @function updateService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|deleteService}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef DeleteServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteService.
                         * @function deleteService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.DeleteServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.deleteService = function deleteService(request, callback) {
                            return this.rpcCall(deleteService, $root.google.cloud.metastore.v1beta.DeleteServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteService" });
    
                        /**
                         * Calls DeleteService.
                         * @function deleteService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|listMetadataImports}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef ListMetadataImportsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.ListMetadataImportsResponse} [response] ListMetadataImportsResponse
                         */
    
                        /**
                         * Calls ListMetadataImports.
                         * @function listMetadataImports
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsRequest} request ListMetadataImportsRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.ListMetadataImportsCallback} callback Node-style callback called with the error, if any, and ListMetadataImportsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listMetadataImports = function listMetadataImports(request, callback) {
                            return this.rpcCall(listMetadataImports, $root.google.cloud.metastore.v1beta.ListMetadataImportsRequest, $root.google.cloud.metastore.v1beta.ListMetadataImportsResponse, request, callback);
                        }, "name", { value: "ListMetadataImports" });
    
                        /**
                         * Calls ListMetadataImports.
                         * @function listMetadataImports
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsRequest} request ListMetadataImportsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.ListMetadataImportsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|getMetadataImport}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef GetMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.MetadataImport} [response] MetadataImport
                         */
    
                        /**
                         * Calls GetMetadataImport.
                         * @function getMetadataImport
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IGetMetadataImportRequest} request GetMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.GetMetadataImportCallback} callback Node-style callback called with the error, if any, and MetadataImport
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getMetadataImport = function getMetadataImport(request, callback) {
                            return this.rpcCall(getMetadataImport, $root.google.cloud.metastore.v1beta.GetMetadataImportRequest, $root.google.cloud.metastore.v1beta.MetadataImport, request, callback);
                        }, "name", { value: "GetMetadataImport" });
    
                        /**
                         * Calls GetMetadataImport.
                         * @function getMetadataImport
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IGetMetadataImportRequest} request GetMetadataImportRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.MetadataImport>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|createMetadataImport}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef CreateMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateMetadataImport.
                         * @function createMetadataImport
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.ICreateMetadataImportRequest} request CreateMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.CreateMetadataImportCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createMetadataImport = function createMetadataImport(request, callback) {
                            return this.rpcCall(createMetadataImport, $root.google.cloud.metastore.v1beta.CreateMetadataImportRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateMetadataImport" });
    
                        /**
                         * Calls CreateMetadataImport.
                         * @function createMetadataImport
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.ICreateMetadataImportRequest} request CreateMetadataImportRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|updateMetadataImport}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef UpdateMetadataImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateMetadataImport.
                         * @function updateMetadataImport
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IUpdateMetadataImportRequest} request UpdateMetadataImportRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.UpdateMetadataImportCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.updateMetadataImport = function updateMetadataImport(request, callback) {
                            return this.rpcCall(updateMetadataImport, $root.google.cloud.metastore.v1beta.UpdateMetadataImportRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateMetadataImport" });
    
                        /**
                         * Calls UpdateMetadataImport.
                         * @function updateMetadataImport
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IUpdateMetadataImportRequest} request UpdateMetadataImportRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|exportMetadata}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef ExportMetadataCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ExportMetadata.
                         * @function exportMetadata
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IExportMetadataRequest} request ExportMetadataRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.ExportMetadataCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.exportMetadata = function exportMetadata(request, callback) {
                            return this.rpcCall(exportMetadata, $root.google.cloud.metastore.v1beta.ExportMetadataRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ExportMetadata" });
    
                        /**
                         * Calls ExportMetadata.
                         * @function exportMetadata
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IExportMetadataRequest} request ExportMetadataRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|restoreService}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef RestoreServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RestoreService.
                         * @function restoreService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IRestoreServiceRequest} request RestoreServiceRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.RestoreServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.restoreService = function restoreService(request, callback) {
                            return this.rpcCall(restoreService, $root.google.cloud.metastore.v1beta.RestoreServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RestoreService" });
    
                        /**
                         * Calls RestoreService.
                         * @function restoreService
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IRestoreServiceRequest} request RestoreServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|listBackups}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef ListBackupsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.ListBackupsResponse} [response] ListBackupsResponse
                         */
    
                        /**
                         * Calls ListBackups.
                         * @function listBackups
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IListBackupsRequest} request ListBackupsRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.ListBackupsCallback} callback Node-style callback called with the error, if any, and ListBackupsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.listBackups = function listBackups(request, callback) {
                            return this.rpcCall(listBackups, $root.google.cloud.metastore.v1beta.ListBackupsRequest, $root.google.cloud.metastore.v1beta.ListBackupsResponse, request, callback);
                        }, "name", { value: "ListBackups" });
    
                        /**
                         * Calls ListBackups.
                         * @function listBackups
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IListBackupsRequest} request ListBackupsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.ListBackupsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|getBackup}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef GetBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.Backup} [response] Backup
                         */
    
                        /**
                         * Calls GetBackup.
                         * @function getBackup
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IGetBackupRequest} request GetBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.GetBackupCallback} callback Node-style callback called with the error, if any, and Backup
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.getBackup = function getBackup(request, callback) {
                            return this.rpcCall(getBackup, $root.google.cloud.metastore.v1beta.GetBackupRequest, $root.google.cloud.metastore.v1beta.Backup, request, callback);
                        }, "name", { value: "GetBackup" });
    
                        /**
                         * Calls GetBackup.
                         * @function getBackup
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IGetBackupRequest} request GetBackupRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.Backup>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|createBackup}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef CreateBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateBackup.
                         * @function createBackup
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.ICreateBackupRequest} request CreateBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.CreateBackupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.createBackup = function createBackup(request, callback) {
                            return this.rpcCall(createBackup, $root.google.cloud.metastore.v1beta.CreateBackupRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateBackup" });
    
                        /**
                         * Calls CreateBackup.
                         * @function createBackup
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.ICreateBackupRequest} request CreateBackupRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|deleteBackup}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef DeleteBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteBackup.
                         * @function deleteBackup
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IDeleteBackupRequest} request DeleteBackupRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.DeleteBackupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.deleteBackup = function deleteBackup(request, callback) {
                            return this.rpcCall(deleteBackup, $root.google.cloud.metastore.v1beta.DeleteBackupRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteBackup" });
    
                        /**
                         * Calls DeleteBackup.
                         * @function deleteBackup
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IDeleteBackupRequest} request DeleteBackupRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|removeIamPolicy}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef RemoveIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.RemoveIamPolicyResponse} [response] RemoveIamPolicyResponse
                         */
    
                        /**
                         * Calls RemoveIamPolicy.
                         * @function removeIamPolicy
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyRequest} request RemoveIamPolicyRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.RemoveIamPolicyCallback} callback Node-style callback called with the error, if any, and RemoveIamPolicyResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.removeIamPolicy = function removeIamPolicy(request, callback) {
                            return this.rpcCall(removeIamPolicy, $root.google.cloud.metastore.v1beta.RemoveIamPolicyRequest, $root.google.cloud.metastore.v1beta.RemoveIamPolicyResponse, request, callback);
                        }, "name", { value: "RemoveIamPolicy" });
    
                        /**
                         * Calls RemoveIamPolicy.
                         * @function removeIamPolicy
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyRequest} request RemoveIamPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.RemoveIamPolicyResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|queryMetadata}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef QueryMetadataCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls QueryMetadata.
                         * @function queryMetadata
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataRequest} request QueryMetadataRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.QueryMetadataCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.queryMetadata = function queryMetadata(request, callback) {
                            return this.rpcCall(queryMetadata, $root.google.cloud.metastore.v1beta.QueryMetadataRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "QueryMetadata" });
    
                        /**
                         * Calls QueryMetadata.
                         * @function queryMetadata
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataRequest} request QueryMetadataRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|moveTableToDatabase}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef MoveTableToDatabaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls MoveTableToDatabase.
                         * @function moveTableToDatabase
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseRequest} request MoveTableToDatabaseRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.MoveTableToDatabaseCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.moveTableToDatabase = function moveTableToDatabase(request, callback) {
                            return this.rpcCall(moveTableToDatabase, $root.google.cloud.metastore.v1beta.MoveTableToDatabaseRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "MoveTableToDatabase" });
    
                        /**
                         * Calls MoveTableToDatabase.
                         * @function moveTableToDatabase
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseRequest} request MoveTableToDatabaseRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastore|alterMetadataResourceLocation}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @typedef AlterMetadataResourceLocationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls AlterMetadataResourceLocation.
                         * @function alterMetadataResourceLocation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationRequest} request AlterMetadataResourceLocationRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastore.AlterMetadataResourceLocationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastore.prototype.alterMetadataResourceLocation = function alterMetadataResourceLocation(request, callback) {
                            return this.rpcCall(alterMetadataResourceLocation, $root.google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "AlterMetadataResourceLocation" });
    
                        /**
                         * Calls AlterMetadataResourceLocation.
                         * @function alterMetadataResourceLocation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastore
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationRequest} request AlterMetadataResourceLocationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return DataprocMetastore;
                    })();
    
                    v1beta.Service = (function() {
    
                        /**
                         * Properties of a Service.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IService
                         * @property {google.cloud.metastore.v1beta.IHiveMetastoreConfig|null} [hiveMetastoreConfig] Service hiveMetastoreConfig
                         * @property {string|null} [name] Service name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Service createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Service updateTime
                         * @property {Object.<string,string>|null} [labels] Service labels
                         * @property {string|null} [network] Service network
                         * @property {string|null} [endpointUri] Service endpointUri
                         * @property {number|null} [port] Service port
                         * @property {google.cloud.metastore.v1beta.Service.State|null} [state] Service state
                         * @property {string|null} [stateMessage] Service stateMessage
                         * @property {string|null} [artifactGcsUri] Service artifactGcsUri
                         * @property {google.cloud.metastore.v1beta.Service.Tier|null} [tier] Service tier
                         * @property {google.cloud.metastore.v1beta.IMetadataIntegration|null} [metadataIntegration] Service metadataIntegration
                         * @property {google.cloud.metastore.v1beta.IMaintenanceWindow|null} [maintenanceWindow] Service maintenanceWindow
                         * @property {string|null} [uid] Service uid
                         * @property {google.cloud.metastore.v1beta.IMetadataManagementActivity|null} [metadataManagementActivity] Service metadataManagementActivity
                         * @property {google.cloud.metastore.v1beta.Service.ReleaseChannel|null} [releaseChannel] Service releaseChannel
                         * @property {google.cloud.metastore.v1beta.IEncryptionConfig|null} [encryptionConfig] Service encryptionConfig
                         * @property {google.cloud.metastore.v1beta.INetworkConfig|null} [networkConfig] Service networkConfig
                         * @property {google.cloud.metastore.v1beta.Service.DatabaseType|null} [databaseType] Service databaseType
                         * @property {google.cloud.metastore.v1beta.ITelemetryConfig|null} [telemetryConfig] Service telemetryConfig
                         */
    
                        /**
                         * Constructs a new Service.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a Service.
                         * @implements IService
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IService=} [properties] Properties to set
                         */
                        function Service(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Service hiveMetastoreConfig.
                         * @member {google.cloud.metastore.v1beta.IHiveMetastoreConfig|null|undefined} hiveMetastoreConfig
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.hiveMetastoreConfig = null;
    
                        /**
                         * Service name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.name = "";
    
                        /**
                         * Service createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.createTime = null;
    
                        /**
                         * Service updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.updateTime = null;
    
                        /**
                         * Service labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.labels = $util.emptyObject;
    
                        /**
                         * Service network.
                         * @member {string} network
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.network = "";
    
                        /**
                         * Service endpointUri.
                         * @member {string} endpointUri
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.endpointUri = "";
    
                        /**
                         * Service port.
                         * @member {number} port
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.port = 0;
    
                        /**
                         * Service state.
                         * @member {google.cloud.metastore.v1beta.Service.State} state
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.state = 0;
    
                        /**
                         * Service stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.stateMessage = "";
    
                        /**
                         * Service artifactGcsUri.
                         * @member {string} artifactGcsUri
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.artifactGcsUri = "";
    
                        /**
                         * Service tier.
                         * @member {google.cloud.metastore.v1beta.Service.Tier} tier
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.tier = 0;
    
                        /**
                         * Service metadataIntegration.
                         * @member {google.cloud.metastore.v1beta.IMetadataIntegration|null|undefined} metadataIntegration
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.metadataIntegration = null;
    
                        /**
                         * Service maintenanceWindow.
                         * @member {google.cloud.metastore.v1beta.IMaintenanceWindow|null|undefined} maintenanceWindow
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.maintenanceWindow = null;
    
                        /**
                         * Service uid.
                         * @member {string} uid
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.uid = "";
    
                        /**
                         * Service metadataManagementActivity.
                         * @member {google.cloud.metastore.v1beta.IMetadataManagementActivity|null|undefined} metadataManagementActivity
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.metadataManagementActivity = null;
    
                        /**
                         * Service releaseChannel.
                         * @member {google.cloud.metastore.v1beta.Service.ReleaseChannel} releaseChannel
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.releaseChannel = 0;
    
                        /**
                         * Service encryptionConfig.
                         * @member {google.cloud.metastore.v1beta.IEncryptionConfig|null|undefined} encryptionConfig
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.encryptionConfig = null;
    
                        /**
                         * Service networkConfig.
                         * @member {google.cloud.metastore.v1beta.INetworkConfig|null|undefined} networkConfig
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.networkConfig = null;
    
                        /**
                         * Service databaseType.
                         * @member {google.cloud.metastore.v1beta.Service.DatabaseType} databaseType
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.databaseType = 0;
    
                        /**
                         * Service telemetryConfig.
                         * @member {google.cloud.metastore.v1beta.ITelemetryConfig|null|undefined} telemetryConfig
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Service.prototype.telemetryConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Service metastoreConfig.
                         * @member {"hiveMetastoreConfig"|undefined} metastoreConfig
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         */
                        Object.defineProperty(Service.prototype, "metastoreConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["hiveMetastoreConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Service instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {google.cloud.metastore.v1beta.IService=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.Service} Service instance
                         */
                        Service.create = function create(properties) {
                            return new Service(properties);
                        };
    
                        /**
                         * Encodes the specified Service message. Does not implicitly {@link google.cloud.metastore.v1beta.Service.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {google.cloud.metastore.v1beta.IService} message Service message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Service.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.hiveMetastoreConfig != null && Object.hasOwnProperty.call(message, "hiveMetastoreConfig"))
                                $root.google.cloud.metastore.v1beta.HiveMetastoreConfig.encode(message.hiveMetastoreConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.network);
                            if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.endpointUri);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.port);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.stateMessage);
                            if (message.artifactGcsUri != null && Object.hasOwnProperty.call(message, "artifactGcsUri"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.artifactGcsUri);
                            if (message.tier != null && Object.hasOwnProperty.call(message, "tier"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.tier);
                            if (message.metadataIntegration != null && Object.hasOwnProperty.call(message, "metadataIntegration"))
                                $root.google.cloud.metastore.v1beta.MetadataIntegration.encode(message.metadataIntegration, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.maintenanceWindow != null && Object.hasOwnProperty.call(message, "maintenanceWindow"))
                                $root.google.cloud.metastore.v1beta.MaintenanceWindow.encode(message.maintenanceWindow, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.uid);
                            if (message.metadataManagementActivity != null && Object.hasOwnProperty.call(message, "metadataManagementActivity"))
                                $root.google.cloud.metastore.v1beta.MetadataManagementActivity.encode(message.metadataManagementActivity, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.releaseChannel != null && Object.hasOwnProperty.call(message, "releaseChannel"))
                                writer.uint32(/* id 19, wireType 0 =*/152).int32(message.releaseChannel);
                            if (message.encryptionConfig != null && Object.hasOwnProperty.call(message, "encryptionConfig"))
                                $root.google.cloud.metastore.v1beta.EncryptionConfig.encode(message.encryptionConfig, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                                $root.google.cloud.metastore.v1beta.NetworkConfig.encode(message.networkConfig, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.databaseType != null && Object.hasOwnProperty.call(message, "databaseType"))
                                writer.uint32(/* id 22, wireType 0 =*/176).int32(message.databaseType);
                            if (message.telemetryConfig != null && Object.hasOwnProperty.call(message, "telemetryConfig"))
                                $root.google.cloud.metastore.v1beta.TelemetryConfig.encode(message.telemetryConfig, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Service message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.Service.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {google.cloud.metastore.v1beta.IService} message Service message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Service.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Service message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.Service} Service
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Service.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.Service(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.hiveMetastoreConfig = $root.google.cloud.metastore.v1beta.HiveMetastoreConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.network = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.endpointUri = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 10: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.artifactGcsUri = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.tier = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.metadataIntegration = $root.google.cloud.metastore.v1beta.MetadataIntegration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.maintenanceWindow = $root.google.cloud.metastore.v1beta.MaintenanceWindow.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 17: {
                                        message.metadataManagementActivity = $root.google.cloud.metastore.v1beta.MetadataManagementActivity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.releaseChannel = reader.int32();
                                        break;
                                    }
                                case 20: {
                                        message.encryptionConfig = $root.google.cloud.metastore.v1beta.EncryptionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.networkConfig = $root.google.cloud.metastore.v1beta.NetworkConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 22: {
                                        message.databaseType = reader.int32();
                                        break;
                                    }
                                case 23: {
                                        message.telemetryConfig = $root.google.cloud.metastore.v1beta.TelemetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Service message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.Service} Service
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Service.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Service message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Service.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.hiveMetastoreConfig != null && message.hasOwnProperty("hiveMetastoreConfig")) {
                                properties.metastoreConfig = 1;
                                {
                                    var error = $root.google.cloud.metastore.v1beta.HiveMetastoreConfig.verify(message.hiveMetastoreConfig);
                                    if (error)
                                        return "hiveMetastoreConfig." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                if (!$util.isString(message.network))
                                    return "network: string expected";
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                if (!$util.isString(message.endpointUri))
                                    return "endpointUri: string expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.artifactGcsUri != null && message.hasOwnProperty("artifactGcsUri"))
                                if (!$util.isString(message.artifactGcsUri))
                                    return "artifactGcsUri: string expected";
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                switch (message.tier) {
                                default:
                                    return "tier: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                    break;
                                }
                            if (message.metadataIntegration != null && message.hasOwnProperty("metadataIntegration")) {
                                var error = $root.google.cloud.metastore.v1beta.MetadataIntegration.verify(message.metadataIntegration);
                                if (error)
                                    return "metadataIntegration." + error;
                            }
                            if (message.maintenanceWindow != null && message.hasOwnProperty("maintenanceWindow")) {
                                var error = $root.google.cloud.metastore.v1beta.MaintenanceWindow.verify(message.maintenanceWindow);
                                if (error)
                                    return "maintenanceWindow." + error;
                            }
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.metadataManagementActivity != null && message.hasOwnProperty("metadataManagementActivity")) {
                                var error = $root.google.cloud.metastore.v1beta.MetadataManagementActivity.verify(message.metadataManagementActivity);
                                if (error)
                                    return "metadataManagementActivity." + error;
                            }
                            if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel"))
                                switch (message.releaseChannel) {
                                default:
                                    return "releaseChannel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig")) {
                                var error = $root.google.cloud.metastore.v1beta.EncryptionConfig.verify(message.encryptionConfig);
                                if (error)
                                    return "encryptionConfig." + error;
                            }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                                var error = $root.google.cloud.metastore.v1beta.NetworkConfig.verify(message.networkConfig);
                                if (error)
                                    return "networkConfig." + error;
                            }
                            if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                switch (message.databaseType) {
                                default:
                                    return "databaseType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.telemetryConfig != null && message.hasOwnProperty("telemetryConfig")) {
                                var error = $root.google.cloud.metastore.v1beta.TelemetryConfig.verify(message.telemetryConfig);
                                if (error)
                                    return "telemetryConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Service message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.Service} Service
                         */
                        Service.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.Service)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.Service();
                            if (object.hiveMetastoreConfig != null) {
                                if (typeof object.hiveMetastoreConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.hiveMetastoreConfig: object expected");
                                message.hiveMetastoreConfig = $root.google.cloud.metastore.v1beta.HiveMetastoreConfig.fromObject(object.hiveMetastoreConfig);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.network != null)
                                message.network = String(object.network);
                            if (object.endpointUri != null)
                                message.endpointUri = String(object.endpointUri);
                            if (object.port != null)
                                message.port = object.port | 0;
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "SUSPENDING":
                            case 3:
                                message.state = 3;
                                break;
                            case "SUSPENDED":
                            case 4:
                                message.state = 4;
                                break;
                            case "UPDATING":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETING":
                            case 6:
                                message.state = 6;
                                break;
                            case "ERROR":
                            case 7:
                                message.state = 7;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.artifactGcsUri != null)
                                message.artifactGcsUri = String(object.artifactGcsUri);
                            switch (object.tier) {
                            default:
                                if (typeof object.tier === "number") {
                                    message.tier = object.tier;
                                    break;
                                }
                                break;
                            case "TIER_UNSPECIFIED":
                            case 0:
                                message.tier = 0;
                                break;
                            case "DEVELOPER":
                            case 1:
                                message.tier = 1;
                                break;
                            case "ENTERPRISE":
                            case 3:
                                message.tier = 3;
                                break;
                            }
                            if (object.metadataIntegration != null) {
                                if (typeof object.metadataIntegration !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.metadataIntegration: object expected");
                                message.metadataIntegration = $root.google.cloud.metastore.v1beta.MetadataIntegration.fromObject(object.metadataIntegration);
                            }
                            if (object.maintenanceWindow != null) {
                                if (typeof object.maintenanceWindow !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.maintenanceWindow: object expected");
                                message.maintenanceWindow = $root.google.cloud.metastore.v1beta.MaintenanceWindow.fromObject(object.maintenanceWindow);
                            }
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.metadataManagementActivity != null) {
                                if (typeof object.metadataManagementActivity !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.metadataManagementActivity: object expected");
                                message.metadataManagementActivity = $root.google.cloud.metastore.v1beta.MetadataManagementActivity.fromObject(object.metadataManagementActivity);
                            }
                            switch (object.releaseChannel) {
                            default:
                                if (typeof object.releaseChannel === "number") {
                                    message.releaseChannel = object.releaseChannel;
                                    break;
                                }
                                break;
                            case "RELEASE_CHANNEL_UNSPECIFIED":
                            case 0:
                                message.releaseChannel = 0;
                                break;
                            case "CANARY":
                            case 1:
                                message.releaseChannel = 1;
                                break;
                            case "STABLE":
                            case 2:
                                message.releaseChannel = 2;
                                break;
                            }
                            if (object.encryptionConfig != null) {
                                if (typeof object.encryptionConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.encryptionConfig: object expected");
                                message.encryptionConfig = $root.google.cloud.metastore.v1beta.EncryptionConfig.fromObject(object.encryptionConfig);
                            }
                            if (object.networkConfig != null) {
                                if (typeof object.networkConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.networkConfig: object expected");
                                message.networkConfig = $root.google.cloud.metastore.v1beta.NetworkConfig.fromObject(object.networkConfig);
                            }
                            switch (object.databaseType) {
                            default:
                                if (typeof object.databaseType === "number") {
                                    message.databaseType = object.databaseType;
                                    break;
                                }
                                break;
                            case "DATABASE_TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseType = 1;
                                break;
                            case "SPANNER":
                            case 2:
                                message.databaseType = 2;
                                break;
                            }
                            if (object.telemetryConfig != null) {
                                if (typeof object.telemetryConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Service.telemetryConfig: object expected");
                                message.telemetryConfig = $root.google.cloud.metastore.v1beta.TelemetryConfig.fromObject(object.telemetryConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Service message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {google.cloud.metastore.v1beta.Service} message Service
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Service.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.network = "";
                                object.endpointUri = "";
                                object.port = 0;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.artifactGcsUri = "";
                                object.tier = options.enums === String ? "TIER_UNSPECIFIED" : 0;
                                object.metadataIntegration = null;
                                object.maintenanceWindow = null;
                                object.uid = "";
                                object.metadataManagementActivity = null;
                                object.releaseChannel = options.enums === String ? "RELEASE_CHANNEL_UNSPECIFIED" : 0;
                                object.encryptionConfig = null;
                                object.networkConfig = null;
                                object.databaseType = options.enums === String ? "DATABASE_TYPE_UNSPECIFIED" : 0;
                                object.telemetryConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.hiveMetastoreConfig != null && message.hasOwnProperty("hiveMetastoreConfig")) {
                                object.hiveMetastoreConfig = $root.google.cloud.metastore.v1beta.HiveMetastoreConfig.toObject(message.hiveMetastoreConfig, options);
                                if (options.oneofs)
                                    object.metastoreConfig = "hiveMetastoreConfig";
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                object.network = message.network;
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                object.endpointUri = message.endpointUri;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1beta.Service.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1beta.Service.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.artifactGcsUri != null && message.hasOwnProperty("artifactGcsUri"))
                                object.artifactGcsUri = message.artifactGcsUri;
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                object.tier = options.enums === String ? $root.google.cloud.metastore.v1beta.Service.Tier[message.tier] === undefined ? message.tier : $root.google.cloud.metastore.v1beta.Service.Tier[message.tier] : message.tier;
                            if (message.metadataIntegration != null && message.hasOwnProperty("metadataIntegration"))
                                object.metadataIntegration = $root.google.cloud.metastore.v1beta.MetadataIntegration.toObject(message.metadataIntegration, options);
                            if (message.maintenanceWindow != null && message.hasOwnProperty("maintenanceWindow"))
                                object.maintenanceWindow = $root.google.cloud.metastore.v1beta.MaintenanceWindow.toObject(message.maintenanceWindow, options);
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.metadataManagementActivity != null && message.hasOwnProperty("metadataManagementActivity"))
                                object.metadataManagementActivity = $root.google.cloud.metastore.v1beta.MetadataManagementActivity.toObject(message.metadataManagementActivity, options);
                            if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel"))
                                object.releaseChannel = options.enums === String ? $root.google.cloud.metastore.v1beta.Service.ReleaseChannel[message.releaseChannel] === undefined ? message.releaseChannel : $root.google.cloud.metastore.v1beta.Service.ReleaseChannel[message.releaseChannel] : message.releaseChannel;
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig"))
                                object.encryptionConfig = $root.google.cloud.metastore.v1beta.EncryptionConfig.toObject(message.encryptionConfig, options);
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                                object.networkConfig = $root.google.cloud.metastore.v1beta.NetworkConfig.toObject(message.networkConfig, options);
                            if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                object.databaseType = options.enums === String ? $root.google.cloud.metastore.v1beta.Service.DatabaseType[message.databaseType] === undefined ? message.databaseType : $root.google.cloud.metastore.v1beta.Service.DatabaseType[message.databaseType] : message.databaseType;
                            if (message.telemetryConfig != null && message.hasOwnProperty("telemetryConfig"))
                                object.telemetryConfig = $root.google.cloud.metastore.v1beta.TelemetryConfig.toObject(message.telemetryConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this Service to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Service.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Service
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.Service
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Service.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.Service";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1beta.Service.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} SUSPENDING=3 SUSPENDING value
                         * @property {number} SUSPENDED=4 SUSPENDED value
                         * @property {number} UPDATING=5 UPDATING value
                         * @property {number} DELETING=6 DELETING value
                         * @property {number} ERROR=7 ERROR value
                         */
                        Service.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "SUSPENDING"] = 3;
                            values[valuesById[4] = "SUSPENDED"] = 4;
                            values[valuesById[5] = "UPDATING"] = 5;
                            values[valuesById[6] = "DELETING"] = 6;
                            values[valuesById[7] = "ERROR"] = 7;
                            return values;
                        })();
    
                        /**
                         * Tier enum.
                         * @name google.cloud.metastore.v1beta.Service.Tier
                         * @enum {number}
                         * @property {number} TIER_UNSPECIFIED=0 TIER_UNSPECIFIED value
                         * @property {number} DEVELOPER=1 DEVELOPER value
                         * @property {number} ENTERPRISE=3 ENTERPRISE value
                         */
                        Service.Tier = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TIER_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEVELOPER"] = 1;
                            values[valuesById[3] = "ENTERPRISE"] = 3;
                            return values;
                        })();
    
                        /**
                         * ReleaseChannel enum.
                         * @name google.cloud.metastore.v1beta.Service.ReleaseChannel
                         * @enum {number}
                         * @property {number} RELEASE_CHANNEL_UNSPECIFIED=0 RELEASE_CHANNEL_UNSPECIFIED value
                         * @property {number} CANARY=1 CANARY value
                         * @property {number} STABLE=2 STABLE value
                         */
                        Service.ReleaseChannel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RELEASE_CHANNEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CANARY"] = 1;
                            values[valuesById[2] = "STABLE"] = 2;
                            return values;
                        })();
    
                        /**
                         * DatabaseType enum.
                         * @name google.cloud.metastore.v1beta.Service.DatabaseType
                         * @enum {number}
                         * @property {number} DATABASE_TYPE_UNSPECIFIED=0 DATABASE_TYPE_UNSPECIFIED value
                         * @property {number} MYSQL=1 MYSQL value
                         * @property {number} SPANNER=2 SPANNER value
                         */
                        Service.DatabaseType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DATABASE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MYSQL"] = 1;
                            values[valuesById[2] = "SPANNER"] = 2;
                            return values;
                        })();
    
                        return Service;
                    })();
    
                    v1beta.MetadataIntegration = (function() {
    
                        /**
                         * Properties of a MetadataIntegration.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IMetadataIntegration
                         * @property {google.cloud.metastore.v1beta.IDataCatalogConfig|null} [dataCatalogConfig] MetadataIntegration dataCatalogConfig
                         * @property {google.cloud.metastore.v1beta.IDataplexConfig|null} [dataplexConfig] MetadataIntegration dataplexConfig
                         */
    
                        /**
                         * Constructs a new MetadataIntegration.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a MetadataIntegration.
                         * @implements IMetadataIntegration
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IMetadataIntegration=} [properties] Properties to set
                         */
                        function MetadataIntegration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataIntegration dataCatalogConfig.
                         * @member {google.cloud.metastore.v1beta.IDataCatalogConfig|null|undefined} dataCatalogConfig
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @instance
                         */
                        MetadataIntegration.prototype.dataCatalogConfig = null;
    
                        /**
                         * MetadataIntegration dataplexConfig.
                         * @member {google.cloud.metastore.v1beta.IDataplexConfig|null|undefined} dataplexConfig
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @instance
                         */
                        MetadataIntegration.prototype.dataplexConfig = null;
    
                        /**
                         * Creates a new MetadataIntegration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataIntegration=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.MetadataIntegration} MetadataIntegration instance
                         */
                        MetadataIntegration.create = function create(properties) {
                            return new MetadataIntegration(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataIntegration message. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataIntegration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataIntegration} message MetadataIntegration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataIntegration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dataCatalogConfig != null && Object.hasOwnProperty.call(message, "dataCatalogConfig"))
                                $root.google.cloud.metastore.v1beta.DataCatalogConfig.encode(message.dataCatalogConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dataplexConfig != null && Object.hasOwnProperty.call(message, "dataplexConfig"))
                                $root.google.cloud.metastore.v1beta.DataplexConfig.encode(message.dataplexConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataIntegration message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataIntegration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataIntegration} message MetadataIntegration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataIntegration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataIntegration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.MetadataIntegration} MetadataIntegration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataIntegration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.MetadataIntegration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dataCatalogConfig = $root.google.cloud.metastore.v1beta.DataCatalogConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dataplexConfig = $root.google.cloud.metastore.v1beta.DataplexConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataIntegration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.MetadataIntegration} MetadataIntegration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataIntegration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataIntegration message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataIntegration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dataCatalogConfig != null && message.hasOwnProperty("dataCatalogConfig")) {
                                var error = $root.google.cloud.metastore.v1beta.DataCatalogConfig.verify(message.dataCatalogConfig);
                                if (error)
                                    return "dataCatalogConfig." + error;
                            }
                            if (message.dataplexConfig != null && message.hasOwnProperty("dataplexConfig")) {
                                var error = $root.google.cloud.metastore.v1beta.DataplexConfig.verify(message.dataplexConfig);
                                if (error)
                                    return "dataplexConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataIntegration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.MetadataIntegration} MetadataIntegration
                         */
                        MetadataIntegration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.MetadataIntegration)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.MetadataIntegration();
                            if (object.dataCatalogConfig != null) {
                                if (typeof object.dataCatalogConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataIntegration.dataCatalogConfig: object expected");
                                message.dataCatalogConfig = $root.google.cloud.metastore.v1beta.DataCatalogConfig.fromObject(object.dataCatalogConfig);
                            }
                            if (object.dataplexConfig != null) {
                                if (typeof object.dataplexConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataIntegration.dataplexConfig: object expected");
                                message.dataplexConfig = $root.google.cloud.metastore.v1beta.DataplexConfig.fromObject(object.dataplexConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataIntegration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {google.cloud.metastore.v1beta.MetadataIntegration} message MetadataIntegration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataIntegration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.dataCatalogConfig = null;
                                object.dataplexConfig = null;
                            }
                            if (message.dataCatalogConfig != null && message.hasOwnProperty("dataCatalogConfig"))
                                object.dataCatalogConfig = $root.google.cloud.metastore.v1beta.DataCatalogConfig.toObject(message.dataCatalogConfig, options);
                            if (message.dataplexConfig != null && message.hasOwnProperty("dataplexConfig"))
                                object.dataplexConfig = $root.google.cloud.metastore.v1beta.DataplexConfig.toObject(message.dataplexConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this MetadataIntegration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataIntegration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataIntegration
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.MetadataIntegration
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataIntegration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.MetadataIntegration";
                        };
    
                        return MetadataIntegration;
                    })();
    
                    v1beta.DataCatalogConfig = (function() {
    
                        /**
                         * Properties of a DataCatalogConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IDataCatalogConfig
                         * @property {boolean|null} [enabled] DataCatalogConfig enabled
                         */
    
                        /**
                         * Constructs a new DataCatalogConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a DataCatalogConfig.
                         * @implements IDataCatalogConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IDataCatalogConfig=} [properties] Properties to set
                         */
                        function DataCatalogConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DataCatalogConfig enabled.
                         * @member {boolean} enabled
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @instance
                         */
                        DataCatalogConfig.prototype.enabled = false;
    
                        /**
                         * Creates a new DataCatalogConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDataCatalogConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.DataCatalogConfig} DataCatalogConfig instance
                         */
                        DataCatalogConfig.create = function create(properties) {
                            return new DataCatalogConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DataCatalogConfig message. Does not implicitly {@link google.cloud.metastore.v1beta.DataCatalogConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDataCatalogConfig} message DataCatalogConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataCatalogConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enabled);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DataCatalogConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.DataCatalogConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDataCatalogConfig} message DataCatalogConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataCatalogConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DataCatalogConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.DataCatalogConfig} DataCatalogConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataCatalogConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.DataCatalogConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.enabled = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DataCatalogConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.DataCatalogConfig} DataCatalogConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataCatalogConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DataCatalogConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DataCatalogConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                if (typeof message.enabled !== "boolean")
                                    return "enabled: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DataCatalogConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.DataCatalogConfig} DataCatalogConfig
                         */
                        DataCatalogConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.DataCatalogConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.DataCatalogConfig();
                            if (object.enabled != null)
                                message.enabled = Boolean(object.enabled);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DataCatalogConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.DataCatalogConfig} message DataCatalogConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DataCatalogConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.enabled = false;
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                object.enabled = message.enabled;
                            return object;
                        };
    
                        /**
                         * Converts this DataCatalogConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DataCatalogConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DataCatalogConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.DataCatalogConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DataCatalogConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.DataCatalogConfig";
                        };
    
                        return DataCatalogConfig;
                    })();
    
                    v1beta.DataplexConfig = (function() {
    
                        /**
                         * Properties of a DataplexConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IDataplexConfig
                         * @property {Object.<string,google.cloud.metastore.v1beta.ILake>|null} [lakeResources] DataplexConfig lakeResources
                         */
    
                        /**
                         * Constructs a new DataplexConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a DataplexConfig.
                         * @implements IDataplexConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IDataplexConfig=} [properties] Properties to set
                         */
                        function DataplexConfig(properties) {
                            this.lakeResources = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DataplexConfig lakeResources.
                         * @member {Object.<string,google.cloud.metastore.v1beta.ILake>} lakeResources
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @instance
                         */
                        DataplexConfig.prototype.lakeResources = $util.emptyObject;
    
                        /**
                         * Creates a new DataplexConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDataplexConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.DataplexConfig} DataplexConfig instance
                         */
                        DataplexConfig.create = function create(properties) {
                            return new DataplexConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DataplexConfig message. Does not implicitly {@link google.cloud.metastore.v1beta.DataplexConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDataplexConfig} message DataplexConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataplexConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.lakeResources != null && Object.hasOwnProperty.call(message, "lakeResources"))
                                for (var keys = Object.keys(message.lakeResources), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.metastore.v1beta.Lake.encode(message.lakeResources[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DataplexConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.DataplexConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDataplexConfig} message DataplexConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataplexConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DataplexConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.DataplexConfig} DataplexConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataplexConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.DataplexConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.lakeResources === $util.emptyObject)
                                            message.lakeResources = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.metastore.v1beta.Lake.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.lakeResources[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DataplexConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.DataplexConfig} DataplexConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataplexConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DataplexConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DataplexConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.lakeResources != null && message.hasOwnProperty("lakeResources")) {
                                if (!$util.isObject(message.lakeResources))
                                    return "lakeResources: object expected";
                                var key = Object.keys(message.lakeResources);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.Lake.verify(message.lakeResources[key[i]]);
                                    if (error)
                                        return "lakeResources." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DataplexConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.DataplexConfig} DataplexConfig
                         */
                        DataplexConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.DataplexConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.DataplexConfig();
                            if (object.lakeResources) {
                                if (typeof object.lakeResources !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.DataplexConfig.lakeResources: object expected");
                                message.lakeResources = {};
                                for (var keys = Object.keys(object.lakeResources), i = 0; i < keys.length; ++i) {
                                    if (typeof object.lakeResources[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.DataplexConfig.lakeResources: object expected");
                                    message.lakeResources[keys[i]] = $root.google.cloud.metastore.v1beta.Lake.fromObject(object.lakeResources[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DataplexConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.DataplexConfig} message DataplexConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DataplexConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.lakeResources = {};
                            var keys2;
                            if (message.lakeResources && (keys2 = Object.keys(message.lakeResources)).length) {
                                object.lakeResources = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.lakeResources[keys2[j]] = $root.google.cloud.metastore.v1beta.Lake.toObject(message.lakeResources[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DataplexConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DataplexConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DataplexConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.DataplexConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DataplexConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.DataplexConfig";
                        };
    
                        return DataplexConfig;
                    })();
    
                    v1beta.Lake = (function() {
    
                        /**
                         * Properties of a Lake.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface ILake
                         * @property {string|null} [name] Lake name
                         */
    
                        /**
                         * Constructs a new Lake.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a Lake.
                         * @implements ILake
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.ILake=} [properties] Properties to set
                         */
                        function Lake(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Lake name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @instance
                         */
                        Lake.prototype.name = "";
    
                        /**
                         * Creates a new Lake instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {google.cloud.metastore.v1beta.ILake=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.Lake} Lake instance
                         */
                        Lake.create = function create(properties) {
                            return new Lake(properties);
                        };
    
                        /**
                         * Encodes the specified Lake message. Does not implicitly {@link google.cloud.metastore.v1beta.Lake.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {google.cloud.metastore.v1beta.ILake} message Lake message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Lake.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Lake message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.Lake.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {google.cloud.metastore.v1beta.ILake} message Lake message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Lake.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Lake message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.Lake} Lake
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Lake.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.Lake();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Lake message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.Lake} Lake
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Lake.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Lake message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Lake.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Lake message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.Lake} Lake
                         */
                        Lake.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.Lake)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.Lake();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Lake message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {google.cloud.metastore.v1beta.Lake} message Lake
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Lake.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this Lake to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Lake.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Lake
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.Lake
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Lake.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.Lake";
                        };
    
                        return Lake;
                    })();
    
                    v1beta.MaintenanceWindow = (function() {
    
                        /**
                         * Properties of a MaintenanceWindow.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IMaintenanceWindow
                         * @property {google.protobuf.IInt32Value|null} [hourOfDay] MaintenanceWindow hourOfDay
                         * @property {google.type.DayOfWeek|null} [dayOfWeek] MaintenanceWindow dayOfWeek
                         */
    
                        /**
                         * Constructs a new MaintenanceWindow.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a MaintenanceWindow.
                         * @implements IMaintenanceWindow
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IMaintenanceWindow=} [properties] Properties to set
                         */
                        function MaintenanceWindow(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MaintenanceWindow hourOfDay.
                         * @member {google.protobuf.IInt32Value|null|undefined} hourOfDay
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.hourOfDay = null;
    
                        /**
                         * MaintenanceWindow dayOfWeek.
                         * @member {google.type.DayOfWeek} dayOfWeek
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.dayOfWeek = 0;
    
                        /**
                         * Creates a new MaintenanceWindow instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMaintenanceWindow=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.MaintenanceWindow} MaintenanceWindow instance
                         */
                        MaintenanceWindow.create = function create(properties) {
                            return new MaintenanceWindow(properties);
                        };
    
                        /**
                         * Encodes the specified MaintenanceWindow message. Does not implicitly {@link google.cloud.metastore.v1beta.MaintenanceWindow.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MaintenanceWindow.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hourOfDay != null && Object.hasOwnProperty.call(message, "hourOfDay"))
                                $root.google.protobuf.Int32Value.encode(message.hourOfDay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dayOfWeek != null && Object.hasOwnProperty.call(message, "dayOfWeek"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dayOfWeek);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MaintenanceWindow message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.MaintenanceWindow.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MaintenanceWindow.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MaintenanceWindow message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.MaintenanceWindow} MaintenanceWindow
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MaintenanceWindow.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.MaintenanceWindow();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.hourOfDay = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dayOfWeek = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MaintenanceWindow message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.MaintenanceWindow} MaintenanceWindow
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MaintenanceWindow.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MaintenanceWindow message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MaintenanceWindow.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hourOfDay != null && message.hasOwnProperty("hourOfDay")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.hourOfDay);
                                if (error)
                                    return "hourOfDay." + error;
                            }
                            if (message.dayOfWeek != null && message.hasOwnProperty("dayOfWeek"))
                                switch (message.dayOfWeek) {
                                default:
                                    return "dayOfWeek: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MaintenanceWindow message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.MaintenanceWindow} MaintenanceWindow
                         */
                        MaintenanceWindow.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.MaintenanceWindow)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.MaintenanceWindow();
                            if (object.hourOfDay != null) {
                                if (typeof object.hourOfDay !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MaintenanceWindow.hourOfDay: object expected");
                                message.hourOfDay = $root.google.protobuf.Int32Value.fromObject(object.hourOfDay);
                            }
                            switch (object.dayOfWeek) {
                            default:
                                if (typeof object.dayOfWeek === "number") {
                                    message.dayOfWeek = object.dayOfWeek;
                                    break;
                                }
                                break;
                            case "DAY_OF_WEEK_UNSPECIFIED":
                            case 0:
                                message.dayOfWeek = 0;
                                break;
                            case "MONDAY":
                            case 1:
                                message.dayOfWeek = 1;
                                break;
                            case "TUESDAY":
                            case 2:
                                message.dayOfWeek = 2;
                                break;
                            case "WEDNESDAY":
                            case 3:
                                message.dayOfWeek = 3;
                                break;
                            case "THURSDAY":
                            case 4:
                                message.dayOfWeek = 4;
                                break;
                            case "FRIDAY":
                            case 5:
                                message.dayOfWeek = 5;
                                break;
                            case "SATURDAY":
                            case 6:
                                message.dayOfWeek = 6;
                                break;
                            case "SUNDAY":
                            case 7:
                                message.dayOfWeek = 7;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MaintenanceWindow message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {google.cloud.metastore.v1beta.MaintenanceWindow} message MaintenanceWindow
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MaintenanceWindow.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hourOfDay = null;
                                object.dayOfWeek = options.enums === String ? "DAY_OF_WEEK_UNSPECIFIED" : 0;
                            }
                            if (message.hourOfDay != null && message.hasOwnProperty("hourOfDay"))
                                object.hourOfDay = $root.google.protobuf.Int32Value.toObject(message.hourOfDay, options);
                            if (message.dayOfWeek != null && message.hasOwnProperty("dayOfWeek"))
                                object.dayOfWeek = options.enums === String ? $root.google.type.DayOfWeek[message.dayOfWeek] === undefined ? message.dayOfWeek : $root.google.type.DayOfWeek[message.dayOfWeek] : message.dayOfWeek;
                            return object;
                        };
    
                        /**
                         * Converts this MaintenanceWindow to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MaintenanceWindow.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MaintenanceWindow
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.MaintenanceWindow
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MaintenanceWindow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.MaintenanceWindow";
                        };
    
                        return MaintenanceWindow;
                    })();
    
                    v1beta.HiveMetastoreConfig = (function() {
    
                        /**
                         * Properties of a HiveMetastoreConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IHiveMetastoreConfig
                         * @property {string|null} [version] HiveMetastoreConfig version
                         * @property {Object.<string,string>|null} [configOverrides] HiveMetastoreConfig configOverrides
                         * @property {google.cloud.metastore.v1beta.IKerberosConfig|null} [kerberosConfig] HiveMetastoreConfig kerberosConfig
                         * @property {google.cloud.metastore.v1beta.HiveMetastoreConfig.EndpointProtocol|null} [endpointProtocol] HiveMetastoreConfig endpointProtocol
                         * @property {Object.<string,google.cloud.metastore.v1beta.IAuxiliaryVersionConfig>|null} [auxiliaryVersions] HiveMetastoreConfig auxiliaryVersions
                         */
    
                        /**
                         * Constructs a new HiveMetastoreConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a HiveMetastoreConfig.
                         * @implements IHiveMetastoreConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IHiveMetastoreConfig=} [properties] Properties to set
                         */
                        function HiveMetastoreConfig(properties) {
                            this.configOverrides = {};
                            this.auxiliaryVersions = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HiveMetastoreConfig version.
                         * @member {string} version
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.version = "";
    
                        /**
                         * HiveMetastoreConfig configOverrides.
                         * @member {Object.<string,string>} configOverrides
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.configOverrides = $util.emptyObject;
    
                        /**
                         * HiveMetastoreConfig kerberosConfig.
                         * @member {google.cloud.metastore.v1beta.IKerberosConfig|null|undefined} kerberosConfig
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.kerberosConfig = null;
    
                        /**
                         * HiveMetastoreConfig endpointProtocol.
                         * @member {google.cloud.metastore.v1beta.HiveMetastoreConfig.EndpointProtocol} endpointProtocol
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.endpointProtocol = 0;
    
                        /**
                         * HiveMetastoreConfig auxiliaryVersions.
                         * @member {Object.<string,google.cloud.metastore.v1beta.IAuxiliaryVersionConfig>} auxiliaryVersions
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @instance
                         */
                        HiveMetastoreConfig.prototype.auxiliaryVersions = $util.emptyObject;
    
                        /**
                         * Creates a new HiveMetastoreConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IHiveMetastoreConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.HiveMetastoreConfig} HiveMetastoreConfig instance
                         */
                        HiveMetastoreConfig.create = function create(properties) {
                            return new HiveMetastoreConfig(properties);
                        };
    
                        /**
                         * Encodes the specified HiveMetastoreConfig message. Does not implicitly {@link google.cloud.metastore.v1beta.HiveMetastoreConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IHiveMetastoreConfig} message HiveMetastoreConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HiveMetastoreConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                            if (message.configOverrides != null && Object.hasOwnProperty.call(message, "configOverrides"))
                                for (var keys = Object.keys(message.configOverrides), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.configOverrides[keys[i]]).ldelim();
                            if (message.kerberosConfig != null && Object.hasOwnProperty.call(message, "kerberosConfig"))
                                $root.google.cloud.metastore.v1beta.KerberosConfig.encode(message.kerberosConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.endpointProtocol != null && Object.hasOwnProperty.call(message, "endpointProtocol"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.endpointProtocol);
                            if (message.auxiliaryVersions != null && Object.hasOwnProperty.call(message, "auxiliaryVersions"))
                                for (var keys = Object.keys(message.auxiliaryVersions), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.metastore.v1beta.AuxiliaryVersionConfig.encode(message.auxiliaryVersions[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HiveMetastoreConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.HiveMetastoreConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IHiveMetastoreConfig} message HiveMetastoreConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HiveMetastoreConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HiveMetastoreConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.HiveMetastoreConfig} HiveMetastoreConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HiveMetastoreConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.HiveMetastoreConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.configOverrides === $util.emptyObject)
                                            message.configOverrides = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.configOverrides[key] = value;
                                        break;
                                    }
                                case 3: {
                                        message.kerberosConfig = $root.google.cloud.metastore.v1beta.KerberosConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.endpointProtocol = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        if (message.auxiliaryVersions === $util.emptyObject)
                                            message.auxiliaryVersions = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.metastore.v1beta.AuxiliaryVersionConfig.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.auxiliaryVersions[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HiveMetastoreConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.HiveMetastoreConfig} HiveMetastoreConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HiveMetastoreConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HiveMetastoreConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HiveMetastoreConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.configOverrides != null && message.hasOwnProperty("configOverrides")) {
                                if (!$util.isObject(message.configOverrides))
                                    return "configOverrides: object expected";
                                var key = Object.keys(message.configOverrides);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.configOverrides[key[i]]))
                                        return "configOverrides: string{k:string} expected";
                            }
                            if (message.kerberosConfig != null && message.hasOwnProperty("kerberosConfig")) {
                                var error = $root.google.cloud.metastore.v1beta.KerberosConfig.verify(message.kerberosConfig);
                                if (error)
                                    return "kerberosConfig." + error;
                            }
                            if (message.endpointProtocol != null && message.hasOwnProperty("endpointProtocol"))
                                switch (message.endpointProtocol) {
                                default:
                                    return "endpointProtocol: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.auxiliaryVersions != null && message.hasOwnProperty("auxiliaryVersions")) {
                                if (!$util.isObject(message.auxiliaryVersions))
                                    return "auxiliaryVersions: object expected";
                                var key = Object.keys(message.auxiliaryVersions);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.AuxiliaryVersionConfig.verify(message.auxiliaryVersions[key[i]]);
                                    if (error)
                                        return "auxiliaryVersions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HiveMetastoreConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.HiveMetastoreConfig} HiveMetastoreConfig
                         */
                        HiveMetastoreConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.HiveMetastoreConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.HiveMetastoreConfig();
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.configOverrides) {
                                if (typeof object.configOverrides !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.HiveMetastoreConfig.configOverrides: object expected");
                                message.configOverrides = {};
                                for (var keys = Object.keys(object.configOverrides), i = 0; i < keys.length; ++i)
                                    message.configOverrides[keys[i]] = String(object.configOverrides[keys[i]]);
                            }
                            if (object.kerberosConfig != null) {
                                if (typeof object.kerberosConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.HiveMetastoreConfig.kerberosConfig: object expected");
                                message.kerberosConfig = $root.google.cloud.metastore.v1beta.KerberosConfig.fromObject(object.kerberosConfig);
                            }
                            switch (object.endpointProtocol) {
                            default:
                                if (typeof object.endpointProtocol === "number") {
                                    message.endpointProtocol = object.endpointProtocol;
                                    break;
                                }
                                break;
                            case "ENDPOINT_PROTOCOL_UNSPECIFIED":
                            case 0:
                                message.endpointProtocol = 0;
                                break;
                            case "THRIFT":
                            case 1:
                                message.endpointProtocol = 1;
                                break;
                            case "GRPC":
                            case 2:
                                message.endpointProtocol = 2;
                                break;
                            }
                            if (object.auxiliaryVersions) {
                                if (typeof object.auxiliaryVersions !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.HiveMetastoreConfig.auxiliaryVersions: object expected");
                                message.auxiliaryVersions = {};
                                for (var keys = Object.keys(object.auxiliaryVersions), i = 0; i < keys.length; ++i) {
                                    if (typeof object.auxiliaryVersions[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.HiveMetastoreConfig.auxiliaryVersions: object expected");
                                    message.auxiliaryVersions[keys[i]] = $root.google.cloud.metastore.v1beta.AuxiliaryVersionConfig.fromObject(object.auxiliaryVersions[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HiveMetastoreConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.HiveMetastoreConfig} message HiveMetastoreConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HiveMetastoreConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.configOverrides = {};
                                object.auxiliaryVersions = {};
                            }
                            if (options.defaults) {
                                object.version = "";
                                object.kerberosConfig = null;
                                object.endpointProtocol = options.enums === String ? "ENDPOINT_PROTOCOL_UNSPECIFIED" : 0;
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            var keys2;
                            if (message.configOverrides && (keys2 = Object.keys(message.configOverrides)).length) {
                                object.configOverrides = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.configOverrides[keys2[j]] = message.configOverrides[keys2[j]];
                            }
                            if (message.kerberosConfig != null && message.hasOwnProperty("kerberosConfig"))
                                object.kerberosConfig = $root.google.cloud.metastore.v1beta.KerberosConfig.toObject(message.kerberosConfig, options);
                            if (message.endpointProtocol != null && message.hasOwnProperty("endpointProtocol"))
                                object.endpointProtocol = options.enums === String ? $root.google.cloud.metastore.v1beta.HiveMetastoreConfig.EndpointProtocol[message.endpointProtocol] === undefined ? message.endpointProtocol : $root.google.cloud.metastore.v1beta.HiveMetastoreConfig.EndpointProtocol[message.endpointProtocol] : message.endpointProtocol;
                            if (message.auxiliaryVersions && (keys2 = Object.keys(message.auxiliaryVersions)).length) {
                                object.auxiliaryVersions = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.auxiliaryVersions[keys2[j]] = $root.google.cloud.metastore.v1beta.AuxiliaryVersionConfig.toObject(message.auxiliaryVersions[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HiveMetastoreConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HiveMetastoreConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HiveMetastoreConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.HiveMetastoreConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HiveMetastoreConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.HiveMetastoreConfig";
                        };
    
                        /**
                         * EndpointProtocol enum.
                         * @name google.cloud.metastore.v1beta.HiveMetastoreConfig.EndpointProtocol
                         * @enum {number}
                         * @property {number} ENDPOINT_PROTOCOL_UNSPECIFIED=0 ENDPOINT_PROTOCOL_UNSPECIFIED value
                         * @property {number} THRIFT=1 THRIFT value
                         * @property {number} GRPC=2 GRPC value
                         */
                        HiveMetastoreConfig.EndpointProtocol = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ENDPOINT_PROTOCOL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "THRIFT"] = 1;
                            values[valuesById[2] = "GRPC"] = 2;
                            return values;
                        })();
    
                        return HiveMetastoreConfig;
                    })();
    
                    v1beta.KerberosConfig = (function() {
    
                        /**
                         * Properties of a KerberosConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IKerberosConfig
                         * @property {google.cloud.metastore.v1beta.ISecret|null} [keytab] KerberosConfig keytab
                         * @property {string|null} [principal] KerberosConfig principal
                         * @property {string|null} [krb5ConfigGcsUri] KerberosConfig krb5ConfigGcsUri
                         */
    
                        /**
                         * Constructs a new KerberosConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a KerberosConfig.
                         * @implements IKerberosConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IKerberosConfig=} [properties] Properties to set
                         */
                        function KerberosConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KerberosConfig keytab.
                         * @member {google.cloud.metastore.v1beta.ISecret|null|undefined} keytab
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.keytab = null;
    
                        /**
                         * KerberosConfig principal.
                         * @member {string} principal
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.principal = "";
    
                        /**
                         * KerberosConfig krb5ConfigGcsUri.
                         * @member {string} krb5ConfigGcsUri
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.krb5ConfigGcsUri = "";
    
                        /**
                         * Creates a new KerberosConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IKerberosConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.KerberosConfig} KerberosConfig instance
                         */
                        KerberosConfig.create = function create(properties) {
                            return new KerberosConfig(properties);
                        };
    
                        /**
                         * Encodes the specified KerberosConfig message. Does not implicitly {@link google.cloud.metastore.v1beta.KerberosConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IKerberosConfig} message KerberosConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KerberosConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.keytab != null && Object.hasOwnProperty.call(message, "keytab"))
                                $root.google.cloud.metastore.v1beta.Secret.encode(message.keytab, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.principal != null && Object.hasOwnProperty.call(message, "principal"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.principal);
                            if (message.krb5ConfigGcsUri != null && Object.hasOwnProperty.call(message, "krb5ConfigGcsUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.krb5ConfigGcsUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KerberosConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.KerberosConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IKerberosConfig} message KerberosConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KerberosConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KerberosConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.KerberosConfig} KerberosConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KerberosConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.KerberosConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.keytab = $root.google.cloud.metastore.v1beta.Secret.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.principal = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.krb5ConfigGcsUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KerberosConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.KerberosConfig} KerberosConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KerberosConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KerberosConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KerberosConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.keytab != null && message.hasOwnProperty("keytab")) {
                                var error = $root.google.cloud.metastore.v1beta.Secret.verify(message.keytab);
                                if (error)
                                    return "keytab." + error;
                            }
                            if (message.principal != null && message.hasOwnProperty("principal"))
                                if (!$util.isString(message.principal))
                                    return "principal: string expected";
                            if (message.krb5ConfigGcsUri != null && message.hasOwnProperty("krb5ConfigGcsUri"))
                                if (!$util.isString(message.krb5ConfigGcsUri))
                                    return "krb5ConfigGcsUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a KerberosConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.KerberosConfig} KerberosConfig
                         */
                        KerberosConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.KerberosConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.KerberosConfig();
                            if (object.keytab != null) {
                                if (typeof object.keytab !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.KerberosConfig.keytab: object expected");
                                message.keytab = $root.google.cloud.metastore.v1beta.Secret.fromObject(object.keytab);
                            }
                            if (object.principal != null)
                                message.principal = String(object.principal);
                            if (object.krb5ConfigGcsUri != null)
                                message.krb5ConfigGcsUri = String(object.krb5ConfigGcsUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KerberosConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.KerberosConfig} message KerberosConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KerberosConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.keytab = null;
                                object.principal = "";
                                object.krb5ConfigGcsUri = "";
                            }
                            if (message.keytab != null && message.hasOwnProperty("keytab"))
                                object.keytab = $root.google.cloud.metastore.v1beta.Secret.toObject(message.keytab, options);
                            if (message.principal != null && message.hasOwnProperty("principal"))
                                object.principal = message.principal;
                            if (message.krb5ConfigGcsUri != null && message.hasOwnProperty("krb5ConfigGcsUri"))
                                object.krb5ConfigGcsUri = message.krb5ConfigGcsUri;
                            return object;
                        };
    
                        /**
                         * Converts this KerberosConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KerberosConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for KerberosConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.KerberosConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        KerberosConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.KerberosConfig";
                        };
    
                        return KerberosConfig;
                    })();
    
                    v1beta.Secret = (function() {
    
                        /**
                         * Properties of a Secret.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface ISecret
                         * @property {string|null} [cloudSecret] Secret cloudSecret
                         */
    
                        /**
                         * Constructs a new Secret.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a Secret.
                         * @implements ISecret
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.ISecret=} [properties] Properties to set
                         */
                        function Secret(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Secret cloudSecret.
                         * @member {string|null|undefined} cloudSecret
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @instance
                         */
                        Secret.prototype.cloudSecret = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Secret value.
                         * @member {"cloudSecret"|undefined} value
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @instance
                         */
                        Object.defineProperty(Secret.prototype, "value", {
                            get: $util.oneOfGetter($oneOfFields = ["cloudSecret"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Secret instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {google.cloud.metastore.v1beta.ISecret=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.Secret} Secret instance
                         */
                        Secret.create = function create(properties) {
                            return new Secret(properties);
                        };
    
                        /**
                         * Encodes the specified Secret message. Does not implicitly {@link google.cloud.metastore.v1beta.Secret.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {google.cloud.metastore.v1beta.ISecret} message Secret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secret.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cloudSecret != null && Object.hasOwnProperty.call(message, "cloudSecret"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.cloudSecret);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Secret message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.Secret.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {google.cloud.metastore.v1beta.ISecret} message Secret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secret.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Secret message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.Secret} Secret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secret.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.Secret();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.cloudSecret = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Secret message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.Secret} Secret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secret.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Secret message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Secret.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.cloudSecret != null && message.hasOwnProperty("cloudSecret")) {
                                properties.value = 1;
                                if (!$util.isString(message.cloudSecret))
                                    return "cloudSecret: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Secret message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.Secret} Secret
                         */
                        Secret.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.Secret)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.Secret();
                            if (object.cloudSecret != null)
                                message.cloudSecret = String(object.cloudSecret);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Secret message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {google.cloud.metastore.v1beta.Secret} message Secret
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Secret.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.cloudSecret != null && message.hasOwnProperty("cloudSecret")) {
                                object.cloudSecret = message.cloudSecret;
                                if (options.oneofs)
                                    object.value = "cloudSecret";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Secret to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Secret.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Secret
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.Secret
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Secret.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.Secret";
                        };
    
                        return Secret;
                    })();
    
                    v1beta.EncryptionConfig = (function() {
    
                        /**
                         * Properties of an EncryptionConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IEncryptionConfig
                         * @property {string|null} [kmsKey] EncryptionConfig kmsKey
                         */
    
                        /**
                         * Constructs a new EncryptionConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an EncryptionConfig.
                         * @implements IEncryptionConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IEncryptionConfig=} [properties] Properties to set
                         */
                        function EncryptionConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EncryptionConfig kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @instance
                         */
                        EncryptionConfig.prototype.kmsKey = "";
    
                        /**
                         * Creates a new EncryptionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IEncryptionConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.EncryptionConfig} EncryptionConfig instance
                         */
                        EncryptionConfig.create = function create(properties) {
                            return new EncryptionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message. Does not implicitly {@link google.cloud.metastore.v1beta.EncryptionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kmsKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.EncryptionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.EncryptionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EncryptionConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EncryptionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EncryptionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.EncryptionConfig} EncryptionConfig
                         */
                        EncryptionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.EncryptionConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.EncryptionConfig();
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EncryptionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.EncryptionConfig} message EncryptionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EncryptionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.kmsKey = "";
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            return object;
                        };
    
                        /**
                         * Converts this EncryptionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EncryptionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EncryptionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.EncryptionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EncryptionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.EncryptionConfig";
                        };
    
                        return EncryptionConfig;
                    })();
    
                    v1beta.AuxiliaryVersionConfig = (function() {
    
                        /**
                         * Properties of an AuxiliaryVersionConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IAuxiliaryVersionConfig
                         * @property {string|null} [version] AuxiliaryVersionConfig version
                         * @property {Object.<string,string>|null} [configOverrides] AuxiliaryVersionConfig configOverrides
                         * @property {google.cloud.metastore.v1beta.INetworkConfig|null} [networkConfig] AuxiliaryVersionConfig networkConfig
                         */
    
                        /**
                         * Constructs a new AuxiliaryVersionConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an AuxiliaryVersionConfig.
                         * @implements IAuxiliaryVersionConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IAuxiliaryVersionConfig=} [properties] Properties to set
                         */
                        function AuxiliaryVersionConfig(properties) {
                            this.configOverrides = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AuxiliaryVersionConfig version.
                         * @member {string} version
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @instance
                         */
                        AuxiliaryVersionConfig.prototype.version = "";
    
                        /**
                         * AuxiliaryVersionConfig configOverrides.
                         * @member {Object.<string,string>} configOverrides
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @instance
                         */
                        AuxiliaryVersionConfig.prototype.configOverrides = $util.emptyObject;
    
                        /**
                         * AuxiliaryVersionConfig networkConfig.
                         * @member {google.cloud.metastore.v1beta.INetworkConfig|null|undefined} networkConfig
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @instance
                         */
                        AuxiliaryVersionConfig.prototype.networkConfig = null;
    
                        /**
                         * Creates a new AuxiliaryVersionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAuxiliaryVersionConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.AuxiliaryVersionConfig} AuxiliaryVersionConfig instance
                         */
                        AuxiliaryVersionConfig.create = function create(properties) {
                            return new AuxiliaryVersionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified AuxiliaryVersionConfig message. Does not implicitly {@link google.cloud.metastore.v1beta.AuxiliaryVersionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAuxiliaryVersionConfig} message AuxiliaryVersionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuxiliaryVersionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                            if (message.configOverrides != null && Object.hasOwnProperty.call(message, "configOverrides"))
                                for (var keys = Object.keys(message.configOverrides), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.configOverrides[keys[i]]).ldelim();
                            if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                                $root.google.cloud.metastore.v1beta.NetworkConfig.encode(message.networkConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AuxiliaryVersionConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.AuxiliaryVersionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAuxiliaryVersionConfig} message AuxiliaryVersionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuxiliaryVersionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AuxiliaryVersionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.AuxiliaryVersionConfig} AuxiliaryVersionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuxiliaryVersionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.AuxiliaryVersionConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.configOverrides === $util.emptyObject)
                                            message.configOverrides = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.configOverrides[key] = value;
                                        break;
                                    }
                                case 3: {
                                        message.networkConfig = $root.google.cloud.metastore.v1beta.NetworkConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AuxiliaryVersionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.AuxiliaryVersionConfig} AuxiliaryVersionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuxiliaryVersionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AuxiliaryVersionConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AuxiliaryVersionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.configOverrides != null && message.hasOwnProperty("configOverrides")) {
                                if (!$util.isObject(message.configOverrides))
                                    return "configOverrides: object expected";
                                var key = Object.keys(message.configOverrides);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.configOverrides[key[i]]))
                                        return "configOverrides: string{k:string} expected";
                            }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                                var error = $root.google.cloud.metastore.v1beta.NetworkConfig.verify(message.networkConfig);
                                if (error)
                                    return "networkConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AuxiliaryVersionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.AuxiliaryVersionConfig} AuxiliaryVersionConfig
                         */
                        AuxiliaryVersionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.AuxiliaryVersionConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.AuxiliaryVersionConfig();
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.configOverrides) {
                                if (typeof object.configOverrides !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.AuxiliaryVersionConfig.configOverrides: object expected");
                                message.configOverrides = {};
                                for (var keys = Object.keys(object.configOverrides), i = 0; i < keys.length; ++i)
                                    message.configOverrides[keys[i]] = String(object.configOverrides[keys[i]]);
                            }
                            if (object.networkConfig != null) {
                                if (typeof object.networkConfig !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.AuxiliaryVersionConfig.networkConfig: object expected");
                                message.networkConfig = $root.google.cloud.metastore.v1beta.NetworkConfig.fromObject(object.networkConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AuxiliaryVersionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.AuxiliaryVersionConfig} message AuxiliaryVersionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AuxiliaryVersionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.configOverrides = {};
                            if (options.defaults) {
                                object.version = "";
                                object.networkConfig = null;
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            var keys2;
                            if (message.configOverrides && (keys2 = Object.keys(message.configOverrides)).length) {
                                object.configOverrides = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.configOverrides[keys2[j]] = message.configOverrides[keys2[j]];
                            }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                                object.networkConfig = $root.google.cloud.metastore.v1beta.NetworkConfig.toObject(message.networkConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this AuxiliaryVersionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AuxiliaryVersionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AuxiliaryVersionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.AuxiliaryVersionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AuxiliaryVersionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.AuxiliaryVersionConfig";
                        };
    
                        return AuxiliaryVersionConfig;
                    })();
    
                    v1beta.NetworkConfig = (function() {
    
                        /**
                         * Properties of a NetworkConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface INetworkConfig
                         * @property {Array.<google.cloud.metastore.v1beta.NetworkConfig.IConsumer>|null} [consumers] NetworkConfig consumers
                         */
    
                        /**
                         * Constructs a new NetworkConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a NetworkConfig.
                         * @implements INetworkConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.INetworkConfig=} [properties] Properties to set
                         */
                        function NetworkConfig(properties) {
                            this.consumers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NetworkConfig consumers.
                         * @member {Array.<google.cloud.metastore.v1beta.NetworkConfig.IConsumer>} consumers
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @instance
                         */
                        NetworkConfig.prototype.consumers = $util.emptyArray;
    
                        /**
                         * Creates a new NetworkConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.INetworkConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.NetworkConfig} NetworkConfig instance
                         */
                        NetworkConfig.create = function create(properties) {
                            return new NetworkConfig(properties);
                        };
    
                        /**
                         * Encodes the specified NetworkConfig message. Does not implicitly {@link google.cloud.metastore.v1beta.NetworkConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.INetworkConfig} message NetworkConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.consumers != null && message.consumers.length)
                                for (var i = 0; i < message.consumers.length; ++i)
                                    $root.google.cloud.metastore.v1beta.NetworkConfig.Consumer.encode(message.consumers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NetworkConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.NetworkConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.INetworkConfig} message NetworkConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NetworkConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.NetworkConfig} NetworkConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.NetworkConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.consumers && message.consumers.length))
                                            message.consumers = [];
                                        message.consumers.push($root.google.cloud.metastore.v1beta.NetworkConfig.Consumer.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NetworkConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.NetworkConfig} NetworkConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NetworkConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NetworkConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.consumers != null && message.hasOwnProperty("consumers")) {
                                if (!Array.isArray(message.consumers))
                                    return "consumers: array expected";
                                for (var i = 0; i < message.consumers.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.NetworkConfig.Consumer.verify(message.consumers[i]);
                                    if (error)
                                        return "consumers." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NetworkConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.NetworkConfig} NetworkConfig
                         */
                        NetworkConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.NetworkConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.NetworkConfig();
                            if (object.consumers) {
                                if (!Array.isArray(object.consumers))
                                    throw TypeError(".google.cloud.metastore.v1beta.NetworkConfig.consumers: array expected");
                                message.consumers = [];
                                for (var i = 0; i < object.consumers.length; ++i) {
                                    if (typeof object.consumers[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.NetworkConfig.consumers: object expected");
                                    message.consumers[i] = $root.google.cloud.metastore.v1beta.NetworkConfig.Consumer.fromObject(object.consumers[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NetworkConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.NetworkConfig} message NetworkConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NetworkConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.consumers = [];
                            if (message.consumers && message.consumers.length) {
                                object.consumers = [];
                                for (var j = 0; j < message.consumers.length; ++j)
                                    object.consumers[j] = $root.google.cloud.metastore.v1beta.NetworkConfig.Consumer.toObject(message.consumers[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NetworkConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NetworkConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NetworkConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.NetworkConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NetworkConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.NetworkConfig";
                        };
    
                        NetworkConfig.Consumer = (function() {
    
                            /**
                             * Properties of a Consumer.
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig
                             * @interface IConsumer
                             * @property {string|null} [subnetwork] Consumer subnetwork
                             * @property {string|null} [endpointUri] Consumer endpointUri
                             */
    
                            /**
                             * Constructs a new Consumer.
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig
                             * @classdesc Represents a Consumer.
                             * @implements IConsumer
                             * @constructor
                             * @param {google.cloud.metastore.v1beta.NetworkConfig.IConsumer=} [properties] Properties to set
                             */
                            function Consumer(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Consumer subnetwork.
                             * @member {string|null|undefined} subnetwork
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @instance
                             */
                            Consumer.prototype.subnetwork = null;
    
                            /**
                             * Consumer endpointUri.
                             * @member {string} endpointUri
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @instance
                             */
                            Consumer.prototype.endpointUri = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Consumer vpcResource.
                             * @member {"subnetwork"|undefined} vpcResource
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @instance
                             */
                            Object.defineProperty(Consumer.prototype, "vpcResource", {
                                get: $util.oneOfGetter($oneOfFields = ["subnetwork"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Consumer instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1beta.NetworkConfig.IConsumer=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1beta.NetworkConfig.Consumer} Consumer instance
                             */
                            Consumer.create = function create(properties) {
                                return new Consumer(properties);
                            };
    
                            /**
                             * Encodes the specified Consumer message. Does not implicitly {@link google.cloud.metastore.v1beta.NetworkConfig.Consumer.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1beta.NetworkConfig.IConsumer} message Consumer message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Consumer.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subnetwork != null && Object.hasOwnProperty.call(message, "subnetwork"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.subnetwork);
                                if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.endpointUri);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Consumer message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.NetworkConfig.Consumer.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1beta.NetworkConfig.IConsumer} message Consumer message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Consumer.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Consumer message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1beta.NetworkConfig.Consumer} Consumer
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Consumer.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.NetworkConfig.Consumer();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subnetwork = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.endpointUri = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Consumer message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1beta.NetworkConfig.Consumer} Consumer
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Consumer.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Consumer message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Consumer.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.subnetwork != null && message.hasOwnProperty("subnetwork")) {
                                    properties.vpcResource = 1;
                                    if (!$util.isString(message.subnetwork))
                                        return "subnetwork: string expected";
                                }
                                if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                    if (!$util.isString(message.endpointUri))
                                        return "endpointUri: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Consumer message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1beta.NetworkConfig.Consumer} Consumer
                             */
                            Consumer.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1beta.NetworkConfig.Consumer)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1beta.NetworkConfig.Consumer();
                                if (object.subnetwork != null)
                                    message.subnetwork = String(object.subnetwork);
                                if (object.endpointUri != null)
                                    message.endpointUri = String(object.endpointUri);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Consumer message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {google.cloud.metastore.v1beta.NetworkConfig.Consumer} message Consumer
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Consumer.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.endpointUri = "";
                                if (message.subnetwork != null && message.hasOwnProperty("subnetwork")) {
                                    object.subnetwork = message.subnetwork;
                                    if (options.oneofs)
                                        object.vpcResource = "subnetwork";
                                }
                                if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                    object.endpointUri = message.endpointUri;
                                return object;
                            };
    
                            /**
                             * Converts this Consumer to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Consumer.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Consumer
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1beta.NetworkConfig.Consumer
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Consumer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1beta.NetworkConfig.Consumer";
                            };
    
                            return Consumer;
                        })();
    
                        return NetworkConfig;
                    })();
    
                    v1beta.TelemetryConfig = (function() {
    
                        /**
                         * Properties of a TelemetryConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface ITelemetryConfig
                         * @property {google.cloud.metastore.v1beta.TelemetryConfig.LogFormat|null} [logFormat] TelemetryConfig logFormat
                         */
    
                        /**
                         * Constructs a new TelemetryConfig.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a TelemetryConfig.
                         * @implements ITelemetryConfig
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.ITelemetryConfig=} [properties] Properties to set
                         */
                        function TelemetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TelemetryConfig logFormat.
                         * @member {google.cloud.metastore.v1beta.TelemetryConfig.LogFormat} logFormat
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @instance
                         */
                        TelemetryConfig.prototype.logFormat = 0;
    
                        /**
                         * Creates a new TelemetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.ITelemetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.TelemetryConfig} TelemetryConfig instance
                         */
                        TelemetryConfig.create = function create(properties) {
                            return new TelemetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified TelemetryConfig message. Does not implicitly {@link google.cloud.metastore.v1beta.TelemetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.ITelemetryConfig} message TelemetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TelemetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.logFormat != null && Object.hasOwnProperty.call(message, "logFormat"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.logFormat);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TelemetryConfig message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.TelemetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.ITelemetryConfig} message TelemetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TelemetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TelemetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.TelemetryConfig} TelemetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TelemetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.TelemetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.logFormat = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TelemetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.TelemetryConfig} TelemetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TelemetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TelemetryConfig message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TelemetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.logFormat != null && message.hasOwnProperty("logFormat"))
                                switch (message.logFormat) {
                                default:
                                    return "logFormat: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a TelemetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.TelemetryConfig} TelemetryConfig
                         */
                        TelemetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.TelemetryConfig)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.TelemetryConfig();
                            switch (object.logFormat) {
                            default:
                                if (typeof object.logFormat === "number") {
                                    message.logFormat = object.logFormat;
                                    break;
                                }
                                break;
                            case "LOG_FORMAT_UNSPECIFIED":
                            case 0:
                                message.logFormat = 0;
                                break;
                            case "LEGACY":
                            case 1:
                                message.logFormat = 1;
                                break;
                            case "JSON":
                            case 2:
                                message.logFormat = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TelemetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {google.cloud.metastore.v1beta.TelemetryConfig} message TelemetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TelemetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.logFormat = options.enums === String ? "LOG_FORMAT_UNSPECIFIED" : 0;
                            if (message.logFormat != null && message.hasOwnProperty("logFormat"))
                                object.logFormat = options.enums === String ? $root.google.cloud.metastore.v1beta.TelemetryConfig.LogFormat[message.logFormat] === undefined ? message.logFormat : $root.google.cloud.metastore.v1beta.TelemetryConfig.LogFormat[message.logFormat] : message.logFormat;
                            return object;
                        };
    
                        /**
                         * Converts this TelemetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TelemetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TelemetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.TelemetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TelemetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.TelemetryConfig";
                        };
    
                        /**
                         * LogFormat enum.
                         * @name google.cloud.metastore.v1beta.TelemetryConfig.LogFormat
                         * @enum {number}
                         * @property {number} LOG_FORMAT_UNSPECIFIED=0 LOG_FORMAT_UNSPECIFIED value
                         * @property {number} LEGACY=1 LEGACY value
                         * @property {number} JSON=2 JSON value
                         */
                        TelemetryConfig.LogFormat = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LOG_FORMAT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LEGACY"] = 1;
                            values[valuesById[2] = "JSON"] = 2;
                            return values;
                        })();
    
                        return TelemetryConfig;
                    })();
    
                    v1beta.MetadataManagementActivity = (function() {
    
                        /**
                         * Properties of a MetadataManagementActivity.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IMetadataManagementActivity
                         * @property {Array.<google.cloud.metastore.v1beta.IMetadataExport>|null} [metadataExports] MetadataManagementActivity metadataExports
                         * @property {Array.<google.cloud.metastore.v1beta.IRestore>|null} [restores] MetadataManagementActivity restores
                         */
    
                        /**
                         * Constructs a new MetadataManagementActivity.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a MetadataManagementActivity.
                         * @implements IMetadataManagementActivity
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IMetadataManagementActivity=} [properties] Properties to set
                         */
                        function MetadataManagementActivity(properties) {
                            this.metadataExports = [];
                            this.restores = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataManagementActivity metadataExports.
                         * @member {Array.<google.cloud.metastore.v1beta.IMetadataExport>} metadataExports
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @instance
                         */
                        MetadataManagementActivity.prototype.metadataExports = $util.emptyArray;
    
                        /**
                         * MetadataManagementActivity restores.
                         * @member {Array.<google.cloud.metastore.v1beta.IRestore>} restores
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @instance
                         */
                        MetadataManagementActivity.prototype.restores = $util.emptyArray;
    
                        /**
                         * Creates a new MetadataManagementActivity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataManagementActivity=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.MetadataManagementActivity} MetadataManagementActivity instance
                         */
                        MetadataManagementActivity.create = function create(properties) {
                            return new MetadataManagementActivity(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataManagementActivity message. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataManagementActivity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataManagementActivity} message MetadataManagementActivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataManagementActivity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metadataExports != null && message.metadataExports.length)
                                for (var i = 0; i < message.metadataExports.length; ++i)
                                    $root.google.cloud.metastore.v1beta.MetadataExport.encode(message.metadataExports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.restores != null && message.restores.length)
                                for (var i = 0; i < message.restores.length; ++i)
                                    $root.google.cloud.metastore.v1beta.Restore.encode(message.restores[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataManagementActivity message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataManagementActivity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataManagementActivity} message MetadataManagementActivity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataManagementActivity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataManagementActivity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.MetadataManagementActivity} MetadataManagementActivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataManagementActivity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.MetadataManagementActivity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.metadataExports && message.metadataExports.length))
                                            message.metadataExports = [];
                                        message.metadataExports.push($root.google.cloud.metastore.v1beta.MetadataExport.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.restores && message.restores.length))
                                            message.restores = [];
                                        message.restores.push($root.google.cloud.metastore.v1beta.Restore.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataManagementActivity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.MetadataManagementActivity} MetadataManagementActivity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataManagementActivity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataManagementActivity message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataManagementActivity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metadataExports != null && message.hasOwnProperty("metadataExports")) {
                                if (!Array.isArray(message.metadataExports))
                                    return "metadataExports: array expected";
                                for (var i = 0; i < message.metadataExports.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.MetadataExport.verify(message.metadataExports[i]);
                                    if (error)
                                        return "metadataExports." + error;
                                }
                            }
                            if (message.restores != null && message.hasOwnProperty("restores")) {
                                if (!Array.isArray(message.restores))
                                    return "restores: array expected";
                                for (var i = 0; i < message.restores.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.Restore.verify(message.restores[i]);
                                    if (error)
                                        return "restores." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataManagementActivity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.MetadataManagementActivity} MetadataManagementActivity
                         */
                        MetadataManagementActivity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.MetadataManagementActivity)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.MetadataManagementActivity();
                            if (object.metadataExports) {
                                if (!Array.isArray(object.metadataExports))
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataManagementActivity.metadataExports: array expected");
                                message.metadataExports = [];
                                for (var i = 0; i < object.metadataExports.length; ++i) {
                                    if (typeof object.metadataExports[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.MetadataManagementActivity.metadataExports: object expected");
                                    message.metadataExports[i] = $root.google.cloud.metastore.v1beta.MetadataExport.fromObject(object.metadataExports[i]);
                                }
                            }
                            if (object.restores) {
                                if (!Array.isArray(object.restores))
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataManagementActivity.restores: array expected");
                                message.restores = [];
                                for (var i = 0; i < object.restores.length; ++i) {
                                    if (typeof object.restores[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.MetadataManagementActivity.restores: object expected");
                                    message.restores[i] = $root.google.cloud.metastore.v1beta.Restore.fromObject(object.restores[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataManagementActivity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {google.cloud.metastore.v1beta.MetadataManagementActivity} message MetadataManagementActivity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataManagementActivity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.metadataExports = [];
                                object.restores = [];
                            }
                            if (message.metadataExports && message.metadataExports.length) {
                                object.metadataExports = [];
                                for (var j = 0; j < message.metadataExports.length; ++j)
                                    object.metadataExports[j] = $root.google.cloud.metastore.v1beta.MetadataExport.toObject(message.metadataExports[j], options);
                            }
                            if (message.restores && message.restores.length) {
                                object.restores = [];
                                for (var j = 0; j < message.restores.length; ++j)
                                    object.restores[j] = $root.google.cloud.metastore.v1beta.Restore.toObject(message.restores[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MetadataManagementActivity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataManagementActivity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataManagementActivity
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.MetadataManagementActivity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataManagementActivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.MetadataManagementActivity";
                        };
    
                        return MetadataManagementActivity;
                    })();
    
                    v1beta.MetadataImport = (function() {
    
                        /**
                         * Properties of a MetadataImport.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IMetadataImport
                         * @property {google.cloud.metastore.v1beta.MetadataImport.IDatabaseDump|null} [databaseDump] MetadataImport databaseDump
                         * @property {string|null} [name] MetadataImport name
                         * @property {string|null} [description] MetadataImport description
                         * @property {google.protobuf.ITimestamp|null} [createTime] MetadataImport createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] MetadataImport updateTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] MetadataImport endTime
                         * @property {google.cloud.metastore.v1beta.MetadataImport.State|null} [state] MetadataImport state
                         */
    
                        /**
                         * Constructs a new MetadataImport.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a MetadataImport.
                         * @implements IMetadataImport
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IMetadataImport=} [properties] Properties to set
                         */
                        function MetadataImport(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataImport databaseDump.
                         * @member {google.cloud.metastore.v1beta.MetadataImport.IDatabaseDump|null|undefined} databaseDump
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.databaseDump = null;
    
                        /**
                         * MetadataImport name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.name = "";
    
                        /**
                         * MetadataImport description.
                         * @member {string} description
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.description = "";
    
                        /**
                         * MetadataImport createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.createTime = null;
    
                        /**
                         * MetadataImport updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.updateTime = null;
    
                        /**
                         * MetadataImport endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.endTime = null;
    
                        /**
                         * MetadataImport state.
                         * @member {google.cloud.metastore.v1beta.MetadataImport.State} state
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         */
                        MetadataImport.prototype.state = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetadataImport metadata.
                         * @member {"databaseDump"|undefined} metadata
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         */
                        Object.defineProperty(MetadataImport.prototype, "metadata", {
                            get: $util.oneOfGetter($oneOfFields = ["databaseDump"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetadataImport instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataImport=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.MetadataImport} MetadataImport instance
                         */
                        MetadataImport.create = function create(properties) {
                            return new MetadataImport(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataImport message. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataImport.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataImport} message MetadataImport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataImport.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.databaseDump != null && Object.hasOwnProperty.call(message, "databaseDump"))
                                $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.encode(message.databaseDump, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataImport message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataImport.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataImport} message MetadataImport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataImport.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataImport message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.MetadataImport} MetadataImport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataImport.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.MetadataImport();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 6: {
                                        message.databaseDump = $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataImport message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.MetadataImport} MetadataImport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataImport.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataImport message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataImport.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.databaseDump != null && message.hasOwnProperty("databaseDump")) {
                                properties.metadata = 1;
                                {
                                    var error = $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.verify(message.databaseDump);
                                    if (error)
                                        return "databaseDump." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataImport message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.MetadataImport} MetadataImport
                         */
                        MetadataImport.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.MetadataImport)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.MetadataImport();
                            if (object.databaseDump != null) {
                                if (typeof object.databaseDump !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataImport.databaseDump: object expected");
                                message.databaseDump = $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.fromObject(object.databaseDump);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataImport.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataImport.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataImport.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataImport message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {google.cloud.metastore.v1beta.MetadataImport} message MetadataImport
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataImport.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.endTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1beta.MetadataImport.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1beta.MetadataImport.State[message.state] : message.state;
                            if (message.databaseDump != null && message.hasOwnProperty("databaseDump")) {
                                object.databaseDump = $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.toObject(message.databaseDump, options);
                                if (options.oneofs)
                                    object.metadata = "databaseDump";
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this MetadataImport to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataImport.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataImport
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.MetadataImport
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataImport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.MetadataImport";
                        };
    
                        MetadataImport.DatabaseDump = (function() {
    
                            /**
                             * Properties of a DatabaseDump.
                             * @memberof google.cloud.metastore.v1beta.MetadataImport
                             * @interface IDatabaseDump
                             * @property {google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.DatabaseType|null} [databaseType] DatabaseDump databaseType
                             * @property {string|null} [gcsUri] DatabaseDump gcsUri
                             * @property {string|null} [sourceDatabase] DatabaseDump sourceDatabase
                             * @property {google.cloud.metastore.v1beta.DatabaseDumpSpec.Type|null} [type] DatabaseDump type
                             */
    
                            /**
                             * Constructs a new DatabaseDump.
                             * @memberof google.cloud.metastore.v1beta.MetadataImport
                             * @classdesc Represents a DatabaseDump.
                             * @implements IDatabaseDump
                             * @constructor
                             * @param {google.cloud.metastore.v1beta.MetadataImport.IDatabaseDump=} [properties] Properties to set
                             */
                            function DatabaseDump(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DatabaseDump databaseType.
                             * @member {google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.DatabaseType} databaseType
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.databaseType = 0;
    
                            /**
                             * DatabaseDump gcsUri.
                             * @member {string} gcsUri
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.gcsUri = "";
    
                            /**
                             * DatabaseDump sourceDatabase.
                             * @member {string} sourceDatabase
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.sourceDatabase = "";
    
                            /**
                             * DatabaseDump type.
                             * @member {google.cloud.metastore.v1beta.DatabaseDumpSpec.Type} type
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @instance
                             */
                            DatabaseDump.prototype.type = 0;
    
                            /**
                             * Creates a new DatabaseDump instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1beta.MetadataImport.IDatabaseDump=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1beta.MetadataImport.DatabaseDump} DatabaseDump instance
                             */
                            DatabaseDump.create = function create(properties) {
                                return new DatabaseDump(properties);
                            };
    
                            /**
                             * Encodes the specified DatabaseDump message. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1beta.MetadataImport.IDatabaseDump} message DatabaseDump message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DatabaseDump.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.databaseType != null && Object.hasOwnProperty.call(message, "databaseType"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.databaseType);
                                if (message.gcsUri != null && Object.hasOwnProperty.call(message, "gcsUri"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.gcsUri);
                                if (message.sourceDatabase != null && Object.hasOwnProperty.call(message, "sourceDatabase"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.sourceDatabase);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.type);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DatabaseDump message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1beta.MetadataImport.IDatabaseDump} message DatabaseDump message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DatabaseDump.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DatabaseDump message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1beta.MetadataImport.DatabaseDump} DatabaseDump
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DatabaseDump.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.databaseType = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.gcsUri = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.sourceDatabase = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DatabaseDump message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1beta.MetadataImport.DatabaseDump} DatabaseDump
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DatabaseDump.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DatabaseDump message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DatabaseDump.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                    switch (message.databaseType) {
                                    default:
                                        return "databaseType: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                    if (!$util.isString(message.gcsUri))
                                        return "gcsUri: string expected";
                                if (message.sourceDatabase != null && message.hasOwnProperty("sourceDatabase"))
                                    if (!$util.isString(message.sourceDatabase))
                                        return "sourceDatabase: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a DatabaseDump message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1beta.MetadataImport.DatabaseDump} DatabaseDump
                             */
                            DatabaseDump.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump();
                                switch (object.databaseType) {
                                default:
                                    if (typeof object.databaseType === "number") {
                                        message.databaseType = object.databaseType;
                                        break;
                                    }
                                    break;
                                case "DATABASE_TYPE_UNSPECIFIED":
                                case 0:
                                    message.databaseType = 0;
                                    break;
                                case "MYSQL":
                                case 1:
                                    message.databaseType = 1;
                                    break;
                                }
                                if (object.gcsUri != null)
                                    message.gcsUri = String(object.gcsUri);
                                if (object.sourceDatabase != null)
                                    message.sourceDatabase = String(object.sourceDatabase);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "MYSQL":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "AVRO":
                                case 2:
                                    message.type = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DatabaseDump message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {google.cloud.metastore.v1beta.MetadataImport.DatabaseDump} message DatabaseDump
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DatabaseDump.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.databaseType = options.enums === String ? "DATABASE_TYPE_UNSPECIFIED" : 0;
                                    object.gcsUri = "";
                                    object.sourceDatabase = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.databaseType != null && message.hasOwnProperty("databaseType"))
                                    object.databaseType = options.enums === String ? $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.DatabaseType[message.databaseType] === undefined ? message.databaseType : $root.google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.DatabaseType[message.databaseType] : message.databaseType;
                                if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                    object.gcsUri = message.gcsUri;
                                if (message.sourceDatabase != null && message.hasOwnProperty("sourceDatabase"))
                                    object.sourceDatabase = message.sourceDatabase;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.metastore.v1beta.DatabaseDumpSpec.Type[message.type] === undefined ? message.type : $root.google.cloud.metastore.v1beta.DatabaseDumpSpec.Type[message.type] : message.type;
                                return object;
                            };
    
                            /**
                             * Converts this DatabaseDump to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DatabaseDump.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DatabaseDump
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1beta.MetadataImport.DatabaseDump
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DatabaseDump.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1beta.MetadataImport.DatabaseDump";
                            };
    
                            /**
                             * DatabaseType enum.
                             * @name google.cloud.metastore.v1beta.MetadataImport.DatabaseDump.DatabaseType
                             * @enum {number}
                             * @property {number} DATABASE_TYPE_UNSPECIFIED=0 DATABASE_TYPE_UNSPECIFIED value
                             * @property {number} MYSQL=1 MYSQL value
                             */
                            DatabaseDump.DatabaseType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "DATABASE_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "MYSQL"] = 1;
                                return values;
                            })();
    
                            return DatabaseDump;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1beta.MetadataImport.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} FAILED=4 FAILED value
                         */
                        MetadataImport.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            return values;
                        })();
    
                        return MetadataImport;
                    })();
    
                    v1beta.MetadataExport = (function() {
    
                        /**
                         * Properties of a MetadataExport.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IMetadataExport
                         * @property {string|null} [destinationGcsUri] MetadataExport destinationGcsUri
                         * @property {google.protobuf.ITimestamp|null} [startTime] MetadataExport startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] MetadataExport endTime
                         * @property {google.cloud.metastore.v1beta.MetadataExport.State|null} [state] MetadataExport state
                         * @property {google.cloud.metastore.v1beta.DatabaseDumpSpec.Type|null} [databaseDumpType] MetadataExport databaseDumpType
                         */
    
                        /**
                         * Constructs a new MetadataExport.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a MetadataExport.
                         * @implements IMetadataExport
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IMetadataExport=} [properties] Properties to set
                         */
                        function MetadataExport(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetadataExport destinationGcsUri.
                         * @member {string|null|undefined} destinationGcsUri
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.destinationGcsUri = null;
    
                        /**
                         * MetadataExport startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.startTime = null;
    
                        /**
                         * MetadataExport endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.endTime = null;
    
                        /**
                         * MetadataExport state.
                         * @member {google.cloud.metastore.v1beta.MetadataExport.State} state
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.state = 0;
    
                        /**
                         * MetadataExport databaseDumpType.
                         * @member {google.cloud.metastore.v1beta.DatabaseDumpSpec.Type} databaseDumpType
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @instance
                         */
                        MetadataExport.prototype.databaseDumpType = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetadataExport destination.
                         * @member {"destinationGcsUri"|undefined} destination
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @instance
                         */
                        Object.defineProperty(MetadataExport.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["destinationGcsUri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetadataExport instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataExport=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.MetadataExport} MetadataExport instance
                         */
                        MetadataExport.create = function create(properties) {
                            return new MetadataExport(properties);
                        };
    
                        /**
                         * Encodes the specified MetadataExport message. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataExport.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataExport} message MetadataExport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataExport.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.destinationGcsUri != null && Object.hasOwnProperty.call(message, "destinationGcsUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.destinationGcsUri);
                            if (message.databaseDumpType != null && Object.hasOwnProperty.call(message, "databaseDumpType"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.databaseDumpType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetadataExport message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.MetadataExport.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMetadataExport} message MetadataExport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetadataExport.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetadataExport message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.MetadataExport} MetadataExport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataExport.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.MetadataExport();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.destinationGcsUri = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.databaseDumpType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetadataExport message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.MetadataExport} MetadataExport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetadataExport.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetadataExport message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetadataExport.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.destinationGcsUri != null && message.hasOwnProperty("destinationGcsUri")) {
                                properties.destination = 1;
                                if (!$util.isString(message.destinationGcsUri))
                                    return "destinationGcsUri: string expected";
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                switch (message.databaseDumpType) {
                                default:
                                    return "databaseDumpType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MetadataExport message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.MetadataExport} MetadataExport
                         */
                        MetadataExport.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.MetadataExport)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.MetadataExport();
                            if (object.destinationGcsUri != null)
                                message.destinationGcsUri = String(object.destinationGcsUri);
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataExport.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.MetadataExport.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            switch (object.databaseDumpType) {
                            default:
                                if (typeof object.databaseDumpType === "number") {
                                    message.databaseDumpType = object.databaseDumpType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseDumpType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseDumpType = 1;
                                break;
                            case "AVRO":
                            case 2:
                                message.databaseDumpType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetadataExport message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {google.cloud.metastore.v1beta.MetadataExport} message MetadataExport
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetadataExport.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.databaseDumpType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1beta.MetadataExport.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1beta.MetadataExport.State[message.state] : message.state;
                            if (message.destinationGcsUri != null && message.hasOwnProperty("destinationGcsUri")) {
                                object.destinationGcsUri = message.destinationGcsUri;
                                if (options.oneofs)
                                    object.destination = "destinationGcsUri";
                            }
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                object.databaseDumpType = options.enums === String ? $root.google.cloud.metastore.v1beta.DatabaseDumpSpec.Type[message.databaseDumpType] === undefined ? message.databaseDumpType : $root.google.cloud.metastore.v1beta.DatabaseDumpSpec.Type[message.databaseDumpType] : message.databaseDumpType;
                            return object;
                        };
    
                        /**
                         * Converts this MetadataExport to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetadataExport.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetadataExport
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.MetadataExport
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetadataExport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.MetadataExport";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1beta.MetadataExport.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} FAILED=3 FAILED value
                         * @property {number} CANCELLED=4 CANCELLED value
                         */
                        MetadataExport.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            values[valuesById[4] = "CANCELLED"] = 4;
                            return values;
                        })();
    
                        return MetadataExport;
                    })();
    
                    v1beta.Backup = (function() {
    
                        /**
                         * Properties of a Backup.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IBackup
                         * @property {string|null} [name] Backup name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Backup createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] Backup endTime
                         * @property {google.cloud.metastore.v1beta.Backup.State|null} [state] Backup state
                         * @property {google.cloud.metastore.v1beta.IService|null} [serviceRevision] Backup serviceRevision
                         * @property {string|null} [description] Backup description
                         * @property {Array.<string>|null} [restoringServices] Backup restoringServices
                         */
    
                        /**
                         * Constructs a new Backup.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a Backup.
                         * @implements IBackup
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IBackup=} [properties] Properties to set
                         */
                        function Backup(properties) {
                            this.restoringServices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Backup name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @instance
                         */
                        Backup.prototype.name = "";
    
                        /**
                         * Backup createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @instance
                         */
                        Backup.prototype.createTime = null;
    
                        /**
                         * Backup endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @instance
                         */
                        Backup.prototype.endTime = null;
    
                        /**
                         * Backup state.
                         * @member {google.cloud.metastore.v1beta.Backup.State} state
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @instance
                         */
                        Backup.prototype.state = 0;
    
                        /**
                         * Backup serviceRevision.
                         * @member {google.cloud.metastore.v1beta.IService|null|undefined} serviceRevision
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @instance
                         */
                        Backup.prototype.serviceRevision = null;
    
                        /**
                         * Backup description.
                         * @member {string} description
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @instance
                         */
                        Backup.prototype.description = "";
    
                        /**
                         * Backup restoringServices.
                         * @member {Array.<string>} restoringServices
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @instance
                         */
                        Backup.prototype.restoringServices = $util.emptyArray;
    
                        /**
                         * Creates a new Backup instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {google.cloud.metastore.v1beta.IBackup=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.Backup} Backup instance
                         */
                        Backup.create = function create(properties) {
                            return new Backup(properties);
                        };
    
                        /**
                         * Encodes the specified Backup message. Does not implicitly {@link google.cloud.metastore.v1beta.Backup.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {google.cloud.metastore.v1beta.IBackup} message Backup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Backup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.state);
                            if (message.serviceRevision != null && Object.hasOwnProperty.call(message, "serviceRevision"))
                                $root.google.cloud.metastore.v1beta.Service.encode(message.serviceRevision, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            if (message.restoringServices != null && message.restoringServices.length)
                                for (var i = 0; i < message.restoringServices.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.restoringServices[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Backup message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.Backup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {google.cloud.metastore.v1beta.IBackup} message Backup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Backup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Backup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.Backup} Backup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Backup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.Backup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.serviceRevision = $root.google.cloud.metastore.v1beta.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 7: {
                                        if (!(message.restoringServices && message.restoringServices.length))
                                            message.restoringServices = [];
                                        message.restoringServices.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Backup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.Backup} Backup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Backup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Backup message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Backup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.serviceRevision != null && message.hasOwnProperty("serviceRevision")) {
                                var error = $root.google.cloud.metastore.v1beta.Service.verify(message.serviceRevision);
                                if (error)
                                    return "serviceRevision." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.restoringServices != null && message.hasOwnProperty("restoringServices")) {
                                if (!Array.isArray(message.restoringServices))
                                    return "restoringServices: array expected";
                                for (var i = 0; i < message.restoringServices.length; ++i)
                                    if (!$util.isString(message.restoringServices[i]))
                                        return "restoringServices: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Backup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.Backup} Backup
                         */
                        Backup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.Backup)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.Backup();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Backup.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Backup.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "DELETING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ACTIVE":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "RESTORING":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.serviceRevision != null) {
                                if (typeof object.serviceRevision !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Backup.serviceRevision: object expected");
                                message.serviceRevision = $root.google.cloud.metastore.v1beta.Service.fromObject(object.serviceRevision);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.restoringServices) {
                                if (!Array.isArray(object.restoringServices))
                                    throw TypeError(".google.cloud.metastore.v1beta.Backup.restoringServices: array expected");
                                message.restoringServices = [];
                                for (var i = 0; i < object.restoringServices.length; ++i)
                                    message.restoringServices[i] = String(object.restoringServices[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Backup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {google.cloud.metastore.v1beta.Backup} message Backup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Backup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.restoringServices = [];
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.serviceRevision = null;
                                object.description = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1beta.Backup.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1beta.Backup.State[message.state] : message.state;
                            if (message.serviceRevision != null && message.hasOwnProperty("serviceRevision"))
                                object.serviceRevision = $root.google.cloud.metastore.v1beta.Service.toObject(message.serviceRevision, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.restoringServices && message.restoringServices.length) {
                                object.restoringServices = [];
                                for (var j = 0; j < message.restoringServices.length; ++j)
                                    object.restoringServices[j] = message.restoringServices[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Backup to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Backup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Backup
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.Backup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Backup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.Backup";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1beta.Backup.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} DELETING=2 DELETING value
                         * @property {number} ACTIVE=3 ACTIVE value
                         * @property {number} FAILED=4 FAILED value
                         * @property {number} RESTORING=5 RESTORING value
                         */
                        Backup.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "DELETING"] = 2;
                            values[valuesById[3] = "ACTIVE"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            values[valuesById[5] = "RESTORING"] = 5;
                            return values;
                        })();
    
                        return Backup;
                    })();
    
                    v1beta.Restore = (function() {
    
                        /**
                         * Properties of a Restore.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IRestore
                         * @property {google.protobuf.ITimestamp|null} [startTime] Restore startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] Restore endTime
                         * @property {google.cloud.metastore.v1beta.Restore.State|null} [state] Restore state
                         * @property {string|null} [backup] Restore backup
                         * @property {google.cloud.metastore.v1beta.Restore.RestoreType|null} [type] Restore type
                         * @property {string|null} [details] Restore details
                         */
    
                        /**
                         * Constructs a new Restore.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a Restore.
                         * @implements IRestore
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IRestore=} [properties] Properties to set
                         */
                        function Restore(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Restore startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @instance
                         */
                        Restore.prototype.startTime = null;
    
                        /**
                         * Restore endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @instance
                         */
                        Restore.prototype.endTime = null;
    
                        /**
                         * Restore state.
                         * @member {google.cloud.metastore.v1beta.Restore.State} state
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @instance
                         */
                        Restore.prototype.state = 0;
    
                        /**
                         * Restore backup.
                         * @member {string} backup
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @instance
                         */
                        Restore.prototype.backup = "";
    
                        /**
                         * Restore type.
                         * @member {google.cloud.metastore.v1beta.Restore.RestoreType} type
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @instance
                         */
                        Restore.prototype.type = 0;
    
                        /**
                         * Restore details.
                         * @member {string} details
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @instance
                         */
                        Restore.prototype.details = "";
    
                        /**
                         * Creates a new Restore instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRestore=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.Restore} Restore instance
                         */
                        Restore.create = function create(properties) {
                            return new Restore(properties);
                        };
    
                        /**
                         * Encodes the specified Restore message. Does not implicitly {@link google.cloud.metastore.v1beta.Restore.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRestore} message Restore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Restore.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.backup);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.details);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Restore message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.Restore.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRestore} message Restore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Restore.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Restore message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.Restore} Restore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Restore.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.Restore();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.backup = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.details = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Restore message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.Restore} Restore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Restore.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Restore message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Restore.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                if (!$util.isString(message.backup))
                                    return "backup: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.details != null && message.hasOwnProperty("details"))
                                if (!$util.isString(message.details))
                                    return "details: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Restore message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.Restore} Restore
                         */
                        Restore.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.Restore)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.Restore();
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Restore.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Restore.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.backup != null)
                                message.backup = String(object.backup);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "RESTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "FULL":
                            case 1:
                                message.type = 1;
                                break;
                            case "METADATA_ONLY":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.details != null)
                                message.details = String(object.details);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Restore message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {google.cloud.metastore.v1beta.Restore} message Restore
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Restore.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.backup = "";
                                object.type = options.enums === String ? "RESTORE_TYPE_UNSPECIFIED" : 0;
                                object.details = "";
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1beta.Restore.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1beta.Restore.State[message.state] : message.state;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = message.backup;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.metastore.v1beta.Restore.RestoreType[message.type] === undefined ? message.type : $root.google.cloud.metastore.v1beta.Restore.RestoreType[message.type] : message.type;
                            if (message.details != null && message.hasOwnProperty("details"))
                                object.details = message.details;
                            return object;
                        };
    
                        /**
                         * Converts this Restore to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Restore.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Restore
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.Restore
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Restore.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.Restore";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1beta.Restore.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} FAILED=3 FAILED value
                         * @property {number} CANCELLED=4 CANCELLED value
                         */
                        Restore.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            values[valuesById[4] = "CANCELLED"] = 4;
                            return values;
                        })();
    
                        /**
                         * RestoreType enum.
                         * @name google.cloud.metastore.v1beta.Restore.RestoreType
                         * @enum {number}
                         * @property {number} RESTORE_TYPE_UNSPECIFIED=0 RESTORE_TYPE_UNSPECIFIED value
                         * @property {number} FULL=1 FULL value
                         * @property {number} METADATA_ONLY=2 METADATA_ONLY value
                         */
                        Restore.RestoreType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RESTORE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "FULL"] = 1;
                            values[valuesById[2] = "METADATA_ONLY"] = 2;
                            return values;
                        })();
    
                        return Restore;
                    })();
    
                    v1beta.ListServicesRequest = (function() {
    
                        /**
                         * Properties of a ListServicesRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IListServicesRequest
                         * @property {string|null} [parent] ListServicesRequest parent
                         * @property {number|null} [pageSize] ListServicesRequest pageSize
                         * @property {string|null} [pageToken] ListServicesRequest pageToken
                         * @property {string|null} [filter] ListServicesRequest filter
                         * @property {string|null} [orderBy] ListServicesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListServicesRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a ListServicesRequest.
                         * @implements IListServicesRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IListServicesRequest=} [properties] Properties to set
                         */
                        function ListServicesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListServicesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.parent = "";
    
                        /**
                         * ListServicesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListServicesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.pageToken = "";
    
                        /**
                         * ListServicesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.filter = "";
    
                        /**
                         * ListServicesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListServicesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListServicesRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ListServicesRequest} ListServicesRequest instance
                         */
                        ListServicesRequest.create = function create(properties) {
                            return new ListServicesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListServicesRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.ListServicesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListServicesRequest} message ListServicesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListServicesRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ListServicesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListServicesRequest} message ListServicesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListServicesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ListServicesRequest} ListServicesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ListServicesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListServicesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ListServicesRequest} ListServicesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListServicesRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListServicesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListServicesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ListServicesRequest} ListServicesRequest
                         */
                        ListServicesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ListServicesRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ListServicesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListServicesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ListServicesRequest} message ListServicesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListServicesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListServicesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListServicesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListServicesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ListServicesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListServicesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ListServicesRequest";
                        };
    
                        return ListServicesRequest;
                    })();
    
                    v1beta.ListServicesResponse = (function() {
    
                        /**
                         * Properties of a ListServicesResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IListServicesResponse
                         * @property {Array.<google.cloud.metastore.v1beta.IService>|null} [services] ListServicesResponse services
                         * @property {string|null} [nextPageToken] ListServicesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListServicesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListServicesResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a ListServicesResponse.
                         * @implements IListServicesResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IListServicesResponse=} [properties] Properties to set
                         */
                        function ListServicesResponse(properties) {
                            this.services = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListServicesResponse services.
                         * @member {Array.<google.cloud.metastore.v1beta.IService>} services
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.services = $util.emptyArray;
    
                        /**
                         * ListServicesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListServicesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListServicesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListServicesResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ListServicesResponse} ListServicesResponse instance
                         */
                        ListServicesResponse.create = function create(properties) {
                            return new ListServicesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListServicesResponse message. Does not implicitly {@link google.cloud.metastore.v1beta.ListServicesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListServicesResponse} message ListServicesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.services != null && message.services.length)
                                for (var i = 0; i < message.services.length; ++i)
                                    $root.google.cloud.metastore.v1beta.Service.encode(message.services[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListServicesResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ListServicesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListServicesResponse} message ListServicesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListServicesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ListServicesResponse} ListServicesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ListServicesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.services && message.services.length))
                                            message.services = [];
                                        message.services.push($root.google.cloud.metastore.v1beta.Service.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListServicesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ListServicesResponse} ListServicesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListServicesResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListServicesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.services != null && message.hasOwnProperty("services")) {
                                if (!Array.isArray(message.services))
                                    return "services: array expected";
                                for (var i = 0; i < message.services.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.Service.verify(message.services[i]);
                                    if (error)
                                        return "services." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListServicesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ListServicesResponse} ListServicesResponse
                         */
                        ListServicesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ListServicesResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ListServicesResponse();
                            if (object.services) {
                                if (!Array.isArray(object.services))
                                    throw TypeError(".google.cloud.metastore.v1beta.ListServicesResponse.services: array expected");
                                message.services = [];
                                for (var i = 0; i < object.services.length; ++i) {
                                    if (typeof object.services[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.ListServicesResponse.services: object expected");
                                    message.services[i] = $root.google.cloud.metastore.v1beta.Service.fromObject(object.services[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1beta.ListServicesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListServicesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.ListServicesResponse} message ListServicesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListServicesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.services = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.services && message.services.length) {
                                object.services = [];
                                for (var j = 0; j < message.services.length; ++j)
                                    object.services[j] = $root.google.cloud.metastore.v1beta.Service.toObject(message.services[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListServicesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListServicesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListServicesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ListServicesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListServicesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ListServicesResponse";
                        };
    
                        return ListServicesResponse;
                    })();
    
                    v1beta.GetServiceRequest = (function() {
    
                        /**
                         * Properties of a GetServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IGetServiceRequest
                         * @property {string|null} [name] GetServiceRequest name
                         */
    
                        /**
                         * Constructs a new GetServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a GetServiceRequest.
                         * @implements IGetServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IGetServiceRequest=} [properties] Properties to set
                         */
                        function GetServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @instance
                         */
                        GetServiceRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.GetServiceRequest} GetServiceRequest instance
                         */
                        GetServiceRequest.create = function create(properties) {
                            return new GetServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.GetServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.GetServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.GetServiceRequest} GetServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.GetServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.GetServiceRequest} GetServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.GetServiceRequest} GetServiceRequest
                         */
                        GetServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.GetServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.GetServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.GetServiceRequest} message GetServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.GetServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.GetServiceRequest";
                        };
    
                        return GetServiceRequest;
                    })();
    
                    v1beta.CreateServiceRequest = (function() {
    
                        /**
                         * Properties of a CreateServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface ICreateServiceRequest
                         * @property {string|null} [parent] CreateServiceRequest parent
                         * @property {string|null} [serviceId] CreateServiceRequest serviceId
                         * @property {google.cloud.metastore.v1beta.IService|null} [service] CreateServiceRequest service
                         * @property {string|null} [requestId] CreateServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a CreateServiceRequest.
                         * @implements ICreateServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.ICreateServiceRequest=} [properties] Properties to set
                         */
                        function CreateServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateServiceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.parent = "";
    
                        /**
                         * CreateServiceRequest serviceId.
                         * @member {string} serviceId
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.serviceId = "";
    
                        /**
                         * CreateServiceRequest service.
                         * @member {google.cloud.metastore.v1beta.IService|null|undefined} service
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.service = null;
    
                        /**
                         * CreateServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.CreateServiceRequest} CreateServiceRequest instance
                         */
                        CreateServiceRequest.create = function create(properties) {
                            return new CreateServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.CreateServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.serviceId != null && Object.hasOwnProperty.call(message, "serviceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceId);
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                $root.google.cloud.metastore.v1beta.Service.encode(message.service, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.CreateServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.CreateServiceRequest} CreateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.CreateServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.serviceId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.service = $root.google.cloud.metastore.v1beta.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.CreateServiceRequest} CreateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                                if (!$util.isString(message.serviceId))
                                    return "serviceId: string expected";
                            if (message.service != null && message.hasOwnProperty("service")) {
                                var error = $root.google.cloud.metastore.v1beta.Service.verify(message.service);
                                if (error)
                                    return "service." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.CreateServiceRequest} CreateServiceRequest
                         */
                        CreateServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.CreateServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.CreateServiceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.serviceId != null)
                                message.serviceId = String(object.serviceId);
                            if (object.service != null) {
                                if (typeof object.service !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.CreateServiceRequest.service: object expected");
                                message.service = $root.google.cloud.metastore.v1beta.Service.fromObject(object.service);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.CreateServiceRequest} message CreateServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.serviceId = "";
                                object.service = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                                object.serviceId = message.serviceId;
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = $root.google.cloud.metastore.v1beta.Service.toObject(message.service, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.CreateServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.CreateServiceRequest";
                        };
    
                        return CreateServiceRequest;
                    })();
    
                    v1beta.UpdateServiceRequest = (function() {
    
                        /**
                         * Properties of an UpdateServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IUpdateServiceRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateServiceRequest updateMask
                         * @property {google.cloud.metastore.v1beta.IService|null} [service] UpdateServiceRequest service
                         * @property {string|null} [requestId] UpdateServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an UpdateServiceRequest.
                         * @implements IUpdateServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IUpdateServiceRequest=} [properties] Properties to set
                         */
                        function UpdateServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateServiceRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateServiceRequest service.
                         * @member {google.cloud.metastore.v1beta.IService|null|undefined} service
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.service = null;
    
                        /**
                         * UpdateServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.UpdateServiceRequest} UpdateServiceRequest instance
                         */
                        UpdateServiceRequest.create = function create(properties) {
                            return new UpdateServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.UpdateServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                $root.google.cloud.metastore.v1beta.Service.encode(message.service, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.UpdateServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.UpdateServiceRequest} UpdateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.UpdateServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.service = $root.google.cloud.metastore.v1beta.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.UpdateServiceRequest} UpdateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.service != null && message.hasOwnProperty("service")) {
                                var error = $root.google.cloud.metastore.v1beta.Service.verify(message.service);
                                if (error)
                                    return "service." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.UpdateServiceRequest} UpdateServiceRequest
                         */
                        UpdateServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.UpdateServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.UpdateServiceRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.UpdateServiceRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.service != null) {
                                if (typeof object.service !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.UpdateServiceRequest.service: object expected");
                                message.service = $root.google.cloud.metastore.v1beta.Service.fromObject(object.service);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.UpdateServiceRequest} message UpdateServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.service = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = $root.google.cloud.metastore.v1beta.Service.toObject(message.service, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.UpdateServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.UpdateServiceRequest";
                        };
    
                        return UpdateServiceRequest;
                    })();
    
                    v1beta.DeleteServiceRequest = (function() {
    
                        /**
                         * Properties of a DeleteServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IDeleteServiceRequest
                         * @property {string|null} [name] DeleteServiceRequest name
                         * @property {string|null} [requestId] DeleteServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a DeleteServiceRequest.
                         * @implements IDeleteServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IDeleteServiceRequest=} [properties] Properties to set
                         */
                        function DeleteServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.name = "";
    
                        /**
                         * DeleteServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.DeleteServiceRequest} DeleteServiceRequest instance
                         */
                        DeleteServiceRequest.create = function create(properties) {
                            return new DeleteServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.DeleteServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.DeleteServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.DeleteServiceRequest} DeleteServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.DeleteServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.DeleteServiceRequest} DeleteServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.DeleteServiceRequest} DeleteServiceRequest
                         */
                        DeleteServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.DeleteServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.DeleteServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.DeleteServiceRequest} message DeleteServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.DeleteServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.DeleteServiceRequest";
                        };
    
                        return DeleteServiceRequest;
                    })();
    
                    v1beta.ListMetadataImportsRequest = (function() {
    
                        /**
                         * Properties of a ListMetadataImportsRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IListMetadataImportsRequest
                         * @property {string|null} [parent] ListMetadataImportsRequest parent
                         * @property {number|null} [pageSize] ListMetadataImportsRequest pageSize
                         * @property {string|null} [pageToken] ListMetadataImportsRequest pageToken
                         * @property {string|null} [filter] ListMetadataImportsRequest filter
                         * @property {string|null} [orderBy] ListMetadataImportsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListMetadataImportsRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a ListMetadataImportsRequest.
                         * @implements IListMetadataImportsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsRequest=} [properties] Properties to set
                         */
                        function ListMetadataImportsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMetadataImportsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.parent = "";
    
                        /**
                         * ListMetadataImportsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListMetadataImportsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.pageToken = "";
    
                        /**
                         * ListMetadataImportsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.filter = "";
    
                        /**
                         * ListMetadataImportsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @instance
                         */
                        ListMetadataImportsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListMetadataImportsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ListMetadataImportsRequest} ListMetadataImportsRequest instance
                         */
                        ListMetadataImportsRequest.create = function create(properties) {
                            return new ListMetadataImportsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.ListMetadataImportsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsRequest} message ListMetadataImportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ListMetadataImportsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsRequest} message ListMetadataImportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMetadataImportsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ListMetadataImportsRequest} ListMetadataImportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ListMetadataImportsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMetadataImportsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ListMetadataImportsRequest} ListMetadataImportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMetadataImportsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMetadataImportsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListMetadataImportsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ListMetadataImportsRequest} ListMetadataImportsRequest
                         */
                        ListMetadataImportsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ListMetadataImportsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ListMetadataImportsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMetadataImportsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ListMetadataImportsRequest} message ListMetadataImportsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMetadataImportsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListMetadataImportsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMetadataImportsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListMetadataImportsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListMetadataImportsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ListMetadataImportsRequest";
                        };
    
                        return ListMetadataImportsRequest;
                    })();
    
                    v1beta.ListMetadataImportsResponse = (function() {
    
                        /**
                         * Properties of a ListMetadataImportsResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IListMetadataImportsResponse
                         * @property {Array.<google.cloud.metastore.v1beta.IMetadataImport>|null} [metadataImports] ListMetadataImportsResponse metadataImports
                         * @property {string|null} [nextPageToken] ListMetadataImportsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListMetadataImportsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListMetadataImportsResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a ListMetadataImportsResponse.
                         * @implements IListMetadataImportsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsResponse=} [properties] Properties to set
                         */
                        function ListMetadataImportsResponse(properties) {
                            this.metadataImports = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMetadataImportsResponse metadataImports.
                         * @member {Array.<google.cloud.metastore.v1beta.IMetadataImport>} metadataImports
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.metadataImports = $util.emptyArray;
    
                        /**
                         * ListMetadataImportsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListMetadataImportsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @instance
                         */
                        ListMetadataImportsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListMetadataImportsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ListMetadataImportsResponse} ListMetadataImportsResponse instance
                         */
                        ListMetadataImportsResponse.create = function create(properties) {
                            return new ListMetadataImportsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsResponse message. Does not implicitly {@link google.cloud.metastore.v1beta.ListMetadataImportsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsResponse} message ListMetadataImportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metadataImports != null && message.metadataImports.length)
                                for (var i = 0; i < message.metadataImports.length; ++i)
                                    $root.google.cloud.metastore.v1beta.MetadataImport.encode(message.metadataImports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMetadataImportsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ListMetadataImportsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListMetadataImportsResponse} message ListMetadataImportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMetadataImportsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMetadataImportsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ListMetadataImportsResponse} ListMetadataImportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ListMetadataImportsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.metadataImports && message.metadataImports.length))
                                            message.metadataImports = [];
                                        message.metadataImports.push($root.google.cloud.metastore.v1beta.MetadataImport.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMetadataImportsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ListMetadataImportsResponse} ListMetadataImportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMetadataImportsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMetadataImportsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMetadataImportsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metadataImports != null && message.hasOwnProperty("metadataImports")) {
                                if (!Array.isArray(message.metadataImports))
                                    return "metadataImports: array expected";
                                for (var i = 0; i < message.metadataImports.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.MetadataImport.verify(message.metadataImports[i]);
                                    if (error)
                                        return "metadataImports." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListMetadataImportsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ListMetadataImportsResponse} ListMetadataImportsResponse
                         */
                        ListMetadataImportsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ListMetadataImportsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ListMetadataImportsResponse();
                            if (object.metadataImports) {
                                if (!Array.isArray(object.metadataImports))
                                    throw TypeError(".google.cloud.metastore.v1beta.ListMetadataImportsResponse.metadataImports: array expected");
                                message.metadataImports = [];
                                for (var i = 0; i < object.metadataImports.length; ++i) {
                                    if (typeof object.metadataImports[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.ListMetadataImportsResponse.metadataImports: object expected");
                                    message.metadataImports[i] = $root.google.cloud.metastore.v1beta.MetadataImport.fromObject(object.metadataImports[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1beta.ListMetadataImportsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMetadataImportsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.ListMetadataImportsResponse} message ListMetadataImportsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMetadataImportsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.metadataImports = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.metadataImports && message.metadataImports.length) {
                                object.metadataImports = [];
                                for (var j = 0; j < message.metadataImports.length; ++j)
                                    object.metadataImports[j] = $root.google.cloud.metastore.v1beta.MetadataImport.toObject(message.metadataImports[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListMetadataImportsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMetadataImportsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListMetadataImportsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ListMetadataImportsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListMetadataImportsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ListMetadataImportsResponse";
                        };
    
                        return ListMetadataImportsResponse;
                    })();
    
                    v1beta.GetMetadataImportRequest = (function() {
    
                        /**
                         * Properties of a GetMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IGetMetadataImportRequest
                         * @property {string|null} [name] GetMetadataImportRequest name
                         */
    
                        /**
                         * Constructs a new GetMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a GetMetadataImportRequest.
                         * @implements IGetMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IGetMetadataImportRequest=} [properties] Properties to set
                         */
                        function GetMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetMetadataImportRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @instance
                         */
                        GetMetadataImportRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.GetMetadataImportRequest} GetMetadataImportRequest instance
                         */
                        GetMetadataImportRequest.create = function create(properties) {
                            return new GetMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.GetMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetMetadataImportRequest} message GetMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.GetMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetMetadataImportRequest} message GetMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.GetMetadataImportRequest} GetMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.GetMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.GetMetadataImportRequest} GetMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.GetMetadataImportRequest} GetMetadataImportRequest
                         */
                        GetMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.GetMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.GetMetadataImportRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.GetMetadataImportRequest} message GetMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.GetMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.GetMetadataImportRequest";
                        };
    
                        return GetMetadataImportRequest;
                    })();
    
                    v1beta.CreateMetadataImportRequest = (function() {
    
                        /**
                         * Properties of a CreateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface ICreateMetadataImportRequest
                         * @property {string|null} [parent] CreateMetadataImportRequest parent
                         * @property {string|null} [metadataImportId] CreateMetadataImportRequest metadataImportId
                         * @property {google.cloud.metastore.v1beta.IMetadataImport|null} [metadataImport] CreateMetadataImportRequest metadataImport
                         * @property {string|null} [requestId] CreateMetadataImportRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a CreateMetadataImportRequest.
                         * @implements ICreateMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.ICreateMetadataImportRequest=} [properties] Properties to set
                         */
                        function CreateMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateMetadataImportRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.parent = "";
    
                        /**
                         * CreateMetadataImportRequest metadataImportId.
                         * @member {string} metadataImportId
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.metadataImportId = "";
    
                        /**
                         * CreateMetadataImportRequest metadataImport.
                         * @member {google.cloud.metastore.v1beta.IMetadataImport|null|undefined} metadataImport
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.metadataImport = null;
    
                        /**
                         * CreateMetadataImportRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @instance
                         */
                        CreateMetadataImportRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.CreateMetadataImportRequest} CreateMetadataImportRequest instance
                         */
                        CreateMetadataImportRequest.create = function create(properties) {
                            return new CreateMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.CreateMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateMetadataImportRequest} message CreateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.metadataImportId != null && Object.hasOwnProperty.call(message, "metadataImportId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataImportId);
                            if (message.metadataImport != null && Object.hasOwnProperty.call(message, "metadataImport"))
                                $root.google.cloud.metastore.v1beta.MetadataImport.encode(message.metadataImport, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.CreateMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateMetadataImportRequest} message CreateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.CreateMetadataImportRequest} CreateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.CreateMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.metadataImportId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.metadataImport = $root.google.cloud.metastore.v1beta.MetadataImport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.CreateMetadataImportRequest} CreateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.metadataImportId != null && message.hasOwnProperty("metadataImportId"))
                                if (!$util.isString(message.metadataImportId))
                                    return "metadataImportId: string expected";
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport")) {
                                var error = $root.google.cloud.metastore.v1beta.MetadataImport.verify(message.metadataImport);
                                if (error)
                                    return "metadataImport." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.CreateMetadataImportRequest} CreateMetadataImportRequest
                         */
                        CreateMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.CreateMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.CreateMetadataImportRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.metadataImportId != null)
                                message.metadataImportId = String(object.metadataImportId);
                            if (object.metadataImport != null) {
                                if (typeof object.metadataImport !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.CreateMetadataImportRequest.metadataImport: object expected");
                                message.metadataImport = $root.google.cloud.metastore.v1beta.MetadataImport.fromObject(object.metadataImport);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.CreateMetadataImportRequest} message CreateMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.metadataImportId = "";
                                object.metadataImport = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.metadataImportId != null && message.hasOwnProperty("metadataImportId"))
                                object.metadataImportId = message.metadataImportId;
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport"))
                                object.metadataImport = $root.google.cloud.metastore.v1beta.MetadataImport.toObject(message.metadataImport, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.CreateMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.CreateMetadataImportRequest";
                        };
    
                        return CreateMetadataImportRequest;
                    })();
    
                    v1beta.UpdateMetadataImportRequest = (function() {
    
                        /**
                         * Properties of an UpdateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IUpdateMetadataImportRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateMetadataImportRequest updateMask
                         * @property {google.cloud.metastore.v1beta.IMetadataImport|null} [metadataImport] UpdateMetadataImportRequest metadataImport
                         * @property {string|null} [requestId] UpdateMetadataImportRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateMetadataImportRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an UpdateMetadataImportRequest.
                         * @implements IUpdateMetadataImportRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IUpdateMetadataImportRequest=} [properties] Properties to set
                         */
                        function UpdateMetadataImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateMetadataImportRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateMetadataImportRequest metadataImport.
                         * @member {google.cloud.metastore.v1beta.IMetadataImport|null|undefined} metadataImport
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.metadataImport = null;
    
                        /**
                         * UpdateMetadataImportRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @instance
                         */
                        UpdateMetadataImportRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateMetadataImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateMetadataImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.UpdateMetadataImportRequest} UpdateMetadataImportRequest instance
                         */
                        UpdateMetadataImportRequest.create = function create(properties) {
                            return new UpdateMetadataImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateMetadataImportRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.UpdateMetadataImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateMetadataImportRequest} message UpdateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMetadataImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metadataImport != null && Object.hasOwnProperty.call(message, "metadataImport"))
                                $root.google.cloud.metastore.v1beta.MetadataImport.encode(message.metadataImport, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateMetadataImportRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.UpdateMetadataImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateMetadataImportRequest} message UpdateMetadataImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMetadataImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateMetadataImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMetadataImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.UpdateMetadataImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.metadataImport = $root.google.cloud.metastore.v1beta.MetadataImport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateMetadataImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMetadataImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateMetadataImportRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateMetadataImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport")) {
                                var error = $root.google.cloud.metastore.v1beta.MetadataImport.verify(message.metadataImport);
                                if (error)
                                    return "metadataImport." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateMetadataImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.UpdateMetadataImportRequest} UpdateMetadataImportRequest
                         */
                        UpdateMetadataImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.UpdateMetadataImportRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.UpdateMetadataImportRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.UpdateMetadataImportRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.metadataImport != null) {
                                if (typeof object.metadataImport !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.UpdateMetadataImportRequest.metadataImport: object expected");
                                message.metadataImport = $root.google.cloud.metastore.v1beta.MetadataImport.fromObject(object.metadataImport);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateMetadataImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.UpdateMetadataImportRequest} message UpdateMetadataImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateMetadataImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.metadataImport = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.metadataImport != null && message.hasOwnProperty("metadataImport"))
                                object.metadataImport = $root.google.cloud.metastore.v1beta.MetadataImport.toObject(message.metadataImport, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateMetadataImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateMetadataImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateMetadataImportRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.UpdateMetadataImportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateMetadataImportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.UpdateMetadataImportRequest";
                        };
    
                        return UpdateMetadataImportRequest;
                    })();
    
                    v1beta.ListBackupsRequest = (function() {
    
                        /**
                         * Properties of a ListBackupsRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IListBackupsRequest
                         * @property {string|null} [parent] ListBackupsRequest parent
                         * @property {number|null} [pageSize] ListBackupsRequest pageSize
                         * @property {string|null} [pageToken] ListBackupsRequest pageToken
                         * @property {string|null} [filter] ListBackupsRequest filter
                         * @property {string|null} [orderBy] ListBackupsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListBackupsRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a ListBackupsRequest.
                         * @implements IListBackupsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IListBackupsRequest=} [properties] Properties to set
                         */
                        function ListBackupsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBackupsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.parent = "";
    
                        /**
                         * ListBackupsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListBackupsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.pageToken = "";
    
                        /**
                         * ListBackupsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.filter = "";
    
                        /**
                         * ListBackupsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @instance
                         */
                        ListBackupsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListBackupsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListBackupsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ListBackupsRequest} ListBackupsRequest instance
                         */
                        ListBackupsRequest.create = function create(properties) {
                            return new ListBackupsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListBackupsRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.ListBackupsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListBackupsRequest} message ListBackupsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBackupsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ListBackupsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListBackupsRequest} message ListBackupsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBackupsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ListBackupsRequest} ListBackupsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ListBackupsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBackupsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ListBackupsRequest} ListBackupsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBackupsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBackupsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBackupsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ListBackupsRequest} ListBackupsRequest
                         */
                        ListBackupsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ListBackupsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ListBackupsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBackupsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ListBackupsRequest} message ListBackupsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBackupsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListBackupsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBackupsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBackupsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ListBackupsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBackupsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ListBackupsRequest";
                        };
    
                        return ListBackupsRequest;
                    })();
    
                    v1beta.ListBackupsResponse = (function() {
    
                        /**
                         * Properties of a ListBackupsResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IListBackupsResponse
                         * @property {Array.<google.cloud.metastore.v1beta.IBackup>|null} [backups] ListBackupsResponse backups
                         * @property {string|null} [nextPageToken] ListBackupsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListBackupsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListBackupsResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a ListBackupsResponse.
                         * @implements IListBackupsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IListBackupsResponse=} [properties] Properties to set
                         */
                        function ListBackupsResponse(properties) {
                            this.backups = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBackupsResponse backups.
                         * @member {Array.<google.cloud.metastore.v1beta.IBackup>} backups
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.backups = $util.emptyArray;
    
                        /**
                         * ListBackupsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListBackupsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @instance
                         */
                        ListBackupsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListBackupsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListBackupsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ListBackupsResponse} ListBackupsResponse instance
                         */
                        ListBackupsResponse.create = function create(properties) {
                            return new ListBackupsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListBackupsResponse message. Does not implicitly {@link google.cloud.metastore.v1beta.ListBackupsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListBackupsResponse} message ListBackupsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.backups != null && message.backups.length)
                                for (var i = 0; i < message.backups.length; ++i)
                                    $root.google.cloud.metastore.v1beta.Backup.encode(message.backups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBackupsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ListBackupsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListBackupsResponse} message ListBackupsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBackupsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBackupsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ListBackupsResponse} ListBackupsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ListBackupsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.backups && message.backups.length))
                                            message.backups = [];
                                        message.backups.push($root.google.cloud.metastore.v1beta.Backup.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBackupsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ListBackupsResponse} ListBackupsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBackupsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBackupsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBackupsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.backups != null && message.hasOwnProperty("backups")) {
                                if (!Array.isArray(message.backups))
                                    return "backups: array expected";
                                for (var i = 0; i < message.backups.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.Backup.verify(message.backups[i]);
                                    if (error)
                                        return "backups." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListBackupsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ListBackupsResponse} ListBackupsResponse
                         */
                        ListBackupsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ListBackupsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ListBackupsResponse();
                            if (object.backups) {
                                if (!Array.isArray(object.backups))
                                    throw TypeError(".google.cloud.metastore.v1beta.ListBackupsResponse.backups: array expected");
                                message.backups = [];
                                for (var i = 0; i < object.backups.length; ++i) {
                                    if (typeof object.backups[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.ListBackupsResponse.backups: object expected");
                                    message.backups[i] = $root.google.cloud.metastore.v1beta.Backup.fromObject(object.backups[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1beta.ListBackupsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBackupsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.ListBackupsResponse} message ListBackupsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBackupsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.backups = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.backups && message.backups.length) {
                                object.backups = [];
                                for (var j = 0; j < message.backups.length; ++j)
                                    object.backups[j] = $root.google.cloud.metastore.v1beta.Backup.toObject(message.backups[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListBackupsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBackupsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBackupsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ListBackupsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBackupsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ListBackupsResponse";
                        };
    
                        return ListBackupsResponse;
                    })();
    
                    v1beta.GetBackupRequest = (function() {
    
                        /**
                         * Properties of a GetBackupRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IGetBackupRequest
                         * @property {string|null} [name] GetBackupRequest name
                         */
    
                        /**
                         * Constructs a new GetBackupRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a GetBackupRequest.
                         * @implements IGetBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IGetBackupRequest=} [properties] Properties to set
                         */
                        function GetBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetBackupRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @instance
                         */
                        GetBackupRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.GetBackupRequest} GetBackupRequest instance
                         */
                        GetBackupRequest.create = function create(properties) {
                            return new GetBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.GetBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetBackupRequest} message GetBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.GetBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetBackupRequest} message GetBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.GetBackupRequest} GetBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.GetBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.GetBackupRequest} GetBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.GetBackupRequest} GetBackupRequest
                         */
                        GetBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.GetBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.GetBackupRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.GetBackupRequest} message GetBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.GetBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.GetBackupRequest";
                        };
    
                        return GetBackupRequest;
                    })();
    
                    v1beta.CreateBackupRequest = (function() {
    
                        /**
                         * Properties of a CreateBackupRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface ICreateBackupRequest
                         * @property {string|null} [parent] CreateBackupRequest parent
                         * @property {string|null} [backupId] CreateBackupRequest backupId
                         * @property {google.cloud.metastore.v1beta.IBackup|null} [backup] CreateBackupRequest backup
                         * @property {string|null} [requestId] CreateBackupRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateBackupRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a CreateBackupRequest.
                         * @implements ICreateBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.ICreateBackupRequest=} [properties] Properties to set
                         */
                        function CreateBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateBackupRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.parent = "";
    
                        /**
                         * CreateBackupRequest backupId.
                         * @member {string} backupId
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.backupId = "";
    
                        /**
                         * CreateBackupRequest backup.
                         * @member {google.cloud.metastore.v1beta.IBackup|null|undefined} backup
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.backup = null;
    
                        /**
                         * CreateBackupRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @instance
                         */
                        CreateBackupRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.CreateBackupRequest} CreateBackupRequest instance
                         */
                        CreateBackupRequest.create = function create(properties) {
                            return new CreateBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.CreateBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateBackupRequest} message CreateBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.backupId != null && Object.hasOwnProperty.call(message, "backupId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.backupId);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                $root.google.cloud.metastore.v1beta.Backup.encode(message.backup, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.CreateBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateBackupRequest} message CreateBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.CreateBackupRequest} CreateBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.CreateBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.backupId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.backup = $root.google.cloud.metastore.v1beta.Backup.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.CreateBackupRequest} CreateBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.backupId != null && message.hasOwnProperty("backupId"))
                                if (!$util.isString(message.backupId))
                                    return "backupId: string expected";
                            if (message.backup != null && message.hasOwnProperty("backup")) {
                                var error = $root.google.cloud.metastore.v1beta.Backup.verify(message.backup);
                                if (error)
                                    return "backup." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.CreateBackupRequest} CreateBackupRequest
                         */
                        CreateBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.CreateBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.CreateBackupRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.backupId != null)
                                message.backupId = String(object.backupId);
                            if (object.backup != null) {
                                if (typeof object.backup !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.CreateBackupRequest.backup: object expected");
                                message.backup = $root.google.cloud.metastore.v1beta.Backup.fromObject(object.backup);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.CreateBackupRequest} message CreateBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.backupId = "";
                                object.backup = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.backupId != null && message.hasOwnProperty("backupId"))
                                object.backupId = message.backupId;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = $root.google.cloud.metastore.v1beta.Backup.toObject(message.backup, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.CreateBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.CreateBackupRequest";
                        };
    
                        return CreateBackupRequest;
                    })();
    
                    v1beta.DeleteBackupRequest = (function() {
    
                        /**
                         * Properties of a DeleteBackupRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IDeleteBackupRequest
                         * @property {string|null} [name] DeleteBackupRequest name
                         * @property {string|null} [requestId] DeleteBackupRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteBackupRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a DeleteBackupRequest.
                         * @implements IDeleteBackupRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IDeleteBackupRequest=} [properties] Properties to set
                         */
                        function DeleteBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteBackupRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @instance
                         */
                        DeleteBackupRequest.prototype.name = "";
    
                        /**
                         * DeleteBackupRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @instance
                         */
                        DeleteBackupRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.DeleteBackupRequest} DeleteBackupRequest instance
                         */
                        DeleteBackupRequest.create = function create(properties) {
                            return new DeleteBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteBackupRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.DeleteBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteBackupRequest} message DeleteBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteBackupRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.DeleteBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteBackupRequest} message DeleteBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.DeleteBackupRequest} DeleteBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.DeleteBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.DeleteBackupRequest} DeleteBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.DeleteBackupRequest} DeleteBackupRequest
                         */
                        DeleteBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.DeleteBackupRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.DeleteBackupRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.DeleteBackupRequest} message DeleteBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteBackupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.DeleteBackupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteBackupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.DeleteBackupRequest";
                        };
    
                        return DeleteBackupRequest;
                    })();
    
                    v1beta.ExportMetadataRequest = (function() {
    
                        /**
                         * Properties of an ExportMetadataRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IExportMetadataRequest
                         * @property {string|null} [destinationGcsFolder] ExportMetadataRequest destinationGcsFolder
                         * @property {string|null} [service] ExportMetadataRequest service
                         * @property {string|null} [requestId] ExportMetadataRequest requestId
                         * @property {google.cloud.metastore.v1beta.DatabaseDumpSpec.Type|null} [databaseDumpType] ExportMetadataRequest databaseDumpType
                         */
    
                        /**
                         * Constructs a new ExportMetadataRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an ExportMetadataRequest.
                         * @implements IExportMetadataRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IExportMetadataRequest=} [properties] Properties to set
                         */
                        function ExportMetadataRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExportMetadataRequest destinationGcsFolder.
                         * @member {string|null|undefined} destinationGcsFolder
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.destinationGcsFolder = null;
    
                        /**
                         * ExportMetadataRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.service = "";
    
                        /**
                         * ExportMetadataRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.requestId = "";
    
                        /**
                         * ExportMetadataRequest databaseDumpType.
                         * @member {google.cloud.metastore.v1beta.DatabaseDumpSpec.Type} databaseDumpType
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @instance
                         */
                        ExportMetadataRequest.prototype.databaseDumpType = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ExportMetadataRequest destination.
                         * @member {"destinationGcsFolder"|undefined} destination
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @instance
                         */
                        Object.defineProperty(ExportMetadataRequest.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["destinationGcsFolder"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ExportMetadataRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IExportMetadataRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ExportMetadataRequest} ExportMetadataRequest instance
                         */
                        ExportMetadataRequest.create = function create(properties) {
                            return new ExportMetadataRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ExportMetadataRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.ExportMetadataRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IExportMetadataRequest} message ExportMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportMetadataRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.destinationGcsFolder != null && Object.hasOwnProperty.call(message, "destinationGcsFolder"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.destinationGcsFolder);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.databaseDumpType != null && Object.hasOwnProperty.call(message, "databaseDumpType"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.databaseDumpType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExportMetadataRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ExportMetadataRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IExportMetadataRequest} message ExportMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportMetadataRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExportMetadataRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ExportMetadataRequest} ExportMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportMetadataRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ExportMetadataRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.destinationGcsFolder = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.databaseDumpType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExportMetadataRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ExportMetadataRequest} ExportMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportMetadataRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExportMetadataRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExportMetadataRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.destinationGcsFolder != null && message.hasOwnProperty("destinationGcsFolder")) {
                                properties.destination = 1;
                                if (!$util.isString(message.destinationGcsFolder))
                                    return "destinationGcsFolder: string expected";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                switch (message.databaseDumpType) {
                                default:
                                    return "databaseDumpType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an ExportMetadataRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ExportMetadataRequest} ExportMetadataRequest
                         */
                        ExportMetadataRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ExportMetadataRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ExportMetadataRequest();
                            if (object.destinationGcsFolder != null)
                                message.destinationGcsFolder = String(object.destinationGcsFolder);
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            switch (object.databaseDumpType) {
                            default:
                                if (typeof object.databaseDumpType === "number") {
                                    message.databaseDumpType = object.databaseDumpType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.databaseDumpType = 0;
                                break;
                            case "MYSQL":
                            case 1:
                                message.databaseDumpType = 1;
                                break;
                            case "AVRO":
                            case 2:
                                message.databaseDumpType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExportMetadataRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ExportMetadataRequest} message ExportMetadataRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExportMetadataRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.requestId = "";
                                object.databaseDumpType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.destinationGcsFolder != null && message.hasOwnProperty("destinationGcsFolder")) {
                                object.destinationGcsFolder = message.destinationGcsFolder;
                                if (options.oneofs)
                                    object.destination = "destinationGcsFolder";
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.databaseDumpType != null && message.hasOwnProperty("databaseDumpType"))
                                object.databaseDumpType = options.enums === String ? $root.google.cloud.metastore.v1beta.DatabaseDumpSpec.Type[message.databaseDumpType] === undefined ? message.databaseDumpType : $root.google.cloud.metastore.v1beta.DatabaseDumpSpec.Type[message.databaseDumpType] : message.databaseDumpType;
                            return object;
                        };
    
                        /**
                         * Converts this ExportMetadataRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExportMetadataRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExportMetadataRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ExportMetadataRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExportMetadataRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ExportMetadataRequest";
                        };
    
                        return ExportMetadataRequest;
                    })();
    
                    v1beta.RestoreServiceRequest = (function() {
    
                        /**
                         * Properties of a RestoreServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IRestoreServiceRequest
                         * @property {string|null} [service] RestoreServiceRequest service
                         * @property {string|null} [backup] RestoreServiceRequest backup
                         * @property {google.cloud.metastore.v1beta.Restore.RestoreType|null} [restoreType] RestoreServiceRequest restoreType
                         * @property {string|null} [requestId] RestoreServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new RestoreServiceRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a RestoreServiceRequest.
                         * @implements IRestoreServiceRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IRestoreServiceRequest=} [properties] Properties to set
                         */
                        function RestoreServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RestoreServiceRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.service = "";
    
                        /**
                         * RestoreServiceRequest backup.
                         * @member {string} backup
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.backup = "";
    
                        /**
                         * RestoreServiceRequest restoreType.
                         * @member {google.cloud.metastore.v1beta.Restore.RestoreType} restoreType
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.restoreType = 0;
    
                        /**
                         * RestoreServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @instance
                         */
                        RestoreServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new RestoreServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRestoreServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.RestoreServiceRequest} RestoreServiceRequest instance
                         */
                        RestoreServiceRequest.create = function create(properties) {
                            return new RestoreServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RestoreServiceRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.RestoreServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRestoreServiceRequest} message RestoreServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RestoreServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.backup != null && Object.hasOwnProperty.call(message, "backup"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.backup);
                            if (message.restoreType != null && Object.hasOwnProperty.call(message, "restoreType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.restoreType);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RestoreServiceRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.RestoreServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRestoreServiceRequest} message RestoreServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RestoreServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RestoreServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.RestoreServiceRequest} RestoreServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RestoreServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.RestoreServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.backup = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.restoreType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RestoreServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.RestoreServiceRequest} RestoreServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RestoreServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RestoreServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RestoreServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                if (!$util.isString(message.backup))
                                    return "backup: string expected";
                            if (message.restoreType != null && message.hasOwnProperty("restoreType"))
                                switch (message.restoreType) {
                                default:
                                    return "restoreType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RestoreServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.RestoreServiceRequest} RestoreServiceRequest
                         */
                        RestoreServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.RestoreServiceRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.RestoreServiceRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.backup != null)
                                message.backup = String(object.backup);
                            switch (object.restoreType) {
                            default:
                                if (typeof object.restoreType === "number") {
                                    message.restoreType = object.restoreType;
                                    break;
                                }
                                break;
                            case "RESTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.restoreType = 0;
                                break;
                            case "FULL":
                            case 1:
                                message.restoreType = 1;
                                break;
                            case "METADATA_ONLY":
                            case 2:
                                message.restoreType = 2;
                                break;
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RestoreServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.RestoreServiceRequest} message RestoreServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RestoreServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.backup = "";
                                object.restoreType = options.enums === String ? "RESTORE_TYPE_UNSPECIFIED" : 0;
                                object.requestId = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.backup != null && message.hasOwnProperty("backup"))
                                object.backup = message.backup;
                            if (message.restoreType != null && message.hasOwnProperty("restoreType"))
                                object.restoreType = options.enums === String ? $root.google.cloud.metastore.v1beta.Restore.RestoreType[message.restoreType] === undefined ? message.restoreType : $root.google.cloud.metastore.v1beta.Restore.RestoreType[message.restoreType] : message.restoreType;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this RestoreServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RestoreServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RestoreServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.RestoreServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RestoreServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.RestoreServiceRequest";
                        };
    
                        return RestoreServiceRequest;
                    })();
    
                    v1beta.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1beta.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.metastore.v1beta.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1beta.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1beta.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1beta.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1beta.LocationMetadata = (function() {
    
                        /**
                         * Properties of a LocationMetadata.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface ILocationMetadata
                         * @property {Array.<google.cloud.metastore.v1beta.LocationMetadata.IHiveMetastoreVersion>|null} [supportedHiveMetastoreVersions] LocationMetadata supportedHiveMetastoreVersions
                         */
    
                        /**
                         * Constructs a new LocationMetadata.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a LocationMetadata.
                         * @implements ILocationMetadata
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.ILocationMetadata=} [properties] Properties to set
                         */
                        function LocationMetadata(properties) {
                            this.supportedHiveMetastoreVersions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationMetadata supportedHiveMetastoreVersions.
                         * @member {Array.<google.cloud.metastore.v1beta.LocationMetadata.IHiveMetastoreVersion>} supportedHiveMetastoreVersions
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @instance
                         */
                        LocationMetadata.prototype.supportedHiveMetastoreVersions = $util.emptyArray;
    
                        /**
                         * Creates a new LocationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1beta.ILocationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.LocationMetadata} LocationMetadata instance
                         */
                        LocationMetadata.create = function create(properties) {
                            return new LocationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message. Does not implicitly {@link google.cloud.metastore.v1beta.LocationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1beta.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.supportedHiveMetastoreVersions != null && message.supportedHiveMetastoreVersions.length)
                                for (var i = 0; i < message.supportedHiveMetastoreVersions.length; ++i)
                                    $root.google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion.encode(message.supportedHiveMetastoreVersions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.LocationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1beta.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.LocationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.supportedHiveMetastoreVersions && message.supportedHiveMetastoreVersions.length))
                                            message.supportedHiveMetastoreVersions = [];
                                        message.supportedHiveMetastoreVersions.push($root.google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationMetadata message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.supportedHiveMetastoreVersions != null && message.hasOwnProperty("supportedHiveMetastoreVersions")) {
                                if (!Array.isArray(message.supportedHiveMetastoreVersions))
                                    return "supportedHiveMetastoreVersions: array expected";
                                for (var i = 0; i < message.supportedHiveMetastoreVersions.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion.verify(message.supportedHiveMetastoreVersions[i]);
                                    if (error)
                                        return "supportedHiveMetastoreVersions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LocationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.LocationMetadata} LocationMetadata
                         */
                        LocationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.LocationMetadata)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.LocationMetadata();
                            if (object.supportedHiveMetastoreVersions) {
                                if (!Array.isArray(object.supportedHiveMetastoreVersions))
                                    throw TypeError(".google.cloud.metastore.v1beta.LocationMetadata.supportedHiveMetastoreVersions: array expected");
                                message.supportedHiveMetastoreVersions = [];
                                for (var i = 0; i < object.supportedHiveMetastoreVersions.length; ++i) {
                                    if (typeof object.supportedHiveMetastoreVersions[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.LocationMetadata.supportedHiveMetastoreVersions: object expected");
                                    message.supportedHiveMetastoreVersions[i] = $root.google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion.fromObject(object.supportedHiveMetastoreVersions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {google.cloud.metastore.v1beta.LocationMetadata} message LocationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.supportedHiveMetastoreVersions = [];
                            if (message.supportedHiveMetastoreVersions && message.supportedHiveMetastoreVersions.length) {
                                object.supportedHiveMetastoreVersions = [];
                                for (var j = 0; j < message.supportedHiveMetastoreVersions.length; ++j)
                                    object.supportedHiveMetastoreVersions[j] = $root.google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion.toObject(message.supportedHiveMetastoreVersions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LocationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.LocationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.LocationMetadata";
                        };
    
                        LocationMetadata.HiveMetastoreVersion = (function() {
    
                            /**
                             * Properties of a HiveMetastoreVersion.
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata
                             * @interface IHiveMetastoreVersion
                             * @property {string|null} [version] HiveMetastoreVersion version
                             * @property {boolean|null} [isDefault] HiveMetastoreVersion isDefault
                             */
    
                            /**
                             * Constructs a new HiveMetastoreVersion.
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata
                             * @classdesc Represents a HiveMetastoreVersion.
                             * @implements IHiveMetastoreVersion
                             * @constructor
                             * @param {google.cloud.metastore.v1beta.LocationMetadata.IHiveMetastoreVersion=} [properties] Properties to set
                             */
                            function HiveMetastoreVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HiveMetastoreVersion version.
                             * @member {string} version
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             */
                            HiveMetastoreVersion.prototype.version = "";
    
                            /**
                             * HiveMetastoreVersion isDefault.
                             * @member {boolean} isDefault
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             */
                            HiveMetastoreVersion.prototype.isDefault = false;
    
                            /**
                             * Creates a new HiveMetastoreVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1beta.LocationMetadata.IHiveMetastoreVersion=} [properties] Properties to set
                             * @returns {google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion instance
                             */
                            HiveMetastoreVersion.create = function create(properties) {
                                return new HiveMetastoreVersion(properties);
                            };
    
                            /**
                             * Encodes the specified HiveMetastoreVersion message. Does not implicitly {@link google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1beta.LocationMetadata.IHiveMetastoreVersion} message HiveMetastoreVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HiveMetastoreVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.isDefault != null && Object.hasOwnProperty.call(message, "isDefault"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isDefault);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HiveMetastoreVersion message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1beta.LocationMetadata.IHiveMetastoreVersion} message HiveMetastoreVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HiveMetastoreVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HiveMetastoreVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HiveMetastoreVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.isDefault = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HiveMetastoreVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HiveMetastoreVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HiveMetastoreVersion message.
                             * @function verify
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HiveMetastoreVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.isDefault != null && message.hasOwnProperty("isDefault"))
                                    if (typeof message.isDefault !== "boolean")
                                        return "isDefault: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a HiveMetastoreVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion} HiveMetastoreVersion
                             */
                            HiveMetastoreVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion)
                                    return object;
                                var message = new $root.google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.isDefault != null)
                                    message.isDefault = Boolean(object.isDefault);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HiveMetastoreVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion} message HiveMetastoreVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HiveMetastoreVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = "";
                                    object.isDefault = false;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.isDefault != null && message.hasOwnProperty("isDefault"))
                                    object.isDefault = message.isDefault;
                                return object;
                            };
    
                            /**
                             * Converts this HiveMetastoreVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HiveMetastoreVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for HiveMetastoreVersion
                             * @function getTypeUrl
                             * @memberof google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            HiveMetastoreVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.metastore.v1beta.LocationMetadata.HiveMetastoreVersion";
                            };
    
                            return HiveMetastoreVersion;
                        })();
    
                        return LocationMetadata;
                    })();
    
                    v1beta.DatabaseDumpSpec = (function() {
    
                        /**
                         * Properties of a DatabaseDumpSpec.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IDatabaseDumpSpec
                         */
    
                        /**
                         * Constructs a new DatabaseDumpSpec.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a DatabaseDumpSpec.
                         * @implements IDatabaseDumpSpec
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IDatabaseDumpSpec=} [properties] Properties to set
                         */
                        function DatabaseDumpSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new DatabaseDumpSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDatabaseDumpSpec=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.DatabaseDumpSpec} DatabaseDumpSpec instance
                         */
                        DatabaseDumpSpec.create = function create(properties) {
                            return new DatabaseDumpSpec(properties);
                        };
    
                        /**
                         * Encodes the specified DatabaseDumpSpec message. Does not implicitly {@link google.cloud.metastore.v1beta.DatabaseDumpSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDatabaseDumpSpec} message DatabaseDumpSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseDumpSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DatabaseDumpSpec message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.DatabaseDumpSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDatabaseDumpSpec} message DatabaseDumpSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseDumpSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DatabaseDumpSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.DatabaseDumpSpec} DatabaseDumpSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseDumpSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.DatabaseDumpSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DatabaseDumpSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.DatabaseDumpSpec} DatabaseDumpSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseDumpSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DatabaseDumpSpec message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DatabaseDumpSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a DatabaseDumpSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.DatabaseDumpSpec} DatabaseDumpSpec
                         */
                        DatabaseDumpSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.DatabaseDumpSpec)
                                return object;
                            return new $root.google.cloud.metastore.v1beta.DatabaseDumpSpec();
                        };
    
                        /**
                         * Creates a plain object from a DatabaseDumpSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {google.cloud.metastore.v1beta.DatabaseDumpSpec} message DatabaseDumpSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DatabaseDumpSpec.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this DatabaseDumpSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DatabaseDumpSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DatabaseDumpSpec
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.DatabaseDumpSpec
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DatabaseDumpSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.DatabaseDumpSpec";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.metastore.v1beta.DatabaseDumpSpec.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} MYSQL=1 MYSQL value
                         * @property {number} AVRO=2 AVRO value
                         */
                        DatabaseDumpSpec.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MYSQL"] = 1;
                            values[valuesById[2] = "AVRO"] = 2;
                            return values;
                        })();
    
                        return DatabaseDumpSpec;
                    })();
    
                    v1beta.RemoveIamPolicyRequest = (function() {
    
                        /**
                         * Properties of a RemoveIamPolicyRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IRemoveIamPolicyRequest
                         * @property {string|null} [resource] RemoveIamPolicyRequest resource
                         * @property {boolean|null} [asynchronous] RemoveIamPolicyRequest asynchronous
                         */
    
                        /**
                         * Constructs a new RemoveIamPolicyRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a RemoveIamPolicyRequest.
                         * @implements IRemoveIamPolicyRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyRequest=} [properties] Properties to set
                         */
                        function RemoveIamPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RemoveIamPolicyRequest resource.
                         * @member {string} resource
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @instance
                         */
                        RemoveIamPolicyRequest.prototype.resource = "";
    
                        /**
                         * RemoveIamPolicyRequest asynchronous.
                         * @member {boolean} asynchronous
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @instance
                         */
                        RemoveIamPolicyRequest.prototype.asynchronous = false;
    
                        /**
                         * Creates a new RemoveIamPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.RemoveIamPolicyRequest} RemoveIamPolicyRequest instance
                         */
                        RemoveIamPolicyRequest.create = function create(properties) {
                            return new RemoveIamPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RemoveIamPolicyRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.RemoveIamPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyRequest} message RemoveIamPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveIamPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                            if (message.asynchronous != null && Object.hasOwnProperty.call(message, "asynchronous"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.asynchronous);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RemoveIamPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.RemoveIamPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyRequest} message RemoveIamPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveIamPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RemoveIamPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.RemoveIamPolicyRequest} RemoveIamPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveIamPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.RemoveIamPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.asynchronous = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RemoveIamPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.RemoveIamPolicyRequest} RemoveIamPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveIamPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RemoveIamPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RemoveIamPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.asynchronous != null && message.hasOwnProperty("asynchronous"))
                                if (typeof message.asynchronous !== "boolean")
                                    return "asynchronous: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RemoveIamPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.RemoveIamPolicyRequest} RemoveIamPolicyRequest
                         */
                        RemoveIamPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.RemoveIamPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.RemoveIamPolicyRequest();
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.asynchronous != null)
                                message.asynchronous = Boolean(object.asynchronous);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RemoveIamPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.RemoveIamPolicyRequest} message RemoveIamPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RemoveIamPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resource = "";
                                object.asynchronous = false;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.asynchronous != null && message.hasOwnProperty("asynchronous"))
                                object.asynchronous = message.asynchronous;
                            return object;
                        };
    
                        /**
                         * Converts this RemoveIamPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RemoveIamPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RemoveIamPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RemoveIamPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.RemoveIamPolicyRequest";
                        };
    
                        return RemoveIamPolicyRequest;
                    })();
    
                    v1beta.RemoveIamPolicyResponse = (function() {
    
                        /**
                         * Properties of a RemoveIamPolicyResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IRemoveIamPolicyResponse
                         * @property {boolean|null} [success] RemoveIamPolicyResponse success
                         */
    
                        /**
                         * Constructs a new RemoveIamPolicyResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a RemoveIamPolicyResponse.
                         * @implements IRemoveIamPolicyResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyResponse=} [properties] Properties to set
                         */
                        function RemoveIamPolicyResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RemoveIamPolicyResponse success.
                         * @member {boolean} success
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @instance
                         */
                        RemoveIamPolicyResponse.prototype.success = false;
    
                        /**
                         * Creates a new RemoveIamPolicyResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.RemoveIamPolicyResponse} RemoveIamPolicyResponse instance
                         */
                        RemoveIamPolicyResponse.create = function create(properties) {
                            return new RemoveIamPolicyResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RemoveIamPolicyResponse message. Does not implicitly {@link google.cloud.metastore.v1beta.RemoveIamPolicyResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyResponse} message RemoveIamPolicyResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveIamPolicyResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.success != null && Object.hasOwnProperty.call(message, "success"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.success);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RemoveIamPolicyResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.RemoveIamPolicyResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IRemoveIamPolicyResponse} message RemoveIamPolicyResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveIamPolicyResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RemoveIamPolicyResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.RemoveIamPolicyResponse} RemoveIamPolicyResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveIamPolicyResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.RemoveIamPolicyResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.success = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RemoveIamPolicyResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.RemoveIamPolicyResponse} RemoveIamPolicyResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveIamPolicyResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RemoveIamPolicyResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RemoveIamPolicyResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.success != null && message.hasOwnProperty("success"))
                                if (typeof message.success !== "boolean")
                                    return "success: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RemoveIamPolicyResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.RemoveIamPolicyResponse} RemoveIamPolicyResponse
                         */
                        RemoveIamPolicyResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.RemoveIamPolicyResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.RemoveIamPolicyResponse();
                            if (object.success != null)
                                message.success = Boolean(object.success);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RemoveIamPolicyResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.RemoveIamPolicyResponse} message RemoveIamPolicyResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RemoveIamPolicyResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.success = false;
                            if (message.success != null && message.hasOwnProperty("success"))
                                object.success = message.success;
                            return object;
                        };
    
                        /**
                         * Converts this RemoveIamPolicyResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RemoveIamPolicyResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RemoveIamPolicyResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.RemoveIamPolicyResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RemoveIamPolicyResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.RemoveIamPolicyResponse";
                        };
    
                        return RemoveIamPolicyResponse;
                    })();
    
                    v1beta.QueryMetadataRequest = (function() {
    
                        /**
                         * Properties of a QueryMetadataRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IQueryMetadataRequest
                         * @property {string|null} [service] QueryMetadataRequest service
                         * @property {string|null} [query] QueryMetadataRequest query
                         */
    
                        /**
                         * Constructs a new QueryMetadataRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a QueryMetadataRequest.
                         * @implements IQueryMetadataRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataRequest=} [properties] Properties to set
                         */
                        function QueryMetadataRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryMetadataRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @instance
                         */
                        QueryMetadataRequest.prototype.service = "";
    
                        /**
                         * QueryMetadataRequest query.
                         * @member {string} query
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @instance
                         */
                        QueryMetadataRequest.prototype.query = "";
    
                        /**
                         * Creates a new QueryMetadataRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.QueryMetadataRequest} QueryMetadataRequest instance
                         */
                        QueryMetadataRequest.create = function create(properties) {
                            return new QueryMetadataRequest(properties);
                        };
    
                        /**
                         * Encodes the specified QueryMetadataRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.QueryMetadataRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataRequest} message QueryMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryMetadataRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.query);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryMetadataRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.QueryMetadataRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataRequest} message QueryMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryMetadataRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryMetadataRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.QueryMetadataRequest} QueryMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryMetadataRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.QueryMetadataRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.query = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryMetadataRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.QueryMetadataRequest} QueryMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryMetadataRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryMetadataRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryMetadataRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueryMetadataRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.QueryMetadataRequest} QueryMetadataRequest
                         */
                        QueryMetadataRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.QueryMetadataRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.QueryMetadataRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.query != null)
                                message.query = String(object.query);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryMetadataRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.QueryMetadataRequest} message QueryMetadataRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryMetadataRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.query = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            return object;
                        };
    
                        /**
                         * Converts this QueryMetadataRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryMetadataRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryMetadataRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryMetadataRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.QueryMetadataRequest";
                        };
    
                        return QueryMetadataRequest;
                    })();
    
                    v1beta.QueryMetadataResponse = (function() {
    
                        /**
                         * Properties of a QueryMetadataResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IQueryMetadataResponse
                         * @property {string|null} [resultManifestUri] QueryMetadataResponse resultManifestUri
                         */
    
                        /**
                         * Constructs a new QueryMetadataResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a QueryMetadataResponse.
                         * @implements IQueryMetadataResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataResponse=} [properties] Properties to set
                         */
                        function QueryMetadataResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryMetadataResponse resultManifestUri.
                         * @member {string} resultManifestUri
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @instance
                         */
                        QueryMetadataResponse.prototype.resultManifestUri = "";
    
                        /**
                         * Creates a new QueryMetadataResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.QueryMetadataResponse} QueryMetadataResponse instance
                         */
                        QueryMetadataResponse.create = function create(properties) {
                            return new QueryMetadataResponse(properties);
                        };
    
                        /**
                         * Encodes the specified QueryMetadataResponse message. Does not implicitly {@link google.cloud.metastore.v1beta.QueryMetadataResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataResponse} message QueryMetadataResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryMetadataResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resultManifestUri != null && Object.hasOwnProperty.call(message, "resultManifestUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resultManifestUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryMetadataResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.QueryMetadataResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IQueryMetadataResponse} message QueryMetadataResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryMetadataResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryMetadataResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.QueryMetadataResponse} QueryMetadataResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryMetadataResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.QueryMetadataResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resultManifestUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryMetadataResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.QueryMetadataResponse} QueryMetadataResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryMetadataResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryMetadataResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryMetadataResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resultManifestUri != null && message.hasOwnProperty("resultManifestUri"))
                                if (!$util.isString(message.resultManifestUri))
                                    return "resultManifestUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueryMetadataResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.QueryMetadataResponse} QueryMetadataResponse
                         */
                        QueryMetadataResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.QueryMetadataResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.QueryMetadataResponse();
                            if (object.resultManifestUri != null)
                                message.resultManifestUri = String(object.resultManifestUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryMetadataResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.QueryMetadataResponse} message QueryMetadataResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryMetadataResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.resultManifestUri = "";
                            if (message.resultManifestUri != null && message.hasOwnProperty("resultManifestUri"))
                                object.resultManifestUri = message.resultManifestUri;
                            return object;
                        };
    
                        /**
                         * Converts this QueryMetadataResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryMetadataResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryMetadataResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.QueryMetadataResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryMetadataResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.QueryMetadataResponse";
                        };
    
                        return QueryMetadataResponse;
                    })();
    
                    v1beta.MoveTableToDatabaseRequest = (function() {
    
                        /**
                         * Properties of a MoveTableToDatabaseRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IMoveTableToDatabaseRequest
                         * @property {string|null} [service] MoveTableToDatabaseRequest service
                         * @property {string|null} [tableName] MoveTableToDatabaseRequest tableName
                         * @property {string|null} [dbName] MoveTableToDatabaseRequest dbName
                         * @property {string|null} [destinationDbName] MoveTableToDatabaseRequest destinationDbName
                         */
    
                        /**
                         * Constructs a new MoveTableToDatabaseRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a MoveTableToDatabaseRequest.
                         * @implements IMoveTableToDatabaseRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseRequest=} [properties] Properties to set
                         */
                        function MoveTableToDatabaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MoveTableToDatabaseRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @instance
                         */
                        MoveTableToDatabaseRequest.prototype.service = "";
    
                        /**
                         * MoveTableToDatabaseRequest tableName.
                         * @member {string} tableName
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @instance
                         */
                        MoveTableToDatabaseRequest.prototype.tableName = "";
    
                        /**
                         * MoveTableToDatabaseRequest dbName.
                         * @member {string} dbName
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @instance
                         */
                        MoveTableToDatabaseRequest.prototype.dbName = "";
    
                        /**
                         * MoveTableToDatabaseRequest destinationDbName.
                         * @member {string} destinationDbName
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @instance
                         */
                        MoveTableToDatabaseRequest.prototype.destinationDbName = "";
    
                        /**
                         * Creates a new MoveTableToDatabaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.MoveTableToDatabaseRequest} MoveTableToDatabaseRequest instance
                         */
                        MoveTableToDatabaseRequest.create = function create(properties) {
                            return new MoveTableToDatabaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified MoveTableToDatabaseRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.MoveTableToDatabaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseRequest} message MoveTableToDatabaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MoveTableToDatabaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.tableName != null && Object.hasOwnProperty.call(message, "tableName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tableName);
                            if (message.dbName != null && Object.hasOwnProperty.call(message, "dbName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.dbName);
                            if (message.destinationDbName != null && Object.hasOwnProperty.call(message, "destinationDbName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.destinationDbName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MoveTableToDatabaseRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.MoveTableToDatabaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseRequest} message MoveTableToDatabaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MoveTableToDatabaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MoveTableToDatabaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.MoveTableToDatabaseRequest} MoveTableToDatabaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MoveTableToDatabaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.MoveTableToDatabaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.tableName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.dbName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.destinationDbName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MoveTableToDatabaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.MoveTableToDatabaseRequest} MoveTableToDatabaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MoveTableToDatabaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MoveTableToDatabaseRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MoveTableToDatabaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.tableName != null && message.hasOwnProperty("tableName"))
                                if (!$util.isString(message.tableName))
                                    return "tableName: string expected";
                            if (message.dbName != null && message.hasOwnProperty("dbName"))
                                if (!$util.isString(message.dbName))
                                    return "dbName: string expected";
                            if (message.destinationDbName != null && message.hasOwnProperty("destinationDbName"))
                                if (!$util.isString(message.destinationDbName))
                                    return "destinationDbName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a MoveTableToDatabaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.MoveTableToDatabaseRequest} MoveTableToDatabaseRequest
                         */
                        MoveTableToDatabaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.MoveTableToDatabaseRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.MoveTableToDatabaseRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.tableName != null)
                                message.tableName = String(object.tableName);
                            if (object.dbName != null)
                                message.dbName = String(object.dbName);
                            if (object.destinationDbName != null)
                                message.destinationDbName = String(object.destinationDbName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MoveTableToDatabaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.MoveTableToDatabaseRequest} message MoveTableToDatabaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MoveTableToDatabaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.tableName = "";
                                object.dbName = "";
                                object.destinationDbName = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.tableName != null && message.hasOwnProperty("tableName"))
                                object.tableName = message.tableName;
                            if (message.dbName != null && message.hasOwnProperty("dbName"))
                                object.dbName = message.dbName;
                            if (message.destinationDbName != null && message.hasOwnProperty("destinationDbName"))
                                object.destinationDbName = message.destinationDbName;
                            return object;
                        };
    
                        /**
                         * Converts this MoveTableToDatabaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MoveTableToDatabaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MoveTableToDatabaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MoveTableToDatabaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.MoveTableToDatabaseRequest";
                        };
    
                        return MoveTableToDatabaseRequest;
                    })();
    
                    v1beta.MoveTableToDatabaseResponse = (function() {
    
                        /**
                         * Properties of a MoveTableToDatabaseResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IMoveTableToDatabaseResponse
                         */
    
                        /**
                         * Constructs a new MoveTableToDatabaseResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a MoveTableToDatabaseResponse.
                         * @implements IMoveTableToDatabaseResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseResponse=} [properties] Properties to set
                         */
                        function MoveTableToDatabaseResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new MoveTableToDatabaseResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.MoveTableToDatabaseResponse} MoveTableToDatabaseResponse instance
                         */
                        MoveTableToDatabaseResponse.create = function create(properties) {
                            return new MoveTableToDatabaseResponse(properties);
                        };
    
                        /**
                         * Encodes the specified MoveTableToDatabaseResponse message. Does not implicitly {@link google.cloud.metastore.v1beta.MoveTableToDatabaseResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseResponse} message MoveTableToDatabaseResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MoveTableToDatabaseResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MoveTableToDatabaseResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.MoveTableToDatabaseResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IMoveTableToDatabaseResponse} message MoveTableToDatabaseResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MoveTableToDatabaseResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MoveTableToDatabaseResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.MoveTableToDatabaseResponse} MoveTableToDatabaseResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MoveTableToDatabaseResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.MoveTableToDatabaseResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MoveTableToDatabaseResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.MoveTableToDatabaseResponse} MoveTableToDatabaseResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MoveTableToDatabaseResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MoveTableToDatabaseResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MoveTableToDatabaseResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a MoveTableToDatabaseResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.MoveTableToDatabaseResponse} MoveTableToDatabaseResponse
                         */
                        MoveTableToDatabaseResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.MoveTableToDatabaseResponse)
                                return object;
                            return new $root.google.cloud.metastore.v1beta.MoveTableToDatabaseResponse();
                        };
    
                        /**
                         * Creates a plain object from a MoveTableToDatabaseResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.MoveTableToDatabaseResponse} message MoveTableToDatabaseResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MoveTableToDatabaseResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this MoveTableToDatabaseResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MoveTableToDatabaseResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MoveTableToDatabaseResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.MoveTableToDatabaseResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MoveTableToDatabaseResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.MoveTableToDatabaseResponse";
                        };
    
                        return MoveTableToDatabaseResponse;
                    })();
    
                    v1beta.AlterMetadataResourceLocationRequest = (function() {
    
                        /**
                         * Properties of an AlterMetadataResourceLocationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IAlterMetadataResourceLocationRequest
                         * @property {string|null} [service] AlterMetadataResourceLocationRequest service
                         * @property {string|null} [resourceName] AlterMetadataResourceLocationRequest resourceName
                         * @property {string|null} [locationUri] AlterMetadataResourceLocationRequest locationUri
                         */
    
                        /**
                         * Constructs a new AlterMetadataResourceLocationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an AlterMetadataResourceLocationRequest.
                         * @implements IAlterMetadataResourceLocationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationRequest=} [properties] Properties to set
                         */
                        function AlterMetadataResourceLocationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AlterMetadataResourceLocationRequest service.
                         * @member {string} service
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @instance
                         */
                        AlterMetadataResourceLocationRequest.prototype.service = "";
    
                        /**
                         * AlterMetadataResourceLocationRequest resourceName.
                         * @member {string} resourceName
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @instance
                         */
                        AlterMetadataResourceLocationRequest.prototype.resourceName = "";
    
                        /**
                         * AlterMetadataResourceLocationRequest locationUri.
                         * @member {string} locationUri
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @instance
                         */
                        AlterMetadataResourceLocationRequest.prototype.locationUri = "";
    
                        /**
                         * Creates a new AlterMetadataResourceLocationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest} AlterMetadataResourceLocationRequest instance
                         */
                        AlterMetadataResourceLocationRequest.create = function create(properties) {
                            return new AlterMetadataResourceLocationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AlterMetadataResourceLocationRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationRequest} message AlterMetadataResourceLocationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AlterMetadataResourceLocationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.resourceName != null && Object.hasOwnProperty.call(message, "resourceName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceName);
                            if (message.locationUri != null && Object.hasOwnProperty.call(message, "locationUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.locationUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AlterMetadataResourceLocationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationRequest} message AlterMetadataResourceLocationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AlterMetadataResourceLocationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AlterMetadataResourceLocationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest} AlterMetadataResourceLocationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AlterMetadataResourceLocationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.resourceName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.locationUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AlterMetadataResourceLocationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest} AlterMetadataResourceLocationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AlterMetadataResourceLocationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AlterMetadataResourceLocationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AlterMetadataResourceLocationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                if (!$util.isString(message.resourceName))
                                    return "resourceName: string expected";
                            if (message.locationUri != null && message.hasOwnProperty("locationUri"))
                                if (!$util.isString(message.locationUri))
                                    return "locationUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AlterMetadataResourceLocationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest} AlterMetadataResourceLocationRequest
                         */
                        AlterMetadataResourceLocationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.resourceName != null)
                                message.resourceName = String(object.resourceName);
                            if (object.locationUri != null)
                                message.locationUri = String(object.locationUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AlterMetadataResourceLocationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest} message AlterMetadataResourceLocationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AlterMetadataResourceLocationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.resourceName = "";
                                object.locationUri = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                object.resourceName = message.resourceName;
                            if (message.locationUri != null && message.hasOwnProperty("locationUri"))
                                object.locationUri = message.locationUri;
                            return object;
                        };
    
                        /**
                         * Converts this AlterMetadataResourceLocationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AlterMetadataResourceLocationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AlterMetadataResourceLocationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AlterMetadataResourceLocationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.AlterMetadataResourceLocationRequest";
                        };
    
                        return AlterMetadataResourceLocationRequest;
                    })();
    
                    v1beta.AlterMetadataResourceLocationResponse = (function() {
    
                        /**
                         * Properties of an AlterMetadataResourceLocationResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IAlterMetadataResourceLocationResponse
                         */
    
                        /**
                         * Constructs a new AlterMetadataResourceLocationResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an AlterMetadataResourceLocationResponse.
                         * @implements IAlterMetadataResourceLocationResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationResponse=} [properties] Properties to set
                         */
                        function AlterMetadataResourceLocationResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AlterMetadataResourceLocationResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse} AlterMetadataResourceLocationResponse instance
                         */
                        AlterMetadataResourceLocationResponse.create = function create(properties) {
                            return new AlterMetadataResourceLocationResponse(properties);
                        };
    
                        /**
                         * Encodes the specified AlterMetadataResourceLocationResponse message. Does not implicitly {@link google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationResponse} message AlterMetadataResourceLocationResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AlterMetadataResourceLocationResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AlterMetadataResourceLocationResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IAlterMetadataResourceLocationResponse} message AlterMetadataResourceLocationResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AlterMetadataResourceLocationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AlterMetadataResourceLocationResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse} AlterMetadataResourceLocationResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AlterMetadataResourceLocationResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AlterMetadataResourceLocationResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse} AlterMetadataResourceLocationResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AlterMetadataResourceLocationResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AlterMetadataResourceLocationResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AlterMetadataResourceLocationResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AlterMetadataResourceLocationResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse} AlterMetadataResourceLocationResponse
                         */
                        AlterMetadataResourceLocationResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse)
                                return object;
                            return new $root.google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse();
                        };
    
                        /**
                         * Creates a plain object from an AlterMetadataResourceLocationResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse} message AlterMetadataResourceLocationResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AlterMetadataResourceLocationResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AlterMetadataResourceLocationResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AlterMetadataResourceLocationResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AlterMetadataResourceLocationResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AlterMetadataResourceLocationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.AlterMetadataResourceLocationResponse";
                        };
    
                        return AlterMetadataResourceLocationResponse;
                    })();
    
                    v1beta.DataprocMetastoreFederation = (function() {
    
                        /**
                         * Constructs a new DataprocMetastoreFederation service.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a DataprocMetastoreFederation
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DataprocMetastoreFederation(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DataprocMetastoreFederation.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DataprocMetastoreFederation;
    
                        /**
                         * Creates new DataprocMetastoreFederation service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DataprocMetastoreFederation} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DataprocMetastoreFederation.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastoreFederation|listFederations}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @typedef ListFederationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.ListFederationsResponse} [response] ListFederationsResponse
                         */
    
                        /**
                         * Calls ListFederations.
                         * @function listFederations
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IListFederationsRequest} request ListFederationsRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastoreFederation.ListFederationsCallback} callback Node-style callback called with the error, if any, and ListFederationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.listFederations = function listFederations(request, callback) {
                            return this.rpcCall(listFederations, $root.google.cloud.metastore.v1beta.ListFederationsRequest, $root.google.cloud.metastore.v1beta.ListFederationsResponse, request, callback);
                        }, "name", { value: "ListFederations" });
    
                        /**
                         * Calls ListFederations.
                         * @function listFederations
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IListFederationsRequest} request ListFederationsRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.ListFederationsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastoreFederation|getFederation}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @typedef GetFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.metastore.v1beta.Federation} [response] Federation
                         */
    
                        /**
                         * Calls GetFederation.
                         * @function getFederation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IGetFederationRequest} request GetFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastoreFederation.GetFederationCallback} callback Node-style callback called with the error, if any, and Federation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.getFederation = function getFederation(request, callback) {
                            return this.rpcCall(getFederation, $root.google.cloud.metastore.v1beta.GetFederationRequest, $root.google.cloud.metastore.v1beta.Federation, request, callback);
                        }, "name", { value: "GetFederation" });
    
                        /**
                         * Calls GetFederation.
                         * @function getFederation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IGetFederationRequest} request GetFederationRequest message or plain object
                         * @returns {Promise<google.cloud.metastore.v1beta.Federation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastoreFederation|createFederation}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @typedef CreateFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFederation.
                         * @function createFederation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.ICreateFederationRequest} request CreateFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastoreFederation.CreateFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.createFederation = function createFederation(request, callback) {
                            return this.rpcCall(createFederation, $root.google.cloud.metastore.v1beta.CreateFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFederation" });
    
                        /**
                         * Calls CreateFederation.
                         * @function createFederation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.ICreateFederationRequest} request CreateFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastoreFederation|updateFederation}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @typedef UpdateFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFederation.
                         * @function updateFederation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IUpdateFederationRequest} request UpdateFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastoreFederation.UpdateFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.updateFederation = function updateFederation(request, callback) {
                            return this.rpcCall(updateFederation, $root.google.cloud.metastore.v1beta.UpdateFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFederation" });
    
                        /**
                         * Calls UpdateFederation.
                         * @function updateFederation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IUpdateFederationRequest} request UpdateFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.metastore.v1beta.DataprocMetastoreFederation|deleteFederation}.
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @typedef DeleteFederationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFederation.
                         * @function deleteFederation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IDeleteFederationRequest} request DeleteFederationRequest message or plain object
                         * @param {google.cloud.metastore.v1beta.DataprocMetastoreFederation.DeleteFederationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DataprocMetastoreFederation.prototype.deleteFederation = function deleteFederation(request, callback) {
                            return this.rpcCall(deleteFederation, $root.google.cloud.metastore.v1beta.DeleteFederationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFederation" });
    
                        /**
                         * Calls DeleteFederation.
                         * @function deleteFederation
                         * @memberof google.cloud.metastore.v1beta.DataprocMetastoreFederation
                         * @instance
                         * @param {google.cloud.metastore.v1beta.IDeleteFederationRequest} request DeleteFederationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return DataprocMetastoreFederation;
                    })();
    
                    v1beta.Federation = (function() {
    
                        /**
                         * Properties of a Federation.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IFederation
                         * @property {string|null} [name] Federation name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Federation createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Federation updateTime
                         * @property {Object.<string,string>|null} [labels] Federation labels
                         * @property {string|null} [version] Federation version
                         * @property {Object.<string,google.cloud.metastore.v1beta.IBackendMetastore>|null} [backendMetastores] Federation backendMetastores
                         * @property {string|null} [endpointUri] Federation endpointUri
                         * @property {google.cloud.metastore.v1beta.Federation.State|null} [state] Federation state
                         * @property {string|null} [stateMessage] Federation stateMessage
                         * @property {string|null} [uid] Federation uid
                         */
    
                        /**
                         * Constructs a new Federation.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a Federation.
                         * @implements IFederation
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IFederation=} [properties] Properties to set
                         */
                        function Federation(properties) {
                            this.labels = {};
                            this.backendMetastores = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Federation name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.name = "";
    
                        /**
                         * Federation createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.createTime = null;
    
                        /**
                         * Federation updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.updateTime = null;
    
                        /**
                         * Federation labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.labels = $util.emptyObject;
    
                        /**
                         * Federation version.
                         * @member {string} version
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.version = "";
    
                        /**
                         * Federation backendMetastores.
                         * @member {Object.<string,google.cloud.metastore.v1beta.IBackendMetastore>} backendMetastores
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.backendMetastores = $util.emptyObject;
    
                        /**
                         * Federation endpointUri.
                         * @member {string} endpointUri
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.endpointUri = "";
    
                        /**
                         * Federation state.
                         * @member {google.cloud.metastore.v1beta.Federation.State} state
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.state = 0;
    
                        /**
                         * Federation stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.stateMessage = "";
    
                        /**
                         * Federation uid.
                         * @member {string} uid
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         */
                        Federation.prototype.uid = "";
    
                        /**
                         * Creates a new Federation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {google.cloud.metastore.v1beta.IFederation=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.Federation} Federation instance
                         */
                        Federation.create = function create(properties) {
                            return new Federation(properties);
                        };
    
                        /**
                         * Encodes the specified Federation message. Does not implicitly {@link google.cloud.metastore.v1beta.Federation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {google.cloud.metastore.v1beta.IFederation} message Federation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Federation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.version);
                            if (message.backendMetastores != null && Object.hasOwnProperty.call(message, "backendMetastores"))
                                for (var keys = Object.keys(message.backendMetastores), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 0 =*/8).int32(keys[i]);
                                    $root.google.cloud.metastore.v1beta.BackendMetastore.encode(message.backendMetastores[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.endpointUri != null && Object.hasOwnProperty.call(message, "endpointUri"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.endpointUri);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.stateMessage);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.uid);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Federation message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.Federation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {google.cloud.metastore.v1beta.IFederation} message Federation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Federation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Federation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.Federation} Federation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Federation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.Federation(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.backendMetastores === $util.emptyObject)
                                            message.backendMetastores = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.int32();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.metastore.v1beta.BackendMetastore.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.backendMetastores[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.endpointUri = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Federation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.Federation} Federation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Federation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Federation message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Federation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.backendMetastores != null && message.hasOwnProperty("backendMetastores")) {
                                if (!$util.isObject(message.backendMetastores))
                                    return "backendMetastores: object expected";
                                var key = Object.keys(message.backendMetastores);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key32Re.test(key[i]))
                                        return "backendMetastores: integer key{k:int32} expected";
                                    {
                                        var error = $root.google.cloud.metastore.v1beta.BackendMetastore.verify(message.backendMetastores[key[i]]);
                                        if (error)
                                            return "backendMetastores." + error;
                                    }
                                }
                            }
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                if (!$util.isString(message.endpointUri))
                                    return "endpointUri: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Federation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.Federation} Federation
                         */
                        Federation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.Federation)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.Federation();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Federation.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Federation.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Federation.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.backendMetastores) {
                                if (typeof object.backendMetastores !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.Federation.backendMetastores: object expected");
                                message.backendMetastores = {};
                                for (var keys = Object.keys(object.backendMetastores), i = 0; i < keys.length; ++i) {
                                    if (typeof object.backendMetastores[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.Federation.backendMetastores: object expected");
                                    message.backendMetastores[keys[i]] = $root.google.cloud.metastore.v1beta.BackendMetastore.fromObject(object.backendMetastores[keys[i]]);
                                }
                            }
                            if (object.endpointUri != null)
                                message.endpointUri = String(object.endpointUri);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "ERROR":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Federation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {google.cloud.metastore.v1beta.Federation} message Federation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Federation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.backendMetastores = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.version = "";
                                object.endpointUri = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.uid = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.backendMetastores && (keys2 = Object.keys(message.backendMetastores)).length) {
                                object.backendMetastores = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.backendMetastores[keys2[j]] = $root.google.cloud.metastore.v1beta.BackendMetastore.toObject(message.backendMetastores[keys2[j]], options);
                            }
                            if (message.endpointUri != null && message.hasOwnProperty("endpointUri"))
                                object.endpointUri = message.endpointUri;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.metastore.v1beta.Federation.State[message.state] === undefined ? message.state : $root.google.cloud.metastore.v1beta.Federation.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            return object;
                        };
    
                        /**
                         * Converts this Federation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Federation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Federation
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.Federation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Federation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.Federation";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.metastore.v1beta.Federation.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} ERROR=5 ERROR value
                         */
                        Federation.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "ERROR"] = 5;
                            return values;
                        })();
    
                        return Federation;
                    })();
    
                    v1beta.BackendMetastore = (function() {
    
                        /**
                         * Properties of a BackendMetastore.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IBackendMetastore
                         * @property {string|null} [name] BackendMetastore name
                         * @property {google.cloud.metastore.v1beta.BackendMetastore.MetastoreType|null} [metastoreType] BackendMetastore metastoreType
                         */
    
                        /**
                         * Constructs a new BackendMetastore.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a BackendMetastore.
                         * @implements IBackendMetastore
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IBackendMetastore=} [properties] Properties to set
                         */
                        function BackendMetastore(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackendMetastore name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @instance
                         */
                        BackendMetastore.prototype.name = "";
    
                        /**
                         * BackendMetastore metastoreType.
                         * @member {google.cloud.metastore.v1beta.BackendMetastore.MetastoreType} metastoreType
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @instance
                         */
                        BackendMetastore.prototype.metastoreType = 0;
    
                        /**
                         * Creates a new BackendMetastore instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1beta.IBackendMetastore=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.BackendMetastore} BackendMetastore instance
                         */
                        BackendMetastore.create = function create(properties) {
                            return new BackendMetastore(properties);
                        };
    
                        /**
                         * Encodes the specified BackendMetastore message. Does not implicitly {@link google.cloud.metastore.v1beta.BackendMetastore.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1beta.IBackendMetastore} message BackendMetastore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackendMetastore.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.metastoreType != null && Object.hasOwnProperty.call(message, "metastoreType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.metastoreType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackendMetastore message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.BackendMetastore.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1beta.IBackendMetastore} message BackendMetastore message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackendMetastore.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackendMetastore message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.BackendMetastore} BackendMetastore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackendMetastore.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.BackendMetastore();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.metastoreType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackendMetastore message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.BackendMetastore} BackendMetastore
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackendMetastore.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackendMetastore message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackendMetastore.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.metastoreType != null && message.hasOwnProperty("metastoreType"))
                                switch (message.metastoreType) {
                                default:
                                    return "metastoreType: enum value expected";
                                case 0:
                                case 2:
                                case 3:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a BackendMetastore message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.BackendMetastore} BackendMetastore
                         */
                        BackendMetastore.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.BackendMetastore)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.BackendMetastore();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.metastoreType) {
                            default:
                                if (typeof object.metastoreType === "number") {
                                    message.metastoreType = object.metastoreType;
                                    break;
                                }
                                break;
                            case "METASTORE_TYPE_UNSPECIFIED":
                            case 0:
                                message.metastoreType = 0;
                                break;
                            case "BIGQUERY":
                            case 2:
                                message.metastoreType = 2;
                                break;
                            case "DATAPROC_METASTORE":
                            case 3:
                                message.metastoreType = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackendMetastore message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {google.cloud.metastore.v1beta.BackendMetastore} message BackendMetastore
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackendMetastore.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.metastoreType = options.enums === String ? "METASTORE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.metastoreType != null && message.hasOwnProperty("metastoreType"))
                                object.metastoreType = options.enums === String ? $root.google.cloud.metastore.v1beta.BackendMetastore.MetastoreType[message.metastoreType] === undefined ? message.metastoreType : $root.google.cloud.metastore.v1beta.BackendMetastore.MetastoreType[message.metastoreType] : message.metastoreType;
                            return object;
                        };
    
                        /**
                         * Converts this BackendMetastore to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackendMetastore.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BackendMetastore
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.BackendMetastore
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BackendMetastore.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.BackendMetastore";
                        };
    
                        /**
                         * MetastoreType enum.
                         * @name google.cloud.metastore.v1beta.BackendMetastore.MetastoreType
                         * @enum {number}
                         * @property {number} METASTORE_TYPE_UNSPECIFIED=0 METASTORE_TYPE_UNSPECIFIED value
                         * @property {number} BIGQUERY=2 BIGQUERY value
                         * @property {number} DATAPROC_METASTORE=3 DATAPROC_METASTORE value
                         */
                        BackendMetastore.MetastoreType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "METASTORE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[2] = "BIGQUERY"] = 2;
                            values[valuesById[3] = "DATAPROC_METASTORE"] = 3;
                            return values;
                        })();
    
                        return BackendMetastore;
                    })();
    
                    v1beta.ListFederationsRequest = (function() {
    
                        /**
                         * Properties of a ListFederationsRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IListFederationsRequest
                         * @property {string|null} [parent] ListFederationsRequest parent
                         * @property {number|null} [pageSize] ListFederationsRequest pageSize
                         * @property {string|null} [pageToken] ListFederationsRequest pageToken
                         * @property {string|null} [filter] ListFederationsRequest filter
                         * @property {string|null} [orderBy] ListFederationsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFederationsRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a ListFederationsRequest.
                         * @implements IListFederationsRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IListFederationsRequest=} [properties] Properties to set
                         */
                        function ListFederationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFederationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.parent = "";
    
                        /**
                         * ListFederationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFederationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.pageToken = "";
    
                        /**
                         * ListFederationsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.filter = "";
    
                        /**
                         * ListFederationsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @instance
                         */
                        ListFederationsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFederationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListFederationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ListFederationsRequest} ListFederationsRequest instance
                         */
                        ListFederationsRequest.create = function create(properties) {
                            return new ListFederationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFederationsRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.ListFederationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListFederationsRequest} message ListFederationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFederationsRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ListFederationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListFederationsRequest} message ListFederationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFederationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ListFederationsRequest} ListFederationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ListFederationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFederationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ListFederationsRequest} ListFederationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFederationsRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFederationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFederationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ListFederationsRequest} ListFederationsRequest
                         */
                        ListFederationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ListFederationsRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ListFederationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFederationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ListFederationsRequest} message ListFederationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFederationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFederationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFederationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFederationsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ListFederationsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFederationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ListFederationsRequest";
                        };
    
                        return ListFederationsRequest;
                    })();
    
                    v1beta.ListFederationsResponse = (function() {
    
                        /**
                         * Properties of a ListFederationsResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IListFederationsResponse
                         * @property {Array.<google.cloud.metastore.v1beta.IFederation>|null} [federations] ListFederationsResponse federations
                         * @property {string|null} [nextPageToken] ListFederationsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListFederationsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListFederationsResponse.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a ListFederationsResponse.
                         * @implements IListFederationsResponse
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IListFederationsResponse=} [properties] Properties to set
                         */
                        function ListFederationsResponse(properties) {
                            this.federations = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFederationsResponse federations.
                         * @member {Array.<google.cloud.metastore.v1beta.IFederation>} federations
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.federations = $util.emptyArray;
    
                        /**
                         * ListFederationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListFederationsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @instance
                         */
                        ListFederationsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListFederationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListFederationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.ListFederationsResponse} ListFederationsResponse instance
                         */
                        ListFederationsResponse.create = function create(properties) {
                            return new ListFederationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFederationsResponse message. Does not implicitly {@link google.cloud.metastore.v1beta.ListFederationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListFederationsResponse} message ListFederationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.federations != null && message.federations.length)
                                for (var i = 0; i < message.federations.length; ++i)
                                    $root.google.cloud.metastore.v1beta.Federation.encode(message.federations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFederationsResponse message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.ListFederationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.IListFederationsResponse} message ListFederationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFederationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFederationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.ListFederationsResponse} ListFederationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.ListFederationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.federations && message.federations.length))
                                            message.federations = [];
                                        message.federations.push($root.google.cloud.metastore.v1beta.Federation.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFederationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.ListFederationsResponse} ListFederationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFederationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFederationsResponse message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFederationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.federations != null && message.hasOwnProperty("federations")) {
                                if (!Array.isArray(message.federations))
                                    return "federations: array expected";
                                for (var i = 0; i < message.federations.length; ++i) {
                                    var error = $root.google.cloud.metastore.v1beta.Federation.verify(message.federations[i]);
                                    if (error)
                                        return "federations." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListFederationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.ListFederationsResponse} ListFederationsResponse
                         */
                        ListFederationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.ListFederationsResponse)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.ListFederationsResponse();
                            if (object.federations) {
                                if (!Array.isArray(object.federations))
                                    throw TypeError(".google.cloud.metastore.v1beta.ListFederationsResponse.federations: array expected");
                                message.federations = [];
                                for (var i = 0; i < object.federations.length; ++i) {
                                    if (typeof object.federations[i] !== "object")
                                        throw TypeError(".google.cloud.metastore.v1beta.ListFederationsResponse.federations: object expected");
                                    message.federations[i] = $root.google.cloud.metastore.v1beta.Federation.fromObject(object.federations[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.metastore.v1beta.ListFederationsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFederationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {google.cloud.metastore.v1beta.ListFederationsResponse} message ListFederationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFederationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.federations = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.federations && message.federations.length) {
                                object.federations = [];
                                for (var j = 0; j < message.federations.length; ++j)
                                    object.federations[j] = $root.google.cloud.metastore.v1beta.Federation.toObject(message.federations[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListFederationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFederationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFederationsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.ListFederationsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFederationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.ListFederationsResponse";
                        };
    
                        return ListFederationsResponse;
                    })();
    
                    v1beta.GetFederationRequest = (function() {
    
                        /**
                         * Properties of a GetFederationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IGetFederationRequest
                         * @property {string|null} [name] GetFederationRequest name
                         */
    
                        /**
                         * Constructs a new GetFederationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a GetFederationRequest.
                         * @implements IGetFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IGetFederationRequest=} [properties] Properties to set
                         */
                        function GetFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFederationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @instance
                         */
                        GetFederationRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.GetFederationRequest} GetFederationRequest instance
                         */
                        GetFederationRequest.create = function create(properties) {
                            return new GetFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.GetFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetFederationRequest} message GetFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.GetFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IGetFederationRequest} message GetFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.GetFederationRequest} GetFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.GetFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.GetFederationRequest} GetFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.GetFederationRequest} GetFederationRequest
                         */
                        GetFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.GetFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.GetFederationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.GetFederationRequest} message GetFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.GetFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.GetFederationRequest";
                        };
    
                        return GetFederationRequest;
                    })();
    
                    v1beta.CreateFederationRequest = (function() {
    
                        /**
                         * Properties of a CreateFederationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface ICreateFederationRequest
                         * @property {string|null} [parent] CreateFederationRequest parent
                         * @property {string|null} [federationId] CreateFederationRequest federationId
                         * @property {google.cloud.metastore.v1beta.IFederation|null} [federation] CreateFederationRequest federation
                         * @property {string|null} [requestId] CreateFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateFederationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a CreateFederationRequest.
                         * @implements ICreateFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.ICreateFederationRequest=} [properties] Properties to set
                         */
                        function CreateFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFederationRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.parent = "";
    
                        /**
                         * CreateFederationRequest federationId.
                         * @member {string} federationId
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.federationId = "";
    
                        /**
                         * CreateFederationRequest federation.
                         * @member {google.cloud.metastore.v1beta.IFederation|null|undefined} federation
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.federation = null;
    
                        /**
                         * CreateFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @instance
                         */
                        CreateFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.CreateFederationRequest} CreateFederationRequest instance
                         */
                        CreateFederationRequest.create = function create(properties) {
                            return new CreateFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.CreateFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateFederationRequest} message CreateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.federationId != null && Object.hasOwnProperty.call(message, "federationId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.federationId);
                            if (message.federation != null && Object.hasOwnProperty.call(message, "federation"))
                                $root.google.cloud.metastore.v1beta.Federation.encode(message.federation, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.CreateFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.ICreateFederationRequest} message CreateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.CreateFederationRequest} CreateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.CreateFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.federationId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.federation = $root.google.cloud.metastore.v1beta.Federation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.CreateFederationRequest} CreateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.federationId != null && message.hasOwnProperty("federationId"))
                                if (!$util.isString(message.federationId))
                                    return "federationId: string expected";
                            if (message.federation != null && message.hasOwnProperty("federation")) {
                                var error = $root.google.cloud.metastore.v1beta.Federation.verify(message.federation);
                                if (error)
                                    return "federation." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.CreateFederationRequest} CreateFederationRequest
                         */
                        CreateFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.CreateFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.CreateFederationRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.federationId != null)
                                message.federationId = String(object.federationId);
                            if (object.federation != null) {
                                if (typeof object.federation !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.CreateFederationRequest.federation: object expected");
                                message.federation = $root.google.cloud.metastore.v1beta.Federation.fromObject(object.federation);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.CreateFederationRequest} message CreateFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.federationId = "";
                                object.federation = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.federationId != null && message.hasOwnProperty("federationId"))
                                object.federationId = message.federationId;
                            if (message.federation != null && message.hasOwnProperty("federation"))
                                object.federation = $root.google.cloud.metastore.v1beta.Federation.toObject(message.federation, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.CreateFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.CreateFederationRequest";
                        };
    
                        return CreateFederationRequest;
                    })();
    
                    v1beta.UpdateFederationRequest = (function() {
    
                        /**
                         * Properties of an UpdateFederationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IUpdateFederationRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFederationRequest updateMask
                         * @property {google.cloud.metastore.v1beta.IFederation|null} [federation] UpdateFederationRequest federation
                         * @property {string|null} [requestId] UpdateFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateFederationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents an UpdateFederationRequest.
                         * @implements IUpdateFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IUpdateFederationRequest=} [properties] Properties to set
                         */
                        function UpdateFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFederationRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateFederationRequest federation.
                         * @member {google.cloud.metastore.v1beta.IFederation|null|undefined} federation
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.federation = null;
    
                        /**
                         * UpdateFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @instance
                         */
                        UpdateFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.UpdateFederationRequest} UpdateFederationRequest instance
                         */
                        UpdateFederationRequest.create = function create(properties) {
                            return new UpdateFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.UpdateFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateFederationRequest} message UpdateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.federation != null && Object.hasOwnProperty.call(message, "federation"))
                                $root.google.cloud.metastore.v1beta.Federation.encode(message.federation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.UpdateFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IUpdateFederationRequest} message UpdateFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.UpdateFederationRequest} UpdateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.UpdateFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.federation = $root.google.cloud.metastore.v1beta.Federation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.UpdateFederationRequest} UpdateFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.federation != null && message.hasOwnProperty("federation")) {
                                var error = $root.google.cloud.metastore.v1beta.Federation.verify(message.federation);
                                if (error)
                                    return "federation." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.UpdateFederationRequest} UpdateFederationRequest
                         */
                        UpdateFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.UpdateFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.UpdateFederationRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.UpdateFederationRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.federation != null) {
                                if (typeof object.federation !== "object")
                                    throw TypeError(".google.cloud.metastore.v1beta.UpdateFederationRequest.federation: object expected");
                                message.federation = $root.google.cloud.metastore.v1beta.Federation.fromObject(object.federation);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.UpdateFederationRequest} message UpdateFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.federation = null;
                                object.requestId = "";
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.federation != null && message.hasOwnProperty("federation"))
                                object.federation = $root.google.cloud.metastore.v1beta.Federation.toObject(message.federation, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.UpdateFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.UpdateFederationRequest";
                        };
    
                        return UpdateFederationRequest;
                    })();
    
                    v1beta.DeleteFederationRequest = (function() {
    
                        /**
                         * Properties of a DeleteFederationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @interface IDeleteFederationRequest
                         * @property {string|null} [name] DeleteFederationRequest name
                         * @property {string|null} [requestId] DeleteFederationRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteFederationRequest.
                         * @memberof google.cloud.metastore.v1beta
                         * @classdesc Represents a DeleteFederationRequest.
                         * @implements IDeleteFederationRequest
                         * @constructor
                         * @param {google.cloud.metastore.v1beta.IDeleteFederationRequest=} [properties] Properties to set
                         */
                        function DeleteFederationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFederationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @instance
                         */
                        DeleteFederationRequest.prototype.name = "";
    
                        /**
                         * DeleteFederationRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @instance
                         */
                        DeleteFederationRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteFederationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteFederationRequest=} [properties] Properties to set
                         * @returns {google.cloud.metastore.v1beta.DeleteFederationRequest} DeleteFederationRequest instance
                         */
                        DeleteFederationRequest.create = function create(properties) {
                            return new DeleteFederationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFederationRequest message. Does not implicitly {@link google.cloud.metastore.v1beta.DeleteFederationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteFederationRequest} message DeleteFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFederationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFederationRequest message, length delimited. Does not implicitly {@link google.cloud.metastore.v1beta.DeleteFederationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.IDeleteFederationRequest} message DeleteFederationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFederationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFederationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.metastore.v1beta.DeleteFederationRequest} DeleteFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFederationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.metastore.v1beta.DeleteFederationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFederationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.metastore.v1beta.DeleteFederationRequest} DeleteFederationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFederationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFederationRequest message.
                         * @function verify
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFederationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFederationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.metastore.v1beta.DeleteFederationRequest} DeleteFederationRequest
                         */
                        DeleteFederationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.metastore.v1beta.DeleteFederationRequest)
                                return object;
                            var message = new $root.google.cloud.metastore.v1beta.DeleteFederationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFederationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {google.cloud.metastore.v1beta.DeleteFederationRequest} message DeleteFederationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFederationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFederationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFederationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFederationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.metastore.v1beta.DeleteFederationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFederationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.metastore.v1beta.DeleteFederationRequest";
                        };
    
                        return DeleteFederationRequest;
                    })();
    
                    return v1beta;
                })();
    
                return metastore;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            return protobuf;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            /**
             * DayOfWeek enum.
             * @name google.type.DayOfWeek
             * @enum {number}
             * @property {number} DAY_OF_WEEK_UNSPECIFIED=0 DAY_OF_WEEK_UNSPECIFIED value
             * @property {number} MONDAY=1 MONDAY value
             * @property {number} TUESDAY=2 TUESDAY value
             * @property {number} WEDNESDAY=3 WEDNESDAY value
             * @property {number} THURSDAY=4 THURSDAY value
             * @property {number} FRIDAY=5 FRIDAY value
             * @property {number} SATURDAY=6 SATURDAY value
             * @property {number} SUNDAY=7 SUNDAY value
             */
            type.DayOfWeek = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "DAY_OF_WEEK_UNSPECIFIED"] = 0;
                values[valuesById[1] = "MONDAY"] = 1;
                values[valuesById[2] = "TUESDAY"] = 2;
                values[valuesById[3] = "WEDNESDAY"] = 3;
                values[valuesById[4] = "THURSDAY"] = 4;
                values[valuesById[5] = "FRIDAY"] = 5;
                values[valuesById[6] = "SATURDAY"] = 6;
                values[valuesById[7] = "SUNDAY"] = 7;
                return values;
            })();
    
            return type;
        })();
    
        return google;
    })();

    return $root;
});
