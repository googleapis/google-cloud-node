{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "metastore": {
              "nested": {
                "v1": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/cloud/metastore/v1;metastore",
                    "java_multiple_files": true,
                    "java_outer_classname": "MetastoreFederationProto",
                    "java_package": "com.google.cloud.metastore.v1",
                    "php_namespace": "Google\\Cloud\\Metastore\\V1",
                    "(google.api.resource_definition).type": "compute.googleapis.com/Subnetwork",
                    "(google.api.resource_definition).pattern": "projects/{project}/regions/{region}/subnetworks/{subnetwork}"
                  },
                  "nested": {
                    "DataprocMetastore": {
                      "options": {
                        "(google.api.default_host)": "metastore.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListServices": {
                          "requestType": "ListServicesRequest",
                          "responseType": "ListServicesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/services",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/services"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetService": {
                          "requestType": "GetServiceRequest",
                          "responseType": "Service",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/services/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/services/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateService": {
                          "requestType": "CreateServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/services",
                            "(google.api.http).body": "service",
                            "(google.api.method_signature)": "parent,service,service_id",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/services",
                                "body": "service"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,service,service_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateService": {
                          "requestType": "UpdateServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{service.name=projects/*/locations/*/services/*}",
                            "(google.api.http).body": "service",
                            "(google.api.method_signature)": "service,update_mask",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{service.name=projects/*/locations/*/services/*}",
                                "body": "service"
                              }
                            },
                            {
                              "(google.api.method_signature)": "service,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteService": {
                          "requestType": "DeleteServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/services/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/services/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListMetadataImports": {
                          "requestType": "ListMetadataImportsRequest",
                          "responseType": "ListMetadataImportsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/services/*}/metadataImports",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/services/*}/metadataImports"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetMetadataImport": {
                          "requestType": "GetMetadataImportRequest",
                          "responseType": "MetadataImport",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/services/*/metadataImports/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/services/*/metadataImports/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateMetadataImport": {
                          "requestType": "CreateMetadataImportRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/services/*}/metadataImports",
                            "(google.api.http).body": "metadata_import",
                            "(google.api.method_signature)": "parent,metadata_import,metadata_import_id",
                            "(google.longrunning.operation_info).response_type": "MetadataImport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/services/*}/metadataImports",
                                "body": "metadata_import"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,metadata_import,metadata_import_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataImport",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateMetadataImport": {
                          "requestType": "UpdateMetadataImportRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{metadata_import.name=projects/*/locations/*/services/*/metadataImports/*}",
                            "(google.api.http).body": "metadata_import",
                            "(google.api.method_signature)": "metadata_import,update_mask",
                            "(google.longrunning.operation_info).response_type": "MetadataImport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{metadata_import.name=projects/*/locations/*/services/*/metadataImports/*}",
                                "body": "metadata_import"
                              }
                            },
                            {
                              "(google.api.method_signature)": "metadata_import,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataImport",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportMetadata": {
                          "requestType": "ExportMetadataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{service=projects/*/locations/*/services/*}:exportMetadata",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MetadataExport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{service=projects/*/locations/*/services/*}:exportMetadata",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataExport",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "RestoreService": {
                          "requestType": "RestoreServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{service=projects/*/locations/*/services/*}:restore",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "service,backup",
                            "(google.longrunning.operation_info).response_type": "Restore",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{service=projects/*/locations/*/services/*}:restore",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "service,backup"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Restore",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListBackups": {
                          "requestType": "ListBackupsRequest",
                          "responseType": "ListBackupsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/services/*}/backups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/services/*}/backups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetBackup": {
                          "requestType": "GetBackupRequest",
                          "responseType": "Backup",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/services/*/backups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/services/*/backups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateBackup": {
                          "requestType": "CreateBackupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/services/*}/backups",
                            "(google.api.http).body": "backup",
                            "(google.api.method_signature)": "parent,backup,backup_id",
                            "(google.longrunning.operation_info).response_type": "Backup",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/services/*}/backups",
                                "body": "backup"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,backup,backup_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Backup",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteBackup": {
                          "requestType": "DeleteBackupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/services/*/backups/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/services/*/backups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "Service": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Service",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}"
                      },
                      "oneofs": {
                        "metastoreConfig": {
                          "oneof": [
                            "hiveMetastoreConfig"
                          ]
                        }
                      },
                      "fields": {
                        "hiveMetastoreConfig": {
                          "type": "HiveMetastoreConfig",
                          "id": 5
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "network": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "endpointUri": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "port": {
                          "type": "int32",
                          "id": 9
                        },
                        "state": {
                          "type": "State",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "stateMessage": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "artifactGcsUri": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "tier": {
                          "type": "Tier",
                          "id": 13
                        },
                        "maintenanceWindow": {
                          "type": "MaintenanceWindow",
                          "id": 15
                        },
                        "uid": {
                          "type": "string",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metadataManagementActivity": {
                          "type": "MetadataManagementActivity",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "releaseChannel": {
                          "type": "ReleaseChannel",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "encryptionConfig": {
                          "type": "EncryptionConfig",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "networkConfig": {
                          "type": "NetworkConfig",
                          "id": 21
                        },
                        "databaseType": {
                          "type": "DatabaseType",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "telemetryConfig": {
                          "type": "TelemetryConfig",
                          "id": 23
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "ACTIVE": 2,
                            "SUSPENDING": 3,
                            "SUSPENDED": 4,
                            "UPDATING": 5,
                            "DELETING": 6,
                            "ERROR": 7
                          }
                        },
                        "Tier": {
                          "values": {
                            "TIER_UNSPECIFIED": 0,
                            "DEVELOPER": 1,
                            "ENTERPRISE": 3
                          }
                        },
                        "ReleaseChannel": {
                          "values": {
                            "RELEASE_CHANNEL_UNSPECIFIED": 0,
                            "CANARY": 1,
                            "STABLE": 2
                          }
                        },
                        "DatabaseType": {
                          "values": {
                            "DATABASE_TYPE_UNSPECIFIED": 0,
                            "MYSQL": 1,
                            "SPANNER": 2
                          }
                        }
                      }
                    },
                    "MaintenanceWindow": {
                      "fields": {
                        "hourOfDay": {
                          "type": "google.protobuf.Int32Value",
                          "id": 1
                        },
                        "dayOfWeek": {
                          "type": "google.type.DayOfWeek",
                          "id": 2
                        }
                      }
                    },
                    "HiveMetastoreConfig": {
                      "fields": {
                        "version": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "configOverrides": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "kerberosConfig": {
                          "type": "KerberosConfig",
                          "id": 3
                        }
                      }
                    },
                    "KerberosConfig": {
                      "fields": {
                        "keytab": {
                          "type": "Secret",
                          "id": 1
                        },
                        "principal": {
                          "type": "string",
                          "id": 2
                        },
                        "krb5ConfigGcsUri": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Secret": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "cloudSecret"
                          ]
                        }
                      },
                      "fields": {
                        "cloudSecret": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "EncryptionConfig": {
                      "fields": {
                        "kmsKey": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "NetworkConfig": {
                      "fields": {
                        "consumers": {
                          "rule": "repeated",
                          "type": "Consumer",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      },
                      "nested": {
                        "Consumer": {
                          "oneofs": {
                            "vpcResource": {
                              "oneof": [
                                "subnetwork"
                              ]
                            }
                          },
                          "fields": {
                            "subnetwork": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE",
                                "(google.api.resource_reference).type": "compute.googleapis.com/Subnetwork"
                              }
                            },
                            "endpointUri": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "TelemetryConfig": {
                      "fields": {
                        "logFormat": {
                          "type": "LogFormat",
                          "id": 1
                        }
                      },
                      "nested": {
                        "LogFormat": {
                          "values": {
                            "LOG_FORMAT_UNSPECIFIED": 0,
                            "LEGACY": 1,
                            "JSON": 2
                          }
                        }
                      }
                    },
                    "MetadataManagementActivity": {
                      "fields": {
                        "metadataExports": {
                          "rule": "repeated",
                          "type": "MetadataExport",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "restores": {
                          "rule": "repeated",
                          "type": "Restore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "MetadataImport": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/MetadataImport",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}/metadataImports/{metadata_import}"
                      },
                      "oneofs": {
                        "metadata": {
                          "oneof": [
                            "databaseDump"
                          ]
                        }
                      },
                      "fields": {
                        "databaseDump": {
                          "type": "DatabaseDump",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "DatabaseDump": {
                          "fields": {
                            "databaseType": {
                              "type": "DatabaseType",
                              "id": 1,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "gcsUri": {
                              "type": "string",
                              "id": 2
                            },
                            "type": {
                              "type": "DatabaseDumpSpec.Type",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "DatabaseType": {
                              "values": {
                                "DATABASE_TYPE_UNSPECIFIED": 0,
                                "MYSQL": 1
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "UPDATING": 3,
                            "FAILED": 4
                          }
                        }
                      }
                    },
                    "MetadataExport": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "destinationGcsUri"
                          ]
                        }
                      },
                      "fields": {
                        "destinationGcsUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "databaseDumpType": {
                          "type": "DatabaseDumpSpec.Type",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "FAILED": 3,
                            "CANCELLED": 4
                          }
                        }
                      }
                    },
                    "Backup": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Backup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}/backups/{backup}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceRevision": {
                          "type": "Service",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 6
                        },
                        "restoringServices": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "DELETING": 2,
                            "ACTIVE": 3,
                            "FAILED": 4,
                            "RESTORING": 5
                          }
                        }
                      }
                    },
                    "Restore": {
                      "fields": {
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "backup": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "type": {
                          "type": "RestoreType",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "details": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "FAILED": 3,
                            "CANCELLED": 4
                          }
                        },
                        "RestoreType": {
                          "values": {
                            "RESTORE_TYPE_UNSPECIFIED": 0,
                            "FULL": 1,
                            "METADATA_ONLY": 2
                          }
                        }
                      }
                    },
                    "ListServicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Service"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListServicesResponse": {
                      "fields": {
                        "services": {
                          "rule": "repeated",
                          "type": "Service",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetServiceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        }
                      }
                    },
                    "CreateServiceRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Service"
                          }
                        },
                        "serviceId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateServiceRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteServiceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListMetadataImportsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/MetadataImport"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListMetadataImportsResponse": {
                      "fields": {
                        "metadataImports": {
                          "rule": "repeated",
                          "type": "MetadataImport",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetMetadataImportRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/MetadataImport"
                          }
                        }
                      }
                    },
                    "CreateMetadataImportRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/MetadataImport"
                          }
                        },
                        "metadataImportId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataImport": {
                          "type": "MetadataImport",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateMetadataImportRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataImport": {
                          "type": "MetadataImport",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListBackupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListBackupsResponse": {
                      "fields": {
                        "backups": {
                          "rule": "repeated",
                          "type": "Backup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetBackupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        }
                      }
                    },
                    "CreateBackupRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "backupId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "backup": {
                          "type": "Backup",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteBackupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ExportMetadataRequest": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "destinationGcsFolder"
                          ]
                        }
                      },
                      "fields": {
                        "destinationGcsFolder": {
                          "type": "string",
                          "id": 2
                        },
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "databaseDumpType": {
                          "type": "DatabaseDumpSpec.Type",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RestoreServiceRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "backup": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "restoreType": {
                          "type": "Restore.RestoreType",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "LocationMetadata": {
                      "fields": {
                        "supportedHiveMetastoreVersions": {
                          "rule": "repeated",
                          "type": "HiveMetastoreVersion",
                          "id": 1
                        }
                      },
                      "nested": {
                        "HiveMetastoreVersion": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1
                            },
                            "isDefault": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "DatabaseDumpSpec": {
                      "fields": {},
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "MYSQL": 1,
                            "AVRO": 2
                          }
                        }
                      }
                    },
                    "DataprocMetastoreFederation": {
                      "options": {
                        "(google.api.default_host)": "metastore.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListFederations": {
                          "requestType": "ListFederationsRequest",
                          "responseType": "ListFederationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/federations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/federations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetFederation": {
                          "requestType": "GetFederationRequest",
                          "responseType": "Federation",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/federations/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/federations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateFederation": {
                          "requestType": "CreateFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/federations",
                            "(google.api.http).body": "federation",
                            "(google.api.method_signature)": "parent,federation,federation_id",
                            "(google.longrunning.operation_info).response_type": "Federation",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/federations",
                                "body": "federation"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,federation,federation_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Federation",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateFederation": {
                          "requestType": "UpdateFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{federation.name=projects/*/locations/*/federations/*}",
                            "(google.api.http).body": "federation",
                            "(google.api.method_signature)": "federation,update_mask",
                            "(google.longrunning.operation_info).response_type": "Federation",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{federation.name=projects/*/locations/*/federations/*}",
                                "body": "federation"
                              }
                            },
                            {
                              "(google.api.method_signature)": "federation,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Federation",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFederation": {
                          "requestType": "DeleteFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/federations/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/federations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1.OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "Federation": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Federation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/federations/{federation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "version": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "backendMetastores": {
                          "keyType": "int32",
                          "type": "BackendMetastore",
                          "id": 6
                        },
                        "endpointUri": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "stateMessage": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "ACTIVE": 2,
                            "UPDATING": 3,
                            "DELETING": 4,
                            "ERROR": 5
                          }
                        }
                      }
                    },
                    "BackendMetastore": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "metastoreType": {
                          "type": "MetastoreType",
                          "id": 2
                        }
                      },
                      "nested": {
                        "MetastoreType": {
                          "values": {
                            "METASTORE_TYPE_UNSPECIFIED": 0,
                            "DATAPROC_METASTORE": 3
                          }
                        }
                      }
                    },
                    "ListFederationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListFederationsResponse": {
                      "fields": {
                        "federations": {
                          "rule": "repeated",
                          "type": "Federation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetFederationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Federation"
                          }
                        }
                      }
                    },
                    "CreateFederationRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "federationId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "federation": {
                          "type": "Federation",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateFederationRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "federation": {
                          "type": "Federation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteFederationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    }
                  }
                },
                "v1alpha": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/cloud/metastore/v1alpha;metastore",
                    "java_multiple_files": true,
                    "java_outer_classname": "MetastoreFederationProto",
                    "java_package": "com.google.cloud.metastore.v1alpha",
                    "php_namespace": "Google\\Cloud\\Metastore\\V1alpha",
                    "(google.api.resource_definition).type": "dataplex.googleapis.com/Lake",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/lakes/{lake}"
                  },
                  "nested": {
                    "DataprocMetastore": {
                      "options": {
                        "(google.api.default_host)": "metastore.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListServices": {
                          "requestType": "ListServicesRequest",
                          "responseType": "ListServicesResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=projects/*/locations/*}/services",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=projects/*/locations/*}/services"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetService": {
                          "requestType": "GetServiceRequest",
                          "responseType": "Service",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=projects/*/locations/*/services/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=projects/*/locations/*/services/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateService": {
                          "requestType": "CreateServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=projects/*/locations/*}/services",
                            "(google.api.http).body": "service",
                            "(google.api.method_signature)": "parent,service,service_id",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=projects/*/locations/*}/services",
                                "body": "service"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,service,service_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateService": {
                          "requestType": "UpdateServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1alpha/{service.name=projects/*/locations/*/services/*}",
                            "(google.api.http).body": "service",
                            "(google.api.method_signature)": "service,update_mask",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1alpha/{service.name=projects/*/locations/*/services/*}",
                                "body": "service"
                              }
                            },
                            {
                              "(google.api.method_signature)": "service,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteService": {
                          "requestType": "DeleteServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1alpha/{name=projects/*/locations/*/services/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1alpha/{name=projects/*/locations/*/services/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListMetadataImports": {
                          "requestType": "ListMetadataImportsRequest",
                          "responseType": "ListMetadataImportsResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=projects/*/locations/*/services/*}/metadataImports",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=projects/*/locations/*/services/*}/metadataImports"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetMetadataImport": {
                          "requestType": "GetMetadataImportRequest",
                          "responseType": "MetadataImport",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=projects/*/locations/*/services/*/metadataImports/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=projects/*/locations/*/services/*/metadataImports/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateMetadataImport": {
                          "requestType": "CreateMetadataImportRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=projects/*/locations/*/services/*}/metadataImports",
                            "(google.api.http).body": "metadata_import",
                            "(google.api.method_signature)": "parent,metadata_import,metadata_import_id",
                            "(google.longrunning.operation_info).response_type": "MetadataImport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=projects/*/locations/*/services/*}/metadataImports",
                                "body": "metadata_import"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,metadata_import,metadata_import_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataImport",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateMetadataImport": {
                          "requestType": "UpdateMetadataImportRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1alpha/{metadata_import.name=projects/*/locations/*/services/*/metadataImports/*}",
                            "(google.api.http).body": "metadata_import",
                            "(google.api.method_signature)": "metadata_import,update_mask",
                            "(google.longrunning.operation_info).response_type": "MetadataImport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1alpha/{metadata_import.name=projects/*/locations/*/services/*/metadataImports/*}",
                                "body": "metadata_import"
                              }
                            },
                            {
                              "(google.api.method_signature)": "metadata_import,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataImport",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportMetadata": {
                          "requestType": "ExportMetadataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{service=projects/*/locations/*/services/*}:exportMetadata",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MetadataExport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{service=projects/*/locations/*/services/*}:exportMetadata",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataExport",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "RestoreService": {
                          "requestType": "RestoreServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{service=projects/*/locations/*/services/*}:restore",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "service,backup",
                            "(google.longrunning.operation_info).response_type": "Restore",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{service=projects/*/locations/*/services/*}:restore",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "service,backup"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Restore",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListBackups": {
                          "requestType": "ListBackupsRequest",
                          "responseType": "ListBackupsResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=projects/*/locations/*/services/*}/backups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=projects/*/locations/*/services/*}/backups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetBackup": {
                          "requestType": "GetBackupRequest",
                          "responseType": "Backup",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=projects/*/locations/*/services/*/backups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=projects/*/locations/*/services/*/backups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateBackup": {
                          "requestType": "CreateBackupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=projects/*/locations/*/services/*}/backups",
                            "(google.api.http).body": "backup",
                            "(google.api.method_signature)": "parent,backup,backup_id",
                            "(google.longrunning.operation_info).response_type": "Backup",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=projects/*/locations/*/services/*}/backups",
                                "body": "backup"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,backup,backup_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Backup",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteBackup": {
                          "requestType": "DeleteBackupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1alpha/{name=projects/*/locations/*/services/*/backups/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1alpha/{name=projects/*/locations/*/services/*/backups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "RemoveIamPolicy": {
                          "requestType": "RemoveIamPolicyRequest",
                          "responseType": "RemoveIamPolicyResponse",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{resource=projects/*/locations/*/services/*/**}:removeIamPolicy",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{resource=projects/*/locations/*/services/*/**}:removeIamPolicy",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "QueryMetadata": {
                          "requestType": "QueryMetadataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{service=projects/*/locations/*/services/*}:queryMetadata",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "QueryMetadataResponse",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{service=projects/*/locations/*/services/*}:queryMetadata",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "QueryMetadataResponse",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "MoveTableToDatabase": {
                          "requestType": "MoveTableToDatabaseRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{service=projects/*/locations/*/services/*}:moveTableToDatabase",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MoveTableToDatabaseResponse",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{service=projects/*/locations/*/services/*}:moveTableToDatabase",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MoveTableToDatabaseResponse",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "AlterMetadataResourceLocation": {
                          "requestType": "AlterMetadataResourceLocationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{service=projects/*/locations/*/services/*}:alterLocation",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "AlterMetadataResourceLocationResponse",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{service=projects/*/locations/*/services/*}:alterLocation",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "AlterMetadataResourceLocationResponse",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "Service": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Service",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}"
                      },
                      "oneofs": {
                        "metastoreConfig": {
                          "oneof": [
                            "hiveMetastoreConfig"
                          ]
                        }
                      },
                      "fields": {
                        "hiveMetastoreConfig": {
                          "type": "HiveMetastoreConfig",
                          "id": 5
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "network": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "endpointUri": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "port": {
                          "type": "int32",
                          "id": 9
                        },
                        "state": {
                          "type": "State",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "stateMessage": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "artifactGcsUri": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "tier": {
                          "type": "Tier",
                          "id": 13
                        },
                        "metadataIntegration": {
                          "type": "MetadataIntegration",
                          "id": 14
                        },
                        "maintenanceWindow": {
                          "type": "MaintenanceWindow",
                          "id": 15
                        },
                        "uid": {
                          "type": "string",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metadataManagementActivity": {
                          "type": "MetadataManagementActivity",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "releaseChannel": {
                          "type": "ReleaseChannel",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "encryptionConfig": {
                          "type": "EncryptionConfig",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "networkConfig": {
                          "type": "NetworkConfig",
                          "id": 21
                        },
                        "databaseType": {
                          "type": "DatabaseType",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "telemetryConfig": {
                          "type": "TelemetryConfig",
                          "id": 23
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "ACTIVE": 2,
                            "SUSPENDING": 3,
                            "SUSPENDED": 4,
                            "UPDATING": 5,
                            "DELETING": 6,
                            "ERROR": 7
                          }
                        },
                        "Tier": {
                          "values": {
                            "TIER_UNSPECIFIED": 0,
                            "DEVELOPER": 1,
                            "ENTERPRISE": 3
                          }
                        },
                        "ReleaseChannel": {
                          "values": {
                            "RELEASE_CHANNEL_UNSPECIFIED": 0,
                            "CANARY": 1,
                            "STABLE": 2
                          }
                        },
                        "DatabaseType": {
                          "values": {
                            "DATABASE_TYPE_UNSPECIFIED": 0,
                            "MYSQL": 1,
                            "SPANNER": 2
                          }
                        }
                      }
                    },
                    "MetadataIntegration": {
                      "fields": {
                        "dataCatalogConfig": {
                          "type": "DataCatalogConfig",
                          "id": 1
                        },
                        "dataplexConfig": {
                          "type": "DataplexConfig",
                          "id": 2
                        }
                      }
                    },
                    "DataCatalogConfig": {
                      "fields": {
                        "enabled": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "DataplexConfig": {
                      "fields": {
                        "lakeResources": {
                          "keyType": "string",
                          "type": "Lake",
                          "id": 1
                        }
                      }
                    },
                    "Lake": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        }
                      }
                    },
                    "MaintenanceWindow": {
                      "fields": {
                        "hourOfDay": {
                          "type": "google.protobuf.Int32Value",
                          "id": 1
                        },
                        "dayOfWeek": {
                          "type": "google.type.DayOfWeek",
                          "id": 2
                        }
                      }
                    },
                    "HiveMetastoreConfig": {
                      "fields": {
                        "version": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "configOverrides": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "kerberosConfig": {
                          "type": "KerberosConfig",
                          "id": 3
                        },
                        "endpointProtocol": {
                          "type": "EndpointProtocol",
                          "id": 4
                        },
                        "auxiliaryVersions": {
                          "keyType": "string",
                          "type": "AuxiliaryVersionConfig",
                          "id": 5
                        }
                      },
                      "nested": {
                        "EndpointProtocol": {
                          "values": {
                            "ENDPOINT_PROTOCOL_UNSPECIFIED": 0,
                            "THRIFT": 1,
                            "GRPC": 2
                          }
                        }
                      }
                    },
                    "KerberosConfig": {
                      "fields": {
                        "keytab": {
                          "type": "Secret",
                          "id": 1
                        },
                        "principal": {
                          "type": "string",
                          "id": 2
                        },
                        "krb5ConfigGcsUri": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Secret": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "cloudSecret"
                          ]
                        }
                      },
                      "fields": {
                        "cloudSecret": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "EncryptionConfig": {
                      "fields": {
                        "kmsKey": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "AuxiliaryVersionConfig": {
                      "fields": {
                        "version": {
                          "type": "string",
                          "id": 1
                        },
                        "configOverrides": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "networkConfig": {
                          "type": "NetworkConfig",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "NetworkConfig": {
                      "fields": {
                        "consumers": {
                          "rule": "repeated",
                          "type": "Consumer",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      },
                      "nested": {
                        "Consumer": {
                          "oneofs": {
                            "vpcResource": {
                              "oneof": [
                                "subnetwork"
                              ]
                            }
                          },
                          "fields": {
                            "subnetwork": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE",
                                "(google.api.resource_reference).type": "compute.googleapis.com/Subnetwork"
                              }
                            },
                            "endpointUri": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "TelemetryConfig": {
                      "fields": {
                        "logFormat": {
                          "type": "LogFormat",
                          "id": 1
                        }
                      },
                      "nested": {
                        "LogFormat": {
                          "values": {
                            "LOG_FORMAT_UNSPECIFIED": 0,
                            "LEGACY": 1,
                            "JSON": 2
                          }
                        }
                      }
                    },
                    "MetadataManagementActivity": {
                      "fields": {
                        "metadataExports": {
                          "rule": "repeated",
                          "type": "MetadataExport",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "restores": {
                          "rule": "repeated",
                          "type": "Restore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "MetadataImport": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/MetadataImport",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}/metadataImports/{metadata_import}"
                      },
                      "oneofs": {
                        "metadata": {
                          "oneof": [
                            "databaseDump"
                          ]
                        }
                      },
                      "fields": {
                        "databaseDump": {
                          "type": "DatabaseDump",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "DatabaseDump": {
                          "fields": {
                            "databaseType": {
                              "type": "DatabaseType",
                              "id": 1,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "gcsUri": {
                              "type": "string",
                              "id": 2
                            },
                            "sourceDatabase": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "type": {
                              "type": "DatabaseDumpSpec.Type",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "DatabaseType": {
                              "values": {
                                "DATABASE_TYPE_UNSPECIFIED": 0,
                                "MYSQL": 1
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "UPDATING": 3,
                            "FAILED": 4
                          }
                        }
                      }
                    },
                    "MetadataExport": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "destinationGcsUri"
                          ]
                        }
                      },
                      "fields": {
                        "destinationGcsUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "databaseDumpType": {
                          "type": "DatabaseDumpSpec.Type",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "FAILED": 3,
                            "CANCELLED": 4
                          }
                        }
                      }
                    },
                    "Backup": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Backup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}/backups/{backup}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceRevision": {
                          "type": "Service",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 6
                        },
                        "restoringServices": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "DELETING": 2,
                            "ACTIVE": 3,
                            "FAILED": 4,
                            "RESTORING": 5
                          }
                        }
                      }
                    },
                    "Restore": {
                      "fields": {
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "backup": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "type": {
                          "type": "RestoreType",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "details": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "FAILED": 3,
                            "CANCELLED": 4
                          }
                        },
                        "RestoreType": {
                          "values": {
                            "RESTORE_TYPE_UNSPECIFIED": 0,
                            "FULL": 1,
                            "METADATA_ONLY": 2
                          }
                        }
                      }
                    },
                    "ListServicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Service"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListServicesResponse": {
                      "fields": {
                        "services": {
                          "rule": "repeated",
                          "type": "Service",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetServiceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        }
                      }
                    },
                    "CreateServiceRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Service"
                          }
                        },
                        "serviceId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateServiceRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteServiceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListMetadataImportsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/MetadataImport"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListMetadataImportsResponse": {
                      "fields": {
                        "metadataImports": {
                          "rule": "repeated",
                          "type": "MetadataImport",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetMetadataImportRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/MetadataImport"
                          }
                        }
                      }
                    },
                    "CreateMetadataImportRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/MetadataImport"
                          }
                        },
                        "metadataImportId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataImport": {
                          "type": "MetadataImport",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateMetadataImportRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataImport": {
                          "type": "MetadataImport",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListBackupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListBackupsResponse": {
                      "fields": {
                        "backups": {
                          "rule": "repeated",
                          "type": "Backup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetBackupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        }
                      }
                    },
                    "CreateBackupRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "backupId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "backup": {
                          "type": "Backup",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteBackupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ExportMetadataRequest": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "destinationGcsFolder"
                          ]
                        }
                      },
                      "fields": {
                        "destinationGcsFolder": {
                          "type": "string",
                          "id": 2
                        },
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "databaseDumpType": {
                          "type": "DatabaseDumpSpec.Type",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RestoreServiceRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "backup": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "restoreType": {
                          "type": "Restore.RestoreType",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "LocationMetadata": {
                      "fields": {
                        "supportedHiveMetastoreVersions": {
                          "rule": "repeated",
                          "type": "HiveMetastoreVersion",
                          "id": 1
                        }
                      },
                      "nested": {
                        "HiveMetastoreVersion": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1
                            },
                            "isDefault": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "DatabaseDumpSpec": {
                      "fields": {},
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "MYSQL": 1,
                            "AVRO": 2
                          }
                        }
                      }
                    },
                    "RemoveIamPolicyRequest": {
                      "fields": {
                        "resource": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "*"
                          }
                        },
                        "asynchronous": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RemoveIamPolicyResponse": {
                      "fields": {
                        "success": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "QueryMetadataRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "query": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "QueryMetadataResponse": {
                      "fields": {
                        "resultManifestUri": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "MoveTableToDatabaseRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "tableName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dbName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "destinationDbName": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MoveTableToDatabaseResponse": {
                      "fields": {}
                    },
                    "AlterMetadataResourceLocationRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "resourceName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "locationUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "AlterMetadataResourceLocationResponse": {
                      "fields": {}
                    },
                    "DataprocMetastoreFederation": {
                      "options": {
                        "(google.api.default_host)": "metastore.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListFederations": {
                          "requestType": "ListFederationsRequest",
                          "responseType": "ListFederationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=projects/*/locations/*}/federations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=projects/*/locations/*}/federations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetFederation": {
                          "requestType": "GetFederationRequest",
                          "responseType": "Federation",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=projects/*/locations/*/federations/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=projects/*/locations/*/federations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateFederation": {
                          "requestType": "CreateFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=projects/*/locations/*}/federations",
                            "(google.api.http).body": "federation",
                            "(google.api.method_signature)": "parent,federation,federation_id",
                            "(google.longrunning.operation_info).response_type": "Federation",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=projects/*/locations/*}/federations",
                                "body": "federation"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,federation,federation_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Federation",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateFederation": {
                          "requestType": "UpdateFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1alpha/{federation.name=projects/*/locations/*/federations/*}",
                            "(google.api.http).body": "federation",
                            "(google.api.method_signature)": "federation,update_mask",
                            "(google.longrunning.operation_info).response_type": "Federation",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1alpha/{federation.name=projects/*/locations/*/federations/*}",
                                "body": "federation"
                              }
                            },
                            {
                              "(google.api.method_signature)": "federation,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Federation",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFederation": {
                          "requestType": "DeleteFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1alpha/{name=projects/*/locations/*/federations/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1alpha/{name=projects/*/locations/*/federations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "Federation": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Federation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/federations/{federation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "version": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "backendMetastores": {
                          "keyType": "int32",
                          "type": "BackendMetastore",
                          "id": 6
                        },
                        "endpointUri": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "stateMessage": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "ACTIVE": 2,
                            "UPDATING": 3,
                            "DELETING": 4,
                            "ERROR": 5
                          }
                        }
                      }
                    },
                    "BackendMetastore": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "metastoreType": {
                          "type": "MetastoreType",
                          "id": 2
                        }
                      },
                      "nested": {
                        "MetastoreType": {
                          "values": {
                            "METASTORE_TYPE_UNSPECIFIED": 0,
                            "BIGQUERY": 2,
                            "DATAPROC_METASTORE": 3
                          }
                        }
                      }
                    },
                    "ListFederationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListFederationsResponse": {
                      "fields": {
                        "federations": {
                          "rule": "repeated",
                          "type": "Federation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetFederationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Federation"
                          }
                        }
                      }
                    },
                    "CreateFederationRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "federationId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "federation": {
                          "type": "Federation",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateFederationRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "federation": {
                          "type": "Federation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteFederationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    }
                  }
                },
                "v1beta": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/cloud/metastore/v1beta;metastore",
                    "java_multiple_files": true,
                    "java_outer_classname": "MetastoreFederationProto",
                    "java_package": "com.google.cloud.metastore.v1beta",
                    "php_namespace": "Google\\Cloud\\Metastore\\V1beta",
                    "(google.api.resource_definition).type": "dataplex.googleapis.com/Lake",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/lakes/{lake}"
                  },
                  "nested": {
                    "DataprocMetastore": {
                      "options": {
                        "(google.api.default_host)": "metastore.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListServices": {
                          "requestType": "ListServicesRequest",
                          "responseType": "ListServicesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta/{parent=projects/*/locations/*}/services",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{parent=projects/*/locations/*}/services"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetService": {
                          "requestType": "GetServiceRequest",
                          "responseType": "Service",
                          "options": {
                            "(google.api.http).get": "/v1beta/{name=projects/*/locations/*/services/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{name=projects/*/locations/*/services/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateService": {
                          "requestType": "CreateServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{parent=projects/*/locations/*}/services",
                            "(google.api.http).body": "service",
                            "(google.api.method_signature)": "parent,service,service_id",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{parent=projects/*/locations/*}/services",
                                "body": "service"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,service,service_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateService": {
                          "requestType": "UpdateServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta/{service.name=projects/*/locations/*/services/*}",
                            "(google.api.http).body": "service",
                            "(google.api.method_signature)": "service,update_mask",
                            "(google.longrunning.operation_info).response_type": "Service",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta/{service.name=projects/*/locations/*/services/*}",
                                "body": "service"
                              }
                            },
                            {
                              "(google.api.method_signature)": "service,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Service",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteService": {
                          "requestType": "DeleteServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta/{name=projects/*/locations/*/services/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta/{name=projects/*/locations/*/services/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListMetadataImports": {
                          "requestType": "ListMetadataImportsRequest",
                          "responseType": "ListMetadataImportsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta/{parent=projects/*/locations/*/services/*}/metadataImports",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{parent=projects/*/locations/*/services/*}/metadataImports"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetMetadataImport": {
                          "requestType": "GetMetadataImportRequest",
                          "responseType": "MetadataImport",
                          "options": {
                            "(google.api.http).get": "/v1beta/{name=projects/*/locations/*/services/*/metadataImports/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{name=projects/*/locations/*/services/*/metadataImports/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateMetadataImport": {
                          "requestType": "CreateMetadataImportRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{parent=projects/*/locations/*/services/*}/metadataImports",
                            "(google.api.http).body": "metadata_import",
                            "(google.api.method_signature)": "parent,metadata_import,metadata_import_id",
                            "(google.longrunning.operation_info).response_type": "MetadataImport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{parent=projects/*/locations/*/services/*}/metadataImports",
                                "body": "metadata_import"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,metadata_import,metadata_import_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataImport",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateMetadataImport": {
                          "requestType": "UpdateMetadataImportRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta/{metadata_import.name=projects/*/locations/*/services/*/metadataImports/*}",
                            "(google.api.http).body": "metadata_import",
                            "(google.api.method_signature)": "metadata_import,update_mask",
                            "(google.longrunning.operation_info).response_type": "MetadataImport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta/{metadata_import.name=projects/*/locations/*/services/*/metadataImports/*}",
                                "body": "metadata_import"
                              }
                            },
                            {
                              "(google.api.method_signature)": "metadata_import,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataImport",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportMetadata": {
                          "requestType": "ExportMetadataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{service=projects/*/locations/*/services/*}:exportMetadata",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MetadataExport",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{service=projects/*/locations/*/services/*}:exportMetadata",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataExport",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "RestoreService": {
                          "requestType": "RestoreServiceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{service=projects/*/locations/*/services/*}:restore",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "service,backup",
                            "(google.longrunning.operation_info).response_type": "Restore",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{service=projects/*/locations/*/services/*}:restore",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "service,backup"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Restore",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListBackups": {
                          "requestType": "ListBackupsRequest",
                          "responseType": "ListBackupsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta/{parent=projects/*/locations/*/services/*}/backups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{parent=projects/*/locations/*/services/*}/backups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetBackup": {
                          "requestType": "GetBackupRequest",
                          "responseType": "Backup",
                          "options": {
                            "(google.api.http).get": "/v1beta/{name=projects/*/locations/*/services/*/backups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{name=projects/*/locations/*/services/*/backups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateBackup": {
                          "requestType": "CreateBackupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{parent=projects/*/locations/*/services/*}/backups",
                            "(google.api.http).body": "backup",
                            "(google.api.method_signature)": "parent,backup,backup_id",
                            "(google.longrunning.operation_info).response_type": "Backup",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{parent=projects/*/locations/*/services/*}/backups",
                                "body": "backup"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,backup,backup_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Backup",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteBackup": {
                          "requestType": "DeleteBackupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta/{name=projects/*/locations/*/services/*/backups/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta/{name=projects/*/locations/*/services/*/backups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "RemoveIamPolicy": {
                          "requestType": "RemoveIamPolicyRequest",
                          "responseType": "RemoveIamPolicyResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta/{resource=projects/*/locations/*/services/*/**}:removeIamPolicy",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{resource=projects/*/locations/*/services/*/**}:removeIamPolicy",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "QueryMetadata": {
                          "requestType": "QueryMetadataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{service=projects/*/locations/*/services/*}:queryMetadata",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "QueryMetadataResponse",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{service=projects/*/locations/*/services/*}:queryMetadata",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "QueryMetadataResponse",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "MoveTableToDatabase": {
                          "requestType": "MoveTableToDatabaseRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{service=projects/*/locations/*/services/*}:moveTableToDatabase",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "MoveTableToDatabaseResponse",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{service=projects/*/locations/*/services/*}:moveTableToDatabase",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MoveTableToDatabaseResponse",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "AlterMetadataResourceLocation": {
                          "requestType": "AlterMetadataResourceLocationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{service=projects/*/locations/*/services/*}:alterLocation",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "AlterMetadataResourceLocationResponse",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{service=projects/*/locations/*/services/*}:alterLocation",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "AlterMetadataResourceLocationResponse",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "Service": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Service",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}"
                      },
                      "oneofs": {
                        "metastoreConfig": {
                          "oneof": [
                            "hiveMetastoreConfig"
                          ]
                        }
                      },
                      "fields": {
                        "hiveMetastoreConfig": {
                          "type": "HiveMetastoreConfig",
                          "id": 5
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "network": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "endpointUri": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "port": {
                          "type": "int32",
                          "id": 9
                        },
                        "state": {
                          "type": "State",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "stateMessage": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "artifactGcsUri": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "tier": {
                          "type": "Tier",
                          "id": 13
                        },
                        "metadataIntegration": {
                          "type": "MetadataIntegration",
                          "id": 14
                        },
                        "maintenanceWindow": {
                          "type": "MaintenanceWindow",
                          "id": 15
                        },
                        "uid": {
                          "type": "string",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metadataManagementActivity": {
                          "type": "MetadataManagementActivity",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "releaseChannel": {
                          "type": "ReleaseChannel",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "encryptionConfig": {
                          "type": "EncryptionConfig",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "networkConfig": {
                          "type": "NetworkConfig",
                          "id": 21
                        },
                        "databaseType": {
                          "type": "DatabaseType",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "telemetryConfig": {
                          "type": "TelemetryConfig",
                          "id": 23
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "ACTIVE": 2,
                            "SUSPENDING": 3,
                            "SUSPENDED": 4,
                            "UPDATING": 5,
                            "DELETING": 6,
                            "ERROR": 7
                          }
                        },
                        "Tier": {
                          "values": {
                            "TIER_UNSPECIFIED": 0,
                            "DEVELOPER": 1,
                            "ENTERPRISE": 3
                          }
                        },
                        "ReleaseChannel": {
                          "values": {
                            "RELEASE_CHANNEL_UNSPECIFIED": 0,
                            "CANARY": 1,
                            "STABLE": 2
                          }
                        },
                        "DatabaseType": {
                          "values": {
                            "DATABASE_TYPE_UNSPECIFIED": 0,
                            "MYSQL": 1,
                            "SPANNER": 2
                          }
                        }
                      }
                    },
                    "MetadataIntegration": {
                      "fields": {
                        "dataCatalogConfig": {
                          "type": "DataCatalogConfig",
                          "id": 1
                        },
                        "dataplexConfig": {
                          "type": "DataplexConfig",
                          "id": 2
                        }
                      }
                    },
                    "DataCatalogConfig": {
                      "fields": {
                        "enabled": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "DataplexConfig": {
                      "fields": {
                        "lakeResources": {
                          "keyType": "string",
                          "type": "Lake",
                          "id": 1
                        }
                      }
                    },
                    "Lake": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "dataplex.googleapis.com/Lake"
                          }
                        }
                      }
                    },
                    "MaintenanceWindow": {
                      "fields": {
                        "hourOfDay": {
                          "type": "google.protobuf.Int32Value",
                          "id": 1
                        },
                        "dayOfWeek": {
                          "type": "google.type.DayOfWeek",
                          "id": 2
                        }
                      }
                    },
                    "HiveMetastoreConfig": {
                      "fields": {
                        "version": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "configOverrides": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "kerberosConfig": {
                          "type": "KerberosConfig",
                          "id": 3
                        },
                        "endpointProtocol": {
                          "type": "EndpointProtocol",
                          "id": 4
                        },
                        "auxiliaryVersions": {
                          "keyType": "string",
                          "type": "AuxiliaryVersionConfig",
                          "id": 5
                        }
                      },
                      "nested": {
                        "EndpointProtocol": {
                          "values": {
                            "ENDPOINT_PROTOCOL_UNSPECIFIED": 0,
                            "THRIFT": 1,
                            "GRPC": 2
                          }
                        }
                      }
                    },
                    "KerberosConfig": {
                      "fields": {
                        "keytab": {
                          "type": "Secret",
                          "id": 1
                        },
                        "principal": {
                          "type": "string",
                          "id": 2
                        },
                        "krb5ConfigGcsUri": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Secret": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "cloudSecret"
                          ]
                        }
                      },
                      "fields": {
                        "cloudSecret": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "EncryptionConfig": {
                      "fields": {
                        "kmsKey": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "AuxiliaryVersionConfig": {
                      "fields": {
                        "version": {
                          "type": "string",
                          "id": 1
                        },
                        "configOverrides": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "networkConfig": {
                          "type": "NetworkConfig",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "NetworkConfig": {
                      "fields": {
                        "consumers": {
                          "rule": "repeated",
                          "type": "Consumer",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      },
                      "nested": {
                        "Consumer": {
                          "oneofs": {
                            "vpcResource": {
                              "oneof": [
                                "subnetwork"
                              ]
                            }
                          },
                          "fields": {
                            "subnetwork": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE",
                                "(google.api.resource_reference).type": "compute.googleapis.com/Subnetwork"
                              }
                            },
                            "endpointUri": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "TelemetryConfig": {
                      "fields": {
                        "logFormat": {
                          "type": "LogFormat",
                          "id": 1
                        }
                      },
                      "nested": {
                        "LogFormat": {
                          "values": {
                            "LOG_FORMAT_UNSPECIFIED": 0,
                            "LEGACY": 1,
                            "JSON": 2
                          }
                        }
                      }
                    },
                    "MetadataManagementActivity": {
                      "fields": {
                        "metadataExports": {
                          "rule": "repeated",
                          "type": "MetadataExport",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "restores": {
                          "rule": "repeated",
                          "type": "Restore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "MetadataImport": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/MetadataImport",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}/metadataImports/{metadata_import}"
                      },
                      "oneofs": {
                        "metadata": {
                          "oneof": [
                            "databaseDump"
                          ]
                        }
                      },
                      "fields": {
                        "databaseDump": {
                          "type": "DatabaseDump",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "DatabaseDump": {
                          "fields": {
                            "databaseType": {
                              "type": "DatabaseType",
                              "id": 1,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "gcsUri": {
                              "type": "string",
                              "id": 2
                            },
                            "sourceDatabase": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "type": {
                              "type": "DatabaseDumpSpec.Type",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "DatabaseType": {
                              "values": {
                                "DATABASE_TYPE_UNSPECIFIED": 0,
                                "MYSQL": 1
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "UPDATING": 3,
                            "FAILED": 4
                          }
                        }
                      }
                    },
                    "MetadataExport": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "destinationGcsUri"
                          ]
                        }
                      },
                      "fields": {
                        "destinationGcsUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "databaseDumpType": {
                          "type": "DatabaseDumpSpec.Type",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "FAILED": 3,
                            "CANCELLED": 4
                          }
                        }
                      }
                    },
                    "Backup": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Backup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/services/{service}/backups/{backup}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceRevision": {
                          "type": "Service",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 6
                        },
                        "restoringServices": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "DELETING": 2,
                            "ACTIVE": 3,
                            "FAILED": 4,
                            "RESTORING": 5
                          }
                        }
                      }
                    },
                    "Restore": {
                      "fields": {
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "backup": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "type": {
                          "type": "RestoreType",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "details": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "SUCCEEDED": 2,
                            "FAILED": 3,
                            "CANCELLED": 4
                          }
                        },
                        "RestoreType": {
                          "values": {
                            "RESTORE_TYPE_UNSPECIFIED": 0,
                            "FULL": 1,
                            "METADATA_ONLY": 2
                          }
                        }
                      }
                    },
                    "ListServicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Service"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListServicesResponse": {
                      "fields": {
                        "services": {
                          "rule": "repeated",
                          "type": "Service",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetServiceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        }
                      }
                    },
                    "CreateServiceRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Service"
                          }
                        },
                        "serviceId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateServiceRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteServiceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListMetadataImportsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/MetadataImport"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListMetadataImportsResponse": {
                      "fields": {
                        "metadataImports": {
                          "rule": "repeated",
                          "type": "MetadataImport",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetMetadataImportRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/MetadataImport"
                          }
                        }
                      }
                    },
                    "CreateMetadataImportRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/MetadataImport"
                          }
                        },
                        "metadataImportId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataImport": {
                          "type": "MetadataImport",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateMetadataImportRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataImport": {
                          "type": "MetadataImport",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListBackupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListBackupsResponse": {
                      "fields": {
                        "backups": {
                          "rule": "repeated",
                          "type": "Backup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetBackupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        }
                      }
                    },
                    "CreateBackupRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "backupId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "backup": {
                          "type": "Backup",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteBackupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ExportMetadataRequest": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "destinationGcsFolder"
                          ]
                        }
                      },
                      "fields": {
                        "destinationGcsFolder": {
                          "type": "string",
                          "id": 2
                        },
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "databaseDumpType": {
                          "type": "DatabaseDumpSpec.Type",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RestoreServiceRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "backup": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Backup"
                          }
                        },
                        "restoreType": {
                          "type": "Restore.RestoreType",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "LocationMetadata": {
                      "fields": {
                        "supportedHiveMetastoreVersions": {
                          "rule": "repeated",
                          "type": "HiveMetastoreVersion",
                          "id": 1
                        }
                      },
                      "nested": {
                        "HiveMetastoreVersion": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1
                            },
                            "isDefault": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "DatabaseDumpSpec": {
                      "fields": {},
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "MYSQL": 1,
                            "AVRO": 2
                          }
                        }
                      }
                    },
                    "RemoveIamPolicyRequest": {
                      "fields": {
                        "resource": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "*"
                          }
                        },
                        "asynchronous": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RemoveIamPolicyResponse": {
                      "fields": {
                        "success": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "QueryMetadataRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "query": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "QueryMetadataResponse": {
                      "fields": {
                        "resultManifestUri": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "MoveTableToDatabaseRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "tableName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dbName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "destinationDbName": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MoveTableToDatabaseResponse": {
                      "fields": {}
                    },
                    "AlterMetadataResourceLocationRequest": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Service"
                          }
                        },
                        "resourceName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "locationUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "AlterMetadataResourceLocationResponse": {
                      "fields": {}
                    },
                    "DataprocMetastoreFederation": {
                      "options": {
                        "(google.api.default_host)": "metastore.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListFederations": {
                          "requestType": "ListFederationsRequest",
                          "responseType": "ListFederationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta/{parent=projects/*/locations/*}/federations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{parent=projects/*/locations/*}/federations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetFederation": {
                          "requestType": "GetFederationRequest",
                          "responseType": "Federation",
                          "options": {
                            "(google.api.http).get": "/v1beta/{name=projects/*/locations/*/federations/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{name=projects/*/locations/*/federations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateFederation": {
                          "requestType": "CreateFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{parent=projects/*/locations/*}/federations",
                            "(google.api.http).body": "federation",
                            "(google.api.method_signature)": "parent,federation,federation_id",
                            "(google.longrunning.operation_info).response_type": "Federation",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{parent=projects/*/locations/*}/federations",
                                "body": "federation"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,federation,federation_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Federation",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateFederation": {
                          "requestType": "UpdateFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta/{federation.name=projects/*/locations/*/federations/*}",
                            "(google.api.http).body": "federation",
                            "(google.api.method_signature)": "federation,update_mask",
                            "(google.longrunning.operation_info).response_type": "Federation",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta/{federation.name=projects/*/locations/*/federations/*}",
                                "body": "federation"
                              }
                            },
                            {
                              "(google.api.method_signature)": "federation,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Federation",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFederation": {
                          "requestType": "DeleteFederationRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta/{name=projects/*/locations/*/federations/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta/{name=projects/*/locations/*/federations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.metastore.v1beta.OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "Federation": {
                      "options": {
                        "(google.api.resource).type": "metastore.googleapis.com/Federation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/federations/{federation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "version": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "backendMetastores": {
                          "keyType": "int32",
                          "type": "BackendMetastore",
                          "id": 6
                        },
                        "endpointUri": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "stateMessage": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "ACTIVE": 2,
                            "UPDATING": 3,
                            "DELETING": 4,
                            "ERROR": 5
                          }
                        }
                      }
                    },
                    "BackendMetastore": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "metastoreType": {
                          "type": "MetastoreType",
                          "id": 2
                        }
                      },
                      "nested": {
                        "MetastoreType": {
                          "values": {
                            "METASTORE_TYPE_UNSPECIFIED": 0,
                            "BIGQUERY": 2,
                            "DATAPROC_METASTORE": 3
                          }
                        }
                      }
                    },
                    "ListFederationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListFederationsResponse": {
                      "fields": {
                        "federations": {
                          "rule": "repeated",
                          "type": "Federation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetFederationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Federation"
                          }
                        }
                      }
                    },
                    "CreateFederationRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "federationId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "federation": {
                          "type": "Federation",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateFederationRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "federation": {
                          "type": "Federation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteFederationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "metastore.googleapis.com/Federation"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "DoubleValue": {
              "fields": {
                "value": {
                  "type": "double",
                  "id": 1
                }
              }
            },
            "FloatValue": {
              "fields": {
                "value": {
                  "type": "float",
                  "id": 1
                }
              }
            },
            "Int64Value": {
              "fields": {
                "value": {
                  "type": "int64",
                  "id": 1
                }
              }
            },
            "UInt64Value": {
              "fields": {
                "value": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "Int32Value": {
              "fields": {
                "value": {
                  "type": "int32",
                  "id": 1
                }
              }
            },
            "UInt32Value": {
              "fields": {
                "value": {
                  "type": "uint32",
                  "id": 1
                }
              }
            },
            "BoolValue": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "StringValue": {
              "fields": {
                "value": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "BytesValue": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/dayofweek;dayofweek",
            "java_multiple_files": true,
            "java_outer_classname": "DayOfWeekProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "DayOfWeek": {
              "values": {
                "DAY_OF_WEEK_UNSPECIFIED": 0,
                "MONDAY": 1,
                "TUESDAY": 2,
                "WEDNESDAY": 3,
                "THURSDAY": 4,
                "FRIDAY": 5,
                "SATURDAY": 6,
                "SUNDAY": 7
              }
            }
          }
        }
      }
    }
  }
}