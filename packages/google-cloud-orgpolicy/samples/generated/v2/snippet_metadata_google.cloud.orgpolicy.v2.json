{
    "clientLibrary": {
        "name": "nodejs-orgpolicy",
        "version": "3.2.0",
        "language": "TYPESCRIPT",
        "apis": [
            {
                "id": "google.cloud.orgpolicy.v2",
                "version": "v2"
            }
        ]
    },
    "snippets": [
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_ListConstraints_async",
            "title": "OrgPolicy listConstraints Sample",
            "origin": "API_DEFINITION",
            "description": " Lists constraints that could be applied on the specified resource.",
            "canonical": true,
            "file": "org_policy.list_constraints.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 71,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "ListConstraints",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.ListConstraints",
                "async": true,
                "parameters": [
                    {
                        "name": "parent",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "page_size",
                        "type": "TYPE_INT32"
                    },
                    {
                        "name": "page_token",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.ListConstraintsResponse",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "ListConstraints",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.ListConstraints",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_ListPolicies_async",
            "title": "OrgPolicy listPolicies Sample",
            "origin": "API_DEFINITION",
            "description": " Retrieves all of the policies that exist on a particular resource.",
            "canonical": true,
            "file": "org_policy.list_policies.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 72,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "ListPolicies",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.ListPolicies",
                "async": true,
                "parameters": [
                    {
                        "name": "parent",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "page_size",
                        "type": "TYPE_INT32"
                    },
                    {
                        "name": "page_token",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.ListPoliciesResponse",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "ListPolicies",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.ListPolicies",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_GetPolicy_async",
            "title": "OrgPolicy getPolicy Sample",
            "origin": "API_DEFINITION",
            "description": " Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.",
            "canonical": true,
            "file": "org_policy.get_policy.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 54,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GetPolicy",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.GetPolicy",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.Policy",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "GetPolicy",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.GetPolicy",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_GetEffectivePolicy_async",
            "title": "OrgPolicy getEffectivePolicy Sample",
            "origin": "API_DEFINITION",
            "description": " Gets the effective policy on a resource. This is the result of merging policies in the resource hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition` set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager resource hierarchy with 'under:' prefix will not be expanded.",
            "canonical": true,
            "file": "org_policy.get_effective_policy.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 54,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GetEffectivePolicy",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.GetEffectivePolicy",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.Policy",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "GetEffectivePolicy",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.GetEffectivePolicy",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_CreatePolicy_async",
            "title": "OrgPolicy createPolicy Sample",
            "origin": "API_DEFINITION",
            "description": " Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the policy already exists on the given Google Cloud resource.",
            "canonical": true,
            "file": "org_policy.create_policy.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 63,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "CreatePolicy",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.CreatePolicy",
                "async": true,
                "parameters": [
                    {
                        "name": "parent",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "policy",
                        "type": ".google.cloud.orgpolicy.v2.Policy"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.Policy",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "CreatePolicy",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.CreatePolicy",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_UpdatePolicy_async",
            "title": "OrgPolicy updatePolicy Sample",
            "origin": "API_DEFINITION",
            "description": " Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or the policy do not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the policy Note: the supplied policy will perform a full overwrite of all fields.",
            "canonical": true,
            "file": "org_policy.update_policy.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 59,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "UpdatePolicy",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.UpdatePolicy",
                "async": true,
                "parameters": [
                    {
                        "name": "policy",
                        "type": ".google.cloud.orgpolicy.v2.Policy"
                    },
                    {
                        "name": "update_mask",
                        "type": ".google.protobuf.FieldMask"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.Policy",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "UpdatePolicy",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.UpdatePolicy",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_DeletePolicy_async",
            "title": "OrgPolicy deletePolicy Sample",
            "origin": "API_DEFINITION",
            "description": " Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or organization policy does not exist.",
            "canonical": true,
            "file": "org_policy.delete_policy.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 60,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "DeletePolicy",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.DeletePolicy",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "etag",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.protobuf.Empty",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "DeletePolicy",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.DeletePolicy",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_CreateCustomConstraint_async",
            "title": "OrgPolicy createCustomConstraint Sample",
            "origin": "API_DEFINITION",
            "description": " Creates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the organization does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the constraint already exists on the given organization.",
            "canonical": true,
            "file": "org_policy.create_custom_constraint.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 59,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "CreateCustomConstraint",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.CreateCustomConstraint",
                "async": true,
                "parameters": [
                    {
                        "name": "parent",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "custom_constraint",
                        "type": ".google.cloud.orgpolicy.v2.CustomConstraint"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.CustomConstraint",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "CreateCustomConstraint",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.CreateCustomConstraint",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_UpdateCustomConstraint_async",
            "title": "OrgPolicy updateCustomConstraint Sample",
            "origin": "API_DEFINITION",
            "description": " Updates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Note: the supplied policy will perform a full overwrite of all fields.",
            "canonical": true,
            "file": "org_policy.update_custom_constraint.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 53,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "UpdateCustomConstraint",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.UpdateCustomConstraint",
                "async": true,
                "parameters": [
                    {
                        "name": "custom_constraint",
                        "type": ".google.cloud.orgpolicy.v2.CustomConstraint"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.CustomConstraint",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "UpdateCustomConstraint",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.UpdateCustomConstraint",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_GetCustomConstraint_async",
            "title": "OrgPolicy getCustomConstraint Sample",
            "origin": "API_DEFINITION",
            "description": " Gets a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the custom constraint does not exist.",
            "canonical": true,
            "file": "org_policy.get_custom_constraint.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 54,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GetCustomConstraint",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.GetCustomConstraint",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.CustomConstraint",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "GetCustomConstraint",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.GetCustomConstraint",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_ListCustomConstraints_async",
            "title": "OrgPolicy listCustomConstraints Sample",
            "origin": "API_DEFINITION",
            "description": " Retrieves all of the custom constraints that exist on a particular organization resource.",
            "canonical": true,
            "file": "org_policy.list_custom_constraints.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 69,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "ListCustomConstraints",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.ListCustomConstraints",
                "async": true,
                "parameters": [
                    {
                        "name": "parent",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "page_size",
                        "type": "TYPE_INT32"
                    },
                    {
                        "name": "page_token",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.orgpolicy.v2.ListCustomConstraintsResponse",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "ListCustomConstraints",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.ListCustomConstraints",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        },
        {
            "regionTag": "orgpolicy_v2_generated_OrgPolicy_DeleteCustomConstraint_async",
            "title": "OrgPolicy deleteCustomConstraint Sample",
            "origin": "API_DEFINITION",
            "description": " Deletes a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist.",
            "canonical": true,
            "file": "org_policy.delete_custom_constraint.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 54,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "DeleteCustomConstraint",
                "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.DeleteCustomConstraint",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.protobuf.Empty",
                "client": {
                    "shortName": "OrgPolicyClient",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicyClient"
                },
                "method": {
                    "shortName": "DeleteCustomConstraint",
                    "fullName": "google.cloud.orgpolicy.v2.OrgPolicy.DeleteCustomConstraint",
                    "service": {
                        "shortName": "OrgPolicy",
                        "fullName": "google.cloud.orgpolicy.v2.OrgPolicy"
                    }
                }
            }
        }
    ]
}