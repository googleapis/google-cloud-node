{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "recaptchaenterprise": {
              "nested": {
                "v1": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.RecaptchaEnterprise.V1",
                    "go_package": "cloud.google.com/go/recaptchaenterprise/v2/apiv1/recaptchaenterprisepb;recaptchaenterprisepb",
                    "java_multiple_files": true,
                    "java_outer_classname": "RecaptchaEnterpriseProto",
                    "java_package": "com.google.recaptchaenterprise.v1",
                    "objc_class_prefix": "GCRE",
                    "php_namespace": "Google\\Cloud\\RecaptchaEnterprise\\V1",
                    "ruby_package": "Google::Cloud::RecaptchaEnterprise::V1"
                  },
                  "nested": {
                    "RecaptchaEnterpriseService": {
                      "options": {
                        "(google.api.default_host)": "recaptchaenterprise.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateAssessment": {
                          "requestType": "CreateAssessmentRequest",
                          "responseType": "Assessment",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*}/assessments",
                            "(google.api.http).body": "assessment",
                            "(google.api.method_signature)": "parent,assessment"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*}/assessments",
                                "body": "assessment"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,assessment"
                            }
                          ]
                        },
                        "AnnotateAssessment": {
                          "requestType": "AnnotateAssessmentRequest",
                          "responseType": "AnnotateAssessmentResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/assessments/*}:annotate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,annotation"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/assessments/*}:annotate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,annotation"
                            }
                          ]
                        },
                        "CreateKey": {
                          "requestType": "CreateKeyRequest",
                          "responseType": "Key",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*}/keys",
                            "(google.api.http).body": "key",
                            "(google.api.method_signature)": "parent,key"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*}/keys",
                                "body": "key"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,key"
                            }
                          ]
                        },
                        "ListKeys": {
                          "requestType": "ListKeysRequest",
                          "responseType": "ListKeysResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*}/keys",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*}/keys"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "RetrieveLegacySecretKey": {
                          "requestType": "RetrieveLegacySecretKeyRequest",
                          "responseType": "RetrieveLegacySecretKeyResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{key=projects/*/keys/*}:retrieveLegacySecretKey",
                            "(google.api.method_signature)": "key"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{key=projects/*/keys/*}:retrieveLegacySecretKey"
                              }
                            },
                            {
                              "(google.api.method_signature)": "key"
                            }
                          ]
                        },
                        "GetKey": {
                          "requestType": "GetKeyRequest",
                          "responseType": "Key",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/keys/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/keys/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateKey": {
                          "requestType": "UpdateKeyRequest",
                          "responseType": "Key",
                          "options": {
                            "(google.api.http).patch": "/v1/{key.name=projects/*/keys/*}",
                            "(google.api.http).body": "key",
                            "(google.api.method_signature)": "key,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{key.name=projects/*/keys/*}",
                                "body": "key"
                              }
                            },
                            {
                              "(google.api.method_signature)": "key,update_mask"
                            }
                          ]
                        },
                        "DeleteKey": {
                          "requestType": "DeleteKeyRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/keys/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/keys/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "MigrateKey": {
                          "requestType": "MigrateKeyRequest",
                          "responseType": "Key",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/keys/*}:migrate",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/keys/*}:migrate",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GetMetrics": {
                          "requestType": "GetMetricsRequest",
                          "responseType": "Metrics",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/keys/*/metrics}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/keys/*/metrics}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListRelatedAccountGroups": {
                          "requestType": "ListRelatedAccountGroupsRequest",
                          "responseType": "ListRelatedAccountGroupsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*}/relatedaccountgroups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*}/relatedaccountgroups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "ListRelatedAccountGroupMemberships": {
                          "requestType": "ListRelatedAccountGroupMembershipsRequest",
                          "responseType": "ListRelatedAccountGroupMembershipsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/relatedaccountgroups/*}/memberships",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/relatedaccountgroups/*}/memberships"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "SearchRelatedAccountGroupMemberships": {
                          "requestType": "SearchRelatedAccountGroupMembershipsRequest",
                          "responseType": "SearchRelatedAccountGroupMembershipsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{project=projects/*}/relatedaccountgroupmemberships:search",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "project,hashed_account_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{project=projects/*}/relatedaccountgroupmemberships:search",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "project,hashed_account_id"
                            }
                          ]
                        }
                      }
                    },
                    "CreateAssessmentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                          }
                        },
                        "assessment": {
                          "type": "Assessment",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TransactionEvent": {
                      "fields": {
                        "eventType": {
                          "type": "TransactionEventType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "reason": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "value": {
                          "type": "double",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "eventTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "TransactionEventType": {
                          "values": {
                            "TRANSACTION_EVENT_TYPE_UNSPECIFIED": 0,
                            "MERCHANT_APPROVE": 1,
                            "MERCHANT_DENY": 2,
                            "MANUAL_REVIEW": 3,
                            "AUTHORIZATION": 4,
                            "AUTHORIZATION_DECLINE": 5,
                            "PAYMENT_CAPTURE": 6,
                            "PAYMENT_CAPTURE_DECLINE": 7,
                            "CANCEL": 8,
                            "CHARGEBACK_INQUIRY": 9,
                            "CHARGEBACK_ALERT": 10,
                            "FRAUD_NOTIFICATION": 11,
                            "CHARGEBACK": 12,
                            "CHARGEBACK_REPRESENTMENT": 13,
                            "CHARGEBACK_REVERSE": 14,
                            "REFUND_REQUEST": 15,
                            "REFUND_DECLINE": 16,
                            "REFUND": 17,
                            "REFUND_REVERSE": 18
                          }
                        }
                      }
                    },
                    "AnnotateAssessmentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/Assessment"
                          }
                        },
                        "annotation": {
                          "type": "Annotation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "reasons": {
                          "rule": "repeated",
                          "type": "Reason",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "hashedAccountId": {
                          "type": "bytes",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "transactionEvent": {
                          "type": "TransactionEvent",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Annotation": {
                          "valuesOptions": {
                            "PASSWORD_CORRECT": {
                              "deprecated": true
                            },
                            "PASSWORD_INCORRECT": {
                              "deprecated": true
                            }
                          },
                          "values": {
                            "ANNOTATION_UNSPECIFIED": 0,
                            "LEGITIMATE": 1,
                            "FRAUDULENT": 2,
                            "PASSWORD_CORRECT": 3,
                            "PASSWORD_INCORRECT": 4
                          }
                        },
                        "Reason": {
                          "values": {
                            "REASON_UNSPECIFIED": 0,
                            "CHARGEBACK": 1,
                            "CHARGEBACK_FRAUD": 8,
                            "CHARGEBACK_DISPUTE": 9,
                            "REFUND": 10,
                            "REFUND_FRAUD": 11,
                            "TRANSACTION_ACCEPTED": 12,
                            "TRANSACTION_DECLINED": 13,
                            "PAYMENT_HEURISTICS": 2,
                            "INITIATED_TWO_FACTOR": 7,
                            "PASSED_TWO_FACTOR": 3,
                            "FAILED_TWO_FACTOR": 4,
                            "CORRECT_PASSWORD": 5,
                            "INCORRECT_PASSWORD": 6,
                            "SOCIAL_SPAM": 14
                          }
                        }
                      }
                    },
                    "AnnotateAssessmentResponse": {
                      "fields": {}
                    },
                    "EndpointVerificationInfo": {
                      "oneofs": {
                        "endpoint": {
                          "oneof": [
                            "emailAddress",
                            "phoneNumber"
                          ]
                        }
                      },
                      "fields": {
                        "emailAddress": {
                          "type": "string",
                          "id": 1
                        },
                        "phoneNumber": {
                          "type": "string",
                          "id": 2
                        },
                        "requestToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastVerificationTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "AccountVerificationInfo": {
                      "fields": {
                        "endpoints": {
                          "rule": "repeated",
                          "type": "EndpointVerificationInfo",
                          "id": 1
                        },
                        "languageCode": {
                          "type": "string",
                          "id": 3
                        },
                        "latestVerificationResult": {
                          "type": "Result",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "username": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "deprecated": true
                          }
                        }
                      },
                      "nested": {
                        "Result": {
                          "values": {
                            "RESULT_UNSPECIFIED": 0,
                            "SUCCESS_USER_VERIFIED": 1,
                            "ERROR_USER_NOT_VERIFIED": 2,
                            "ERROR_SITE_ONBOARDING_INCOMPLETE": 3,
                            "ERROR_RECIPIENT_NOT_ALLOWED": 4,
                            "ERROR_RECIPIENT_ABUSE_LIMIT_EXHAUSTED": 5,
                            "ERROR_CRITICAL_INTERNAL": 6,
                            "ERROR_CUSTOMER_QUOTA_EXHAUSTED": 7,
                            "ERROR_VERIFICATION_BYPASSED": 8,
                            "ERROR_VERDICT_MISMATCH": 9
                          }
                        }
                      }
                    },
                    "PrivatePasswordLeakVerification": {
                      "fields": {
                        "lookupHashPrefix": {
                          "type": "bytes",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "encryptedUserCredentialsHash": {
                          "type": "bytes",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "encryptedLeakMatchPrefixes": {
                          "rule": "repeated",
                          "type": "bytes",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "reencryptedUserCredentialsHash": {
                          "type": "bytes",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Assessment": {
                      "options": {
                        "(google.api.resource).type": "recaptchaenterprise.googleapis.com/Assessment",
                        "(google.api.resource).pattern": "projects/{project}/assessments/{assessment}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "event": {
                          "type": "Event",
                          "id": 2
                        },
                        "riskAnalysis": {
                          "type": "RiskAnalysis",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "tokenProperties": {
                          "type": "TokenProperties",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "accountVerification": {
                          "type": "AccountVerificationInfo",
                          "id": 5
                        },
                        "accountDefenderAssessment": {
                          "type": "AccountDefenderAssessment",
                          "id": 6
                        },
                        "privatePasswordLeakVerification": {
                          "type": "PrivatePasswordLeakVerification",
                          "id": 8
                        },
                        "fraudPreventionAssessment": {
                          "type": "FraudPreventionAssessment",
                          "id": 11
                        }
                      }
                    },
                    "Event": {
                      "fields": {
                        "token": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "siteKey": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "userAgent": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "userIpAddress": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "expectedAction": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "hashedAccountId": {
                          "type": "bytes",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "transactionData": {
                          "type": "TransactionData",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "TransactionData": {
                      "oneofs": {
                        "_transactionId": {
                          "oneof": [
                            "transactionId"
                          ]
                        }
                      },
                      "fields": {
                        "transactionId": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "paymentMethod": {
                          "type": "string",
                          "id": 1
                        },
                        "cardBin": {
                          "type": "string",
                          "id": 2
                        },
                        "cardLastFour": {
                          "type": "string",
                          "id": 3
                        },
                        "currencyCode": {
                          "type": "string",
                          "id": 4
                        },
                        "value": {
                          "type": "double",
                          "id": 5
                        },
                        "shippingValue": {
                          "type": "double",
                          "id": 12
                        },
                        "shippingAddress": {
                          "type": "Address",
                          "id": 6
                        },
                        "billingAddress": {
                          "type": "Address",
                          "id": 7
                        },
                        "user": {
                          "type": "User",
                          "id": 8
                        },
                        "merchants": {
                          "rule": "repeated",
                          "type": "User",
                          "id": 13
                        },
                        "items": {
                          "rule": "repeated",
                          "type": "Item",
                          "id": 14
                        },
                        "gatewayInfo": {
                          "type": "GatewayInfo",
                          "id": 10
                        }
                      },
                      "nested": {
                        "Address": {
                          "fields": {
                            "recipient": {
                              "type": "string",
                              "id": 1
                            },
                            "address": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "locality": {
                              "type": "string",
                              "id": 3
                            },
                            "administrativeArea": {
                              "type": "string",
                              "id": 4
                            },
                            "regionCode": {
                              "type": "string",
                              "id": 5
                            },
                            "postalCode": {
                              "type": "string",
                              "id": 6
                            }
                          }
                        },
                        "User": {
                          "fields": {
                            "accountId": {
                              "type": "string",
                              "id": 6
                            },
                            "creationMs": {
                              "type": "int64",
                              "id": 1
                            },
                            "email": {
                              "type": "string",
                              "id": 2
                            },
                            "emailVerified": {
                              "type": "bool",
                              "id": 3
                            },
                            "phoneNumber": {
                              "type": "string",
                              "id": 4
                            },
                            "phoneVerified": {
                              "type": "bool",
                              "id": 5
                            }
                          }
                        },
                        "Item": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "value": {
                              "type": "double",
                              "id": 2
                            },
                            "quantity": {
                              "type": "int64",
                              "id": 3
                            },
                            "merchantAccountId": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "GatewayInfo": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "gatewayResponseCode": {
                              "type": "string",
                              "id": 2
                            },
                            "avsResponseCode": {
                              "type": "string",
                              "id": 3
                            },
                            "cvvResponseCode": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "RiskAnalysis": {
                      "fields": {
                        "score": {
                          "type": "float",
                          "id": 1
                        },
                        "reasons": {
                          "rule": "repeated",
                          "type": "ClassificationReason",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ClassificationReason": {
                          "values": {
                            "CLASSIFICATION_REASON_UNSPECIFIED": 0,
                            "AUTOMATION": 1,
                            "UNEXPECTED_ENVIRONMENT": 2,
                            "TOO_MUCH_TRAFFIC": 3,
                            "UNEXPECTED_USAGE_PATTERNS": 4,
                            "LOW_CONFIDENCE_SCORE": 5,
                            "SUSPECTED_CARDING": 6,
                            "SUSPECTED_CHARGEBACK": 7
                          }
                        }
                      }
                    },
                    "TokenProperties": {
                      "fields": {
                        "valid": {
                          "type": "bool",
                          "id": 1
                        },
                        "invalidReason": {
                          "type": "InvalidReason",
                          "id": 2
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "hostname": {
                          "type": "string",
                          "id": 4
                        },
                        "androidPackageName": {
                          "type": "string",
                          "id": 8
                        },
                        "iosBundleId": {
                          "type": "string",
                          "id": 9
                        },
                        "action": {
                          "type": "string",
                          "id": 5
                        }
                      },
                      "nested": {
                        "InvalidReason": {
                          "values": {
                            "INVALID_REASON_UNSPECIFIED": 0,
                            "UNKNOWN_INVALID_REASON": 1,
                            "MALFORMED": 2,
                            "EXPIRED": 3,
                            "DUPE": 4,
                            "MISSING": 5,
                            "BROWSER_ERROR": 6
                          }
                        }
                      }
                    },
                    "FraudPreventionAssessment": {
                      "fields": {
                        "transactionRisk": {
                          "type": "float",
                          "id": 1
                        },
                        "stolenInstrumentVerdict": {
                          "type": "StolenInstrumentVerdict",
                          "id": 2
                        },
                        "cardTestingVerdict": {
                          "type": "CardTestingVerdict",
                          "id": 3
                        }
                      },
                      "nested": {
                        "StolenInstrumentVerdict": {
                          "fields": {
                            "risk": {
                              "type": "float",
                              "id": 1
                            }
                          }
                        },
                        "CardTestingVerdict": {
                          "fields": {
                            "risk": {
                              "type": "float",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "AccountDefenderAssessment": {
                      "fields": {
                        "labels": {
                          "rule": "repeated",
                          "type": "AccountDefenderLabel",
                          "id": 1
                        }
                      },
                      "nested": {
                        "AccountDefenderLabel": {
                          "values": {
                            "ACCOUNT_DEFENDER_LABEL_UNSPECIFIED": 0,
                            "PROFILE_MATCH": 1,
                            "SUSPICIOUS_LOGIN_ACTIVITY": 2,
                            "SUSPICIOUS_ACCOUNT_CREATION": 3,
                            "RELATED_ACCOUNTS_NUMBER_HIGH": 4
                          }
                        }
                      }
                    },
                    "CreateKeyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                          }
                        },
                        "key": {
                          "type": "Key",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListKeysRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListKeysResponse": {
                      "fields": {
                        "keys": {
                          "rule": "repeated",
                          "type": "Key",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "RetrieveLegacySecretKeyRequest": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/Key"
                          }
                        }
                      }
                    },
                    "GetKeyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/Key"
                          }
                        }
                      }
                    },
                    "UpdateKeyRequest": {
                      "fields": {
                        "key": {
                          "type": "Key",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteKeyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/Key"
                          }
                        }
                      }
                    },
                    "MigrateKeyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/Key"
                          }
                        },
                        "skipBillingCheck": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetMetricsRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/Metrics"
                          }
                        }
                      }
                    },
                    "Metrics": {
                      "options": {
                        "(google.api.resource).type": "recaptchaenterprise.googleapis.com/Metrics",
                        "(google.api.resource).pattern": "projects/{project}/keys/{key}/metrics"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "scoreMetrics": {
                          "rule": "repeated",
                          "type": "ScoreMetrics",
                          "id": 2
                        },
                        "challengeMetrics": {
                          "rule": "repeated",
                          "type": "ChallengeMetrics",
                          "id": 3
                        }
                      }
                    },
                    "RetrieveLegacySecretKeyResponse": {
                      "fields": {
                        "legacySecretKey": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "Key": {
                      "options": {
                        "(google.api.resource).type": "recaptchaenterprise.googleapis.com/Key",
                        "(google.api.resource).pattern": "projects/{project}/keys/{key}"
                      },
                      "oneofs": {
                        "platformSettings": {
                          "oneof": [
                            "webSettings",
                            "androidSettings",
                            "iosSettings"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "webSettings": {
                          "type": "WebKeySettings",
                          "id": 3
                        },
                        "androidSettings": {
                          "type": "AndroidKeySettings",
                          "id": 4
                        },
                        "iosSettings": {
                          "type": "IOSKeySettings",
                          "id": 5
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "testingOptions": {
                          "type": "TestingOptions",
                          "id": 9
                        },
                        "wafSettings": {
                          "type": "WafSettings",
                          "id": 10
                        }
                      }
                    },
                    "TestingOptions": {
                      "fields": {
                        "testingScore": {
                          "type": "float",
                          "id": 1
                        },
                        "testingChallenge": {
                          "type": "TestingChallenge",
                          "id": 2
                        }
                      },
                      "nested": {
                        "TestingChallenge": {
                          "values": {
                            "TESTING_CHALLENGE_UNSPECIFIED": 0,
                            "NOCAPTCHA": 1,
                            "UNSOLVABLE_CHALLENGE": 2
                          }
                        }
                      }
                    },
                    "WebKeySettings": {
                      "fields": {
                        "allowAllDomains": {
                          "type": "bool",
                          "id": 3
                        },
                        "allowedDomains": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "allowAmpTraffic": {
                          "type": "bool",
                          "id": 2
                        },
                        "integrationType": {
                          "type": "IntegrationType",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "challengeSecurityPreference": {
                          "type": "ChallengeSecurityPreference",
                          "id": 5
                        }
                      },
                      "nested": {
                        "IntegrationType": {
                          "values": {
                            "INTEGRATION_TYPE_UNSPECIFIED": 0,
                            "SCORE": 1,
                            "CHECKBOX": 2,
                            "INVISIBLE": 3
                          }
                        },
                        "ChallengeSecurityPreference": {
                          "values": {
                            "CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED": 0,
                            "USABILITY": 1,
                            "BALANCE": 2,
                            "SECURITY": 3
                          }
                        }
                      }
                    },
                    "AndroidKeySettings": {
                      "fields": {
                        "allowAllPackageNames": {
                          "type": "bool",
                          "id": 2
                        },
                        "allowedPackageNames": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "IOSKeySettings": {
                      "fields": {
                        "allowAllBundleIds": {
                          "type": "bool",
                          "id": 2
                        },
                        "allowedBundleIds": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ScoreDistribution": {
                      "fields": {
                        "scoreBuckets": {
                          "keyType": "int32",
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "ScoreMetrics": {
                      "fields": {
                        "overallMetrics": {
                          "type": "ScoreDistribution",
                          "id": 1
                        },
                        "actionMetrics": {
                          "keyType": "string",
                          "type": "ScoreDistribution",
                          "id": 2
                        }
                      }
                    },
                    "ChallengeMetrics": {
                      "fields": {
                        "pageloadCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "nocaptchaCount": {
                          "type": "int64",
                          "id": 2
                        },
                        "failedCount": {
                          "type": "int64",
                          "id": 3
                        },
                        "passedCount": {
                          "type": "int64",
                          "id": 4
                        }
                      }
                    },
                    "ListRelatedAccountGroupMembershipsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "recaptchaenterprise.googleapis.com/RelatedAccountGroupMembership"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListRelatedAccountGroupMembershipsResponse": {
                      "fields": {
                        "relatedAccountGroupMemberships": {
                          "rule": "repeated",
                          "type": "RelatedAccountGroupMembership",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListRelatedAccountGroupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "recaptchaenterprise.googleapis.com/RelatedAccountGroup"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListRelatedAccountGroupsResponse": {
                      "fields": {
                        "relatedAccountGroups": {
                          "rule": "repeated",
                          "type": "RelatedAccountGroup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "SearchRelatedAccountGroupMembershipsRequest": {
                      "fields": {
                        "project": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "recaptchaenterprise.googleapis.com/RelatedAccountGroupMembership"
                          }
                        },
                        "hashedAccountId": {
                          "type": "bytes",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SearchRelatedAccountGroupMembershipsResponse": {
                      "fields": {
                        "relatedAccountGroupMemberships": {
                          "rule": "repeated",
                          "type": "RelatedAccountGroupMembership",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "RelatedAccountGroupMembership": {
                      "options": {
                        "(google.api.resource).type": "recaptchaenterprise.googleapis.com/RelatedAccountGroupMembership",
                        "(google.api.resource).pattern": "projects/{project}/relatedaccountgroups/{relatedaccountgroup}/memberships/{membership}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/RelatedAccountGroupMembership"
                          }
                        },
                        "hashedAccountId": {
                          "type": "bytes",
                          "id": 2
                        }
                      }
                    },
                    "RelatedAccountGroup": {
                      "options": {
                        "(google.api.resource).type": "recaptchaenterprise.googleapis.com/RelatedAccountGroup",
                        "(google.api.resource).pattern": "projects/{project}/relatedaccountgroups/{relatedaccountgroup}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/RelatedAccountGroup"
                          }
                        }
                      }
                    },
                    "WafSettings": {
                      "fields": {
                        "wafService": {
                          "type": "WafService",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "wafFeature": {
                          "type": "WafFeature",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "WafFeature": {
                          "values": {
                            "WAF_FEATURE_UNSPECIFIED": 0,
                            "CHALLENGE_PAGE": 1,
                            "SESSION_TOKEN": 2,
                            "ACTION_TOKEN": 3
                          }
                        },
                        "WafService": {
                          "values": {
                            "WAF_SERVICE_UNSPECIFIED": 0,
                            "CA": 1
                          }
                        }
                      }
                    }
                  }
                },
                "v1beta1": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.RecaptchaEnterprise.V1Beta1",
                    "go_package": "cloud.google.com/go/recaptchaenterprise/v2/apiv1beta1/recaptchaenterprisepb;recaptchaenterprisepb",
                    "java_multiple_files": true,
                    "java_outer_classname": "RecaptchaEnterpriseProto",
                    "java_package": "com.google.recaptchaenterprise.v1beta1",
                    "objc_class_prefix": "GCRE",
                    "php_namespace": "Google\\Cloud\\RecaptchaEnterprise\\V1beta1",
                    "ruby_package": "Google::Cloud::RecaptchaEnterprise::V1beta1"
                  },
                  "nested": {
                    "RecaptchaEnterpriseServiceV1Beta1": {
                      "options": {
                        "(google.api.default_host)": "recaptchaenterprise.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateAssessment": {
                          "requestType": "CreateAssessmentRequest",
                          "responseType": "Assessment",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*}/assessments",
                            "(google.api.http).body": "assessment",
                            "(google.api.method_signature)": "parent,assessment"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*}/assessments",
                                "body": "assessment"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,assessment"
                            }
                          ]
                        },
                        "AnnotateAssessment": {
                          "requestType": "AnnotateAssessmentRequest",
                          "responseType": "AnnotateAssessmentResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/assessments/*}:annotate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,annotation"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/assessments/*}:annotate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,annotation"
                            }
                          ]
                        }
                      }
                    },
                    "CreateAssessmentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                          }
                        },
                        "assessment": {
                          "type": "Assessment",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TransactionEvent": {
                      "fields": {
                        "eventType": {
                          "type": "TransactionEventType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "reason": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "value": {
                          "type": "double",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "eventTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "TransactionEventType": {
                          "values": {
                            "TRANSACTION_EVENT_TYPE_UNSPECIFIED": 0,
                            "MERCHANT_APPROVE": 1,
                            "MERCHANT_DENY": 2,
                            "MANUAL_REVIEW": 3,
                            "AUTHORIZATION": 4,
                            "AUTHORIZATION_DECLINE": 5,
                            "PAYMENT_CAPTURE": 6,
                            "PAYMENT_CAPTURE_DECLINE": 7,
                            "CANCEL": 8,
                            "CHARGEBACK_INQUIRY": 9,
                            "CHARGEBACK_ALERT": 10,
                            "FRAUD_NOTIFICATION": 11,
                            "CHARGEBACK": 12,
                            "CHARGEBACK_REPRESENTMENT": 13,
                            "CHARGEBACK_REVERSE": 14,
                            "REFUND_REQUEST": 15,
                            "REFUND_DECLINE": 16,
                            "REFUND": 17,
                            "REFUND_REVERSE": 18
                          }
                        }
                      }
                    },
                    "AnnotateAssessmentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "recaptchaenterprise.googleapis.com/Assessment"
                          }
                        },
                        "annotation": {
                          "type": "Annotation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "reasons": {
                          "rule": "repeated",
                          "type": "Reason",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "hashedAccountId": {
                          "type": "bytes",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "transactionEvent": {
                          "type": "TransactionEvent",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Annotation": {
                          "valuesOptions": {
                            "PASSWORD_CORRECT": {
                              "deprecated": true
                            },
                            "PASSWORD_INCORRECT": {
                              "deprecated": true
                            }
                          },
                          "values": {
                            "ANNOTATION_UNSPECIFIED": 0,
                            "LEGITIMATE": 1,
                            "FRAUDULENT": 2,
                            "PASSWORD_CORRECT": 3,
                            "PASSWORD_INCORRECT": 4
                          }
                        },
                        "Reason": {
                          "values": {
                            "REASON_UNSPECIFIED": 0,
                            "CHARGEBACK": 1,
                            "CHARGEBACK_FRAUD": 8,
                            "CHARGEBACK_DISPUTE": 9,
                            "REFUND": 10,
                            "REFUND_FRAUD": 11,
                            "TRANSACTION_ACCEPTED": 12,
                            "TRANSACTION_DECLINED": 13,
                            "PAYMENT_HEURISTICS": 2,
                            "INITIATED_TWO_FACTOR": 7,
                            "PASSED_TWO_FACTOR": 3,
                            "FAILED_TWO_FACTOR": 4,
                            "CORRECT_PASSWORD": 5,
                            "INCORRECT_PASSWORD": 6,
                            "SOCIAL_SPAM": 14
                          }
                        }
                      }
                    },
                    "AnnotateAssessmentResponse": {
                      "fields": {}
                    },
                    "PasswordLeakVerification": {
                      "fields": {
                        "hashedUserCredentials": {
                          "type": "bytes",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "credentialsLeaked": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "canonicalizedUsername": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Assessment": {
                      "options": {
                        "(google.api.resource).type": "recaptchaenterprise.googleapis.com/Assessment",
                        "(google.api.resource).pattern": "projects/{project}/assessments/{assessment}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "event": {
                          "type": "Event",
                          "id": 2
                        },
                        "score": {
                          "type": "float",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "tokenProperties": {
                          "type": "TokenProperties",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "reasons": {
                          "rule": "repeated",
                          "type": "ClassificationReason",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "passwordLeakVerification": {
                          "type": "PasswordLeakVerification",
                          "id": 7
                        },
                        "accountDefenderAssessment": {
                          "type": "AccountDefenderAssessment",
                          "id": 8
                        },
                        "fraudPreventionAssessment": {
                          "type": "FraudPreventionAssessment",
                          "id": 11
                        }
                      },
                      "nested": {
                        "ClassificationReason": {
                          "values": {
                            "CLASSIFICATION_REASON_UNSPECIFIED": 0,
                            "AUTOMATION": 1,
                            "UNEXPECTED_ENVIRONMENT": 2,
                            "TOO_MUCH_TRAFFIC": 3,
                            "UNEXPECTED_USAGE_PATTERNS": 4,
                            "LOW_CONFIDENCE_SCORE": 5,
                            "SUSPECTED_CARDING": 6,
                            "SUSPECTED_CHARGEBACK": 7
                          }
                        }
                      }
                    },
                    "Event": {
                      "fields": {
                        "token": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "siteKey": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "userAgent": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "userIpAddress": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "expectedAction": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "hashedAccountId": {
                          "type": "bytes",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "transactionData": {
                          "type": "TransactionData",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "TransactionData": {
                      "oneofs": {
                        "_transactionId": {
                          "oneof": [
                            "transactionId"
                          ]
                        }
                      },
                      "fields": {
                        "transactionId": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "paymentMethod": {
                          "type": "string",
                          "id": 1
                        },
                        "cardBin": {
                          "type": "string",
                          "id": 2
                        },
                        "cardLastFour": {
                          "type": "string",
                          "id": 3
                        },
                        "currencyCode": {
                          "type": "string",
                          "id": 4
                        },
                        "value": {
                          "type": "double",
                          "id": 5
                        },
                        "shippingValue": {
                          "type": "double",
                          "id": 12
                        },
                        "shippingAddress": {
                          "type": "Address",
                          "id": 6
                        },
                        "billingAddress": {
                          "type": "Address",
                          "id": 7
                        },
                        "user": {
                          "type": "User",
                          "id": 8
                        },
                        "merchants": {
                          "rule": "repeated",
                          "type": "User",
                          "id": 13
                        },
                        "items": {
                          "rule": "repeated",
                          "type": "Item",
                          "id": 14
                        },
                        "gatewayInfo": {
                          "type": "GatewayInfo",
                          "id": 10
                        }
                      },
                      "nested": {
                        "Address": {
                          "fields": {
                            "recipient": {
                              "type": "string",
                              "id": 1
                            },
                            "address": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "locality": {
                              "type": "string",
                              "id": 3
                            },
                            "administrativeArea": {
                              "type": "string",
                              "id": 4
                            },
                            "regionCode": {
                              "type": "string",
                              "id": 5
                            },
                            "postalCode": {
                              "type": "string",
                              "id": 6
                            }
                          }
                        },
                        "User": {
                          "fields": {
                            "accountId": {
                              "type": "string",
                              "id": 6
                            },
                            "creationMs": {
                              "type": "int64",
                              "id": 1
                            },
                            "email": {
                              "type": "string",
                              "id": 2
                            },
                            "emailVerified": {
                              "type": "bool",
                              "id": 3
                            },
                            "phoneNumber": {
                              "type": "string",
                              "id": 4
                            },
                            "phoneVerified": {
                              "type": "bool",
                              "id": 5
                            }
                          }
                        },
                        "Item": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "value": {
                              "type": "double",
                              "id": 2
                            },
                            "quantity": {
                              "type": "int64",
                              "id": 3
                            },
                            "merchantAccountId": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "GatewayInfo": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "gatewayResponseCode": {
                              "type": "string",
                              "id": 2
                            },
                            "avsResponseCode": {
                              "type": "string",
                              "id": 3
                            },
                            "cvvResponseCode": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "TokenProperties": {
                      "fields": {
                        "valid": {
                          "type": "bool",
                          "id": 1
                        },
                        "invalidReason": {
                          "type": "InvalidReason",
                          "id": 2
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "hostname": {
                          "type": "string",
                          "id": 4
                        },
                        "action": {
                          "type": "string",
                          "id": 5
                        }
                      },
                      "nested": {
                        "InvalidReason": {
                          "valuesOptions": {
                            "SITE_MISMATCH": {
                              "deprecated": true
                            }
                          },
                          "values": {
                            "INVALID_REASON_UNSPECIFIED": 0,
                            "UNKNOWN_INVALID_REASON": 1,
                            "MALFORMED": 2,
                            "EXPIRED": 3,
                            "DUPE": 4,
                            "SITE_MISMATCH": 5,
                            "MISSING": 6,
                            "BROWSER_ERROR": 7
                          }
                        }
                      }
                    },
                    "FraudPreventionAssessment": {
                      "fields": {
                        "transactionRisk": {
                          "type": "float",
                          "id": 1
                        },
                        "stolenInstrumentVerdict": {
                          "type": "StolenInstrumentVerdict",
                          "id": 2
                        },
                        "cardTestingVerdict": {
                          "type": "CardTestingVerdict",
                          "id": 3
                        }
                      },
                      "nested": {
                        "StolenInstrumentVerdict": {
                          "fields": {
                            "risk": {
                              "type": "float",
                              "id": 1
                            }
                          }
                        },
                        "CardTestingVerdict": {
                          "fields": {
                            "risk": {
                              "type": "float",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "AccountDefenderAssessment": {
                      "fields": {
                        "labels": {
                          "rule": "repeated",
                          "type": "AccountDefenderLabel",
                          "id": 1
                        }
                      },
                      "nested": {
                        "AccountDefenderLabel": {
                          "values": {
                            "ACCOUNT_DEFENDER_LABEL_UNSPECIFIED": 0,
                            "PROFILE_MATCH": 1,
                            "SUSPICIOUS_LOGIN_ACTIVITY": 2,
                            "SUSPICIOUS_ACCOUNT_CREATION": 3,
                            "RELATED_ACCOUNTS_NUMBER_HIGH": 4
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "target": {
                  "type": "OptionTargetType",
                  "id": 18
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}